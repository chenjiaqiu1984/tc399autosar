	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Os\\Implementation\\.Os_Timer.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Os\\Implementation\\Os_Timer.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Os\\Implementation\\Os_Timer.src ..\\component\\Os\\Implementation\\Os_Timer.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Os\\Implementation\\Os_Timer.c'

	
$TC162
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_TimerSwIncrement')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_TimerSwIncrement

; ..\component\Os\Implementation\Os_Timer.c	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Timer.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.c	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Timer.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Timer.c	     6   *
; ..\component\Os\Implementation\Os_Timer.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Timer.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.c	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Timer.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.c	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Timer.c	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Timer.c	    14  /**
; ..\component\Os\Implementation\Os_Timer.c	    15   * \addtogroup Os_Timer
; ..\component\Os\Implementation\Os_Timer.c	    16   * \{
; ..\component\Os\Implementation\Os_Timer.c	    17   *
; ..\component\Os\Implementation\Os_Timer.c	    18   * \file
; ..\component\Os\Implementation\Os_Timer.c	    19   * \brief       Implementation of high level timer hardware handling.
; ..\component\Os\Implementation\Os_Timer.c	    20   *
; ..\component\Os\Implementation\Os_Timer.c	    21   *
; ..\component\Os\Implementation\Os_Timer.c	    22   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Timer.c	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.c	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Timer.c	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    28  
; ..\component\Os\Implementation\Os_Timer.c	    29                                                                                                                          /* PRQA S 0777, 0779, 0828  EOF */ /* MD_MSR_Rule5.1, MD_MSR_Rule5.2, MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Timer.c	    30  
; ..\component\Os\Implementation\Os_Timer.c	    31  
; ..\component\Os\Implementation\Os_Timer.c	    32  #define OS_TIMER_SOURCE
; ..\component\Os\Implementation\Os_Timer.c	    33  
; ..\component\Os\Implementation\Os_Timer.c	    34  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Timer.c	    36   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Timer.c	    38  #include "Std_Types.h"
; ..\component\Os\Implementation\Os_Timer.c	    39  
; ..\component\Os\Implementation\Os_Timer.c	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Timer.c	    41  #include "Os_Timer.h"
; ..\component\Os\Implementation\Os_Timer.c	    42  
; ..\component\Os\Implementation\Os_Timer.c	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Timer.c	    44  #include "Os_Counter_Types.h"
; ..\component\Os\Implementation\Os_Timer.c	    45  #include "Os_Counter.h"
; ..\component\Os\Implementation\Os_Timer.c	    46  #include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Timer.c	    47  
; ..\component\Os\Implementation\Os_Timer.c	    48  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Timer.c	    49  #include "Os_Hal_Timer.h"
; ..\component\Os\Implementation\Os_Timer.c	    50  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Timer.c	    51  
; ..\component\Os\Implementation\Os_Timer.c	    52  
; ..\component\Os\Implementation\Os_Timer.c	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    54   *  LOCAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Timer.c	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    56  
; ..\component\Os\Implementation\Os_Timer.c	    57  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    58   *  LOCAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Timer.c	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    60  
; ..\component\Os\Implementation\Os_Timer.c	    61  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    62   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Timer.c	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    64  
; ..\component\Os\Implementation\Os_Timer.c	    65  
; ..\component\Os\Implementation\Os_Timer.c	    66  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    67   *  LOCAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.c	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    69  
; ..\component\Os\Implementation\Os_Timer.c	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    71   *  GLOBAL DATA
; ..\component\Os\Implementation\Os_Timer.c	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    73  
; ..\component\Os\Implementation\Os_Timer.c	    74  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    75   *  LOCAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.c	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    77  #define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Timer.c	    78  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Timer.c	    79  
; ..\component\Os\Implementation\Os_Timer.c	    80  
; ..\component\Os\Implementation\Os_Timer.c	    81  
; ..\component\Os\Implementation\Os_Timer.c	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	    83   *  Os_TimerThread2CounterIsr()
; ..\component\Os\Implementation\Os_Timer.c	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    85  /*! \brief          Returns the timer ISR corresponding to a thread.
; ..\component\Os\Implementation\Os_Timer.c	    86   *  \details        The caller has to ensure, that the thread actually belongs to a timer ISR.
; ..\component\Os\Implementation\Os_Timer.c	    87   *
; ..\component\Os\Implementation\Os_Timer.c	    88   *  \param[in]      Thread  Thread which shall be converted. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Timer.c	    89   *
; ..\component\Os\Implementation\Os_Timer.c	    90   *  \context        ISR2
; ..\component\Os\Implementation\Os_Timer.c	    91   *
; ..\component\Os\Implementation\Os_Timer.c	    92   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Timer.c	    93   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Timer.c	    94   *
; ..\component\Os\Implementation\Os_Timer.c	    95   *  \pre            Given Thread is a Counter ISR.
; ..\component\Os\Implementation\Os_Timer.c	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	    97  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Timer.c	    98  OS_ALWAYS_INLINE, Os_TimerThread2CounterIsr,
; ..\component\Os\Implementation\Os_Timer.c	    99  (
; ..\component\Os\Implementation\Os_Timer.c	   100    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Timer.c	   101  ));
; ..\component\Os\Implementation\Os_Timer.c	   102  
; ..\component\Os\Implementation\Os_Timer.c	   103  
; ..\component\Os\Implementation\Os_Timer.c	   104  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   105   *  Os_TimerPitCheckNotPending()
; ..\component\Os\Implementation\Os_Timer.c	   106   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   107  /*! \brief          Returns whether the PIT timer interrupt is not pending.
; ..\component\Os\Implementation\Os_Timer.c	   108   *  \details        --no details--
; ..\component\Os\Implementation\Os_Timer.c	   109   *
; ..\component\Os\Implementation\Os_Timer.c	   110   *  \param[in]      PitCounter  Counter, which interrupt is to be checked. Counter must be a PIT counter.
; ..\component\Os\Implementation\Os_Timer.c	   111   *                              Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Timer.c	   112   *
; ..\component\Os\Implementation\Os_Timer.c	   113   *  \retval         !0  The timer interrupt is not pending.
; ..\component\Os\Implementation\Os_Timer.c	   114   *  \retval         0   The timer interrupt is pending.
; ..\component\Os\Implementation\Os_Timer.c	   115   *
; ..\component\Os\Implementation\Os_Timer.c	   116   *  \context        ISR2
; ..\component\Os\Implementation\Os_Timer.c	   117   *
; ..\component\Os\Implementation\Os_Timer.c	   118   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Timer.c	   119   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Timer.c	   120   *
; ..\component\Os\Implementation\Os_Timer.c	   121   *  \pre            -
; ..\component\Os\Implementation\Os_Timer.c	   122   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   123  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Timer.c	   124  Os_TimerPitCheckNotPending,
; ..\component\Os\Implementation\Os_Timer.c	   125  (
; ..\component\Os\Implementation\Os_Timer.c	   126    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) PitCounter
; ..\component\Os\Implementation\Os_Timer.c	   127  ));
; ..\component\Os\Implementation\Os_Timer.c	   128  
; ..\component\Os\Implementation\Os_Timer.c	   129  
; ..\component\Os\Implementation\Os_Timer.c	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   131   *  Os_TimerPfrtSetNextHardwareCompareValue()
; ..\component\Os\Implementation\Os_Timer.c	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   133  /*! \brief          Updates the compare value of a PFRT for the next timer interrupt.
; ..\component\Os\Implementation\Os_Timer.c	   134   *  \details        This function modifies the hardware timer of the PFRT.
; ..\component\Os\Implementation\Os_Timer.c	   135   *
; ..\component\Os\Implementation\Os_Timer.c	   136   *  \param[in,out]  Timer           The timer to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Timer.c	   137   *
; ..\component\Os\Implementation\Os_Timer.c	   138   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Timer.c	   139   *
; ..\component\Os\Implementation\Os_Timer.c	   140   *  \reentrant      TRUE for different timers.
; ..\component\Os\Implementation\Os_Timer.c	   141   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Timer.c	   142   *
; ..\component\Os\Implementation\Os_Timer.c	   143   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Timer.c	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   145  OS_FUNC_ATTRIBUTE_DECLARATION( OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Timer.c	   146  Os_TimerPfrtSetNextHardwareCompareValue,
; ..\component\Os\Implementation\Os_Timer.c	   147  (
; ..\component\Os\Implementation\Os_Timer.c	   148    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   149  ));
; ..\component\Os\Implementation\Os_Timer.c	   150  
; ..\component\Os\Implementation\Os_Timer.c	   151  
; ..\component\Os\Implementation\Os_Timer.c	   152  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   153   *  Os_TimerPfrtGetDyn()
; ..\component\Os\Implementation\Os_Timer.c	   154   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   155  /*! \brief          Returns the dynamic data of a PFRT.
; ..\component\Os\Implementation\Os_Timer.c	   156   *  \details        --no details--
; ..\component\Os\Implementation\Os_Timer.c	   157   *
; ..\component\Os\Implementation\Os_Timer.c	   158   *  \param[in]      Timer        Timer to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Timer.c	   159   *
; ..\component\Os\Implementation\Os_Timer.c	   160   *  \return         Pointer to the timer's dynamic data.
; ..\component\Os\Implementation\Os_Timer.c	   161   *
; ..\component\Os\Implementation\Os_Timer.c	   162   *  \context        ANY
; ..\component\Os\Implementation\Os_Timer.c	   163   *
; ..\component\Os\Implementation\Os_Timer.c	   164   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Timer.c	   165   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Timer.c	   166   *
; ..\component\Os\Implementation\Os_Timer.c	   167   *  \pre            -
; ..\component\Os\Implementation\Os_Timer.c	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   169  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2VAR(Os_TimerPfrtType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Timer.c	   170  OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Timer.c	   171  Os_TimerPfrtGetDyn,
; ..\component\Os\Implementation\Os_Timer.c	   172  (
; ..\component\Os\Implementation\Os_Timer.c	   173    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   174  ));
; ..\component\Os\Implementation\Os_Timer.c	   175  
; ..\component\Os\Implementation\Os_Timer.c	   176  
; ..\component\Os\Implementation\Os_Timer.c	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   178   *  LOCAL FUNCTIONS
; ..\component\Os\Implementation\Os_Timer.c	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   180  
; ..\component\Os\Implementation\Os_Timer.c	   181  
; ..\component\Os\Implementation\Os_Timer.c	   182  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   183   *  Os_TimerThread2CounterIsr()
; ..\component\Os\Implementation\Os_Timer.c	   184   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   185  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Timer.c	   186  OS_ALWAYS_INLINE, Os_TimerThread2CounterIsr,
; ..\component\Os\Implementation\Os_Timer.c	   187  (
; ..\component\Os\Implementation\Os_Timer.c	   188    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Timer.c	   189  ))
; ..\component\Os\Implementation\Os_Timer.c	   190  {
; ..\component\Os\Implementation\Os_Timer.c	   191    return (P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST))Thread;                                                   /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Timer.c	   192  }
; ..\component\Os\Implementation\Os_Timer.c	   193  
; ..\component\Os\Implementation\Os_Timer.c	   194  
; ..\component\Os\Implementation\Os_Timer.c	   195  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   196   *  Os_TimerPitCheckNotPending()
; ..\component\Os\Implementation\Os_Timer.c	   197   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   198  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   199  Os_TimerPitCheckNotPending,
; ..\component\Os\Implementation\Os_Timer.c	   200  (
; ..\component\Os\Implementation\Os_Timer.c	   201    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) PitCounter
; ..\component\Os\Implementation\Os_Timer.c	   202  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   203  {
; ..\component\Os\Implementation\Os_Timer.c	   204    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_Hal_TimerPitIsPending(PitCounter->HwConfig) == 0u));                 /* PRQA S 2995, 4304 */ /* MD_Os_Rule2.2_2995, MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   205  }
; ..\component\Os\Implementation\Os_Timer.c	   206  
; ..\component\Os\Implementation\Os_Timer.c	   207  
; ..\component\Os\Implementation\Os_Timer.c	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   209   *  Os_TimerPfrtSetNextHardwareCompareValue()
; ..\component\Os\Implementation\Os_Timer.c	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   211  /*!
; ..\component\Os\Implementation\Os_Timer.c	   212   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   213   *
; ..\component\Os\Implementation\Os_Timer.c	   214   *
; ..\component\Os\Implementation\Os_Timer.c	   215   *
; ..\component\Os\Implementation\Os_Timer.c	   216   *
; ..\component\Os\Implementation\Os_Timer.c	   217   *
; ..\component\Os\Implementation\Os_Timer.c	   218   *
; ..\component\Os\Implementation\Os_Timer.c	   219   *
; ..\component\Os\Implementation\Os_Timer.c	   220   *
; ..\component\Os\Implementation\Os_Timer.c	   221   *
; ..\component\Os\Implementation\Os_Timer.c	   222   *
; ..\component\Os\Implementation\Os_Timer.c	   223   *
; ..\component\Os\Implementation\Os_Timer.c	   224   *
; ..\component\Os\Implementation\Os_Timer.c	   225   */
; ..\component\Os\Implementation\Os_Timer.c	   226  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   227  Os_TimerPfrtSetNextHardwareCompareValue,
; ..\component\Os\Implementation\Os_Timer.c	   228  (
; ..\component\Os\Implementation\Os_Timer.c	   229    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   230  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   231  {
; ..\component\Os\Implementation\Os_Timer.c	   232    P2VAR(Os_TimerPfrtType, AUTOMATIC, OS_VAR_NOINIT) dyn;
; ..\component\Os\Implementation\Os_Timer.c	   233    Os_TickType compare;
; ..\component\Os\Implementation\Os_Timer.c	   234    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.c	   235  
; ..\component\Os\Implementation\Os_Timer.c	   236    dyn = Os_TimerPfrtGetDyn(Timer);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   237  
; ..\component\Os\Implementation\Os_Timer.c	   238    /* #10 Calculate and store the next Compare value. */
; ..\component\Os\Implementation\Os_Timer.c	   239    compare = Os_TimerAdd(Timer->MaxDifferentialValue,
; ..\component\Os\Implementation\Os_Timer.c	   240                          Timer->MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.c	   241                          dyn->Compare,
; ..\component\Os\Implementation\Os_Timer.c	   242                          Timer->Period);
; ..\component\Os\Implementation\Os_Timer.c	   243    dyn->Compare = compare;                                                                                               /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.c	   244  
; ..\component\Os\Implementation\Os_Timer.c	   245    /* #20 Write the compare value to hardware. */
; ..\component\Os\Implementation\Os_Timer.c	   246    Os_TimerFrtSetCompareValue(Timer->HwConfig, compare);                                                                 /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.c	   247  
; ..\component\Os\Implementation\Os_Timer.c	   248    /* #30 Get the current hardware counter value. */
; ..\component\Os\Implementation\Os_Timer.c	   249    now = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));                                  /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.c	   250  
; ..\component\Os\Implementation\Os_Timer.c	   251    /* #40 If new compare value is already in the past or now: */
; ..\component\Os\Implementation\Os_Timer.c	   252    if(OS_UNLIKELY(
; ..\component\Os\Implementation\Os_Timer.c	   253        Os_CounterIsFutureValueInternal(Timer->MaxCountingValue, Timer->MaxDifferentialValue, compare, now) == 0u))
; ..\component\Os\Implementation\Os_Timer.c	   254    {
; ..\component\Os\Implementation\Os_Timer.c	   255      /* #50 If the platform supports peripheral interrupt trigger: */
; ..\component\Os\Implementation\Os_Timer.c	   256      if (Os_Hal_IntIsPeripheralInterruptTriggerSupported() != 0u)                                                        /* COV_OS_HALPLATFORMPERIPHERALINTTRIGGERSUPPORTED */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.c	   257      {
; ..\component\Os\Implementation\Os_Timer.c	   258        /* #60 Trigger interrupt, so the violation is handled after the thread switch is completed. */
; ..\component\Os\Implementation\Os_Timer.c	   259        Os_Hal_TimerFrtTriggerIrq(Timer->HwConfig);                                                                       /* SBSW_OS_TIMER_HAL_TIMERFRTTRIGGERIRQ_001 */
; ..\component\Os\Implementation\Os_Timer.c	   260      }
; ..\component\Os\Implementation\Os_Timer.c	   261      else
; ..\component\Os\Implementation\Os_Timer.c	   262      {
; ..\component\Os\Implementation\Os_Timer.c	   263        Os_TickType iterationId;
; ..\component\Os\Implementation\Os_Timer.c	   264        Os_TickType delta;
; ..\component\Os\Implementation\Os_Timer.c	   265        Os_TickType compareValue;
; ..\component\Os\Implementation\Os_Timer.c	   266        Os_TickType timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.c	   267        Os_TickType timeAfterSetCompare;
; ..\component\Os\Implementation\Os_Timer.c	   268        delta = 0;
; ..\component\Os\Implementation\Os_Timer.c	   269        iterationId = 1;
; ..\component\Os\Implementation\Os_Timer.c	   270        do
; ..\component\Os\Implementation\Os_Timer.c	   271        {
; ..\component\Os\Implementation\Os_Timer.c	   272          /* #70 Else read the current counter value from hardware timer. */
; ..\component\Os\Implementation\Os_Timer.c	   273          timeBeforeSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));           /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.c	   274  
; ..\component\Os\Implementation\Os_Timer.c	   275          /* #80 Set the compare value to the previously read counter value plus delay. */
; ..\component\Os\Implementation\Os_Timer.c	   276          compareValue = timeBeforeSetCompare + delta + iterationId;                                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.c	   277          Os_TimerFrtSetCompareValue(Timer->HwConfig, compareValue);                                                      /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.c	   278  
; ..\component\Os\Implementation\Os_Timer.c	   279          /* #90 Read again the current hardware counter value and update the delay, taking into
; ..\component\Os\Implementation\Os_Timer.c	   280                 account the counter values difference and the loop iteration count. */
; ..\component\Os\Implementation\Os_Timer.c	   281          timeAfterSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));            /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.c	   282          delta = timeAfterSetCompare - timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.c	   283          iterationId++;
; ..\component\Os\Implementation\Os_Timer.c	   284  
; ..\component\Os\Implementation\Os_Timer.c	   285        /* #100 Loop while compare value is in the past or now with respect to the last read counter value. */
; ..\component\Os\Implementation\Os_Timer.c	   286        }while (OS_UNLIKELY(Os_CounterIsFutureValueInternal(
; ..\component\Os\Implementation\Os_Timer.c	   287                 Timer->MaxCountingValue, Timer->MaxDifferentialValue, compareValue, timeAfterSetCompare) == 0u));
; ..\component\Os\Implementation\Os_Timer.c	   288      }
; ..\component\Os\Implementation\Os_Timer.c	   289    }
; ..\component\Os\Implementation\Os_Timer.c	   290  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.c	   291  
; ..\component\Os\Implementation\Os_Timer.c	   292  
; ..\component\Os\Implementation\Os_Timer.c	   293  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   294   *  Os_TimerPfrtGetDyn()
; ..\component\Os\Implementation\Os_Timer.c	   295   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   296  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_TimerPfrtType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   297  OS_ALWAYS_INLINE, Os_TimerPfrtGetDyn,
; ..\component\Os\Implementation\Os_Timer.c	   298  (
; ..\component\Os\Implementation\Os_Timer.c	   299    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   300  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.c	   301  {
; ..\component\Os\Implementation\Os_Timer.c	   302    return (P2VAR(Os_TimerPfrtType, AUTOMATIC, OS_VAR_NOINIT))((Timer->SwCounter).Dyn);                                   /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_03305 */
; ..\component\Os\Implementation\Os_Timer.c	   303  }
; ..\component\Os\Implementation\Os_Timer.c	   304  
; ..\component\Os\Implementation\Os_Timer.c	   305  
; ..\component\Os\Implementation\Os_Timer.c	   306  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   307   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Timer.c	   308   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   309  
; ..\component\Os\Implementation\Os_Timer.c	   310  
; ..\component\Os\Implementation\Os_Timer.c	   311  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   312   *  Os_TimerSwIncrement()
; ..\component\Os\Implementation\Os_Timer.c	   313   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   314  /*!
; ..\component\Os\Implementation\Os_Timer.c	   315   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   316   *
; ..\component\Os\Implementation\Os_Timer.c	   317   *
; ..\component\Os\Implementation\Os_Timer.c	   318   *
; ..\component\Os\Implementation\Os_Timer.c	   319   *
; ..\component\Os\Implementation\Os_Timer.c	   320   *
; ..\component\Os\Implementation\Os_Timer.c	   321   *
; ..\component\Os\Implementation\Os_Timer.c	   322   */
; ..\component\Os\Implementation\Os_Timer.c	   323  FUNC(void, OS_CODE) Os_TimerSwIncrement
; Function Os_TimerSwIncrement
.L22:
Os_TimerSwIncrement:	.type	func

; ..\component\Os\Implementation\Os_Timer.c	   324  (
; ..\component\Os\Implementation\Os_Timer.c	   325    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   326  )
; ..\component\Os\Implementation\Os_Timer.c	   327  {
; ..\component\Os\Implementation\Os_Timer.c	   328    /* #10 Perform assertions. */
; ..\component\Os\Implementation\Os_Timer.c	   329    Os_Assert((Os_StdReturnType)(Timer->Dyn->Value <= Timer->Counter.Characteristics.MaxCountingValue));                  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.c	   330  
; ..\component\Os\Implementation\Os_Timer.c	   331    /* #20 If the counter reached its maximum value, reset the counter to zero. */
; ..\component\Os\Implementation\Os_Timer.c	   332    if(OS_UNLIKELY(Timer->Dyn->Value == Timer->Counter.Characteristics.MaxCountingValue))
	ld.a	a15,[a4]48
	ld.w	d0,[a4]4
	ld.w	d15,[a15]
.L230:
	jne	d15,d0,.L2
.L231:

; ..\component\Os\Implementation\Os_Timer.c	   333    {
; ..\component\Os\Implementation\Os_Timer.c	   334      Timer->Dyn->Value = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
	mov	d15,#0
	j	.L3
.L2:

; ..\component\Os\Implementation\Os_Timer.c	   335    }
; ..\component\Os\Implementation\Os_Timer.c	   336    /* #30 Otherwise, increment the counter. */
; ..\component\Os\Implementation\Os_Timer.c	   337    else
; ..\component\Os\Implementation\Os_Timer.c	   338    {
; ..\component\Os\Implementation\Os_Timer.c	   339      (Timer->Dyn->Value)++;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
	add	d15,#1
.L3:
	st.w	[a15],d15
.L232:

; ..\component\Os\Implementation\Os_Timer.c	   340    }
; ..\component\Os\Implementation\Os_Timer.c	   341  
; ..\component\Os\Implementation\Os_Timer.c	   342    /* #40 If the compare value (time stamp of the next job) has been reached: */
; ..\component\Os\Implementation\Os_Timer.c	   343    if(OS_UNLIKELY(Timer->Dyn->Value == Timer->Dyn->Compare))
	ld.a	a15,[a4]48
	ld.w	d0,[a15]
	ld.w	d15,[a15]4
.L233:
	jne	d15,d0,.L4
.L234:

; ..\component\Os\Implementation\Os_Timer.c	   344    {
; ..\component\Os\Implementation\Os_Timer.c	   345      /* #50 Work of expired jobs. */
; ..\component\Os\Implementation\Os_Timer.c	   346      Os_CounterWorkJobs(&(Timer->Counter));                                                                              /* SBSW_OS_FC_PRECONDITION */
	j	Os_CounterWorkJobs
.L4:

; ..\component\Os\Implementation\Os_Timer.c	   347    }
; ..\component\Os\Implementation\Os_Timer.c	   348  }
	ret
.L74:
	
__Os_TimerSwIncrement_function_end:
	.size	Os_TimerSwIncrement,__Os_TimerSwIncrement_function_end-Os_TimerSwIncrement
.L43:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_TimerPfrtStart')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_TimerPfrtStart

; ..\component\Os\Implementation\Os_Timer.c	   349  
; ..\component\Os\Implementation\Os_Timer.c	   350  
; ..\component\Os\Implementation\Os_Timer.c	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   352   *  Os_TimerPfrtStart()
; ..\component\Os\Implementation\Os_Timer.c	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   354  /*!
; ..\component\Os\Implementation\Os_Timer.c	   355   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   356   *
; ..\component\Os\Implementation\Os_Timer.c	   357   *
; ..\component\Os\Implementation\Os_Timer.c	   358   *
; ..\component\Os\Implementation\Os_Timer.c	   359   *
; ..\component\Os\Implementation\Os_Timer.c	   360   *
; ..\component\Os\Implementation\Os_Timer.c	   361   */
; ..\component\Os\Implementation\Os_Timer.c	   362  FUNC(void, OS_CODE) Os_TimerPfrtStart                                                                                   /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; Function Os_TimerPfrtStart
.L24:
Os_TimerPfrtStart:	.type	func

; ..\component\Os\Implementation\Os_Timer.c	   363  (
; ..\component\Os\Implementation\Os_Timer.c	   364    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.c	   365  )
; ..\component\Os\Implementation\Os_Timer.c	   366  {
; ..\component\Os\Implementation\Os_Timer.c	   367    P2VAR(Os_TimerPfrtType, AUTOMATIC, OS_VAR_NOINIT) dyn;
; ..\component\Os\Implementation\Os_Timer.c	   368  
; ..\component\Os\Implementation\Os_Timer.c	   369    if(Os_CounterHasPfrtCounter() == 0u)                                                                                  /* COV_OS_INVSTATE */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.c	   370    {
; ..\component\Os\Implementation\Os_Timer.c	   371      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Timer.c	   372    }
; ..\component\Os\Implementation\Os_Timer.c	   373  
; ..\component\Os\Implementation\Os_Timer.c	   374    /* #10 Start the software part of the timer. */
; ..\component\Os\Implementation\Os_Timer.c	   375    Os_TimerSwStart(&(Timer->SwCounter));                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   376  
; ..\component\Os\Implementation\Os_Timer.c	   377    /* #20 Initialize the FRT hardware. */
; ..\component\Os\Implementation\Os_Timer.c	   378    Os_Hal_TimerFrtInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERFRTINIT_001 */
	ld.a	a15,[a4]64
.L81:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d15,[a15]8
.L239:
	mov.a	a2,d15
.L240:
	ld.w	d15,[a15]12
.L241:
	ld.w	d0,[a2]
.L242:
	and	d0,d15
	ld.w	d15,[a15]16
.L243:
	or	d0,d15
	st.w	[a2],d0
.L244:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	ld.w	d15,[a15]4
.L245:
	mov.a	a2,d15
.L246:
	ld.w	d15,[a15]36
.L247:
	st.w	[a2],d15
.L248:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d15,[a15]24
.L249:
	mov.a	a2,d15
.L250:
	ld.w	d15,[a15]28
.L251:
	ld.w	d0,[a2]
.L252:
	and	d0,d15
	ld.w	d15,[a15]32
.L253:
	or	d0,d15
	st.w	[a2],d0
.L254:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d15,[a15]20
.L255:
	mov.a	a15,d15
.L256:
	ld.w	d15,[a15]
.L257:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15
.L82:

; ..\component\Os\Implementation\Os_Timer.c	   379  
; ..\component\Os\Implementation\Os_Timer.c	   380    /* #30 Set the compare value stored in software to now. */
; ..\component\Os\Implementation\Os_Timer.c	   381    dyn = Os_TimerPfrtGetDyn(Timer);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   382    dyn->Compare = (Os_TickType)Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig);                                          /* SBSW_OS_TIMER_TIMERGETDYN_001 */ /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
	ld.a	a15,[a4]64
.L89:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   117  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   118  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   119  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   120  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   121  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   123   *  Os_Hal_TimerFrtGetCounterValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   126  OS_LOCAL_INLINE Os_Hal_TimerFrtTickType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   127  Os_Hal_TimerFrtGetCounterValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   128  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   129    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   130  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   131  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   132    return *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CounterRegisterAddress);                                     /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d15,[a15]
.L197:
	mov.a	a15,d15
.L258:
	ld.w	d15,[a15]
.L90:
	ld.a	a15,[a4]48
.L259:
	st.w	[a15]8,d15
.L95:
	ld.a	a15,[a4]48
.L100:
	ld.w	d0,[a4]60
.L260:
	ld.w	d2,[a4]52
.L261:
	ld.w	d1,[a15]8
.L105:

; ..\component\Os\Implementation\Os_Timer.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Timer.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Timer.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Timer.h	     6   *
; ..\component\Os\Implementation\Os_Timer.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Timer.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Timer.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Timer.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Timer.h	    14  /**
; ..\component\Os\Implementation\Os_Timer.h	    15   * \addtogroup Os_Timer
; ..\component\Os\Implementation\Os_Timer.h	    16   *
; ..\component\Os\Implementation\Os_Timer.h	    17   * \{
; ..\component\Os\Implementation\Os_Timer.h	    18   *
; ..\component\Os\Implementation\Os_Timer.h	    19   * \file
; ..\component\Os\Implementation\Os_Timer.h	    20   * \brief       Interface implementation to high level timer hardware handling.
; ..\component\Os\Implementation\Os_Timer.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Timer.h	    22   *
; ..\component\Os\Implementation\Os_Timer.h	    23   *
; ..\component\Os\Implementation\Os_Timer.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Timer.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Timer.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    30  
; ..\component\Os\Implementation\Os_Timer.h	    31  #ifndef OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    32  # define OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Timer.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Timer.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Timer.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Timer.h	    39  
; ..\component\Os\Implementation\Os_Timer.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Timer.h	    41  # include "Os_TimerInt.h"
; ..\component\Os\Implementation\Os_Timer.h	    42  
; ..\component\Os\Implementation\Os_Timer.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Timer.h	    45  # include "Os_Counter.h"
; ..\component\Os\Implementation\Os_Timer.h	    46  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Timer.h	    47  
; ..\component\Os\Implementation\Os_Timer.h	    48  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    49  # include "Os_Hal_Timer.h"
; ..\component\Os\Implementation\Os_Timer.h	    50  
; ..\component\Os\Implementation\Os_Timer.h	    51  
; ..\component\Os\Implementation\Os_Timer.h	    52  
; ..\component\Os\Implementation\Os_Timer.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Timer.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    56  
; ..\component\Os\Implementation\Os_Timer.h	    57  
; ..\component\Os\Implementation\Os_Timer.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Timer.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    61  
; ..\component\Os\Implementation\Os_Timer.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Timer.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    65  
; ..\component\Os\Implementation\Os_Timer.h	    66  
; ..\component\Os\Implementation\Os_Timer.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    70  
; ..\component\Os\Implementation\Os_Timer.h	    71  
; ..\component\Os\Implementation\Os_Timer.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    75  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Timer.h	    76  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Timer.h	    77  
; ..\component\Os\Implementation\Os_Timer.h	    78  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Timer.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    82   *  Os_TimerSwInit()
; ..\component\Os\Implementation\Os_Timer.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	    85  Os_TimerSwInit,
; ..\component\Os\Implementation\Os_Timer.h	    86  (
; ..\component\Os\Implementation\Os_Timer.h	    87    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	    88  ))
; ..\component\Os\Implementation\Os_Timer.h	    89  {
; ..\component\Os\Implementation\Os_Timer.h	    90    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    91    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    92  
; ..\component\Os\Implementation\Os_Timer.h	    93    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	    94    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    95            == OS_TIMERSW_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    96  
; ..\component\Os\Implementation\Os_Timer.h	    97    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    98            == OS_TIMERSW_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    99  }
; ..\component\Os\Implementation\Os_Timer.h	   100  
; ..\component\Os\Implementation\Os_Timer.h	   101  
; ..\component\Os\Implementation\Os_Timer.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   103   *  Os_TimerPitInit()
; ..\component\Os\Implementation\Os_Timer.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   106  Os_TimerPitInit,
; ..\component\Os\Implementation\Os_Timer.h	   107  (
; ..\component\Os\Implementation\Os_Timer.h	   108    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   109  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   110  {
; ..\component\Os\Implementation\Os_Timer.h	   111    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   112  
; ..\component\Os\Implementation\Os_Timer.h	   113    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   114    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxCountingValue                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   115        == OS_TIMERPIT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));      /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   116  
; ..\component\Os\Implementation\Os_Timer.h	   117    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxDifferentialValue                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   118        == OS_TIMERPIT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));  /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   119  
; ..\component\Os\Implementation\Os_Timer.h	   120  }
; ..\component\Os\Implementation\Os_Timer.h	   121  
; ..\component\Os\Implementation\Os_Timer.h	   122  
; ..\component\Os\Implementation\Os_Timer.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   124   *  Os_TimerHrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   127  Os_TimerHrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   128  (
; ..\component\Os\Implementation\Os_Timer.h	   129    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   130  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   131  {
; ..\component\Os\Implementation\Os_Timer.h	   132    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   133    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   134    Timer->Dyn->ValueMask = 0;                                                                                            /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   135    Timer->Dyn->HwLastCounterValue = 0;                                                                                   /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   136    Timer->Dyn->HwTimeAtLogicalZero = 0;                                                                                  /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   137  
; ..\component\Os\Implementation\Os_Timer.h	   138    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   139    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   140            == OS_TIMERHRT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   141  
; ..\component\Os\Implementation\Os_Timer.h	   142    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   143            == OS_TIMERHRT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   144  }
; ..\component\Os\Implementation\Os_Timer.h	   145  
; ..\component\Os\Implementation\Os_Timer.h	   146  
; ..\component\Os\Implementation\Os_Timer.h	   147  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   148   *  Os_TimerPfrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   149   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   150  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   151  Os_TimerPfrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   152  (
; ..\component\Os\Implementation\Os_Timer.h	   153    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   154  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   155  {
; ..\component\Os\Implementation\Os_Timer.h	   156    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   157  }
; ..\component\Os\Implementation\Os_Timer.h	   158  
; ..\component\Os\Implementation\Os_Timer.h	   159  
; ..\component\Os\Implementation\Os_Timer.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   161   *  Os_TimerSwStart()
; ..\component\Os\Implementation\Os_Timer.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   164  Os_TimerSwStart,
; ..\component\Os\Implementation\Os_Timer.h	   165  (
; ..\component\Os\Implementation\Os_Timer.h	   166    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   167  ))
; ..\component\Os\Implementation\Os_Timer.h	   168  {
; ..\component\Os\Implementation\Os_Timer.h	   169    /* Nothing to be done for software counter, as there is no underlying hardware. */
; ..\component\Os\Implementation\Os_Timer.h	   170    OS_IGNORE_UNREF_PARAM(Timer);                                                                                         /* PRQA S 3112 */ /* MD_Os_3112 */
; ..\component\Os\Implementation\Os_Timer.h	   171  }
; ..\component\Os\Implementation\Os_Timer.h	   172  
; ..\component\Os\Implementation\Os_Timer.h	   173  
; ..\component\Os\Implementation\Os_Timer.h	   174  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   175   *  Os_TimerPitStart()
; ..\component\Os\Implementation\Os_Timer.h	   176   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   177  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   178  Os_TimerPitStart,
; ..\component\Os\Implementation\Os_Timer.h	   179  (
; ..\component\Os\Implementation\Os_Timer.h	   180    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   181  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   182  {
; ..\component\Os\Implementation\Os_Timer.h	   183    Os_Hal_TimerPitInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERPITINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   184  }
; ..\component\Os\Implementation\Os_Timer.h	   185  
; ..\component\Os\Implementation\Os_Timer.h	   186  
; ..\component\Os\Implementation\Os_Timer.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   188   *  Os_TimerHrtStart()
; ..\component\Os\Implementation\Os_Timer.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   190  /*!
; ..\component\Os\Implementation\Os_Timer.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   192   *
; ..\component\Os\Implementation\Os_Timer.h	   193   *
; ..\component\Os\Implementation\Os_Timer.h	   194   *
; ..\component\Os\Implementation\Os_Timer.h	   195   */
; ..\component\Os\Implementation\Os_Timer.h	   196  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   197  Os_TimerHrtStart,
; ..\component\Os\Implementation\Os_Timer.h	   198  (
; ..\component\Os\Implementation\Os_Timer.h	   199    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   200  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   201  {
; ..\component\Os\Implementation\Os_Timer.h	   202    Os_TickType timeZero;
; ..\component\Os\Implementation\Os_Timer.h	   203  
; ..\component\Os\Implementation\Os_Timer.h	   204    /* #10 Initialize (start) the FRT timer. */
; ..\component\Os\Implementation\Os_Timer.h	   205    Os_Hal_TimerFrtInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERFRTINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   206  
; ..\component\Os\Implementation\Os_Timer.h	   207    timeZero = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));                             /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   208    Timer->Dyn->HwTimeAtLogicalZero = timeZero;                                                                           /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   209  
; ..\component\Os\Implementation\Os_Timer.h	   210    /* #20 Correct the timer data (to support the case of FRT start by reset). */
; ..\component\Os\Implementation\Os_Timer.h	   211    Timer->Dyn->ValueMask = Timer->Counter.Characteristics.MaxCountingValue; /* Allow the timer value to increase. */     /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   212    Timer->Dyn->HwLastCounterValue = timeZero;                               /* Store the last hardware counter value. */ /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   213    Os_TimerHrtSetCompareValue(Timer, Timer->Dyn->Compare);                  /* Set the initial compare value. */         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   214  }
; ..\component\Os\Implementation\Os_Timer.h	   215  
; ..\component\Os\Implementation\Os_Timer.h	   216  
; ..\component\Os\Implementation\Os_Timer.h	   217  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   218   *  Os_TimerSwGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   219   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   220  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   221  Os_TimerSwGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   222  (
; ..\component\Os\Implementation\Os_Timer.h	   223    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   224  ))
; ..\component\Os\Implementation\Os_Timer.h	   225  {
; ..\component\Os\Implementation\Os_Timer.h	   226    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   227  }
; ..\component\Os\Implementation\Os_Timer.h	   228  
; ..\component\Os\Implementation\Os_Timer.h	   229  
; ..\component\Os\Implementation\Os_Timer.h	   230  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   231   *  Os_TimerSwSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   232   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   233  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   234  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerSwSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   235  (
; ..\component\Os\Implementation\Os_Timer.h	   236    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   237    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   238  ))
; ..\component\Os\Implementation\Os_Timer.h	   239  {
; ..\component\Os\Implementation\Os_Timer.h	   240    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   241  }
; ..\component\Os\Implementation\Os_Timer.h	   242  
; ..\component\Os\Implementation\Os_Timer.h	   243  
; ..\component\Os\Implementation\Os_Timer.h	   244  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   245   *  Os_TimerSwUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   246   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   247  /*!
; ..\component\Os\Implementation\Os_Timer.h	   248   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   249   *
; ..\component\Os\Implementation\Os_Timer.h	   250   *
; ..\component\Os\Implementation\Os_Timer.h	   251   */
; ..\component\Os\Implementation\Os_Timer.h	   252  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   253  Os_TimerSwUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   254  (
; ..\component\Os\Implementation\Os_Timer.h	   255    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   256    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   257  ))
; ..\component\Os\Implementation\Os_Timer.h	   258  {
; ..\component\Os\Implementation\Os_Timer.h	   259    Os_TickType result = Value;
; ..\component\Os\Implementation\Os_Timer.h	   260  
; ..\component\Os\Implementation\Os_Timer.h	   261    /* #10 Subtract one user cycle if Value exceeds the MaxAllowedValue. */
; ..\component\Os\Implementation\Os_Timer.h	   262    if(Value > Timer->Counter.Characteristics.MaxAllowedValue)
; ..\component\Os\Implementation\Os_Timer.h	   263    {
; ..\component\Os\Implementation\Os_Timer.h	   264      result -= (Timer->Counter.Characteristics.MaxAllowedValue + (Os_TickType)1);
; ..\component\Os\Implementation\Os_Timer.h	   265    }
; ..\component\Os\Implementation\Os_Timer.h	   266  
; ..\component\Os\Implementation\Os_Timer.h	   267    /* Check that the calculated value is in a valid range (0 <= Value <= MaxAllowedValue). */
; ..\component\Os\Implementation\Os_Timer.h	   268    Os_Assert((Os_StdReturnType)(result <= Timer->Counter.Characteristics.MaxAllowedValue));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   269  
; ..\component\Os\Implementation\Os_Timer.h	   270    return result;
; ..\component\Os\Implementation\Os_Timer.h	   271  }
; ..\component\Os\Implementation\Os_Timer.h	   272  
; ..\component\Os\Implementation\Os_Timer.h	   273  
; ..\component\Os\Implementation\Os_Timer.h	   274  
; ..\component\Os\Implementation\Os_Timer.h	   275  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   276   *  Os_TimerPitGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   277   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   278  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   279  Os_TimerPitGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   280  (
; ..\component\Os\Implementation\Os_Timer.h	   281    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   282  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   283  {
; ..\component\Os\Implementation\Os_Timer.h	   284    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   285  }
; ..\component\Os\Implementation\Os_Timer.h	   286  
; ..\component\Os\Implementation\Os_Timer.h	   287  
; ..\component\Os\Implementation\Os_Timer.h	   288  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   289   *  Os_TimerPitSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   290   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   291  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   292  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerPitSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   293  (
; ..\component\Os\Implementation\Os_Timer.h	   294    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   295    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   296  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   297  {
; ..\component\Os\Implementation\Os_Timer.h	   298    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   299  }
; ..\component\Os\Implementation\Os_Timer.h	   300  
; ..\component\Os\Implementation\Os_Timer.h	   301  
; ..\component\Os\Implementation\Os_Timer.h	   302  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   303   *  Os_TimerPitUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   304   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   305  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   306  Os_TimerPitUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   307  (
; ..\component\Os\Implementation\Os_Timer.h	   308    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   309    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   310  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   311  {
; ..\component\Os\Implementation\Os_Timer.h	   312    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   313  }
; ..\component\Os\Implementation\Os_Timer.h	   314  
; ..\component\Os\Implementation\Os_Timer.h	   315  
; ..\component\Os\Implementation\Os_Timer.h	   316  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   317   *  Os_TimerPfrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   318   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   319  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   320  Os_TimerPfrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   321  (
; ..\component\Os\Implementation\Os_Timer.h	   322    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   323    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   324  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   325  {
; ..\component\Os\Implementation\Os_Timer.h	   326    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   327  }
; ..\component\Os\Implementation\Os_Timer.h	   328  
; ..\component\Os\Implementation\Os_Timer.h	   329  
; ..\component\Os\Implementation\Os_Timer.h	   330  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   331   *  Os_TimerHrtGetCounter()
; ..\component\Os\Implementation\Os_Timer.h	   332   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   333  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   334  P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtGetCounter,
; ..\component\Os\Implementation\Os_Timer.h	   335  (
; ..\component\Os\Implementation\Os_Timer.h	   336    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   337  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   338  {
; ..\component\Os\Implementation\Os_Timer.h	   339    return &(Timer->Counter);
; ..\component\Os\Implementation\Os_Timer.h	   340  }
; ..\component\Os\Implementation\Os_Timer.h	   341  
; ..\component\Os\Implementation\Os_Timer.h	   342  
; ..\component\Os\Implementation\Os_Timer.h	   343  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   344   *  Os_TimerHrtComputeHardwareCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   345   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   346  /*!
; ..\component\Os\Implementation\Os_Timer.h	   347   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   348   *
; ..\component\Os\Implementation\Os_Timer.h	   349   *
; ..\component\Os\Implementation\Os_Timer.h	   350   *
; ..\component\Os\Implementation\Os_Timer.h	   351   *
; ..\component\Os\Implementation\Os_Timer.h	   352   *
; ..\component\Os\Implementation\Os_Timer.h	   353   *
; ..\component\Os\Implementation\Os_Timer.h	   354   *
; ..\component\Os\Implementation\Os_Timer.h	   355   *
; ..\component\Os\Implementation\Os_Timer.h	   356   */
; ..\component\Os\Implementation\Os_Timer.h	   357  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   358  OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtComputeHardwareCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   359  (
; ..\component\Os\Implementation\Os_Timer.h	   360    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   361    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   362  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   363  {
; ..\component\Os\Implementation\Os_Timer.h	   364    /* #10 Initialize the return value with the requested expiration time.*/
; ..\component\Os\Implementation\Os_Timer.h	   365    Os_TickType hwCompareValue = ExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   366  
; ..\component\Os\Implementation\Os_Timer.h	   367    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   368    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   369    {
; ..\component\Os\Implementation\Os_Timer.h	   370      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   371  
; ..\component\Os\Implementation\Os_Timer.h	   372      /* #30 If the expiration time is a future value: */
; ..\component\Os\Implementation\Os_Timer.h	   373      if(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) != 0u)                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   374      {
; ..\component\Os\Implementation\Os_Timer.h	   375        /* #40 Calculate the difference in ticks. */
; ..\component\Os\Implementation\Os_Timer.h	   376        Os_TickType diff = ExpirationTime - now;
; ..\component\Os\Implementation\Os_Timer.h	   377  
; ..\component\Os\Implementation\Os_Timer.h	   378        /* #50 If the difference is larger than a half hardware timer cycle: */
; ..\component\Os\Implementation\Os_Timer.h	   379        if(diff > ((Os_TickType)OS_FRT_TICKTYPE_HALF))                                                                    /* COMP_WARN_OS_CW_005 */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   380        {
; ..\component\Os\Implementation\Os_Timer.h	   381          /* #60 Set the return value to the current time added by a half hardware timer cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   382          hwCompareValue = now + ((Os_TickType)OS_FRT_TICKTYPE_HALF);                                                     /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Timer.h	   383        }
; ..\component\Os\Implementation\Os_Timer.h	   384      }
; ..\component\Os\Implementation\Os_Timer.h	   385    }
; ..\component\Os\Implementation\Os_Timer.h	   386  
; ..\component\Os\Implementation\Os_Timer.h	   387    /* #70 Return the hardware compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   388    return hwCompareValue;
; ..\component\Os\Implementation\Os_Timer.h	   389  }
; ..\component\Os\Implementation\Os_Timer.h	   390  
; ..\component\Os\Implementation\Os_Timer.h	   391  
; ..\component\Os\Implementation\Os_Timer.h	   392  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   393   *  Os_TimerHrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   394   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   395  /*!
; ..\component\Os\Implementation\Os_Timer.h	   396   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   397   *
; ..\component\Os\Implementation\Os_Timer.h	   398   *
; ..\component\Os\Implementation\Os_Timer.h	   399   *
; ..\component\Os\Implementation\Os_Timer.h	   400   *
; ..\component\Os\Implementation\Os_Timer.h	   401   *
; ..\component\Os\Implementation\Os_Timer.h	   402   *
; ..\component\Os\Implementation\Os_Timer.h	   403   *
; ..\component\Os\Implementation\Os_Timer.h	   404   *
; ..\component\Os\Implementation\Os_Timer.h	   405   *
; ..\component\Os\Implementation\Os_Timer.h	   406   *
; ..\component\Os\Implementation\Os_Timer.h	   407   *
; ..\component\Os\Implementation\Os_Timer.h	   408   *
; ..\component\Os\Implementation\Os_Timer.h	   409   *
; ..\component\Os\Implementation\Os_Timer.h	   410   *
; ..\component\Os\Implementation\Os_Timer.h	   411   *
; ..\component\Os\Implementation\Os_Timer.h	   412   */
; ..\component\Os\Implementation\Os_Timer.h	   413  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   414  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   415  (
; ..\component\Os\Implementation\Os_Timer.h	   416    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   417    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   418  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   419  {
; ..\component\Os\Implementation\Os_Timer.h	   420    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   421    Os_TickType correctedExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   422  
; ..\component\Os\Implementation\Os_Timer.h	   423    /* #10 Store the ExpirationTime for the case that the compare difference does not fit into the hardware part
; ..\component\Os\Implementation\Os_Timer.h	   424     *     of the counter. */
; ..\component\Os\Implementation\Os_Timer.h	   425    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   426  
; ..\component\Os\Implementation\Os_Timer.h	   427    /* #13 Get the compare value that needs to be written to the hardware register. */
; ..\component\Os\Implementation\Os_Timer.h	   428    correctedExpirationTime = Os_TimerHrtComputeHardwareCompareValue(Timer, ExpirationTime);                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   429  
; ..\component\Os\Implementation\Os_Timer.h	   430    /* #15 Calculate the corrected expiration time in accordance to the hardware time at logical zero. */
; ..\component\Os\Implementation\Os_Timer.h	   431    correctedExpirationTime = Timer->Dyn->HwTimeAtLogicalZero + correctedExpirationTime;                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   432  
; ..\component\Os\Implementation\Os_Timer.h	   433    /* #20 Set the compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   434    Os_TimerFrtSetCompareValue(Timer->HwConfig, correctedExpirationTime);                                                 /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   435  
; ..\component\Os\Implementation\Os_Timer.h	   436    /* #30 Check whether the ExpirationTime is already reached. */
; ..\component\Os\Implementation\Os_Timer.h	   437    now = Os_TimerHrtGetValue(Timer);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   438  
; ..\component\Os\Implementation\Os_Timer.h	   439    /* #40 If new compare value is already in the past or now: */
; ..\component\Os\Implementation\Os_Timer.h	   440    if(OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) == 0u))                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   441    {
; ..\component\Os\Implementation\Os_Timer.h	   442      /* #50 If the platform supports peripheral interrupt trigger: */
; ..\component\Os\Implementation\Os_Timer.h	   443      if (Os_Hal_IntIsPeripheralInterruptTriggerSupported() != 0u)                                                        /* COV_OS_HALPLATFORMPERIPHERALINTTRIGGERSUPPORTED */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   444      {
; ..\component\Os\Implementation\Os_Timer.h	   445        /* #60 Trigger interrupt, so the violation is handled after the thread switch is completed. */
; ..\component\Os\Implementation\Os_Timer.h	   446        Os_Hal_TimerFrtTriggerIrq(Timer->HwConfig);                                                                       /* SBSW_OS_TIMER_HAL_TIMERFRTTRIGGERIRQ_001 */
; ..\component\Os\Implementation\Os_Timer.h	   447      }
; ..\component\Os\Implementation\Os_Timer.h	   448      else
; ..\component\Os\Implementation\Os_Timer.h	   449      {
; ..\component\Os\Implementation\Os_Timer.h	   450        Os_TickType iterationId;
; ..\component\Os\Implementation\Os_Timer.h	   451        Os_TickType delta;
; ..\component\Os\Implementation\Os_Timer.h	   452        Os_TickType compareValue;
; ..\component\Os\Implementation\Os_Timer.h	   453        Os_TickType timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   454        Os_TickType timeAfterSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   455        delta = 0;
; ..\component\Os\Implementation\Os_Timer.h	   456        iterationId = 1;
; ..\component\Os\Implementation\Os_Timer.h	   457        do
; ..\component\Os\Implementation\Os_Timer.h	   458        {
; ..\component\Os\Implementation\Os_Timer.h	   459          /* #70 Else read the current counter value from hardware timer. */
; ..\component\Os\Implementation\Os_Timer.h	   460          timeBeforeSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));           /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   461  
; ..\component\Os\Implementation\Os_Timer.h	   462          /* #80 Set the compare value to the previously read counter value plus delay. */
; ..\component\Os\Implementation\Os_Timer.h	   463          compareValue = timeBeforeSetCompare + delta + iterationId;                                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   464          Os_TimerFrtSetCompareValue(Timer->HwConfig, compareValue);                                                      /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   465  
; ..\component\Os\Implementation\Os_Timer.h	   466          /* #90 Read again the current hardware counter value and update the delay, taking into
; ..\component\Os\Implementation\Os_Timer.h	   467                 account the counter values difference and the loop iteration count. */
; ..\component\Os\Implementation\Os_Timer.h	   468          timeAfterSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));            /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   469          delta = timeAfterSetCompare - timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   470          iterationId++;
; ..\component\Os\Implementation\Os_Timer.h	   471  
; ..\component\Os\Implementation\Os_Timer.h	   472        /* #100 Loop while compare value is in the past or now with respect to the last read counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   473        }while (OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), compareValue, timeAfterSetCompare) == 0u));        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   474  
; ..\component\Os\Implementation\Os_Timer.h	   475      }
; ..\component\Os\Implementation\Os_Timer.h	   476    }
; ..\component\Os\Implementation\Os_Timer.h	   477  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.h	   478  
; ..\component\Os\Implementation\Os_Timer.h	   479  
; ..\component\Os\Implementation\Os_Timer.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   481   *  Os_TimerPfrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   483  /*!
; ..\component\Os\Implementation\Os_Timer.h	   484   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   485   *
; ..\component\Os\Implementation\Os_Timer.h	   486   *
; ..\component\Os\Implementation\Os_Timer.h	   487   */
; ..\component\Os\Implementation\Os_Timer.h	   488  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   489  Os_TimerPfrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   490  (
; ..\component\Os\Implementation\Os_Timer.h	   491    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   492    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   493  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   494  {
; ..\component\Os\Implementation\Os_Timer.h	   495    /* #10 Use function of software timer. */
; ..\component\Os\Implementation\Os_Timer.h	   496    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   497  }
; ..\component\Os\Implementation\Os_Timer.h	   498  
; ..\component\Os\Implementation\Os_Timer.h	   499  
; ..\component\Os\Implementation\Os_Timer.h	   500  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   501   *  Os_TimerHrtGetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   502   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   503  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   504  Os_TimerHrtGetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   505  (
; ..\component\Os\Implementation\Os_Timer.h	   506    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   507  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   508  {
; ..\component\Os\Implementation\Os_Timer.h	   509    return Timer->Dyn->Compare;
; ..\component\Os\Implementation\Os_Timer.h	   510  }
; ..\component\Os\Implementation\Os_Timer.h	   511  
; ..\component\Os\Implementation\Os_Timer.h	   512  
; ..\component\Os\Implementation\Os_Timer.h	   513  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   514   *  Os_TimerHrtAcknowledge()
; ..\component\Os\Implementation\Os_Timer.h	   515   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   516  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   517  Os_TimerHrtAcknowledge,
; ..\component\Os\Implementation\Os_Timer.h	   518  (
; ..\component\Os\Implementation\Os_Timer.h	   519    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   520  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   521  {
; ..\component\Os\Implementation\Os_Timer.h	   522    Os_Hal_TimerFrtAcknowledge(Timer->HwConfig);                                                                          /* SBSW_OS_TIMER_HAL_TIMERFRTACKNOWLEDGE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   523  }
; ..\component\Os\Implementation\Os_Timer.h	   524  
; ..\component\Os\Implementation\Os_Timer.h	   525  
; ..\component\Os\Implementation\Os_Timer.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   527   *  Os_TimerHrtIsLogicalCompareValueReached()
; ..\component\Os\Implementation\Os_Timer.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   529  /*!
; ..\component\Os\Implementation\Os_Timer.h	   530   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   531   *
; ..\component\Os\Implementation\Os_Timer.h	   532   *
; ..\component\Os\Implementation\Os_Timer.h	   533   *
; ..\component\Os\Implementation\Os_Timer.h	   534   *
; ..\component\Os\Implementation\Os_Timer.h	   535   *
; ..\component\Os\Implementation\Os_Timer.h	   536   *
; ..\component\Os\Implementation\Os_Timer.h	   537   *
; ..\component\Os\Implementation\Os_Timer.h	   538   */
; ..\component\Os\Implementation\Os_Timer.h	   539  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   540  Os_TimerHrtIsLogicalCompareValueReached,
; ..\component\Os\Implementation\Os_Timer.h	   541  (
; ..\component\Os\Implementation\Os_Timer.h	   542    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   543  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   544  {
; ..\component\Os\Implementation\Os_Timer.h	   545    /* #10 Initialize the result to FALSE. */
; ..\component\Os\Implementation\Os_Timer.h	   546    Os_StdReturnType result = 0u;                                                                                         /* PRQA S 2981 */ /* MD_Os_Rule2.2_2981 */
; ..\component\Os\Implementation\Os_Timer.h	   547  
; ..\component\Os\Implementation\Os_Timer.h	   548    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   549    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   550    {
; ..\component\Os\Implementation\Os_Timer.h	   551      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   552  
; ..\component\Os\Implementation\Os_Timer.h	   553      /* #30 If the current time is after or equal to the logical compare value: */
; ..\component\Os\Implementation\Os_Timer.h	   554      if(Os_CounterIsFutureValue(&(Timer->Counter), Timer->Dyn->Compare, now) == 0u)                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   555      {
; ..\component\Os\Implementation\Os_Timer.h	   556        /* #40 The result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   557        result = !0u;                                                                                                     /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   558      }
; ..\component\Os\Implementation\Os_Timer.h	   559    }
; ..\component\Os\Implementation\Os_Timer.h	   560    /* #50 Otherwise: */
; ..\component\Os\Implementation\Os_Timer.h	   561    else
; ..\component\Os\Implementation\Os_Timer.h	   562    {
; ..\component\Os\Implementation\Os_Timer.h	   563      /* #60 The hardware compare value is equal to the OS internal compare value, so the result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   564      result = !0u;                                                                                                       /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   565    }
; ..\component\Os\Implementation\Os_Timer.h	   566  
; ..\component\Os\Implementation\Os_Timer.h	   567    return result;
; ..\component\Os\Implementation\Os_Timer.h	   568  }
; ..\component\Os\Implementation\Os_Timer.h	   569  
; ..\component\Os\Implementation\Os_Timer.h	   570  
; ..\component\Os\Implementation\Os_Timer.h	   571  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   572   *  Os_TimerHrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   573   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   574  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   575  Os_TimerHrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   576  (
; ..\component\Os\Implementation\Os_Timer.h	   577    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   578    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   579  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   580  {
; ..\component\Os\Implementation\Os_Timer.h	   581    return (Value & Timer->Counter.Characteristics.MaxAllowedValue);
; ..\component\Os\Implementation\Os_Timer.h	   582  }
; ..\component\Os\Implementation\Os_Timer.h	   583  
; ..\component\Os\Implementation\Os_Timer.h	   584  
; ..\component\Os\Implementation\Os_Timer.h	   585  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   586   *  Os_TimerHrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   587   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   588  /*!
; ..\component\Os\Implementation\Os_Timer.h	   589   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   590   *
; ..\component\Os\Implementation\Os_Timer.h	   591   *
; ..\component\Os\Implementation\Os_Timer.h	   592   *
; ..\component\Os\Implementation\Os_Timer.h	   593   *
; ..\component\Os\Implementation\Os_Timer.h	   594   */
; ..\component\Os\Implementation\Os_Timer.h	   595  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   596  Os_TimerHrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   597  (
; ..\component\Os\Implementation\Os_Timer.h	   598    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   599  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   600  {
; ..\component\Os\Implementation\Os_Timer.h	   601    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   602    Os_Hal_TimerFrtTickType timePassed;
; ..\component\Os\Implementation\Os_Timer.h	   603  
; ..\component\Os\Implementation\Os_Timer.h	   604    /* #10 Get the current hardware counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   605    now = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig)) & (Timer->Dyn->ValueMask);        /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   606  
; ..\component\Os\Implementation\Os_Timer.h	   607    /* #20 Calculate how much time has passed since we have read from the hardware the last time. */
; ..\component\Os\Implementation\Os_Timer.h	   608    timePassed = Os_TimerTickType2FrtTickType(now - Timer->Dyn->HwLastCounterValue);                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   609    Timer->Dyn->HwLastCounterValue = now;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   610  
; ..\component\Os\Implementation\Os_Timer.h	   611    /* #30 Add this time to the current counter value and return it. */
; ..\component\Os\Implementation\Os_Timer.h	   612    Timer->Dyn->Value += Os_TimerFrtTickType2TickType(timePassed);                                                        /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   613  
; ..\component\Os\Implementation\Os_Timer.h	   614    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   615  }
; ..\component\Os\Implementation\Os_Timer.h	   616  
; ..\component\Os\Implementation\Os_Timer.h	   617  
; ..\component\Os\Implementation\Os_Timer.h	   618  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   619   *  Os_TimerPfrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   620   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   621  /*!
; ..\component\Os\Implementation\Os_Timer.h	   622   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   623   *
; ..\component\Os\Implementation\Os_Timer.h	   624   *
; ..\component\Os\Implementation\Os_Timer.h	   625   */
; ..\component\Os\Implementation\Os_Timer.h	   626  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   627  Os_TimerPfrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   628  (
; ..\component\Os\Implementation\Os_Timer.h	   629    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   630  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   631  {
; ..\component\Os\Implementation\Os_Timer.h	   632    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   633  }
; ..\component\Os\Implementation\Os_Timer.h	   634  
; ..\component\Os\Implementation\Os_Timer.h	   635  
; ..\component\Os\Implementation\Os_Timer.h	   636  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   637   *  Os_TimerSwAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   638   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   639  /*!
; ..\component\Os\Implementation\Os_Timer.h	   640   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   641   *
; ..\component\Os\Implementation\Os_Timer.h	   642   *
; ..\component\Os\Implementation\Os_Timer.h	   643   *
; ..\component\Os\Implementation\Os_Timer.h	   644   *
; ..\component\Os\Implementation\Os_Timer.h	   645   *
; ..\component\Os\Implementation\Os_Timer.h	   646   *
; ..\component\Os\Implementation\Os_Timer.h	   647   *
; ..\component\Os\Implementation\Os_Timer.h	   648   */
; ..\component\Os\Implementation\Os_Timer.h	   649  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   650  Os_TimerSwAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   651  (
; ..\component\Os\Implementation\Os_Timer.h	   652    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   653    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   654    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   655  ))
; ..\component\Os\Implementation\Os_Timer.h	   656  {
; ..\component\Os\Implementation\Os_Timer.h	   657    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   658    Os_TickType timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   659    Os_TickType timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   660  
; ..\component\Os\Implementation\Os_Timer.h	   661    timerFirstCycle = CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   662    timerSecondCycle = CounterValue + MaxAllowedValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   663  
; ..\component\Os\Implementation\Os_Timer.h	   664    /* #10 If CounterValue is bigger than Now (implies that Now is in the first cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   665    if(CounterValue > Now)
; ..\component\Os\Implementation\Os_Timer.h	   666    {
; ..\component\Os\Implementation\Os_Timer.h	   667      /* #20 Set return value to CounterValue, the expiration time will be reached within the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   668      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   669    }
; ..\component\Os\Implementation\Os_Timer.h	   670    /* #30 Else if CounterValue+MaxallowedValue+1 is bigger than Now (Now may be in first or second cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   671    else if(timerSecondCycle > Now)
; ..\component\Os\Implementation\Os_Timer.h	   672    {
; ..\component\Os\Implementation\Os_Timer.h	   673      /*#40 Set return value to CounterValue+MaxallowedValue+1, the expiration time will be reached in the second cycle.*/
; ..\component\Os\Implementation\Os_Timer.h	   674      timerValue = timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   675    }
; ..\component\Os\Implementation\Os_Timer.h	   676    /* #50 Else (Now is in the second cycle) */
; ..\component\Os\Implementation\Os_Timer.h	   677    else
; ..\component\Os\Implementation\Os_Timer.h	   678    {
; ..\component\Os\Implementation\Os_Timer.h	   679      /* #60 Set return value to CounterValue, the expiration time will be reached in the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   680      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   681    }
; ..\component\Os\Implementation\Os_Timer.h	   682  
; ..\component\Os\Implementation\Os_Timer.h	   683    return timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   684  }
; ..\component\Os\Implementation\Os_Timer.h	   685  
; ..\component\Os\Implementation\Os_Timer.h	   686  
; ..\component\Os\Implementation\Os_Timer.h	   687  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   688   *  Os_TimerPitAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   689   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   690  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   691  Os_TimerPitAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   692  (
; ..\component\Os\Implementation\Os_Timer.h	   693    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   694    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   695    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   696  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   697  {
; ..\component\Os\Implementation\Os_Timer.h	   698    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   699  }
; ..\component\Os\Implementation\Os_Timer.h	   700  
; ..\component\Os\Implementation\Os_Timer.h	   701  
; ..\component\Os\Implementation\Os_Timer.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   703   *  Os_TimerHrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   705  /*!
; ..\component\Os\Implementation\Os_Timer.h	   706   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   707   *
; ..\component\Os\Implementation\Os_Timer.h	   708   *
; ..\component\Os\Implementation\Os_Timer.h	   709   *
; ..\component\Os\Implementation\Os_Timer.h	   710   */
; ..\component\Os\Implementation\Os_Timer.h	   711  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   712  Os_TimerHrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   713  (
; ..\component\Os\Implementation\Os_Timer.h	   714    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   715    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   716    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   717    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   718  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   719  {
; ..\component\Os\Implementation\Os_Timer.h	   720    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   721  
; ..\component\Os\Implementation\Os_Timer.h	   722    /* #10 Take the upper bits from the timer (Now) and the lower bits from the CounterValue. */
; ..\component\Os\Implementation\Os_Timer.h	   723    timerValue = (Now & (~(MaxAllowedValue))) + CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   724  
; ..\component\Os\Implementation\Os_Timer.h	   725    /* #20 If this time stamp is already in the past or now, take the next cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   726    if(timerValue <= Now)
; ..\component\Os\Implementation\Os_Timer.h	   727    {
; ..\component\Os\Implementation\Os_Timer.h	   728      timerValue += (MaxAllowedValue + (uint32)1);
; ..\component\Os\Implementation\Os_Timer.h	   729    }
; ..\component\Os\Implementation\Os_Timer.h	   730  
; ..\component\Os\Implementation\Os_Timer.h	   731    return (timerValue & MaxCountingValue);
; ..\component\Os\Implementation\Os_Timer.h	   732  }
; ..\component\Os\Implementation\Os_Timer.h	   733  
; ..\component\Os\Implementation\Os_Timer.h	   734  
; ..\component\Os\Implementation\Os_Timer.h	   735  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   736   *  Os_TimerPfrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   737   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   738  /*!
; ..\component\Os\Implementation\Os_Timer.h	   739   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   740   *
; ..\component\Os\Implementation\Os_Timer.h	   741   *
; ..\component\Os\Implementation\Os_Timer.h	   742   */
; ..\component\Os\Implementation\Os_Timer.h	   743  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   744  Os_TimerPfrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   745  (
; ..\component\Os\Implementation\Os_Timer.h	   746    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   747    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   748    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   749  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   750  {
; ..\component\Os\Implementation\Os_Timer.h	   751    /* #10 Convert values based on software timer implementation. */
; ..\component\Os\Implementation\Os_Timer.h	   752    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   753  }
; ..\component\Os\Implementation\Os_Timer.h	   754  
; ..\component\Os\Implementation\Os_Timer.h	   755  
; ..\component\Os\Implementation\Os_Timer.h	   756  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   757   *  Os_TimerAdd()
; ..\component\Os\Implementation\Os_Timer.h	   758   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   759  /*!
; ..\component\Os\Implementation\Os_Timer.h	   760   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   761   *
; ..\component\Os\Implementation\Os_Timer.h	   762   *
; ..\component\Os\Implementation\Os_Timer.h	   763   *
; ..\component\Os\Implementation\Os_Timer.h	   764   */
; ..\component\Os\Implementation\Os_Timer.h	   765  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   766  Os_TimerAdd,
; ..\component\Os\Implementation\Os_Timer.h	   767  (
; ..\component\Os\Implementation\Os_Timer.h	   768    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   769    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   770    Os_TickType Value,
; ..\component\Os\Implementation\Os_Timer.h	   771    Os_TickType Add
; ..\component\Os\Implementation\Os_Timer.h	   772  ))
; ..\component\Os\Implementation\Os_Timer.h	   773  {
; ..\component\Os\Implementation\Os_Timer.h	   774    Os_TickType result;
; ..\component\Os\Implementation\Os_Timer.h	   775  
; ..\component\Os\Implementation\Os_Timer.h	   776    Os_Assert((Os_StdReturnType)(Value <= MaxCountingValue));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   777    Os_Assert((Os_StdReturnType)(Add <=  MaxAllowedValue));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   778  
; ..\component\Os\Implementation\Os_Timer.h	   779    /* #10 If the sum of Value and Add exceeds the MaxCountingValue, subtract MaxCountingValue+1 from the sum. */
; ..\component\Os\Implementation\Os_Timer.h	   780    if(Add > (MaxCountingValue - Value))
; ..\component\Os\Implementation\Os_Timer.h	   781    {
; ..\component\Os\Implementation\Os_Timer.h	   782      Os_TickType mod;
; ..\component\Os\Implementation\Os_Timer.h	   783  
; ..\component\Os\Implementation\Os_Timer.h	   784      /* 1.             Add > MaxCountingValue - Value            - see if-statement
; ..\component\Os\Implementation\Os_Timer.h	   785       * 2.  => Add + Value > MaxCountingValue
; ..\component\Os\Implementation\Os_Timer.h	   786       * 3.  => There is a value overflow.
; ..\component\Os\Implementation\Os_Timer.h	   787       */
; ..\component\Os\Implementation\Os_Timer.h	   788      mod = MaxCountingValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   789      result = (Value - mod) + Add;
	fcall	.cocofun_2
.L106:
	st.w	[a15]8,d15
.L120:
	ld.a	a15,[a4]64
.L262:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   117  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   118  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   119  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   120  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   121  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   123   *  Os_Hal_TimerFrtGetCounterValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   126  OS_LOCAL_INLINE Os_Hal_TimerFrtTickType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   127  Os_Hal_TimerFrtGetCounterValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   128  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   129    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   130  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   131  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   132    return *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CounterRegisterAddress);                                     /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   133  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   134  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   135  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   137   *  Os_Hal_TimerFrtSetCompareValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   140  Os_Hal_TimerFrtSetCompareValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   141  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   142    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   143    Os_Hal_TimerFrtTickType ExpirationTime
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   144  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   145  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   146    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = ExpirationTime;                           /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	ld.w	d0,[a15]4
.L263:
	mov.a	a15,d0
.L264:
	st.w	[a15],d15
.L121:
	ld.a	a15,[a4]64
.L265:
	ld.w	d1,[a4]56
.L133:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   117  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   118  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   119  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   120  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   121  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   123   *  Os_Hal_TimerFrtGetCounterValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   126  OS_LOCAL_INLINE Os_Hal_TimerFrtTickType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   127  Os_Hal_TimerFrtGetCounterValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   128  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   129    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   130  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   131  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   132    return *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CounterRegisterAddress);                                     /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d0,[a15]
.L266:
	mov.a	a2,d0
.L267:
	ld.w	d0,[a2]
.L134:

; ..\component\Os\Implementation\Os_Counter.h	   242    if(Value > ReferenceValue)      (inlined)
	fcall	.cocofun_1
.L199:

; ..\component\Os\Implementation\Os_Timer.c	   252    if(OS_UNLIKELY(      (inlined)
	jne	d15,#0,.L11
.L136:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   133  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   134  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   135  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   137   *  Os_Hal_TimerFrtSetCompareValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   140  Os_Hal_TimerFrtSetCompareValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   141  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   142    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   143    Os_Hal_TimerFrtTickType ExpirationTime
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   144  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   145  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   146    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = ExpirationTime;                           /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   147  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   148  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   149  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   150  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   151  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   152  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   153   *  Os_Hal_TimerFrtAcknowledge()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   154   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   155  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   156  Os_Hal_TimerFrtAcknowledge,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   157  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   158    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   159  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   160  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   161    /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   162     * \note There is no need to acknowledge a FRT.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   163     */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   164    OS_IGNORE_UNREF_PARAM(TimerConfig);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   165  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   166  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   167  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   168  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   169  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   170   *  Os_Hal_TimerFrtTriggerIrq()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   171   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   172  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   173  Os_Hal_TimerFrtTriggerIrq,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   174  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   175    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   176  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   177  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   178    *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress) |= OS_HAL_INT_SRC_SETR_MASK;                            /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	ld.w	d15,[a15]20
.L203:
	mov.a	a15,d15
	ld.w	d15,[a15]
.L268:
	insert	d15,d15,#1,#26,#1
	st.w	[a15],d15

; ..\component\Os\Implementation\Os_Timer.c	   252    if(OS_UNLIKELY(      (inlined)
.L11:

; ..\component\Os\Implementation\Os_Timer.c	   383  
; ..\component\Os\Implementation\Os_Timer.c	   384    /* #40 Move compare value one period into the future. */
; ..\component\Os\Implementation\Os_Timer.c	   385    Os_TimerPfrtSetNextHardwareCompareValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   386  }
	ret
.L77:
	
__Os_TimerPfrtStart_function_end:
	.size	Os_TimerPfrtStart,__Os_TimerPfrtStart_function_end-Os_TimerPfrtStart
.L48:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_2')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_2
.L26:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0

; ..\component\Os\Implementation\Os_Timer.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Timer.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Timer.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Timer.h	     6   *
; ..\component\Os\Implementation\Os_Timer.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Timer.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Timer.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Timer.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Timer.h	    14  /**
; ..\component\Os\Implementation\Os_Timer.h	    15   * \addtogroup Os_Timer
; ..\component\Os\Implementation\Os_Timer.h	    16   *
; ..\component\Os\Implementation\Os_Timer.h	    17   * \{
; ..\component\Os\Implementation\Os_Timer.h	    18   *
; ..\component\Os\Implementation\Os_Timer.h	    19   * \file
; ..\component\Os\Implementation\Os_Timer.h	    20   * \brief       Interface implementation to high level timer hardware handling.
; ..\component\Os\Implementation\Os_Timer.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Timer.h	    22   *
; ..\component\Os\Implementation\Os_Timer.h	    23   *
; ..\component\Os\Implementation\Os_Timer.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Timer.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Timer.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    30  
; ..\component\Os\Implementation\Os_Timer.h	    31  #ifndef OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    32  # define OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Timer.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Timer.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Timer.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Timer.h	    39  
; ..\component\Os\Implementation\Os_Timer.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Timer.h	    41  # include "Os_TimerInt.h"
; ..\component\Os\Implementation\Os_Timer.h	    42  
; ..\component\Os\Implementation\Os_Timer.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Timer.h	    45  # include "Os_Counter.h"
; ..\component\Os\Implementation\Os_Timer.h	    46  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Timer.h	    47  
; ..\component\Os\Implementation\Os_Timer.h	    48  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    49  # include "Os_Hal_Timer.h"
; ..\component\Os\Implementation\Os_Timer.h	    50  
; ..\component\Os\Implementation\Os_Timer.h	    51  
; ..\component\Os\Implementation\Os_Timer.h	    52  
; ..\component\Os\Implementation\Os_Timer.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Timer.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    56  
; ..\component\Os\Implementation\Os_Timer.h	    57  
; ..\component\Os\Implementation\Os_Timer.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Timer.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    61  
; ..\component\Os\Implementation\Os_Timer.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Timer.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    65  
; ..\component\Os\Implementation\Os_Timer.h	    66  
; ..\component\Os\Implementation\Os_Timer.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    70  
; ..\component\Os\Implementation\Os_Timer.h	    71  
; ..\component\Os\Implementation\Os_Timer.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    75  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Timer.h	    76  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Timer.h	    77  
; ..\component\Os\Implementation\Os_Timer.h	    78  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Timer.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    82   *  Os_TimerSwInit()
; ..\component\Os\Implementation\Os_Timer.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	    85  Os_TimerSwInit,
; ..\component\Os\Implementation\Os_Timer.h	    86  (
; ..\component\Os\Implementation\Os_Timer.h	    87    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	    88  ))
; ..\component\Os\Implementation\Os_Timer.h	    89  {
; ..\component\Os\Implementation\Os_Timer.h	    90    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    91    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    92  
; ..\component\Os\Implementation\Os_Timer.h	    93    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	    94    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    95            == OS_TIMERSW_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    96  
; ..\component\Os\Implementation\Os_Timer.h	    97    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    98            == OS_TIMERSW_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    99  }
; ..\component\Os\Implementation\Os_Timer.h	   100  
; ..\component\Os\Implementation\Os_Timer.h	   101  
; ..\component\Os\Implementation\Os_Timer.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   103   *  Os_TimerPitInit()
; ..\component\Os\Implementation\Os_Timer.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   106  Os_TimerPitInit,
; ..\component\Os\Implementation\Os_Timer.h	   107  (
; ..\component\Os\Implementation\Os_Timer.h	   108    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   109  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   110  {
; ..\component\Os\Implementation\Os_Timer.h	   111    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   112  
; ..\component\Os\Implementation\Os_Timer.h	   113    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   114    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxCountingValue                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   115        == OS_TIMERPIT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));      /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   116  
; ..\component\Os\Implementation\Os_Timer.h	   117    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxDifferentialValue                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   118        == OS_TIMERPIT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));  /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   119  
; ..\component\Os\Implementation\Os_Timer.h	   120  }
; ..\component\Os\Implementation\Os_Timer.h	   121  
; ..\component\Os\Implementation\Os_Timer.h	   122  
; ..\component\Os\Implementation\Os_Timer.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   124   *  Os_TimerHrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   127  Os_TimerHrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   128  (
; ..\component\Os\Implementation\Os_Timer.h	   129    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   130  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   131  {
; ..\component\Os\Implementation\Os_Timer.h	   132    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   133    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   134    Timer->Dyn->ValueMask = 0;                                                                                            /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   135    Timer->Dyn->HwLastCounterValue = 0;                                                                                   /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   136    Timer->Dyn->HwTimeAtLogicalZero = 0;                                                                                  /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   137  
; ..\component\Os\Implementation\Os_Timer.h	   138    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   139    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   140            == OS_TIMERHRT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   141  
; ..\component\Os\Implementation\Os_Timer.h	   142    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   143            == OS_TIMERHRT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   144  }
; ..\component\Os\Implementation\Os_Timer.h	   145  
; ..\component\Os\Implementation\Os_Timer.h	   146  
; ..\component\Os\Implementation\Os_Timer.h	   147  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   148   *  Os_TimerPfrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   149   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   150  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   151  Os_TimerPfrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   152  (
; ..\component\Os\Implementation\Os_Timer.h	   153    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   154  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   155  {
; ..\component\Os\Implementation\Os_Timer.h	   156    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   157  }
; ..\component\Os\Implementation\Os_Timer.h	   158  
; ..\component\Os\Implementation\Os_Timer.h	   159  
; ..\component\Os\Implementation\Os_Timer.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   161   *  Os_TimerSwStart()
; ..\component\Os\Implementation\Os_Timer.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   164  Os_TimerSwStart,
; ..\component\Os\Implementation\Os_Timer.h	   165  (
; ..\component\Os\Implementation\Os_Timer.h	   166    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   167  ))
; ..\component\Os\Implementation\Os_Timer.h	   168  {
; ..\component\Os\Implementation\Os_Timer.h	   169    /* Nothing to be done for software counter, as there is no underlying hardware. */
; ..\component\Os\Implementation\Os_Timer.h	   170    OS_IGNORE_UNREF_PARAM(Timer);                                                                                         /* PRQA S 3112 */ /* MD_Os_3112 */
; ..\component\Os\Implementation\Os_Timer.h	   171  }
; ..\component\Os\Implementation\Os_Timer.h	   172  
; ..\component\Os\Implementation\Os_Timer.h	   173  
; ..\component\Os\Implementation\Os_Timer.h	   174  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   175   *  Os_TimerPitStart()
; ..\component\Os\Implementation\Os_Timer.h	   176   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   177  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   178  Os_TimerPitStart,
; ..\component\Os\Implementation\Os_Timer.h	   179  (
; ..\component\Os\Implementation\Os_Timer.h	   180    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   181  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   182  {
; ..\component\Os\Implementation\Os_Timer.h	   183    Os_Hal_TimerPitInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERPITINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   184  }
; ..\component\Os\Implementation\Os_Timer.h	   185  
; ..\component\Os\Implementation\Os_Timer.h	   186  
; ..\component\Os\Implementation\Os_Timer.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   188   *  Os_TimerHrtStart()
; ..\component\Os\Implementation\Os_Timer.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   190  /*!
; ..\component\Os\Implementation\Os_Timer.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   192   *
; ..\component\Os\Implementation\Os_Timer.h	   193   *
; ..\component\Os\Implementation\Os_Timer.h	   194   *
; ..\component\Os\Implementation\Os_Timer.h	   195   */
; ..\component\Os\Implementation\Os_Timer.h	   196  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   197  Os_TimerHrtStart,
; ..\component\Os\Implementation\Os_Timer.h	   198  (
; ..\component\Os\Implementation\Os_Timer.h	   199    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   200  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   201  {
; ..\component\Os\Implementation\Os_Timer.h	   202    Os_TickType timeZero;
; ..\component\Os\Implementation\Os_Timer.h	   203  
; ..\component\Os\Implementation\Os_Timer.h	   204    /* #10 Initialize (start) the FRT timer. */
; ..\component\Os\Implementation\Os_Timer.h	   205    Os_Hal_TimerFrtInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERFRTINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   206  
; ..\component\Os\Implementation\Os_Timer.h	   207    timeZero = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));                             /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   208    Timer->Dyn->HwTimeAtLogicalZero = timeZero;                                                                           /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   209  
; ..\component\Os\Implementation\Os_Timer.h	   210    /* #20 Correct the timer data (to support the case of FRT start by reset). */
; ..\component\Os\Implementation\Os_Timer.h	   211    Timer->Dyn->ValueMask = Timer->Counter.Characteristics.MaxCountingValue; /* Allow the timer value to increase. */     /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   212    Timer->Dyn->HwLastCounterValue = timeZero;                               /* Store the last hardware counter value. */ /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   213    Os_TimerHrtSetCompareValue(Timer, Timer->Dyn->Compare);                  /* Set the initial compare value. */         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   214  }
; ..\component\Os\Implementation\Os_Timer.h	   215  
; ..\component\Os\Implementation\Os_Timer.h	   216  
; ..\component\Os\Implementation\Os_Timer.h	   217  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   218   *  Os_TimerSwGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   219   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   220  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   221  Os_TimerSwGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   222  (
; ..\component\Os\Implementation\Os_Timer.h	   223    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   224  ))
; ..\component\Os\Implementation\Os_Timer.h	   225  {
; ..\component\Os\Implementation\Os_Timer.h	   226    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   227  }
; ..\component\Os\Implementation\Os_Timer.h	   228  
; ..\component\Os\Implementation\Os_Timer.h	   229  
; ..\component\Os\Implementation\Os_Timer.h	   230  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   231   *  Os_TimerSwSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   232   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   233  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   234  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerSwSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   235  (
; ..\component\Os\Implementation\Os_Timer.h	   236    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   237    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   238  ))
; ..\component\Os\Implementation\Os_Timer.h	   239  {
; ..\component\Os\Implementation\Os_Timer.h	   240    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   241  }
; ..\component\Os\Implementation\Os_Timer.h	   242  
; ..\component\Os\Implementation\Os_Timer.h	   243  
; ..\component\Os\Implementation\Os_Timer.h	   244  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   245   *  Os_TimerSwUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   246   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   247  /*!
; ..\component\Os\Implementation\Os_Timer.h	   248   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   249   *
; ..\component\Os\Implementation\Os_Timer.h	   250   *
; ..\component\Os\Implementation\Os_Timer.h	   251   */
; ..\component\Os\Implementation\Os_Timer.h	   252  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   253  Os_TimerSwUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   254  (
; ..\component\Os\Implementation\Os_Timer.h	   255    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   256    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   257  ))
; ..\component\Os\Implementation\Os_Timer.h	   258  {
; ..\component\Os\Implementation\Os_Timer.h	   259    Os_TickType result = Value;
; ..\component\Os\Implementation\Os_Timer.h	   260  
; ..\component\Os\Implementation\Os_Timer.h	   261    /* #10 Subtract one user cycle if Value exceeds the MaxAllowedValue. */
; ..\component\Os\Implementation\Os_Timer.h	   262    if(Value > Timer->Counter.Characteristics.MaxAllowedValue)
; ..\component\Os\Implementation\Os_Timer.h	   263    {
; ..\component\Os\Implementation\Os_Timer.h	   264      result -= (Timer->Counter.Characteristics.MaxAllowedValue + (Os_TickType)1);
; ..\component\Os\Implementation\Os_Timer.h	   265    }
; ..\component\Os\Implementation\Os_Timer.h	   266  
; ..\component\Os\Implementation\Os_Timer.h	   267    /* Check that the calculated value is in a valid range (0 <= Value <= MaxAllowedValue). */
; ..\component\Os\Implementation\Os_Timer.h	   268    Os_Assert((Os_StdReturnType)(result <= Timer->Counter.Characteristics.MaxAllowedValue));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   269  
; ..\component\Os\Implementation\Os_Timer.h	   270    return result;
; ..\component\Os\Implementation\Os_Timer.h	   271  }
; ..\component\Os\Implementation\Os_Timer.h	   272  
; ..\component\Os\Implementation\Os_Timer.h	   273  
; ..\component\Os\Implementation\Os_Timer.h	   274  
; ..\component\Os\Implementation\Os_Timer.h	   275  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   276   *  Os_TimerPitGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   277   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   278  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   279  Os_TimerPitGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   280  (
; ..\component\Os\Implementation\Os_Timer.h	   281    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   282  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   283  {
; ..\component\Os\Implementation\Os_Timer.h	   284    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   285  }
; ..\component\Os\Implementation\Os_Timer.h	   286  
; ..\component\Os\Implementation\Os_Timer.h	   287  
; ..\component\Os\Implementation\Os_Timer.h	   288  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   289   *  Os_TimerPitSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   290   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   291  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   292  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerPitSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   293  (
; ..\component\Os\Implementation\Os_Timer.h	   294    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   295    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   296  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   297  {
; ..\component\Os\Implementation\Os_Timer.h	   298    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   299  }
; ..\component\Os\Implementation\Os_Timer.h	   300  
; ..\component\Os\Implementation\Os_Timer.h	   301  
; ..\component\Os\Implementation\Os_Timer.h	   302  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   303   *  Os_TimerPitUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   304   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   305  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   306  Os_TimerPitUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   307  (
; ..\component\Os\Implementation\Os_Timer.h	   308    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   309    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   310  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   311  {
; ..\component\Os\Implementation\Os_Timer.h	   312    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   313  }
; ..\component\Os\Implementation\Os_Timer.h	   314  
; ..\component\Os\Implementation\Os_Timer.h	   315  
; ..\component\Os\Implementation\Os_Timer.h	   316  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   317   *  Os_TimerPfrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   318   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   319  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   320  Os_TimerPfrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   321  (
; ..\component\Os\Implementation\Os_Timer.h	   322    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   323    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   324  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   325  {
; ..\component\Os\Implementation\Os_Timer.h	   326    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   327  }
; ..\component\Os\Implementation\Os_Timer.h	   328  
; ..\component\Os\Implementation\Os_Timer.h	   329  
; ..\component\Os\Implementation\Os_Timer.h	   330  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   331   *  Os_TimerHrtGetCounter()
; ..\component\Os\Implementation\Os_Timer.h	   332   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   333  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   334  P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtGetCounter,
; ..\component\Os\Implementation\Os_Timer.h	   335  (
; ..\component\Os\Implementation\Os_Timer.h	   336    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   337  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   338  {
; ..\component\Os\Implementation\Os_Timer.h	   339    return &(Timer->Counter);
; ..\component\Os\Implementation\Os_Timer.h	   340  }
; ..\component\Os\Implementation\Os_Timer.h	   341  
; ..\component\Os\Implementation\Os_Timer.h	   342  
; ..\component\Os\Implementation\Os_Timer.h	   343  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   344   *  Os_TimerHrtComputeHardwareCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   345   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   346  /*!
; ..\component\Os\Implementation\Os_Timer.h	   347   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   348   *
; ..\component\Os\Implementation\Os_Timer.h	   349   *
; ..\component\Os\Implementation\Os_Timer.h	   350   *
; ..\component\Os\Implementation\Os_Timer.h	   351   *
; ..\component\Os\Implementation\Os_Timer.h	   352   *
; ..\component\Os\Implementation\Os_Timer.h	   353   *
; ..\component\Os\Implementation\Os_Timer.h	   354   *
; ..\component\Os\Implementation\Os_Timer.h	   355   *
; ..\component\Os\Implementation\Os_Timer.h	   356   */
; ..\component\Os\Implementation\Os_Timer.h	   357  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   358  OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtComputeHardwareCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   359  (
; ..\component\Os\Implementation\Os_Timer.h	   360    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   361    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   362  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   363  {
; ..\component\Os\Implementation\Os_Timer.h	   364    /* #10 Initialize the return value with the requested expiration time.*/
; ..\component\Os\Implementation\Os_Timer.h	   365    Os_TickType hwCompareValue = ExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   366  
; ..\component\Os\Implementation\Os_Timer.h	   367    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   368    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   369    {
; ..\component\Os\Implementation\Os_Timer.h	   370      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   371  
; ..\component\Os\Implementation\Os_Timer.h	   372      /* #30 If the expiration time is a future value: */
; ..\component\Os\Implementation\Os_Timer.h	   373      if(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) != 0u)                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   374      {
; ..\component\Os\Implementation\Os_Timer.h	   375        /* #40 Calculate the difference in ticks. */
; ..\component\Os\Implementation\Os_Timer.h	   376        Os_TickType diff = ExpirationTime - now;
; ..\component\Os\Implementation\Os_Timer.h	   377  
; ..\component\Os\Implementation\Os_Timer.h	   378        /* #50 If the difference is larger than a half hardware timer cycle: */
; ..\component\Os\Implementation\Os_Timer.h	   379        if(diff > ((Os_TickType)OS_FRT_TICKTYPE_HALF))                                                                    /* COMP_WARN_OS_CW_005 */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   380        {
; ..\component\Os\Implementation\Os_Timer.h	   381          /* #60 Set the return value to the current time added by a half hardware timer cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   382          hwCompareValue = now + ((Os_TickType)OS_FRT_TICKTYPE_HALF);                                                     /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Timer.h	   383        }
; ..\component\Os\Implementation\Os_Timer.h	   384      }
; ..\component\Os\Implementation\Os_Timer.h	   385    }
; ..\component\Os\Implementation\Os_Timer.h	   386  
; ..\component\Os\Implementation\Os_Timer.h	   387    /* #70 Return the hardware compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   388    return hwCompareValue;
; ..\component\Os\Implementation\Os_Timer.h	   389  }
; ..\component\Os\Implementation\Os_Timer.h	   390  
; ..\component\Os\Implementation\Os_Timer.h	   391  
; ..\component\Os\Implementation\Os_Timer.h	   392  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   393   *  Os_TimerHrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   394   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   395  /*!
; ..\component\Os\Implementation\Os_Timer.h	   396   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   397   *
; ..\component\Os\Implementation\Os_Timer.h	   398   *
; ..\component\Os\Implementation\Os_Timer.h	   399   *
; ..\component\Os\Implementation\Os_Timer.h	   400   *
; ..\component\Os\Implementation\Os_Timer.h	   401   *
; ..\component\Os\Implementation\Os_Timer.h	   402   *
; ..\component\Os\Implementation\Os_Timer.h	   403   *
; ..\component\Os\Implementation\Os_Timer.h	   404   *
; ..\component\Os\Implementation\Os_Timer.h	   405   *
; ..\component\Os\Implementation\Os_Timer.h	   406   *
; ..\component\Os\Implementation\Os_Timer.h	   407   *
; ..\component\Os\Implementation\Os_Timer.h	   408   *
; ..\component\Os\Implementation\Os_Timer.h	   409   *
; ..\component\Os\Implementation\Os_Timer.h	   410   *
; ..\component\Os\Implementation\Os_Timer.h	   411   *
; ..\component\Os\Implementation\Os_Timer.h	   412   */
; ..\component\Os\Implementation\Os_Timer.h	   413  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   414  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   415  (
; ..\component\Os\Implementation\Os_Timer.h	   416    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   417    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   418  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   419  {
; ..\component\Os\Implementation\Os_Timer.h	   420    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   421    Os_TickType correctedExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   422  
; ..\component\Os\Implementation\Os_Timer.h	   423    /* #10 Store the ExpirationTime for the case that the compare difference does not fit into the hardware part
; ..\component\Os\Implementation\Os_Timer.h	   424     *     of the counter. */
; ..\component\Os\Implementation\Os_Timer.h	   425    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   426  
; ..\component\Os\Implementation\Os_Timer.h	   427    /* #13 Get the compare value that needs to be written to the hardware register. */
; ..\component\Os\Implementation\Os_Timer.h	   428    correctedExpirationTime = Os_TimerHrtComputeHardwareCompareValue(Timer, ExpirationTime);                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   429  
; ..\component\Os\Implementation\Os_Timer.h	   430    /* #15 Calculate the corrected expiration time in accordance to the hardware time at logical zero. */
; ..\component\Os\Implementation\Os_Timer.h	   431    correctedExpirationTime = Timer->Dyn->HwTimeAtLogicalZero + correctedExpirationTime;                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   432  
; ..\component\Os\Implementation\Os_Timer.h	   433    /* #20 Set the compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   434    Os_TimerFrtSetCompareValue(Timer->HwConfig, correctedExpirationTime);                                                 /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   435  
; ..\component\Os\Implementation\Os_Timer.h	   436    /* #30 Check whether the ExpirationTime is already reached. */
; ..\component\Os\Implementation\Os_Timer.h	   437    now = Os_TimerHrtGetValue(Timer);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   438  
; ..\component\Os\Implementation\Os_Timer.h	   439    /* #40 If new compare value is already in the past or now: */
; ..\component\Os\Implementation\Os_Timer.h	   440    if(OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) == 0u))                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   441    {
; ..\component\Os\Implementation\Os_Timer.h	   442      /* #50 If the platform supports peripheral interrupt trigger: */
; ..\component\Os\Implementation\Os_Timer.h	   443      if (Os_Hal_IntIsPeripheralInterruptTriggerSupported() != 0u)                                                        /* COV_OS_HALPLATFORMPERIPHERALINTTRIGGERSUPPORTED */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   444      {
; ..\component\Os\Implementation\Os_Timer.h	   445        /* #60 Trigger interrupt, so the violation is handled after the thread switch is completed. */
; ..\component\Os\Implementation\Os_Timer.h	   446        Os_Hal_TimerFrtTriggerIrq(Timer->HwConfig);                                                                       /* SBSW_OS_TIMER_HAL_TIMERFRTTRIGGERIRQ_001 */
; ..\component\Os\Implementation\Os_Timer.h	   447      }
; ..\component\Os\Implementation\Os_Timer.h	   448      else
; ..\component\Os\Implementation\Os_Timer.h	   449      {
; ..\component\Os\Implementation\Os_Timer.h	   450        Os_TickType iterationId;
; ..\component\Os\Implementation\Os_Timer.h	   451        Os_TickType delta;
; ..\component\Os\Implementation\Os_Timer.h	   452        Os_TickType compareValue;
; ..\component\Os\Implementation\Os_Timer.h	   453        Os_TickType timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   454        Os_TickType timeAfterSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   455        delta = 0;
; ..\component\Os\Implementation\Os_Timer.h	   456        iterationId = 1;
; ..\component\Os\Implementation\Os_Timer.h	   457        do
; ..\component\Os\Implementation\Os_Timer.h	   458        {
; ..\component\Os\Implementation\Os_Timer.h	   459          /* #70 Else read the current counter value from hardware timer. */
; ..\component\Os\Implementation\Os_Timer.h	   460          timeBeforeSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));           /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   461  
; ..\component\Os\Implementation\Os_Timer.h	   462          /* #80 Set the compare value to the previously read counter value plus delay. */
; ..\component\Os\Implementation\Os_Timer.h	   463          compareValue = timeBeforeSetCompare + delta + iterationId;                                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   464          Os_TimerFrtSetCompareValue(Timer->HwConfig, compareValue);                                                      /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   465  
; ..\component\Os\Implementation\Os_Timer.h	   466          /* #90 Read again the current hardware counter value and update the delay, taking into
; ..\component\Os\Implementation\Os_Timer.h	   467                 account the counter values difference and the loop iteration count. */
; ..\component\Os\Implementation\Os_Timer.h	   468          timeAfterSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));            /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   469          delta = timeAfterSetCompare - timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   470          iterationId++;
; ..\component\Os\Implementation\Os_Timer.h	   471  
; ..\component\Os\Implementation\Os_Timer.h	   472        /* #100 Loop while compare value is in the past or now with respect to the last read counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   473        }while (OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), compareValue, timeAfterSetCompare) == 0u));        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   474  
; ..\component\Os\Implementation\Os_Timer.h	   475      }
; ..\component\Os\Implementation\Os_Timer.h	   476    }
; ..\component\Os\Implementation\Os_Timer.h	   477  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.h	   478  
; ..\component\Os\Implementation\Os_Timer.h	   479  
; ..\component\Os\Implementation\Os_Timer.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   481   *  Os_TimerPfrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   483  /*!
; ..\component\Os\Implementation\Os_Timer.h	   484   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   485   *
; ..\component\Os\Implementation\Os_Timer.h	   486   *
; ..\component\Os\Implementation\Os_Timer.h	   487   */
; ..\component\Os\Implementation\Os_Timer.h	   488  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   489  Os_TimerPfrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   490  (
; ..\component\Os\Implementation\Os_Timer.h	   491    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   492    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   493  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   494  {
; ..\component\Os\Implementation\Os_Timer.h	   495    /* #10 Use function of software timer. */
; ..\component\Os\Implementation\Os_Timer.h	   496    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   497  }
; ..\component\Os\Implementation\Os_Timer.h	   498  
; ..\component\Os\Implementation\Os_Timer.h	   499  
; ..\component\Os\Implementation\Os_Timer.h	   500  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   501   *  Os_TimerHrtGetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   502   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   503  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   504  Os_TimerHrtGetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   505  (
; ..\component\Os\Implementation\Os_Timer.h	   506    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   507  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   508  {
; ..\component\Os\Implementation\Os_Timer.h	   509    return Timer->Dyn->Compare;
; ..\component\Os\Implementation\Os_Timer.h	   510  }
; ..\component\Os\Implementation\Os_Timer.h	   511  
; ..\component\Os\Implementation\Os_Timer.h	   512  
; ..\component\Os\Implementation\Os_Timer.h	   513  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   514   *  Os_TimerHrtAcknowledge()
; ..\component\Os\Implementation\Os_Timer.h	   515   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   516  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   517  Os_TimerHrtAcknowledge,
; ..\component\Os\Implementation\Os_Timer.h	   518  (
; ..\component\Os\Implementation\Os_Timer.h	   519    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   520  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   521  {
; ..\component\Os\Implementation\Os_Timer.h	   522    Os_Hal_TimerFrtAcknowledge(Timer->HwConfig);                                                                          /* SBSW_OS_TIMER_HAL_TIMERFRTACKNOWLEDGE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   523  }
; ..\component\Os\Implementation\Os_Timer.h	   524  
; ..\component\Os\Implementation\Os_Timer.h	   525  
; ..\component\Os\Implementation\Os_Timer.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   527   *  Os_TimerHrtIsLogicalCompareValueReached()
; ..\component\Os\Implementation\Os_Timer.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   529  /*!
; ..\component\Os\Implementation\Os_Timer.h	   530   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   531   *
; ..\component\Os\Implementation\Os_Timer.h	   532   *
; ..\component\Os\Implementation\Os_Timer.h	   533   *
; ..\component\Os\Implementation\Os_Timer.h	   534   *
; ..\component\Os\Implementation\Os_Timer.h	   535   *
; ..\component\Os\Implementation\Os_Timer.h	   536   *
; ..\component\Os\Implementation\Os_Timer.h	   537   *
; ..\component\Os\Implementation\Os_Timer.h	   538   */
; ..\component\Os\Implementation\Os_Timer.h	   539  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   540  Os_TimerHrtIsLogicalCompareValueReached,
; ..\component\Os\Implementation\Os_Timer.h	   541  (
; ..\component\Os\Implementation\Os_Timer.h	   542    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   543  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   544  {
; ..\component\Os\Implementation\Os_Timer.h	   545    /* #10 Initialize the result to FALSE. */
; ..\component\Os\Implementation\Os_Timer.h	   546    Os_StdReturnType result = 0u;                                                                                         /* PRQA S 2981 */ /* MD_Os_Rule2.2_2981 */
; ..\component\Os\Implementation\Os_Timer.h	   547  
; ..\component\Os\Implementation\Os_Timer.h	   548    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   549    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   550    {
; ..\component\Os\Implementation\Os_Timer.h	   551      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   552  
; ..\component\Os\Implementation\Os_Timer.h	   553      /* #30 If the current time is after or equal to the logical compare value: */
; ..\component\Os\Implementation\Os_Timer.h	   554      if(Os_CounterIsFutureValue(&(Timer->Counter), Timer->Dyn->Compare, now) == 0u)                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   555      {
; ..\component\Os\Implementation\Os_Timer.h	   556        /* #40 The result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   557        result = !0u;                                                                                                     /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   558      }
; ..\component\Os\Implementation\Os_Timer.h	   559    }
; ..\component\Os\Implementation\Os_Timer.h	   560    /* #50 Otherwise: */
; ..\component\Os\Implementation\Os_Timer.h	   561    else
; ..\component\Os\Implementation\Os_Timer.h	   562    {
; ..\component\Os\Implementation\Os_Timer.h	   563      /* #60 The hardware compare value is equal to the OS internal compare value, so the result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   564      result = !0u;                                                                                                       /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   565    }
; ..\component\Os\Implementation\Os_Timer.h	   566  
; ..\component\Os\Implementation\Os_Timer.h	   567    return result;
; ..\component\Os\Implementation\Os_Timer.h	   568  }
; ..\component\Os\Implementation\Os_Timer.h	   569  
; ..\component\Os\Implementation\Os_Timer.h	   570  
; ..\component\Os\Implementation\Os_Timer.h	   571  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   572   *  Os_TimerHrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   573   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   574  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   575  Os_TimerHrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   576  (
; ..\component\Os\Implementation\Os_Timer.h	   577    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   578    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   579  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   580  {
; ..\component\Os\Implementation\Os_Timer.h	   581    return (Value & Timer->Counter.Characteristics.MaxAllowedValue);
; ..\component\Os\Implementation\Os_Timer.h	   582  }
; ..\component\Os\Implementation\Os_Timer.h	   583  
; ..\component\Os\Implementation\Os_Timer.h	   584  
; ..\component\Os\Implementation\Os_Timer.h	   585  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   586   *  Os_TimerHrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   587   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   588  /*!
; ..\component\Os\Implementation\Os_Timer.h	   589   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   590   *
; ..\component\Os\Implementation\Os_Timer.h	   591   *
; ..\component\Os\Implementation\Os_Timer.h	   592   *
; ..\component\Os\Implementation\Os_Timer.h	   593   *
; ..\component\Os\Implementation\Os_Timer.h	   594   */
; ..\component\Os\Implementation\Os_Timer.h	   595  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   596  Os_TimerHrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   597  (
; ..\component\Os\Implementation\Os_Timer.h	   598    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   599  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   600  {
; ..\component\Os\Implementation\Os_Timer.h	   601    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   602    Os_Hal_TimerFrtTickType timePassed;
; ..\component\Os\Implementation\Os_Timer.h	   603  
; ..\component\Os\Implementation\Os_Timer.h	   604    /* #10 Get the current hardware counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   605    now = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig)) & (Timer->Dyn->ValueMask);        /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   606  
; ..\component\Os\Implementation\Os_Timer.h	   607    /* #20 Calculate how much time has passed since we have read from the hardware the last time. */
; ..\component\Os\Implementation\Os_Timer.h	   608    timePassed = Os_TimerTickType2FrtTickType(now - Timer->Dyn->HwLastCounterValue);                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   609    Timer->Dyn->HwLastCounterValue = now;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   610  
; ..\component\Os\Implementation\Os_Timer.h	   611    /* #30 Add this time to the current counter value and return it. */
; ..\component\Os\Implementation\Os_Timer.h	   612    Timer->Dyn->Value += Os_TimerFrtTickType2TickType(timePassed);                                                        /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   613  
; ..\component\Os\Implementation\Os_Timer.h	   614    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   615  }
; ..\component\Os\Implementation\Os_Timer.h	   616  
; ..\component\Os\Implementation\Os_Timer.h	   617  
; ..\component\Os\Implementation\Os_Timer.h	   618  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   619   *  Os_TimerPfrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   620   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   621  /*!
; ..\component\Os\Implementation\Os_Timer.h	   622   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   623   *
; ..\component\Os\Implementation\Os_Timer.h	   624   *
; ..\component\Os\Implementation\Os_Timer.h	   625   */
; ..\component\Os\Implementation\Os_Timer.h	   626  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   627  Os_TimerPfrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   628  (
; ..\component\Os\Implementation\Os_Timer.h	   629    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   630  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   631  {
; ..\component\Os\Implementation\Os_Timer.h	   632    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   633  }
; ..\component\Os\Implementation\Os_Timer.h	   634  
; ..\component\Os\Implementation\Os_Timer.h	   635  
; ..\component\Os\Implementation\Os_Timer.h	   636  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   637   *  Os_TimerSwAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   638   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   639  /*!
; ..\component\Os\Implementation\Os_Timer.h	   640   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   641   *
; ..\component\Os\Implementation\Os_Timer.h	   642   *
; ..\component\Os\Implementation\Os_Timer.h	   643   *
; ..\component\Os\Implementation\Os_Timer.h	   644   *
; ..\component\Os\Implementation\Os_Timer.h	   645   *
; ..\component\Os\Implementation\Os_Timer.h	   646   *
; ..\component\Os\Implementation\Os_Timer.h	   647   *
; ..\component\Os\Implementation\Os_Timer.h	   648   */
; ..\component\Os\Implementation\Os_Timer.h	   649  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   650  Os_TimerSwAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   651  (
; ..\component\Os\Implementation\Os_Timer.h	   652    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   653    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   654    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   655  ))
; ..\component\Os\Implementation\Os_Timer.h	   656  {
; ..\component\Os\Implementation\Os_Timer.h	   657    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   658    Os_TickType timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   659    Os_TickType timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   660  
; ..\component\Os\Implementation\Os_Timer.h	   661    timerFirstCycle = CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   662    timerSecondCycle = CounterValue + MaxAllowedValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   663  
; ..\component\Os\Implementation\Os_Timer.h	   664    /* #10 If CounterValue is bigger than Now (implies that Now is in the first cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   665    if(CounterValue > Now)
; ..\component\Os\Implementation\Os_Timer.h	   666    {
; ..\component\Os\Implementation\Os_Timer.h	   667      /* #20 Set return value to CounterValue, the expiration time will be reached within the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   668      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   669    }
; ..\component\Os\Implementation\Os_Timer.h	   670    /* #30 Else if CounterValue+MaxallowedValue+1 is bigger than Now (Now may be in first or second cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   671    else if(timerSecondCycle > Now)
; ..\component\Os\Implementation\Os_Timer.h	   672    {
; ..\component\Os\Implementation\Os_Timer.h	   673      /*#40 Set return value to CounterValue+MaxallowedValue+1, the expiration time will be reached in the second cycle.*/
; ..\component\Os\Implementation\Os_Timer.h	   674      timerValue = timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   675    }
; ..\component\Os\Implementation\Os_Timer.h	   676    /* #50 Else (Now is in the second cycle) */
; ..\component\Os\Implementation\Os_Timer.h	   677    else
; ..\component\Os\Implementation\Os_Timer.h	   678    {
; ..\component\Os\Implementation\Os_Timer.h	   679      /* #60 Set return value to CounterValue, the expiration time will be reached in the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   680      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   681    }
; ..\component\Os\Implementation\Os_Timer.h	   682  
; ..\component\Os\Implementation\Os_Timer.h	   683    return timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   684  }
; ..\component\Os\Implementation\Os_Timer.h	   685  
; ..\component\Os\Implementation\Os_Timer.h	   686  
; ..\component\Os\Implementation\Os_Timer.h	   687  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   688   *  Os_TimerPitAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   689   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   690  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   691  Os_TimerPitAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   692  (
; ..\component\Os\Implementation\Os_Timer.h	   693    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   694    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   695    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   696  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   697  {
; ..\component\Os\Implementation\Os_Timer.h	   698    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   699  }
; ..\component\Os\Implementation\Os_Timer.h	   700  
; ..\component\Os\Implementation\Os_Timer.h	   701  
; ..\component\Os\Implementation\Os_Timer.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   703   *  Os_TimerHrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   705  /*!
; ..\component\Os\Implementation\Os_Timer.h	   706   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   707   *
; ..\component\Os\Implementation\Os_Timer.h	   708   *
; ..\component\Os\Implementation\Os_Timer.h	   709   *
; ..\component\Os\Implementation\Os_Timer.h	   710   */
; ..\component\Os\Implementation\Os_Timer.h	   711  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   712  Os_TimerHrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   713  (
; ..\component\Os\Implementation\Os_Timer.h	   714    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   715    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   716    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   717    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   718  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   719  {
; ..\component\Os\Implementation\Os_Timer.h	   720    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   721  
; ..\component\Os\Implementation\Os_Timer.h	   722    /* #10 Take the upper bits from the timer (Now) and the lower bits from the CounterValue. */
; ..\component\Os\Implementation\Os_Timer.h	   723    timerValue = (Now & (~(MaxAllowedValue))) + CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   724  
; ..\component\Os\Implementation\Os_Timer.h	   725    /* #20 If this time stamp is already in the past or now, take the next cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   726    if(timerValue <= Now)
; ..\component\Os\Implementation\Os_Timer.h	   727    {
; ..\component\Os\Implementation\Os_Timer.h	   728      timerValue += (MaxAllowedValue + (uint32)1);
; ..\component\Os\Implementation\Os_Timer.h	   729    }
; ..\component\Os\Implementation\Os_Timer.h	   730  
; ..\component\Os\Implementation\Os_Timer.h	   731    return (timerValue & MaxCountingValue);
; ..\component\Os\Implementation\Os_Timer.h	   732  }
; ..\component\Os\Implementation\Os_Timer.h	   733  
; ..\component\Os\Implementation\Os_Timer.h	   734  
; ..\component\Os\Implementation\Os_Timer.h	   735  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   736   *  Os_TimerPfrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   737   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   738  /*!
; ..\component\Os\Implementation\Os_Timer.h	   739   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   740   *
; ..\component\Os\Implementation\Os_Timer.h	   741   *
; ..\component\Os\Implementation\Os_Timer.h	   742   */
; ..\component\Os\Implementation\Os_Timer.h	   743  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   744  Os_TimerPfrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   745  (
; ..\component\Os\Implementation\Os_Timer.h	   746    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   747    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   748    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   749  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   750  {
; ..\component\Os\Implementation\Os_Timer.h	   751    /* #10 Convert values based on software timer implementation. */
; ..\component\Os\Implementation\Os_Timer.h	   752    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   753  }
; ..\component\Os\Implementation\Os_Timer.h	   754  
; ..\component\Os\Implementation\Os_Timer.h	   755  
; ..\component\Os\Implementation\Os_Timer.h	   756  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   757   *  Os_TimerAdd()
; ..\component\Os\Implementation\Os_Timer.h	   758   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   759  /*!
; ..\component\Os\Implementation\Os_Timer.h	   760   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   761   *
; ..\component\Os\Implementation\Os_Timer.h	   762   *
; ..\component\Os\Implementation\Os_Timer.h	   763   *
; ..\component\Os\Implementation\Os_Timer.h	   764   */
; ..\component\Os\Implementation\Os_Timer.h	   765  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   766  Os_TimerAdd,
; ..\component\Os\Implementation\Os_Timer.h	   767  (
; ..\component\Os\Implementation\Os_Timer.h	   768    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   769    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   770    Os_TickType Value,
; ..\component\Os\Implementation\Os_Timer.h	   771    Os_TickType Add
; ..\component\Os\Implementation\Os_Timer.h	   772  ))
; ..\component\Os\Implementation\Os_Timer.h	   773  {
; ..\component\Os\Implementation\Os_Timer.h	   774    Os_TickType result;
; ..\component\Os\Implementation\Os_Timer.h	   775  
; ..\component\Os\Implementation\Os_Timer.h	   776    Os_Assert((Os_StdReturnType)(Value <= MaxCountingValue));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   777    Os_Assert((Os_StdReturnType)(Add <=  MaxAllowedValue));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   778  
; ..\component\Os\Implementation\Os_Timer.h	   779    /* #10 If the sum of Value and Add exceeds the MaxCountingValue, subtract MaxCountingValue+1 from the sum. */
; ..\component\Os\Implementation\Os_Timer.h	   780    if(Add > (MaxCountingValue - Value))
; ..\component\Os\Implementation\Os_Timer.h	   781    {
; ..\component\Os\Implementation\Os_Timer.h	   782      Os_TickType mod;
; ..\component\Os\Implementation\Os_Timer.h	   783  
; ..\component\Os\Implementation\Os_Timer.h	   784      /* 1.             Add > MaxCountingValue - Value            - see if-statement
; ..\component\Os\Implementation\Os_Timer.h	   785       * 2.  => Add + Value > MaxCountingValue
; ..\component\Os\Implementation\Os_Timer.h	   786       * 3.  => There is a value overflow.
; ..\component\Os\Implementation\Os_Timer.h	   787       */
; ..\component\Os\Implementation\Os_Timer.h	   788      mod = MaxCountingValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   789      result = (Value - mod) + Add;
	add	d15,d1,d2
.L198:
	sub	d1,d0,d1
.L300:

; ..\component\Os\Implementation\Os_Timer.h	   780    if(Add > (MaxCountingValue - Value))      (inlined)
	jge.u	d1,d2,.L5
.L301:
	sub	d15,d0
	add	d15,#-1

; ..\component\Os\Implementation\Os_Timer.h	   780    if(Add > (MaxCountingValue - Value))      (inlined)
.L5:
	fret
.L73:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_1')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_1
.L28:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0

; ..\component\Os\Implementation\Os_Counter.h	   242    if(Value > ReferenceValue)      (inlined)
	jge.u	d0,d15,.L7
.L201:

; ..\component\Os\Implementation\Os_Counter.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Counter.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Counter.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Counter.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Counter.h	     6   *
; ..\component\Os\Implementation\Os_Counter.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Counter.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Counter.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Counter.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Counter.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Counter.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Counter.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Counter.h	    14  /**
; ..\component\Os\Implementation\Os_Counter.h	    15   * \addtogroup Os_Counter Counter
; ..\component\Os\Implementation\Os_Counter.h	    16   * \{
; ..\component\Os\Implementation\Os_Counter.h	    17   *
; ..\component\Os\Implementation\Os_Counter.h	    18   * \file
; ..\component\Os\Implementation\Os_Counter.h	    19   * \brief       OS services for counters.
; ..\component\Os\Implementation\Os_Counter.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Counter.h	    21   *
; ..\component\Os\Implementation\Os_Counter.h	    22   *
; ..\component\Os\Implementation\Os_Counter.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Counter.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Counter.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Counter.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    29  
; ..\component\Os\Implementation\Os_Counter.h	    30  #ifndef OS_COUNTER_H
; ..\component\Os\Implementation\Os_Counter.h	    31  # define OS_COUNTER_H
; ..\component\Os\Implementation\Os_Counter.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Counter.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Counter.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Counter.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Counter.h	    38  
; ..\component\Os\Implementation\Os_Counter.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Counter.h	    40  # include "Os_CounterInt.h"
; ..\component\Os\Implementation\Os_Counter.h	    41  # include "Os_Counter_Cfg.h"
; ..\component\Os\Implementation\Os_Counter.h	    42  # include "Os_Counter_Lcfg.h"
; ..\component\Os\Implementation\Os_Counter.h	    43  
; ..\component\Os\Implementation\Os_Counter.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Counter.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Counter.h	    46  # include "Os_PriorityQueue.h"
; ..\component\Os\Implementation\Os_Counter.h	    47  # include "OsInt.h"
; ..\component\Os\Implementation\Os_Counter.h	    48  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Counter.h	    49  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Counter.h	    50  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Counter.h	    51  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Counter.h	    52  # include "Os_Timer.h"
; ..\component\Os\Implementation\Os_Counter.h	    53  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Counter.h	    54  
; ..\component\Os\Implementation\Os_Counter.h	    55  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Counter.h	    56  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Counter.h	    57  
; ..\component\Os\Implementation\Os_Counter.h	    58  
; ..\component\Os\Implementation\Os_Counter.h	    59  
; ..\component\Os\Implementation\Os_Counter.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    61   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Counter.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    63  
; ..\component\Os\Implementation\Os_Counter.h	    64  
; ..\component\Os\Implementation\Os_Counter.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    66   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Counter.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    68  
; ..\component\Os\Implementation\Os_Counter.h	    69  
; ..\component\Os\Implementation\Os_Counter.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    71   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Counter.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    73  
; ..\component\Os\Implementation\Os_Counter.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    75   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Counter.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    77  
; ..\component\Os\Implementation\Os_Counter.h	    78  
; ..\component\Os\Implementation\Os_Counter.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    80   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Counter.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    82  
; ..\component\Os\Implementation\Os_Counter.h	    83  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Counter.h	    84  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Counter.h	    85  
; ..\component\Os\Implementation\Os_Counter.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    87   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Counter.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    89  
; ..\component\Os\Implementation\Os_Counter.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	    91   *  Os_CounterHasPfrtCounter()
; ..\component\Os\Implementation\Os_Counter.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CounterHasPfrtCounter,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	    94  (
; ..\component\Os\Implementation\Os_Counter.h	    95    void
; ..\component\Os\Implementation\Os_Counter.h	    96  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	    97  {
; ..\component\Os\Implementation\Os_Counter.h	    98    return (Os_StdReturnType)(OS_CFG_COUNTER_PFRT_USED == STD_ON);                                                        /* PRQA S 4304, 2995, 2996 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Counter.h	    99  }
; ..\component\Os\Implementation\Os_Counter.h	   100  
; ..\component\Os\Implementation\Os_Counter.h	   101  
; ..\component\Os\Implementation\Os_Counter.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   103   *  Os_CounterHasHrtCounter()
; ..\component\Os\Implementation\Os_Counter.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CounterHasHrtCounter,      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	   106  (
; ..\component\Os\Implementation\Os_Counter.h	   107    void
; ..\component\Os\Implementation\Os_Counter.h	   108  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	   109  {
; ..\component\Os\Implementation\Os_Counter.h	   110    return (Os_StdReturnType)(OS_CFG_COUNTER_HRT_USED == STD_ON);                                                         /* PRQA S 2995, 2996, 4304 */ /* MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996, MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Counter.h	   111  }
; ..\component\Os\Implementation\Os_Counter.h	   112  
; ..\component\Os\Implementation\Os_Counter.h	   113  
; ..\component\Os\Implementation\Os_Counter.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   115   *  Os_CounterHasPitCounter()
; ..\component\Os\Implementation\Os_Counter.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CounterHasPitCounter,      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	   118  (
; ..\component\Os\Implementation\Os_Counter.h	   119    void
; ..\component\Os\Implementation\Os_Counter.h	   120  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Counter.h	   121  {
; ..\component\Os\Implementation\Os_Counter.h	   122    return (Os_StdReturnType)(OS_CFG_COUNTER_PIT_USED == STD_ON);                                                         /* PRQA S 4304, 2995, 2996 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Counter.h	   123  }
; ..\component\Os\Implementation\Os_Counter.h	   124  
; ..\component\Os\Implementation\Os_Counter.h	   125  
; ..\component\Os\Implementation\Os_Counter.h	   126  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   127   *  Os_CounterCheckId()
; ..\component\Os\Implementation\Os_Counter.h	   128   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   129  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Counter.h	   130  OS_ALWAYS_INLINE, Os_CounterCheckId,
; ..\component\Os\Implementation\Os_Counter.h	   131  (
; ..\component\Os\Implementation\Os_Counter.h	   132    CounterType CounterId
; ..\component\Os\Implementation\Os_Counter.h	   133  ))
; ..\component\Os\Implementation\Os_Counter.h	   134  {
; ..\component\Os\Implementation\Os_Counter.h	   135    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CounterId, (uint32)OS_COUNTERID_COUNT));
; ..\component\Os\Implementation\Os_Counter.h	   136  }
; ..\component\Os\Implementation\Os_Counter.h	   137  
; ..\component\Os\Implementation\Os_Counter.h	   138  
; ..\component\Os\Implementation\Os_Counter.h	   139  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   140   *  Os_CounterId2Counter()
; ..\component\Os\Implementation\Os_Counter.h	   141   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   142  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Counter.h	   143  P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CounterId2Counter,
; ..\component\Os\Implementation\Os_Counter.h	   144  (
; ..\component\Os\Implementation\Os_Counter.h	   145    CounterType CounterId
; ..\component\Os\Implementation\Os_Counter.h	   146  ))
; ..\component\Os\Implementation\Os_Counter.h	   147  {
; ..\component\Os\Implementation\Os_Counter.h	   148    Os_Assert(Os_ErrIsValueLo((uint32)CounterId, (uint32)OS_COUNTERID_COUNT));
; ..\component\Os\Implementation\Os_Counter.h	   149    return OsCfg_CounterRefs[CounterId];
; ..\component\Os\Implementation\Os_Counter.h	   150  }
; ..\component\Os\Implementation\Os_Counter.h	   151  
; ..\component\Os\Implementation\Os_Counter.h	   152  
; ..\component\Os\Implementation\Os_Counter.h	   153  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   154   *  Os_CounterGetApplication()
; ..\component\Os\Implementation\Os_Counter.h	   155   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   156  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Counter.h	   157  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CounterGetApplication,
; ..\component\Os\Implementation\Os_Counter.h	   158  (
; ..\component\Os\Implementation\Os_Counter.h	   159    P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST) Counter
; ..\component\Os\Implementation\Os_Counter.h	   160  ))
; ..\component\Os\Implementation\Os_Counter.h	   161  {
; ..\component\Os\Implementation\Os_Counter.h	   162    return Counter->OwnerApplication;
; ..\component\Os\Implementation\Os_Counter.h	   163  }
; ..\component\Os\Implementation\Os_Counter.h	   164  
; ..\component\Os\Implementation\Os_Counter.h	   165  
; ..\component\Os\Implementation\Os_Counter.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   167   *  Os_CounterGetAccessingApplications()
; ..\component\Os\Implementation\Os_Counter.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Counter.h	   170  OS_ALWAYS_INLINE, Os_CounterGetAccessingApplications,
; ..\component\Os\Implementation\Os_Counter.h	   171  (
; ..\component\Os\Implementation\Os_Counter.h	   172    P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST) Counter
; ..\component\Os\Implementation\Os_Counter.h	   173  ))
; ..\component\Os\Implementation\Os_Counter.h	   174  {
; ..\component\Os\Implementation\Os_Counter.h	   175    return Counter->AccessingApplications;
; ..\component\Os\Implementation\Os_Counter.h	   176  }
; ..\component\Os\Implementation\Os_Counter.h	   177  
; ..\component\Os\Implementation\Os_Counter.h	   178  
; ..\component\Os\Implementation\Os_Counter.h	   179  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   180   *  Os_CounterGetCore()
; ..\component\Os\Implementation\Os_Counter.h	   181   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   182  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Counter.h	   183  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CounterGetCore,
; ..\component\Os\Implementation\Os_Counter.h	   184  (
; ..\component\Os\Implementation\Os_Counter.h	   185    P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST) Counter
; ..\component\Os\Implementation\Os_Counter.h	   186  ))
; ..\component\Os\Implementation\Os_Counter.h	   187  {
; ..\component\Os\Implementation\Os_Counter.h	   188    return Counter->Core;
; ..\component\Os\Implementation\Os_Counter.h	   189  }
; ..\component\Os\Implementation\Os_Counter.h	   190  
; ..\component\Os\Implementation\Os_Counter.h	   191  
; ..\component\Os\Implementation\Os_Counter.h	   192  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   193   *  Os_CounterIsFutureValue()
; ..\component\Os\Implementation\Os_Counter.h	   194   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   195  /*!
; ..\component\Os\Implementation\Os_Counter.h	   196   * Internal comment removed.
; ..\component\Os\Implementation\Os_Counter.h	   197   *
; ..\component\Os\Implementation\Os_Counter.h	   198   *
; ..\component\Os\Implementation\Os_Counter.h	   199   */
; ..\component\Os\Implementation\Os_Counter.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Counter.h	   201  Os_CounterIsFutureValue,
; ..\component\Os\Implementation\Os_Counter.h	   202  (
; ..\component\Os\Implementation\Os_Counter.h	   203    P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST) Counter,
; ..\component\Os\Implementation\Os_Counter.h	   204    Os_TickType Value,
; ..\component\Os\Implementation\Os_Counter.h	   205    Os_TickType ReferenceValue
; ..\component\Os\Implementation\Os_Counter.h	   206  ))
; ..\component\Os\Implementation\Os_Counter.h	   207  {
; ..\component\Os\Implementation\Os_Counter.h	   208    /* #10 Fetch result from internal implementation. */
; ..\component\Os\Implementation\Os_Counter.h	   209    return Os_CounterIsFutureValueInternal( Counter->Characteristics.MaxCountingValue,
; ..\component\Os\Implementation\Os_Counter.h	   210                                            Counter->Characteristics.MaxDifferentialValue,
; ..\component\Os\Implementation\Os_Counter.h	   211                                            Value,
; ..\component\Os\Implementation\Os_Counter.h	   212                                            ReferenceValue);
; ..\component\Os\Implementation\Os_Counter.h	   213  }
; ..\component\Os\Implementation\Os_Counter.h	   214  
; ..\component\Os\Implementation\Os_Counter.h	   215  
; ..\component\Os\Implementation\Os_Counter.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Counter.h	   217   *  Os_CounterIsFutureValueInternal()
; ..\component\Os\Implementation\Os_Counter.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Counter.h	   219  /*!
; ..\component\Os\Implementation\Os_Counter.h	   220   * Internal comment removed.
; ..\component\Os\Implementation\Os_Counter.h	   221   *
; ..\component\Os\Implementation\Os_Counter.h	   222   *
; ..\component\Os\Implementation\Os_Counter.h	   223   *
; ..\component\Os\Implementation\Os_Counter.h	   224   */
; ..\component\Os\Implementation\Os_Counter.h	   225  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Counter.h	   226  Os_CounterIsFutureValueInternal,
; ..\component\Os\Implementation\Os_Counter.h	   227  (
; ..\component\Os\Implementation\Os_Counter.h	   228    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Counter.h	   229    Os_TickType MaxDifferentialValue,
; ..\component\Os\Implementation\Os_Counter.h	   230    Os_TickType Value,
; ..\component\Os\Implementation\Os_Counter.h	   231    Os_TickType ReferenceValue
; ..\component\Os\Implementation\Os_Counter.h	   232  ))
; ..\component\Os\Implementation\Os_Counter.h	   233  {
; ..\component\Os\Implementation\Os_Counter.h	   234    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Counter.h	   235    Os_TickType diffTime;
; ..\component\Os\Implementation\Os_Counter.h	   236  
; ..\component\Os\Implementation\Os_Counter.h	   237    Os_Assert((Os_StdReturnType)(Value <= MaxCountingValue));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Counter.h	   238    Os_Assert((Os_StdReturnType)(ReferenceValue <= MaxCountingValue));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Counter.h	   239  
; ..\component\Os\Implementation\Os_Counter.h	   240    /* - #10 Subtract the higher from the lower value and return whether the difference is greater
; ..\component\Os\Implementation\Os_Counter.h	   241     *       than the MaxDifferentialValue or not. */
; ..\component\Os\Implementation\Os_Counter.h	   242    if(Value > ReferenceValue)
; ..\component\Os\Implementation\Os_Counter.h	   243    {
; ..\component\Os\Implementation\Os_Counter.h	   244      diffTime = Value - ReferenceValue;
	sub	d15,d0
.L200:

; ..\component\Os\Implementation\Os_Counter.h	   245  
; ..\component\Os\Implementation\Os_Counter.h	   246      /* If the left job is less than or equal to MaxDifferentialValue ticks ahead of the right job,
; ..\component\Os\Implementation\Os_Counter.h	   247       * then the left job lies in the future of the right job.
; ..\component\Os\Implementation\Os_Counter.h	   248       */
; ..\component\Os\Implementation\Os_Counter.h	   249      result = (Os_StdReturnType)(diffTime <= MaxDifferentialValue);                                                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ge.u	d15,d1,d15

; ..\component\Os\Implementation\Os_Counter.h	   244      diffTime = Value - ReferenceValue;      (inlined)
	j	.L8

; ..\component\Os\Implementation\Os_Counter.h	   242    if(Value > ReferenceValue)      (inlined)
.L7:

; ..\component\Os\Implementation\Os_Counter.h	   251    else if(Value < ReferenceValue)      (inlined)
	jge.u	d15,d0,.L9
.L202:

; ..\component\Os\Implementation\Os_Counter.h	   250    }
; ..\component\Os\Implementation\Os_Counter.h	   251    else if(Value < ReferenceValue)
; ..\component\Os\Implementation\Os_Counter.h	   252    {
; ..\component\Os\Implementation\Os_Counter.h	   253      diffTime = ReferenceValue - Value;
	sub	d0,d15
.L207:

; ..\component\Os\Implementation\Os_Counter.h	   254  
; ..\component\Os\Implementation\Os_Counter.h	   255      /* If the right job is less than or equal to MaxDifferentialValue ticks ahead of the left job,
; ..\component\Os\Implementation\Os_Counter.h	   256       * then the left job lies in the past of the right job.
; ..\component\Os\Implementation\Os_Counter.h	   257       */
; ..\component\Os\Implementation\Os_Counter.h	   258      result = (Os_StdReturnType)(diffTime > MaxDifferentialValue);                                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	lt.u	d15,d1,d0

; ..\component\Os\Implementation\Os_Counter.h	   253      diffTime = ReferenceValue - Value;      (inlined)
	j	.L10

; ..\component\Os\Implementation\Os_Counter.h	   251    else if(Value < ReferenceValue)      (inlined)
.L9:

; ..\component\Os\Implementation\Os_Counter.h	   259    }
; ..\component\Os\Implementation\Os_Counter.h	   260    else
; ..\component\Os\Implementation\Os_Counter.h	   261    {
; ..\component\Os\Implementation\Os_Counter.h	   262      /* Value == ReferenceValue => Value is not in the future of ReferenceValue. */
; ..\component\Os\Implementation\Os_Counter.h	   263      result = 0;
	mov	d15,#0

; ..\component\Os\Implementation\Os_Counter.h	   260    else      (inlined)
.L10:

; ..\component\Os\Implementation\Os_Counter.h	   251    else if(Value < ReferenceValue)      (inlined)
.L8:
	fret
.L68:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Isr_Os_TimerPitIsr

; ..\component\Os\Implementation\Os_Timer.c	   387  
; ..\component\Os\Implementation\Os_Timer.c	   388  
; ..\component\Os\Implementation\Os_Timer.c	   389  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   390   *  ISR(Os_TimerPitIsr)
; ..\component\Os\Implementation\Os_Timer.c	   391   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   392  /*!
; ..\component\Os\Implementation\Os_Timer.c	   393   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   394   *
; ..\component\Os\Implementation\Os_Timer.c	   395   *
; ..\component\Os\Implementation\Os_Timer.c	   396   *
; ..\component\Os\Implementation\Os_Timer.c	   397   *
; ..\component\Os\Implementation\Os_Timer.c	   398   *
; ..\component\Os\Implementation\Os_Timer.c	   399   */
; ..\component\Os\Implementation\Os_Timer.c	   400  ISR(Os_TimerPitIsr)                                                                                                     /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; Function Os_Isr_Os_TimerPitIsr
.L30:
Os_Isr_Os_TimerPitIsr:	.type	func

; ..\component\Os\Implementation\Os_Timer.c	   401  {
; ..\component\Os\Implementation\Os_Timer.c	   402    P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST) me;
; ..\component\Os\Implementation\Os_Timer.c	   403    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) pitCounter;
; ..\component\Os\Implementation\Os_Timer.c	   404  
; ..\component\Os\Implementation\Os_Timer.c	   405    if(Os_CounterHasPitCounter() == 0u)                                                                                   /* COV_OS_INVSTATE */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.c	   406    {
; ..\component\Os\Implementation\Os_Timer.c	   407      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Timer.c	   408    }
; ..\component\Os\Implementation\Os_Timer.c	   409  
; ..\component\Os\Implementation\Os_Timer.c	   410    me = Os_TimerThread2CounterIsr(Os_CoreGetThread());                                                                   /* SBSW_OS_TIMER_TIMERTHREAD2COUNTERISR_001 */
; ..\component\Os\Implementation\Os_Timer.c	   411  
; ..\component\Os\Implementation\Os_Timer.c	   412    if(me->Counter->DriverType != OS_TIMERTYPE_PERIODIC_TICK)                                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Timer.c	   413    {
; ..\component\Os\Implementation\Os_Timer.c	   414      Os_ErrKernelPanic();
	j	Os_ErrKernelPanic
.L154:
	
__Os_Isr_Os_TimerPitIsr_function_end:
	.size	Os_Isr_Os_TimerPitIsr,__Os_Isr_Os_TimerPitIsr_function_end-Os_Isr_Os_TimerPitIsr
.L53:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Isr_Os_TimerHrtIsr

; ..\component\Os\Implementation\Os_Timer.c	   415    }
; ..\component\Os\Implementation\Os_Timer.c	   416  
; ..\component\Os\Implementation\Os_Timer.c	   417    pitCounter = (P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST)) me->Counter;                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Timer.c	   418  
; ..\component\Os\Implementation\Os_Timer.c	   419    /* #10 Acknowledge and reload the PIT hardware. */
; ..\component\Os\Implementation\Os_Timer.c	   420    Os_Hal_TimerPitAckAndReload(pitCounter->HwConfig);                                                                    /* SBSW_OS_TIMER_HAL_TIMERPITACKANDRELOAD_001 */
; ..\component\Os\Implementation\Os_Timer.c	   421  
; ..\component\Os\Implementation\Os_Timer.c	   422    /* #20 Increment software counter. If there are expired jobs, work them off. */
; ..\component\Os\Implementation\Os_Timer.c	   423    Os_TimerSwIncrement(&(pitCounter->SwCounter));                                                                        /* SBSW_OS_TIMER_TIMERSWINCREMENT_001 */
; ..\component\Os\Implementation\Os_Timer.c	   424  
; ..\component\Os\Implementation\Os_Timer.c	   425    /* #30 (EXTENDED status:) If there is already an interrupt pending (unlikely): */
; ..\component\Os\Implementation\Os_Timer.c	   426    if(OS_UNLIKELY(Os_TimerPitCheckNotPending(pitCounter) == OS_CHECK_FAILED))                                            /* SBSW_OS_TIMER_HAL_TIMERPITISPENDING_001 */
; ..\component\Os\Implementation\Os_Timer.c	   427    {
; ..\component\Os\Implementation\Os_Timer.c	   428      /* #40 Report job overload. */
; ..\component\Os\Implementation\Os_Timer.c	   429      Os_ErrReportTimerIsr(OS_STATUS_OVERLOAD);
; ..\component\Os\Implementation\Os_Timer.c	   430    }
; ..\component\Os\Implementation\Os_Timer.c	   431  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.c	   432  
; ..\component\Os\Implementation\Os_Timer.c	   433  
; ..\component\Os\Implementation\Os_Timer.c	   434  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   435   *  ISR(Os_TimerHrtIsr)
; ..\component\Os\Implementation\Os_Timer.c	   436   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   437  /*!
; ..\component\Os\Implementation\Os_Timer.c	   438   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   439   *
; ..\component\Os\Implementation\Os_Timer.c	   440   *
; ..\component\Os\Implementation\Os_Timer.c	   441   *
; ..\component\Os\Implementation\Os_Timer.c	   442   *
; ..\component\Os\Implementation\Os_Timer.c	   443   *
; ..\component\Os\Implementation\Os_Timer.c	   444   *
; ..\component\Os\Implementation\Os_Timer.c	   445   *
; ..\component\Os\Implementation\Os_Timer.c	   446   *
; ..\component\Os\Implementation\Os_Timer.c	   447   *
; ..\component\Os\Implementation\Os_Timer.c	   448   */
; ..\component\Os\Implementation\Os_Timer.c	   449  ISR(Os_TimerHrtIsr)                                                                                                     /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; Function Os_Isr_Os_TimerHrtIsr
.L32:
Os_Isr_Os_TimerHrtIsr:	.type	func

; ..\component\Os\Implementation\Os_Timer.c	   450  {
; ..\component\Os\Implementation\Os_Timer.c	   451    P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST) me;
; ..\component\Os\Implementation\Os_Timer.c	   452    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) hrtCounter;
; ..\component\Os\Implementation\Os_Timer.c	   453    Os_IntStateType interruptState;
; ..\component\Os\Implementation\Os_Timer.c	   454    Os_StdReturnType isLogicalCompareValueReached;
; ..\component\Os\Implementation\Os_Timer.c	   455  
; ..\component\Os\Implementation\Os_Timer.c	   456    if(Os_CounterHasHrtCounter() == 0u)                                                                                   /* COV_OS_INVSTATE */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.c	   457    {
; ..\component\Os\Implementation\Os_Timer.c	   458      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Timer.c	   459    }
; ..\component\Os\Implementation\Os_Timer.c	   460  
; ..\component\Os\Implementation\Os_Timer.c	   461    me = Os_TimerThread2CounterIsr(Os_CoreGetThread());                                                                   /* SBSW_OS_TIMER_TIMERTHREAD2COUNTERISR_001 */
; ..\component\Os\Implementation\Os_Timer.c	   462  
; ..\component\Os\Implementation\Os_Timer.c	   463    if(me->Counter->DriverType != OS_TIMERTYPE_HIGH_RESOLUTION)                                                           /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Timer.c	   464    {
; ..\component\Os\Implementation\Os_Timer.c	   465      Os_ErrKernelPanic();
	j	Os_ErrKernelPanic
.L155:
	
__Os_Isr_Os_TimerHrtIsr_function_end:
	.size	Os_Isr_Os_TimerHrtIsr,__Os_Isr_Os_TimerHrtIsr_function_end-Os_Isr_Os_TimerHrtIsr
.L58:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Isr_Os_TimerPfrtIsr

; ..\component\Os\Implementation\Os_Timer.c	   466    }
; ..\component\Os\Implementation\Os_Timer.c	   467  
; ..\component\Os\Implementation\Os_Timer.c	   468    hrtCounter = (P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST)) me->Counter;                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Timer.c	   469  
; ..\component\Os\Implementation\Os_Timer.c	   470    /* #10 Acknowledge the timer hardware, so that new timer interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Timer.c	   471    Os_Hal_TimerFrtAcknowledge(hrtCounter->HwConfig);                                                                     /* SBSW_OS_TIMER_HAL_TIMERFRTACKANDRELOAD_001 */
; ..\component\Os\Implementation\Os_Timer.c	   472  
; ..\component\Os\Implementation\Os_Timer.c	   473    /* #20 Suspend interrupts. */
; ..\component\Os\Implementation\Os_Timer.c	   474    Os_IntSuspend(&interruptState);                                                                                       /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Timer.c	   475  
; ..\component\Os\Implementation\Os_Timer.c	   476    /* #30 Get the value which is needed to check if the requested time span has elapsed (critical). */
; ..\component\Os\Implementation\Os_Timer.c	   477    isLogicalCompareValueReached = Os_TimerHrtIsLogicalCompareValueReached(hrtCounter);                                   /* SBSW_OS_TIMER_TIMERISLOGICALCOMPAREVALUEREACHED */
; ..\component\Os\Implementation\Os_Timer.c	   478  
; ..\component\Os\Implementation\Os_Timer.c	   479    /* #40 Resume interrupts. */
; ..\component\Os\Implementation\Os_Timer.c	   480    Os_IntResume(&interruptState);                                                                                        /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Timer.c	   481  
; ..\component\Os\Implementation\Os_Timer.c	   482    /* #50 If the requested time span has elapsed: */
; ..\component\Os\Implementation\Os_Timer.c	   483    if(isLogicalCompareValueReached != 0u)                                                                                /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY_TX */ /* COMP_WARN_OS_CW_005 */ /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.c	   484    {
; ..\component\Os\Implementation\Os_Timer.c	   485      /* #60 Work of expired jobs. */
; ..\component\Os\Implementation\Os_Timer.c	   486      Os_CounterWorkJobs(&hrtCounter->Counter);                                                                           /* SBSW_OS_TIMER_COUNTERWORKJOBS_001 */
; ..\component\Os\Implementation\Os_Timer.c	   487    /* #70 Otherwise: */
; ..\component\Os\Implementation\Os_Timer.c	   488    }else
; ..\component\Os\Implementation\Os_Timer.c	   489    {
; ..\component\Os\Implementation\Os_Timer.c	   490      /* #80 Update the hardware compare value in accordance to the logical compare value. */
; ..\component\Os\Implementation\Os_Timer.c	   491      Os_TimerHrtSetCompareValue(hrtCounter, hrtCounter->Dyn->Compare);                                                   /* SBSW_OS_TIMER_TIMERHRTSETCOMPAREVALUE */
; ..\component\Os\Implementation\Os_Timer.c	   492    }
; ..\component\Os\Implementation\Os_Timer.c	   493  
; ..\component\Os\Implementation\Os_Timer.c	   494  
; ..\component\Os\Implementation\Os_Timer.c	   495  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.c	   496  
; ..\component\Os\Implementation\Os_Timer.c	   497  
; ..\component\Os\Implementation\Os_Timer.c	   498  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   499   *  ISR(Os_TimerPfrtIsr)
; ..\component\Os\Implementation\Os_Timer.c	   500   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.c	   501  /*!
; ..\component\Os\Implementation\Os_Timer.c	   502   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.c	   503   *
; ..\component\Os\Implementation\Os_Timer.c	   504   *
; ..\component\Os\Implementation\Os_Timer.c	   505   *
; ..\component\Os\Implementation\Os_Timer.c	   506   *
; ..\component\Os\Implementation\Os_Timer.c	   507   */
; ..\component\Os\Implementation\Os_Timer.c	   508  ISR(Os_TimerPfrtIsr)                                                                                                    /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; Function Os_Isr_Os_TimerPfrtIsr
.L34:
Os_Isr_Os_TimerPfrtIsr:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L204:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L162:

; ..\component\Os\Implementation\Os_Timer.c	   509  {
; ..\component\Os\Implementation\Os_Timer.c	   510    P2CONST(Os_TimerIsrConfigType, AUTOMATIC, OS_CONST) me;
; ..\component\Os\Implementation\Os_Timer.c	   511    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) pfrtTimer;
; ..\component\Os\Implementation\Os_Timer.c	   512  
; ..\component\Os\Implementation\Os_Timer.c	   513    if(Os_CounterHasPfrtCounter() == 0u)                                                                                  /* COV_OS_INVSTATE */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.c	   514    {
; ..\component\Os\Implementation\Os_Timer.c	   515      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Timer.c	   516    }
; ..\component\Os\Implementation\Os_Timer.c	   517  
; ..\component\Os\Implementation\Os_Timer.c	   518    me = Os_TimerThread2CounterIsr(Os_CoreGetThread());                                                                   /* SBSW_OS_TIMER_TIMERTHREAD2COUNTERISR_001 */
; ..\component\Os\Implementation\Os_Timer.c	   519  
; ..\component\Os\Implementation\Os_Timer.c	   520    if(me->Counter->DriverType != OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER)                                               /* COV_OS_INVSTATE */
	ld.a	a15,[a15]68
.L159:
	ld.bu	d0,[a15]32
.L281:
	mov	d15,#20
.L205:
	jeq	d15,d0,.L12
.L282:

; ..\component\Os\Implementation\Os_Timer.c	   521    {
; ..\component\Os\Implementation\Os_Timer.c	   522      Os_ErrKernelPanic();
	j	Os_ErrKernelPanic
.L12:

; ..\component\Os\Implementation\Os_Timer.c	   523    }
; ..\component\Os\Implementation\Os_Timer.c	   524  
; ..\component\Os\Implementation\Os_Timer.c	   525    pfrtTimer = (P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST)) me->Counter;                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Timer.c	   526  
; ..\component\Os\Implementation\Os_Timer.c	   527    /* #10 Acknowledge the timer hardware, so that new timer interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Timer.c	   528    Os_Hal_TimerFrtAcknowledge(pfrtTimer->HwConfig);                                                                      /* SBSW_OS_TIMER_HAL_TIMERFRTACKANDRELOAD_001 */
; ..\component\Os\Implementation\Os_Timer.c	   529  
; ..\component\Os\Implementation\Os_Timer.c	   530    /* #20 Work of expired jobs. */
; ..\component\Os\Implementation\Os_Timer.c	   531    Os_TimerSwIncrement(&(pfrtTimer->SwCounter));                                                                         /* SBSW_OS_TIMER_TIMERSWINCREMENT_001 */
	mov.aa	a4,a15
	call	Os_TimerSwIncrement
.L169:
	ld.a	a2,[a15]48
.L171:
	ld.w	d0,[a15]60
.L283:
	ld.w	d2,[a15]52
.L284:
	ld.w	d1,[a2]8
.L173:

; ..\component\Os\Implementation\Os_Timer.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Timer.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Timer.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Timer.h	     6   *
; ..\component\Os\Implementation\Os_Timer.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Timer.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Timer.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Timer.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Timer.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Timer.h	    14  /**
; ..\component\Os\Implementation\Os_Timer.h	    15   * \addtogroup Os_Timer
; ..\component\Os\Implementation\Os_Timer.h	    16   *
; ..\component\Os\Implementation\Os_Timer.h	    17   * \{
; ..\component\Os\Implementation\Os_Timer.h	    18   *
; ..\component\Os\Implementation\Os_Timer.h	    19   * \file
; ..\component\Os\Implementation\Os_Timer.h	    20   * \brief       Interface implementation to high level timer hardware handling.
; ..\component\Os\Implementation\Os_Timer.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Timer.h	    22   *
; ..\component\Os\Implementation\Os_Timer.h	    23   *
; ..\component\Os\Implementation\Os_Timer.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Timer.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Timer.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Timer.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    30  
; ..\component\Os\Implementation\Os_Timer.h	    31  #ifndef OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    32  # define OS_TIMER_H
; ..\component\Os\Implementation\Os_Timer.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Timer.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Timer.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Timer.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Timer.h	    39  
; ..\component\Os\Implementation\Os_Timer.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Timer.h	    41  # include "Os_TimerInt.h"
; ..\component\Os\Implementation\Os_Timer.h	    42  
; ..\component\Os\Implementation\Os_Timer.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Timer.h	    45  # include "Os_Counter.h"
; ..\component\Os\Implementation\Os_Timer.h	    46  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Timer.h	    47  
; ..\component\Os\Implementation\Os_Timer.h	    48  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Timer.h	    49  # include "Os_Hal_Timer.h"
; ..\component\Os\Implementation\Os_Timer.h	    50  
; ..\component\Os\Implementation\Os_Timer.h	    51  
; ..\component\Os\Implementation\Os_Timer.h	    52  
; ..\component\Os\Implementation\Os_Timer.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Timer.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    56  
; ..\component\Os\Implementation\Os_Timer.h	    57  
; ..\component\Os\Implementation\Os_Timer.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Timer.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    61  
; ..\component\Os\Implementation\Os_Timer.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Timer.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    65  
; ..\component\Os\Implementation\Os_Timer.h	    66  
; ..\component\Os\Implementation\Os_Timer.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    70  
; ..\component\Os\Implementation\Os_Timer.h	    71  
; ..\component\Os\Implementation\Os_Timer.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Timer.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    75  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Timer.h	    76  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Timer.h	    77  
; ..\component\Os\Implementation\Os_Timer.h	    78  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Timer.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	    82   *  Os_TimerSwInit()
; ..\component\Os\Implementation\Os_Timer.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	    85  Os_TimerSwInit,
; ..\component\Os\Implementation\Os_Timer.h	    86  (
; ..\component\Os\Implementation\Os_Timer.h	    87    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	    88  ))
; ..\component\Os\Implementation\Os_Timer.h	    89  {
; ..\component\Os\Implementation\Os_Timer.h	    90    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    91    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	    92  
; ..\component\Os\Implementation\Os_Timer.h	    93    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	    94    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    95            == OS_TIMERSW_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    96  
; ..\component\Os\Implementation\Os_Timer.h	    97    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	    98            == OS_TIMERSW_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	    99  }
; ..\component\Os\Implementation\Os_Timer.h	   100  
; ..\component\Os\Implementation\Os_Timer.h	   101  
; ..\component\Os\Implementation\Os_Timer.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   103   *  Os_TimerPitInit()
; ..\component\Os\Implementation\Os_Timer.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   106  Os_TimerPitInit,
; ..\component\Os\Implementation\Os_Timer.h	   107  (
; ..\component\Os\Implementation\Os_Timer.h	   108    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   109  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   110  {
; ..\component\Os\Implementation\Os_Timer.h	   111    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   112  
; ..\component\Os\Implementation\Os_Timer.h	   113    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   114    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxCountingValue                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   115        == OS_TIMERPIT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));      /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   116  
; ..\component\Os\Implementation\Os_Timer.h	   117    Os_Assert((Os_StdReturnType)( Timer->SwCounter.Counter.Characteristics.MaxDifferentialValue                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   118        == OS_TIMERPIT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->SwCounter.Counter.Characteristics.MaxAllowedValue)));  /* PRQA S 2995 */ /* MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Timer.h	   119  
; ..\component\Os\Implementation\Os_Timer.h	   120  }
; ..\component\Os\Implementation\Os_Timer.h	   121  
; ..\component\Os\Implementation\Os_Timer.h	   122  
; ..\component\Os\Implementation\Os_Timer.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   124   *  Os_TimerHrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   127  Os_TimerHrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   128  (
; ..\component\Os\Implementation\Os_Timer.h	   129    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   130  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   131  {
; ..\component\Os\Implementation\Os_Timer.h	   132    Timer->Dyn->Value = 0;                                                                                                /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   133    Timer->Dyn->Compare = 0;                                                                                              /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   134    Timer->Dyn->ValueMask = 0;                                                                                            /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   135    Timer->Dyn->HwLastCounterValue = 0;                                                                                   /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   136    Timer->Dyn->HwTimeAtLogicalZero = 0;                                                                                  /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   137  
; ..\component\Os\Implementation\Os_Timer.h	   138    /* Check that macro and configuration are consistent. */
; ..\component\Os\Implementation\Os_Timer.h	   139    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxCountingValue                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   140            == OS_TIMERHRT_GETMAXCOUNTINGVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   141  
; ..\component\Os\Implementation\Os_Timer.h	   142    Os_Assert((Os_StdReturnType)( Timer->Counter.Characteristics.MaxDifferentialValue                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   143            == OS_TIMERHRT_GETMAXDIFFERENTIALVALUE((Os_TickType)Timer->Counter.Characteristics.MaxAllowedValue)));
; ..\component\Os\Implementation\Os_Timer.h	   144  }
; ..\component\Os\Implementation\Os_Timer.h	   145  
; ..\component\Os\Implementation\Os_Timer.h	   146  
; ..\component\Os\Implementation\Os_Timer.h	   147  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   148   *  Os_TimerPfrtInit()
; ..\component\Os\Implementation\Os_Timer.h	   149   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   150  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   151  Os_TimerPfrtInit,
; ..\component\Os\Implementation\Os_Timer.h	   152  (
; ..\component\Os\Implementation\Os_Timer.h	   153    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   154  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   155  {
; ..\component\Os\Implementation\Os_Timer.h	   156    Os_TimerSwInit(&(Timer->SwCounter));                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   157  }
; ..\component\Os\Implementation\Os_Timer.h	   158  
; ..\component\Os\Implementation\Os_Timer.h	   159  
; ..\component\Os\Implementation\Os_Timer.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   161   *  Os_TimerSwStart()
; ..\component\Os\Implementation\Os_Timer.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   164  Os_TimerSwStart,
; ..\component\Os\Implementation\Os_Timer.h	   165  (
; ..\component\Os\Implementation\Os_Timer.h	   166    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   167  ))
; ..\component\Os\Implementation\Os_Timer.h	   168  {
; ..\component\Os\Implementation\Os_Timer.h	   169    /* Nothing to be done for software counter, as there is no underlying hardware. */
; ..\component\Os\Implementation\Os_Timer.h	   170    OS_IGNORE_UNREF_PARAM(Timer);                                                                                         /* PRQA S 3112 */ /* MD_Os_3112 */
; ..\component\Os\Implementation\Os_Timer.h	   171  }
; ..\component\Os\Implementation\Os_Timer.h	   172  
; ..\component\Os\Implementation\Os_Timer.h	   173  
; ..\component\Os\Implementation\Os_Timer.h	   174  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   175   *  Os_TimerPitStart()
; ..\component\Os\Implementation\Os_Timer.h	   176   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   177  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   178  Os_TimerPitStart,
; ..\component\Os\Implementation\Os_Timer.h	   179  (
; ..\component\Os\Implementation\Os_Timer.h	   180    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   181  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   182  {
; ..\component\Os\Implementation\Os_Timer.h	   183    Os_Hal_TimerPitInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERPITINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   184  }
; ..\component\Os\Implementation\Os_Timer.h	   185  
; ..\component\Os\Implementation\Os_Timer.h	   186  
; ..\component\Os\Implementation\Os_Timer.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   188   *  Os_TimerHrtStart()
; ..\component\Os\Implementation\Os_Timer.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   190  /*!
; ..\component\Os\Implementation\Os_Timer.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   192   *
; ..\component\Os\Implementation\Os_Timer.h	   193   *
; ..\component\Os\Implementation\Os_Timer.h	   194   *
; ..\component\Os\Implementation\Os_Timer.h	   195   */
; ..\component\Os\Implementation\Os_Timer.h	   196  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   197  Os_TimerHrtStart,
; ..\component\Os\Implementation\Os_Timer.h	   198  (
; ..\component\Os\Implementation\Os_Timer.h	   199    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   200  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   201  {
; ..\component\Os\Implementation\Os_Timer.h	   202    Os_TickType timeZero;
; ..\component\Os\Implementation\Os_Timer.h	   203  
; ..\component\Os\Implementation\Os_Timer.h	   204    /* #10 Initialize (start) the FRT timer. */
; ..\component\Os\Implementation\Os_Timer.h	   205    Os_Hal_TimerFrtInit(Timer->HwConfig);                                                                                 /* SBSW_OS_TIMER_HAL_TIMERFRTINIT_001 */
; ..\component\Os\Implementation\Os_Timer.h	   206  
; ..\component\Os\Implementation\Os_Timer.h	   207    timeZero = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));                             /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   208    Timer->Dyn->HwTimeAtLogicalZero = timeZero;                                                                           /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   209  
; ..\component\Os\Implementation\Os_Timer.h	   210    /* #20 Correct the timer data (to support the case of FRT start by reset). */
; ..\component\Os\Implementation\Os_Timer.h	   211    Timer->Dyn->ValueMask = Timer->Counter.Characteristics.MaxCountingValue; /* Allow the timer value to increase. */     /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   212    Timer->Dyn->HwLastCounterValue = timeZero;                               /* Store the last hardware counter value. */ /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   213    Os_TimerHrtSetCompareValue(Timer, Timer->Dyn->Compare);                  /* Set the initial compare value. */         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   214  }
; ..\component\Os\Implementation\Os_Timer.h	   215  
; ..\component\Os\Implementation\Os_Timer.h	   216  
; ..\component\Os\Implementation\Os_Timer.h	   217  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   218   *  Os_TimerSwGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   219   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   220  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   221  Os_TimerSwGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   222  (
; ..\component\Os\Implementation\Os_Timer.h	   223    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   224  ))
; ..\component\Os\Implementation\Os_Timer.h	   225  {
; ..\component\Os\Implementation\Os_Timer.h	   226    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   227  }
; ..\component\Os\Implementation\Os_Timer.h	   228  
; ..\component\Os\Implementation\Os_Timer.h	   229  
; ..\component\Os\Implementation\Os_Timer.h	   230  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   231   *  Os_TimerSwSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   232   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   233  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   234  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerSwSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   235  (
; ..\component\Os\Implementation\Os_Timer.h	   236    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   237    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   238  ))
; ..\component\Os\Implementation\Os_Timer.h	   239  {
; ..\component\Os\Implementation\Os_Timer.h	   240    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   241  }
; ..\component\Os\Implementation\Os_Timer.h	   242  
; ..\component\Os\Implementation\Os_Timer.h	   243  
; ..\component\Os\Implementation\Os_Timer.h	   244  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   245   *  Os_TimerSwUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   246   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   247  /*!
; ..\component\Os\Implementation\Os_Timer.h	   248   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   249   *
; ..\component\Os\Implementation\Os_Timer.h	   250   *
; ..\component\Os\Implementation\Os_Timer.h	   251   */
; ..\component\Os\Implementation\Os_Timer.h	   252  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   253  Os_TimerSwUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   254  (
; ..\component\Os\Implementation\Os_Timer.h	   255    P2CONST(Os_TimerSwConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   256    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   257  ))
; ..\component\Os\Implementation\Os_Timer.h	   258  {
; ..\component\Os\Implementation\Os_Timer.h	   259    Os_TickType result = Value;
; ..\component\Os\Implementation\Os_Timer.h	   260  
; ..\component\Os\Implementation\Os_Timer.h	   261    /* #10 Subtract one user cycle if Value exceeds the MaxAllowedValue. */
; ..\component\Os\Implementation\Os_Timer.h	   262    if(Value > Timer->Counter.Characteristics.MaxAllowedValue)
; ..\component\Os\Implementation\Os_Timer.h	   263    {
; ..\component\Os\Implementation\Os_Timer.h	   264      result -= (Timer->Counter.Characteristics.MaxAllowedValue + (Os_TickType)1);
; ..\component\Os\Implementation\Os_Timer.h	   265    }
; ..\component\Os\Implementation\Os_Timer.h	   266  
; ..\component\Os\Implementation\Os_Timer.h	   267    /* Check that the calculated value is in a valid range (0 <= Value <= MaxAllowedValue). */
; ..\component\Os\Implementation\Os_Timer.h	   268    Os_Assert((Os_StdReturnType)(result <= Timer->Counter.Characteristics.MaxAllowedValue));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Timer.h	   269  
; ..\component\Os\Implementation\Os_Timer.h	   270    return result;
; ..\component\Os\Implementation\Os_Timer.h	   271  }
; ..\component\Os\Implementation\Os_Timer.h	   272  
; ..\component\Os\Implementation\Os_Timer.h	   273  
; ..\component\Os\Implementation\Os_Timer.h	   274  
; ..\component\Os\Implementation\Os_Timer.h	   275  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   276   *  Os_TimerPitGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   277   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   278  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   279  Os_TimerPitGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   280  (
; ..\component\Os\Implementation\Os_Timer.h	   281    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   282  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   283  {
; ..\component\Os\Implementation\Os_Timer.h	   284    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   285  }
; ..\component\Os\Implementation\Os_Timer.h	   286  
; ..\component\Os\Implementation\Os_Timer.h	   287  
; ..\component\Os\Implementation\Os_Timer.h	   288  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   289   *  Os_TimerPitSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   290   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   291  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   292  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerPitSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   293  (
; ..\component\Os\Implementation\Os_Timer.h	   294    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   295    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   296  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   297  {
; ..\component\Os\Implementation\Os_Timer.h	   298    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   299  }
; ..\component\Os\Implementation\Os_Timer.h	   300  
; ..\component\Os\Implementation\Os_Timer.h	   301  
; ..\component\Os\Implementation\Os_Timer.h	   302  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   303   *  Os_TimerPitUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   304   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   305  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   306  Os_TimerPitUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   307  (
; ..\component\Os\Implementation\Os_Timer.h	   308    P2CONST(Os_TimerPitConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   309    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   310  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   311  {
; ..\component\Os\Implementation\Os_Timer.h	   312    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   313  }
; ..\component\Os\Implementation\Os_Timer.h	   314  
; ..\component\Os\Implementation\Os_Timer.h	   315  
; ..\component\Os\Implementation\Os_Timer.h	   316  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   317   *  Os_TimerPfrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   318   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   319  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   320  Os_TimerPfrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   321  (
; ..\component\Os\Implementation\Os_Timer.h	   322    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   323    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   324  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   325  {
; ..\component\Os\Implementation\Os_Timer.h	   326    return Os_TimerSwUserModulo(&(Timer->SwCounter), Value);                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   327  }
; ..\component\Os\Implementation\Os_Timer.h	   328  
; ..\component\Os\Implementation\Os_Timer.h	   329  
; ..\component\Os\Implementation\Os_Timer.h	   330  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   331   *  Os_TimerHrtGetCounter()
; ..\component\Os\Implementation\Os_Timer.h	   332   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   333  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   334  P2CONST(Os_CounterConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtGetCounter,
; ..\component\Os\Implementation\Os_Timer.h	   335  (
; ..\component\Os\Implementation\Os_Timer.h	   336    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   337  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   338  {
; ..\component\Os\Implementation\Os_Timer.h	   339    return &(Timer->Counter);
; ..\component\Os\Implementation\Os_Timer.h	   340  }
; ..\component\Os\Implementation\Os_Timer.h	   341  
; ..\component\Os\Implementation\Os_Timer.h	   342  
; ..\component\Os\Implementation\Os_Timer.h	   343  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   344   *  Os_TimerHrtComputeHardwareCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   345   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   346  /*!
; ..\component\Os\Implementation\Os_Timer.h	   347   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   348   *
; ..\component\Os\Implementation\Os_Timer.h	   349   *
; ..\component\Os\Implementation\Os_Timer.h	   350   *
; ..\component\Os\Implementation\Os_Timer.h	   351   *
; ..\component\Os\Implementation\Os_Timer.h	   352   *
; ..\component\Os\Implementation\Os_Timer.h	   353   *
; ..\component\Os\Implementation\Os_Timer.h	   354   *
; ..\component\Os\Implementation\Os_Timer.h	   355   *
; ..\component\Os\Implementation\Os_Timer.h	   356   */
; ..\component\Os\Implementation\Os_Timer.h	   357  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   358  OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtComputeHardwareCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   359  (
; ..\component\Os\Implementation\Os_Timer.h	   360    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   361    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   362  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   363  {
; ..\component\Os\Implementation\Os_Timer.h	   364    /* #10 Initialize the return value with the requested expiration time.*/
; ..\component\Os\Implementation\Os_Timer.h	   365    Os_TickType hwCompareValue = ExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   366  
; ..\component\Os\Implementation\Os_Timer.h	   367    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   368    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   369    {
; ..\component\Os\Implementation\Os_Timer.h	   370      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   371  
; ..\component\Os\Implementation\Os_Timer.h	   372      /* #30 If the expiration time is a future value: */
; ..\component\Os\Implementation\Os_Timer.h	   373      if(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) != 0u)                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   374      {
; ..\component\Os\Implementation\Os_Timer.h	   375        /* #40 Calculate the difference in ticks. */
; ..\component\Os\Implementation\Os_Timer.h	   376        Os_TickType diff = ExpirationTime - now;
; ..\component\Os\Implementation\Os_Timer.h	   377  
; ..\component\Os\Implementation\Os_Timer.h	   378        /* #50 If the difference is larger than a half hardware timer cycle: */
; ..\component\Os\Implementation\Os_Timer.h	   379        if(diff > ((Os_TickType)OS_FRT_TICKTYPE_HALF))                                                                    /* COMP_WARN_OS_CW_005 */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   380        {
; ..\component\Os\Implementation\Os_Timer.h	   381          /* #60 Set the return value to the current time added by a half hardware timer cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   382          hwCompareValue = now + ((Os_TickType)OS_FRT_TICKTYPE_HALF);                                                     /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Timer.h	   383        }
; ..\component\Os\Implementation\Os_Timer.h	   384      }
; ..\component\Os\Implementation\Os_Timer.h	   385    }
; ..\component\Os\Implementation\Os_Timer.h	   386  
; ..\component\Os\Implementation\Os_Timer.h	   387    /* #70 Return the hardware compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   388    return hwCompareValue;
; ..\component\Os\Implementation\Os_Timer.h	   389  }
; ..\component\Os\Implementation\Os_Timer.h	   390  
; ..\component\Os\Implementation\Os_Timer.h	   391  
; ..\component\Os\Implementation\Os_Timer.h	   392  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   393   *  Os_TimerHrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   394   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   395  /*!
; ..\component\Os\Implementation\Os_Timer.h	   396   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   397   *
; ..\component\Os\Implementation\Os_Timer.h	   398   *
; ..\component\Os\Implementation\Os_Timer.h	   399   *
; ..\component\Os\Implementation\Os_Timer.h	   400   *
; ..\component\Os\Implementation\Os_Timer.h	   401   *
; ..\component\Os\Implementation\Os_Timer.h	   402   *
; ..\component\Os\Implementation\Os_Timer.h	   403   *
; ..\component\Os\Implementation\Os_Timer.h	   404   *
; ..\component\Os\Implementation\Os_Timer.h	   405   *
; ..\component\Os\Implementation\Os_Timer.h	   406   *
; ..\component\Os\Implementation\Os_Timer.h	   407   *
; ..\component\Os\Implementation\Os_Timer.h	   408   *
; ..\component\Os\Implementation\Os_Timer.h	   409   *
; ..\component\Os\Implementation\Os_Timer.h	   410   *
; ..\component\Os\Implementation\Os_Timer.h	   411   *
; ..\component\Os\Implementation\Os_Timer.h	   412   */
; ..\component\Os\Implementation\Os_Timer.h	   413  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   414  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_TimerHrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   415  (
; ..\component\Os\Implementation\Os_Timer.h	   416    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   417    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   418  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   419  {
; ..\component\Os\Implementation\Os_Timer.h	   420    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   421    Os_TickType correctedExpirationTime;
; ..\component\Os\Implementation\Os_Timer.h	   422  
; ..\component\Os\Implementation\Os_Timer.h	   423    /* #10 Store the ExpirationTime for the case that the compare difference does not fit into the hardware part
; ..\component\Os\Implementation\Os_Timer.h	   424     *     of the counter. */
; ..\component\Os\Implementation\Os_Timer.h	   425    Timer->Dyn->Compare = ExpirationTime;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   426  
; ..\component\Os\Implementation\Os_Timer.h	   427    /* #13 Get the compare value that needs to be written to the hardware register. */
; ..\component\Os\Implementation\Os_Timer.h	   428    correctedExpirationTime = Os_TimerHrtComputeHardwareCompareValue(Timer, ExpirationTime);                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   429  
; ..\component\Os\Implementation\Os_Timer.h	   430    /* #15 Calculate the corrected expiration time in accordance to the hardware time at logical zero. */
; ..\component\Os\Implementation\Os_Timer.h	   431    correctedExpirationTime = Timer->Dyn->HwTimeAtLogicalZero + correctedExpirationTime;                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   432  
; ..\component\Os\Implementation\Os_Timer.h	   433    /* #20 Set the compare value. */
; ..\component\Os\Implementation\Os_Timer.h	   434    Os_TimerFrtSetCompareValue(Timer->HwConfig, correctedExpirationTime);                                                 /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   435  
; ..\component\Os\Implementation\Os_Timer.h	   436    /* #30 Check whether the ExpirationTime is already reached. */
; ..\component\Os\Implementation\Os_Timer.h	   437    now = Os_TimerHrtGetValue(Timer);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   438  
; ..\component\Os\Implementation\Os_Timer.h	   439    /* #40 If new compare value is already in the past or now: */
; ..\component\Os\Implementation\Os_Timer.h	   440    if(OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), ExpirationTime, now) == 0u))                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   441    {
; ..\component\Os\Implementation\Os_Timer.h	   442      /* #50 If the platform supports peripheral interrupt trigger: */
; ..\component\Os\Implementation\Os_Timer.h	   443      if (Os_Hal_IntIsPeripheralInterruptTriggerSupported() != 0u)                                                        /* COV_OS_HALPLATFORMPERIPHERALINTTRIGGERSUPPORTED */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   444      {
; ..\component\Os\Implementation\Os_Timer.h	   445        /* #60 Trigger interrupt, so the violation is handled after the thread switch is completed. */
; ..\component\Os\Implementation\Os_Timer.h	   446        Os_Hal_TimerFrtTriggerIrq(Timer->HwConfig);                                                                       /* SBSW_OS_TIMER_HAL_TIMERFRTTRIGGERIRQ_001 */
; ..\component\Os\Implementation\Os_Timer.h	   447      }
; ..\component\Os\Implementation\Os_Timer.h	   448      else
; ..\component\Os\Implementation\Os_Timer.h	   449      {
; ..\component\Os\Implementation\Os_Timer.h	   450        Os_TickType iterationId;
; ..\component\Os\Implementation\Os_Timer.h	   451        Os_TickType delta;
; ..\component\Os\Implementation\Os_Timer.h	   452        Os_TickType compareValue;
; ..\component\Os\Implementation\Os_Timer.h	   453        Os_TickType timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   454        Os_TickType timeAfterSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   455        delta = 0;
; ..\component\Os\Implementation\Os_Timer.h	   456        iterationId = 1;
; ..\component\Os\Implementation\Os_Timer.h	   457        do
; ..\component\Os\Implementation\Os_Timer.h	   458        {
; ..\component\Os\Implementation\Os_Timer.h	   459          /* #70 Else read the current counter value from hardware timer. */
; ..\component\Os\Implementation\Os_Timer.h	   460          timeBeforeSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));           /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   461  
; ..\component\Os\Implementation\Os_Timer.h	   462          /* #80 Set the compare value to the previously read counter value plus delay. */
; ..\component\Os\Implementation\Os_Timer.h	   463          compareValue = timeBeforeSetCompare + delta + iterationId;                                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   464          Os_TimerFrtSetCompareValue(Timer->HwConfig, compareValue);                                                      /* SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   465  
; ..\component\Os\Implementation\Os_Timer.h	   466          /* #90 Read again the current hardware counter value and update the delay, taking into
; ..\component\Os\Implementation\Os_Timer.h	   467                 account the counter values difference and the loop iteration count. */
; ..\component\Os\Implementation\Os_Timer.h	   468          timeAfterSetCompare = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig));            /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   469          delta = timeAfterSetCompare - timeBeforeSetCompare;
; ..\component\Os\Implementation\Os_Timer.h	   470          iterationId++;
; ..\component\Os\Implementation\Os_Timer.h	   471  
; ..\component\Os\Implementation\Os_Timer.h	   472        /* #100 Loop while compare value is in the past or now with respect to the last read counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   473        }while (OS_UNLIKELY(Os_CounterIsFutureValue(&(Timer->Counter), compareValue, timeAfterSetCompare) == 0u));        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   474  
; ..\component\Os\Implementation\Os_Timer.h	   475      }
; ..\component\Os\Implementation\Os_Timer.h	   476    }
; ..\component\Os\Implementation\Os_Timer.h	   477  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Timer.h	   478  
; ..\component\Os\Implementation\Os_Timer.h	   479  
; ..\component\Os\Implementation\Os_Timer.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   481   *  Os_TimerPfrtSetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   483  /*!
; ..\component\Os\Implementation\Os_Timer.h	   484   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   485   *
; ..\component\Os\Implementation\Os_Timer.h	   486   *
; ..\component\Os\Implementation\Os_Timer.h	   487   */
; ..\component\Os\Implementation\Os_Timer.h	   488  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   489  Os_TimerPfrtSetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   490  (
; ..\component\Os\Implementation\Os_Timer.h	   491    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   492    Os_TickType ExpirationTime
; ..\component\Os\Implementation\Os_Timer.h	   493  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   494  {
; ..\component\Os\Implementation\Os_Timer.h	   495    /* #10 Use function of software timer. */
; ..\component\Os\Implementation\Os_Timer.h	   496    Os_TimerSwSetCompareValue(&(Timer->SwCounter), ExpirationTime);                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   497  }
; ..\component\Os\Implementation\Os_Timer.h	   498  
; ..\component\Os\Implementation\Os_Timer.h	   499  
; ..\component\Os\Implementation\Os_Timer.h	   500  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   501   *  Os_TimerHrtGetCompareValue()
; ..\component\Os\Implementation\Os_Timer.h	   502   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   503  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   504  Os_TimerHrtGetCompareValue,
; ..\component\Os\Implementation\Os_Timer.h	   505  (
; ..\component\Os\Implementation\Os_Timer.h	   506    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   507  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */ /* COV_OS_HALPLATFORMTPUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   508  {
; ..\component\Os\Implementation\Os_Timer.h	   509    return Timer->Dyn->Compare;
; ..\component\Os\Implementation\Os_Timer.h	   510  }
; ..\component\Os\Implementation\Os_Timer.h	   511  
; ..\component\Os\Implementation\Os_Timer.h	   512  
; ..\component\Os\Implementation\Os_Timer.h	   513  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   514   *  Os_TimerHrtAcknowledge()
; ..\component\Os\Implementation\Os_Timer.h	   515   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   516  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   517  Os_TimerHrtAcknowledge,
; ..\component\Os\Implementation\Os_Timer.h	   518  (
; ..\component\Os\Implementation\Os_Timer.h	   519    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   520  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   521  {
; ..\component\Os\Implementation\Os_Timer.h	   522    Os_Hal_TimerFrtAcknowledge(Timer->HwConfig);                                                                          /* SBSW_OS_TIMER_HAL_TIMERFRTACKNOWLEDGE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   523  }
; ..\component\Os\Implementation\Os_Timer.h	   524  
; ..\component\Os\Implementation\Os_Timer.h	   525  
; ..\component\Os\Implementation\Os_Timer.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   527   *  Os_TimerHrtIsLogicalCompareValueReached()
; ..\component\Os\Implementation\Os_Timer.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   529  /*!
; ..\component\Os\Implementation\Os_Timer.h	   530   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   531   *
; ..\component\Os\Implementation\Os_Timer.h	   532   *
; ..\component\Os\Implementation\Os_Timer.h	   533   *
; ..\component\Os\Implementation\Os_Timer.h	   534   *
; ..\component\Os\Implementation\Os_Timer.h	   535   *
; ..\component\Os\Implementation\Os_Timer.h	   536   *
; ..\component\Os\Implementation\Os_Timer.h	   537   *
; ..\component\Os\Implementation\Os_Timer.h	   538   */
; ..\component\Os\Implementation\Os_Timer.h	   539  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   540  Os_TimerHrtIsLogicalCompareValueReached,
; ..\component\Os\Implementation\Os_Timer.h	   541  (
; ..\component\Os\Implementation\Os_Timer.h	   542    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   543  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   544  {
; ..\component\Os\Implementation\Os_Timer.h	   545    /* #10 Initialize the result to FALSE. */
; ..\component\Os\Implementation\Os_Timer.h	   546    Os_StdReturnType result = 0u;                                                                                         /* PRQA S 2981 */ /* MD_Os_Rule2.2_2981 */
; ..\component\Os\Implementation\Os_Timer.h	   547  
; ..\component\Os\Implementation\Os_Timer.h	   548    /* #20 If the size of the physical counter value type is smaller then the OS TickType: */
; ..\component\Os\Implementation\Os_Timer.h	   549    if(Os_TimerIsFrtShortCorrectionNeeded() != 0u)                                                                        /* COV_OS_HALPLATFORMFRT16BITAVAILABILITY */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Timer.h	   550    {
; ..\component\Os\Implementation\Os_Timer.h	   551      Os_TickType now = Os_TimerHrtGetValue(Timer);                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   552  
; ..\component\Os\Implementation\Os_Timer.h	   553      /* #30 If the current time is after or equal to the logical compare value: */
; ..\component\Os\Implementation\Os_Timer.h	   554      if(Os_CounterIsFutureValue(&(Timer->Counter), Timer->Dyn->Compare, now) == 0u)                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   555      {
; ..\component\Os\Implementation\Os_Timer.h	   556        /* #40 The result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   557        result = !0u;                                                                                                     /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   558      }
; ..\component\Os\Implementation\Os_Timer.h	   559    }
; ..\component\Os\Implementation\Os_Timer.h	   560    /* #50 Otherwise: */
; ..\component\Os\Implementation\Os_Timer.h	   561    else
; ..\component\Os\Implementation\Os_Timer.h	   562    {
; ..\component\Os\Implementation\Os_Timer.h	   563      /* #60 The hardware compare value is equal to the OS internal compare value, so the result is TRUE. */
; ..\component\Os\Implementation\Os_Timer.h	   564      result = !0u;                                                                                                       /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Timer.h	   565    }
; ..\component\Os\Implementation\Os_Timer.h	   566  
; ..\component\Os\Implementation\Os_Timer.h	   567    return result;
; ..\component\Os\Implementation\Os_Timer.h	   568  }
; ..\component\Os\Implementation\Os_Timer.h	   569  
; ..\component\Os\Implementation\Os_Timer.h	   570  
; ..\component\Os\Implementation\Os_Timer.h	   571  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   572   *  Os_TimerHrtUserModulo()
; ..\component\Os\Implementation\Os_Timer.h	   573   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   574  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   575  Os_TimerHrtUserModulo,
; ..\component\Os\Implementation\Os_Timer.h	   576  (
; ..\component\Os\Implementation\Os_Timer.h	   577    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer,
; ..\component\Os\Implementation\Os_Timer.h	   578    Os_TickType Value
; ..\component\Os\Implementation\Os_Timer.h	   579  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   580  {
; ..\component\Os\Implementation\Os_Timer.h	   581    return (Value & Timer->Counter.Characteristics.MaxAllowedValue);
; ..\component\Os\Implementation\Os_Timer.h	   582  }
; ..\component\Os\Implementation\Os_Timer.h	   583  
; ..\component\Os\Implementation\Os_Timer.h	   584  
; ..\component\Os\Implementation\Os_Timer.h	   585  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   586   *  Os_TimerHrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   587   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   588  /*!
; ..\component\Os\Implementation\Os_Timer.h	   589   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   590   *
; ..\component\Os\Implementation\Os_Timer.h	   591   *
; ..\component\Os\Implementation\Os_Timer.h	   592   *
; ..\component\Os\Implementation\Os_Timer.h	   593   *
; ..\component\Os\Implementation\Os_Timer.h	   594   */
; ..\component\Os\Implementation\Os_Timer.h	   595  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   596  Os_TimerHrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   597  (
; ..\component\Os\Implementation\Os_Timer.h	   598    P2CONST(Os_TimerHrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   599  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   600  {
; ..\component\Os\Implementation\Os_Timer.h	   601    Os_TickType now;
; ..\component\Os\Implementation\Os_Timer.h	   602    Os_Hal_TimerFrtTickType timePassed;
; ..\component\Os\Implementation\Os_Timer.h	   603  
; ..\component\Os\Implementation\Os_Timer.h	   604    /* #10 Get the current hardware counter value. */
; ..\component\Os\Implementation\Os_Timer.h	   605    now = Os_TimerFrtTickType2TickType(Os_Hal_TimerFrtGetCounterValue(Timer->HwConfig)) & (Timer->Dyn->ValueMask);        /* SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001 */
; ..\component\Os\Implementation\Os_Timer.h	   606  
; ..\component\Os\Implementation\Os_Timer.h	   607    /* #20 Calculate how much time has passed since we have read from the hardware the last time. */
; ..\component\Os\Implementation\Os_Timer.h	   608    timePassed = Os_TimerTickType2FrtTickType(now - Timer->Dyn->HwLastCounterValue);                                      /* PRQA S 2986 */ /* MD_Os_Rule2.2_2986 */
; ..\component\Os\Implementation\Os_Timer.h	   609    Timer->Dyn->HwLastCounterValue = now;                                                                                 /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   610  
; ..\component\Os\Implementation\Os_Timer.h	   611    /* #30 Add this time to the current counter value and return it. */
; ..\component\Os\Implementation\Os_Timer.h	   612    Timer->Dyn->Value += Os_TimerFrtTickType2TickType(timePassed);                                                        /* SBSW_OS_TIMER_TIMERGETDYN_001 */
; ..\component\Os\Implementation\Os_Timer.h	   613  
; ..\component\Os\Implementation\Os_Timer.h	   614    return Timer->Dyn->Value;
; ..\component\Os\Implementation\Os_Timer.h	   615  }
; ..\component\Os\Implementation\Os_Timer.h	   616  
; ..\component\Os\Implementation\Os_Timer.h	   617  
; ..\component\Os\Implementation\Os_Timer.h	   618  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   619   *  Os_TimerPfrtGetValue()
; ..\component\Os\Implementation\Os_Timer.h	   620   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   621  /*!
; ..\component\Os\Implementation\Os_Timer.h	   622   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   623   *
; ..\component\Os\Implementation\Os_Timer.h	   624   *
; ..\component\Os\Implementation\Os_Timer.h	   625   */
; ..\component\Os\Implementation\Os_Timer.h	   626  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   627  Os_TimerPfrtGetValue,
; ..\component\Os\Implementation\Os_Timer.h	   628  (
; ..\component\Os\Implementation\Os_Timer.h	   629    P2CONST(Os_TimerPfrtConfigType, AUTOMATIC, OS_CONST) Timer
; ..\component\Os\Implementation\Os_Timer.h	   630  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   631  {
; ..\component\Os\Implementation\Os_Timer.h	   632    return Os_TimerSwGetValue(&(Timer->SwCounter));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.h	   633  }
; ..\component\Os\Implementation\Os_Timer.h	   634  
; ..\component\Os\Implementation\Os_Timer.h	   635  
; ..\component\Os\Implementation\Os_Timer.h	   636  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   637   *  Os_TimerSwAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   638   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   639  /*!
; ..\component\Os\Implementation\Os_Timer.h	   640   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   641   *
; ..\component\Os\Implementation\Os_Timer.h	   642   *
; ..\component\Os\Implementation\Os_Timer.h	   643   *
; ..\component\Os\Implementation\Os_Timer.h	   644   *
; ..\component\Os\Implementation\Os_Timer.h	   645   *
; ..\component\Os\Implementation\Os_Timer.h	   646   *
; ..\component\Os\Implementation\Os_Timer.h	   647   *
; ..\component\Os\Implementation\Os_Timer.h	   648   */
; ..\component\Os\Implementation\Os_Timer.h	   649  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   650  Os_TimerSwAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   651  (
; ..\component\Os\Implementation\Os_Timer.h	   652    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   653    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   654    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   655  ))
; ..\component\Os\Implementation\Os_Timer.h	   656  {
; ..\component\Os\Implementation\Os_Timer.h	   657    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   658    Os_TickType timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   659    Os_TickType timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   660  
; ..\component\Os\Implementation\Os_Timer.h	   661    timerFirstCycle = CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   662    timerSecondCycle = CounterValue + MaxAllowedValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   663  
; ..\component\Os\Implementation\Os_Timer.h	   664    /* #10 If CounterValue is bigger than Now (implies that Now is in the first cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   665    if(CounterValue > Now)
; ..\component\Os\Implementation\Os_Timer.h	   666    {
; ..\component\Os\Implementation\Os_Timer.h	   667      /* #20 Set return value to CounterValue, the expiration time will be reached within the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   668      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   669    }
; ..\component\Os\Implementation\Os_Timer.h	   670    /* #30 Else if CounterValue+MaxallowedValue+1 is bigger than Now (Now may be in first or second cycle). */
; ..\component\Os\Implementation\Os_Timer.h	   671    else if(timerSecondCycle > Now)
; ..\component\Os\Implementation\Os_Timer.h	   672    {
; ..\component\Os\Implementation\Os_Timer.h	   673      /*#40 Set return value to CounterValue+MaxallowedValue+1, the expiration time will be reached in the second cycle.*/
; ..\component\Os\Implementation\Os_Timer.h	   674      timerValue = timerSecondCycle;
; ..\component\Os\Implementation\Os_Timer.h	   675    }
; ..\component\Os\Implementation\Os_Timer.h	   676    /* #50 Else (Now is in the second cycle) */
; ..\component\Os\Implementation\Os_Timer.h	   677    else
; ..\component\Os\Implementation\Os_Timer.h	   678    {
; ..\component\Os\Implementation\Os_Timer.h	   679      /* #60 Set return value to CounterValue, the expiration time will be reached in the first cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   680      timerValue = timerFirstCycle;
; ..\component\Os\Implementation\Os_Timer.h	   681    }
; ..\component\Os\Implementation\Os_Timer.h	   682  
; ..\component\Os\Implementation\Os_Timer.h	   683    return timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   684  }
; ..\component\Os\Implementation\Os_Timer.h	   685  
; ..\component\Os\Implementation\Os_Timer.h	   686  
; ..\component\Os\Implementation\Os_Timer.h	   687  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   688   *  Os_TimerPitAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   689   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   690  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   691  Os_TimerPitAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   692  (
; ..\component\Os\Implementation\Os_Timer.h	   693    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   694    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   695    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   696  ))                                                                                                                      /* COV_OS_HALPLATFORMPITUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   697  {
; ..\component\Os\Implementation\Os_Timer.h	   698    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   699  }
; ..\component\Os\Implementation\Os_Timer.h	   700  
; ..\component\Os\Implementation\Os_Timer.h	   701  
; ..\component\Os\Implementation\Os_Timer.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   703   *  Os_TimerHrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   705  /*!
; ..\component\Os\Implementation\Os_Timer.h	   706   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   707   *
; ..\component\Os\Implementation\Os_Timer.h	   708   *
; ..\component\Os\Implementation\Os_Timer.h	   709   *
; ..\component\Os\Implementation\Os_Timer.h	   710   */
; ..\component\Os\Implementation\Os_Timer.h	   711  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   712  Os_TimerHrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   713  (
; ..\component\Os\Implementation\Os_Timer.h	   714    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   715    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   716    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   717    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   718  ))                                                                                                                      /* COV_OS_HALPLATFORMFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   719  {
; ..\component\Os\Implementation\Os_Timer.h	   720    Os_TickType timerValue;
; ..\component\Os\Implementation\Os_Timer.h	   721  
; ..\component\Os\Implementation\Os_Timer.h	   722    /* #10 Take the upper bits from the timer (Now) and the lower bits from the CounterValue. */
; ..\component\Os\Implementation\Os_Timer.h	   723    timerValue = (Now & (~(MaxAllowedValue))) + CounterValue;
; ..\component\Os\Implementation\Os_Timer.h	   724  
; ..\component\Os\Implementation\Os_Timer.h	   725    /* #20 If this time stamp is already in the past or now, take the next cycle. */
; ..\component\Os\Implementation\Os_Timer.h	   726    if(timerValue <= Now)
; ..\component\Os\Implementation\Os_Timer.h	   727    {
; ..\component\Os\Implementation\Os_Timer.h	   728      timerValue += (MaxAllowedValue + (uint32)1);
; ..\component\Os\Implementation\Os_Timer.h	   729    }
; ..\component\Os\Implementation\Os_Timer.h	   730  
; ..\component\Os\Implementation\Os_Timer.h	   731    return (timerValue & MaxCountingValue);
; ..\component\Os\Implementation\Os_Timer.h	   732  }
; ..\component\Os\Implementation\Os_Timer.h	   733  
; ..\component\Os\Implementation\Os_Timer.h	   734  
; ..\component\Os\Implementation\Os_Timer.h	   735  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   736   *  Os_TimerPfrtAbsCounter2AbsTimerValue()
; ..\component\Os\Implementation\Os_Timer.h	   737   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   738  /*!
; ..\component\Os\Implementation\Os_Timer.h	   739   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   740   *
; ..\component\Os\Implementation\Os_Timer.h	   741   *
; ..\component\Os\Implementation\Os_Timer.h	   742   */
; ..\component\Os\Implementation\Os_Timer.h	   743  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   744  Os_TimerPfrtAbsCounter2AbsTimerValue,
; ..\component\Os\Implementation\Os_Timer.h	   745  (
; ..\component\Os\Implementation\Os_Timer.h	   746    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   747    Os_TickType Now,
; ..\component\Os\Implementation\Os_Timer.h	   748    Os_TickType CounterValue
; ..\component\Os\Implementation\Os_Timer.h	   749  ))                                                                                                                      /* COV_OS_HALPLATFORMPFRTUNSUPPORTED_XX */
; ..\component\Os\Implementation\Os_Timer.h	   750  {
; ..\component\Os\Implementation\Os_Timer.h	   751    /* #10 Convert values based on software timer implementation. */
; ..\component\Os\Implementation\Os_Timer.h	   752    return Os_TimerSwAbsCounter2AbsTimerValue(MaxAllowedValue, Now, CounterValue);
; ..\component\Os\Implementation\Os_Timer.h	   753  }
; ..\component\Os\Implementation\Os_Timer.h	   754  
; ..\component\Os\Implementation\Os_Timer.h	   755  
; ..\component\Os\Implementation\Os_Timer.h	   756  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.h	   757   *  Os_TimerAdd()
; ..\component\Os\Implementation\Os_Timer.h	   758   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Timer.h	   759  /*!
; ..\component\Os\Implementation\Os_Timer.h	   760   * Internal comment removed.
; ..\component\Os\Implementation\Os_Timer.h	   761   *
; ..\component\Os\Implementation\Os_Timer.h	   762   *
; ..\component\Os\Implementation\Os_Timer.h	   763   *
; ..\component\Os\Implementation\Os_Timer.h	   764   */
; ..\component\Os\Implementation\Os_Timer.h	   765  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TickType, OS_CODE, OS_ALWAYS_INLINE,                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Timer.h	   766  Os_TimerAdd,
; ..\component\Os\Implementation\Os_Timer.h	   767  (
; ..\component\Os\Implementation\Os_Timer.h	   768    Os_TickType MaxAllowedValue,
; ..\component\Os\Implementation\Os_Timer.h	   769    Os_TickType MaxCountingValue,
; ..\component\Os\Implementation\Os_Timer.h	   770    Os_TickType Value,
; ..\component\Os\Implementation\Os_Timer.h	   771    Os_TickType Add
; ..\component\Os\Implementation\Os_Timer.h	   772  ))
; ..\component\Os\Implementation\Os_Timer.h	   773  {
; ..\component\Os\Implementation\Os_Timer.h	   774    Os_TickType result;
; ..\component\Os\Implementation\Os_Timer.h	   775  
; ..\component\Os\Implementation\Os_Timer.h	   776    Os_Assert((Os_StdReturnType)(Value <= MaxCountingValue));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   777    Os_Assert((Os_StdReturnType)(Add <=  MaxAllowedValue));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* COMP_WARN_OS_CW_005 */
; ..\component\Os\Implementation\Os_Timer.h	   778  
; ..\component\Os\Implementation\Os_Timer.h	   779    /* #10 If the sum of Value and Add exceeds the MaxCountingValue, subtract MaxCountingValue+1 from the sum. */
; ..\component\Os\Implementation\Os_Timer.h	   780    if(Add > (MaxCountingValue - Value))
; ..\component\Os\Implementation\Os_Timer.h	   781    {
; ..\component\Os\Implementation\Os_Timer.h	   782      Os_TickType mod;
; ..\component\Os\Implementation\Os_Timer.h	   783  
; ..\component\Os\Implementation\Os_Timer.h	   784      /* 1.             Add > MaxCountingValue - Value            - see if-statement
; ..\component\Os\Implementation\Os_Timer.h	   785       * 2.  => Add + Value > MaxCountingValue
; ..\component\Os\Implementation\Os_Timer.h	   786       * 3.  => There is a value overflow.
; ..\component\Os\Implementation\Os_Timer.h	   787       */
; ..\component\Os\Implementation\Os_Timer.h	   788      mod = MaxCountingValue + (uint32)1;
; ..\component\Os\Implementation\Os_Timer.h	   789      result = (Value - mod) + Add;
	fcall	.cocofun_2
.L174:
	st.w	[a2]8,d15
.L180:
	ld.a	a2,[a15]64
.L285:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   117  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   118  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   119  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   120  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   121  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   123   *  Os_Hal_TimerFrtGetCounterValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   126  OS_LOCAL_INLINE Os_Hal_TimerFrtTickType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   127  Os_Hal_TimerFrtGetCounterValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   128  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   129    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   130  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   131  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   132    return *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CounterRegisterAddress);                                     /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   133  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   134  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   135  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   137   *  Os_Hal_TimerFrtSetCompareValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   140  Os_Hal_TimerFrtSetCompareValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   141  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   142    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   143    Os_Hal_TimerFrtTickType ExpirationTime
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   144  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   145  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   146    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = ExpirationTime;                           /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	ld.w	d0,[a2]4
.L286:
	mov.a	a2,d0
.L287:
	st.w	[a2],d15
.L181:
	ld.a	a2,[a15]64
.L288:
	ld.w	d1,[a15]56
.L186:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    16   * \addtogroup  Os_Hal_Timer
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    20   * \file       Os_Hal_Timer_STM.h
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    21   * \brief      This file contains hardware specific definition of the STM module
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    30  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    31  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    32  #ifndef OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    33  # define OS_HAL_TIMER_STM_H
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    34  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    40  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    42  # include "Os_Hal_Timer_STMInt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    43  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    45  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    47  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    48  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    49  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    50   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    51   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    52  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    53  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    54  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    55   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    56   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    57  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    58  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    59  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    60   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    61   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    62  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    63  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    64  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    65  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    67   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    68  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    69  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    70  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    72   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    73  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    76  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    77  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    80  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    82   *  Os_Hal_TimerFrtInit()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    84  /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    85   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    92   */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    94  Os_Hal_TimerFrtInit,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    95  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    96    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    97  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    98  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	    99    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   100  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   101    /* #10 Configure the CMCON register. Only the used compare channel is configured,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   102     *     the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   103    *(volatile uint32*)(TimerConfig->CMCONRegisterAddress) =                                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   104        ( (*(volatile uint32*)(TimerConfig->CMCONRegisterAddress)) & TimerConfig->CMCONMask ) | TimerConfig->CMCONValue;  /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   105  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   106    /* #20 Adjust the compare register with the reload value. If this is a HRT, the generated reload value should be 0. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   107    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = TimerConfig->ReloadValue;                 /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   108  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   109    /* #30 Configure the ICR register. Only the used compare channel is configured, the other one must not be modified. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   110    *(volatile uint32*)(TimerConfig->ICRRegisterAddress) =                                                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   111        ( (*(volatile uint32*)(TimerConfig->ICRRegisterAddress)) & TimerConfig->ICRMask ) | TimerConfig->ICRValue;        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   112        
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   113    /* #40 Enable the interrupt. */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   114    tempSRC = *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress);                                              /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   115    tempSRC |= OS_HAL_INT_SRC_SRE_MASK;
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   116    *(volatile uint32*) (TimerConfig->InterruptSRCRegisterAddress) = tempSRC;                                             /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   117  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   118  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   119  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   120  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   121  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   123   *  Os_Hal_TimerFrtGetCounterValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   126  OS_LOCAL_INLINE Os_Hal_TimerFrtTickType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   127  Os_Hal_TimerFrtGetCounterValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   128  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   129    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   130  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   131  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   132    return *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CounterRegisterAddress);                                     /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
	ld.w	d0,[a2]
.L289:
	mov.a	a4,d0
.L290:
	ld.w	d0,[a4]
.L187:

; ..\component\Os\Implementation\Os_Counter.h	   242    if(Value > ReferenceValue)      (inlined)
	fcall	.cocofun_1
.L206:

; ..\component\Os\Implementation\Os_Timer.c	   252    if(OS_UNLIKELY(      (inlined)
	jne	d15,#0,.L20
.L189:

; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   133  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   134  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   135  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   137   *  Os_Hal_TimerFrtSetCompareValue()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   140  Os_Hal_TimerFrtSetCompareValue,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   141  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   142    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   143    Os_Hal_TimerFrtTickType ExpirationTime
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   144  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   145  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   146    *(volatile Os_Hal_TimerFrtTickType*)(TimerConfig->CompareRegisterAddress) = ExpirationTime;                           /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   147  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   148  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   149  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   150  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   151  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   152  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   153   *  Os_Hal_TimerFrtAcknowledge()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   154   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   155  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   156  Os_Hal_TimerFrtAcknowledge,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   157  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   158    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   159  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   160  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   161    /*!
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   162     * \note There is no need to acknowledge a FRT.
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   163     */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   164    OS_IGNORE_UNREF_PARAM(TimerConfig);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   165  }
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   166  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   167  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   168  
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   169  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   170   *  Os_Hal_TimerFrtTriggerIrq()
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   171   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   172  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   173  Os_Hal_TimerFrtTriggerIrq,
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   174  (
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   175    P2CONST(Os_Hal_TimerFrtConfigType, AUTOMATIC, OS_CONST) TimerConfig
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   176  ))
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   177  {
; ..\component\Os\Implementation\Os_Hal_Timer_STM.h	   178    *(volatile uint32*)(TimerConfig->InterruptSRCRegisterAddress) |= OS_HAL_INT_SRC_SETR_MASK;                            /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_FRTCONFIG */
	ld.w	d15,[a2]20
.L208:
	mov.a	a15,d15
	ld.w	d15,[a15]
.L291:
	insert	d15,d15,#1,#26,#1
	st.w	[a15],d15

; ..\component\Os\Implementation\Os_Timer.c	   252    if(OS_UNLIKELY(      (inlined)
.L20:

; ..\component\Os\Implementation\Os_Timer.c	   532  
; ..\component\Os\Implementation\Os_Timer.c	   533    /* #30 Set compare value for next timer interrupt. */
; ..\component\Os\Implementation\Os_Timer.c	   534    Os_TimerPfrtSetNextHardwareCompareValue(pfrtTimer);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Timer.c	   535  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L156:
	
__Os_Isr_Os_TimerPfrtIsr_function_end:
	.size	Os_Isr_Os_TimerPfrtIsr,__Os_Isr_Os_TimerPfrtIsr_function_end-Os_Isr_Os_TimerPfrtIsr
.L63:
	; End of function
	
	.calls	'Os_TimerSwIncrement','Os_CounterWorkJobs'
	.calls	'Os_Isr_Os_TimerPitIsr','Os_ErrKernelPanic'
	.calls	'Os_Isr_Os_TimerHrtIsr','Os_ErrKernelPanic'
	.calls	'Os_Isr_Os_TimerPfrtIsr','Os_ErrKernelPanic'
	.calls	'Os_Isr_Os_TimerPfrtIsr','Os_TimerSwIncrement'
	.calls	'Os_TimerPfrtStart','.cocofun_2'
	.calls	'Os_TimerPfrtStart','.cocofun_1'
	.calls	'Os_Isr_Os_TimerPfrtIsr','.cocofun_2'
	.calls	'Os_Isr_Os_TimerPfrtIsr','.cocofun_1'
	.calls	'Os_TimerSwIncrement','',0
	.calls	'Os_TimerPfrtStart','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'Os_Isr_Os_TimerPitIsr','',0
	.calls	'Os_Isr_Os_TimerHrtIsr','',0
	.extern	Os_ErrKernelPanic
	.extern	Os_CounterWorkJobs
	.calls	'Os_Isr_Os_TimerPfrtIsr','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L36:
	.word	103987
	.half	3
	.word	.L37
	.byte	4
.L35:
	.byte	1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L38
.L86:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Os_Hal_Mfa10',0,3,1,190,4,1
	.word	135
	.byte	1,1,4,0,3
	.byte	'Os_Hal_Mfa11',0,3,1,206,4,1
	.word	135
	.byte	1,1,4,0
.L166:
	.byte	3
	.byte	'Os_Hal_Mfa8',0,3,1,222,4,1
	.word	135
	.byte	1,1
.L167:
	.byte	4,0
.L147:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Os_ErrIsValueLo',0,3,2,202,18,1
	.word	236
	.byte	1,1,5
	.byte	'Id',0,2,202,18,1
	.word	135
	.byte	5
	.byte	'Compare',0,2,202,18,1
	.word	135
	.byte	4,0,3
	.byte	'Os_ErrExtendedCheck',0,3,2,216,18,1
	.word	236
	.byte	1,1,5
	.byte	'Value',0,2,216,18,1
	.word	236
	.byte	4,0,6
	.byte	'Os_Assert',0,3,2,140,19,1,1,1,5
	.byte	'Condition',0,2,140,19,1
	.word	236
	.byte	4,0,2
	.byte	'unsigned char',0,1,8,7,3,172,4,9,2,8
	.byte	'OS_STATUS_OK',0,0,8
	.byte	'OS_STATUS_CALLEVEL',0,2,8
	.byte	'OS_STATUS_LIMIT',0,4,8
	.byte	'OS_STATUS_RESOURCE',0,6,8
	.byte	'OS_STATUS_SERVICEID',0,9,8
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,8
	.byte	'OS_STATUS_MISSINGEND',0,11,8
	.byte	'OS_STATUS_DISABLEDINT',0,12,8
	.byte	'OS_STATUS_STACKFAULT',0,13,8
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,8
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,8
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,8
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,8
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,8
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,8
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,8
	.byte	'OS_STATUS_SPINLOCK',0,21,8
	.byte	'OS_STATUS_CORE',0,22,8
	.byte	'OS_STATUS_OVERFLOW',0,245,1,8
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,8
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,8
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,8
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,8
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,8
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,8
	.byte	'OS_STATUS_API_ERROR',0,252,1,8
	.byte	'OS_STATUS_ASSERTION',0,253,1,8
	.byte	'OS_STATUS_OVERLOAD',0,254,1,8
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,8
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,8
	.byte	'OS_STATUS_ID_1',0,131,2,8
	.byte	'OS_STATUS_UNLOCKED',0,133,2,8
	.byte	'OS_STATUS_STATE_1',0,135,2,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,8
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,8
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,8
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,8
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,8
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,8
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,8
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,8
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,8
	.byte	'OS_STATUS_ID_2',0,131,4,8
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,8
	.byte	'OS_STATUS_STATE_2',0,135,4,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,8
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,8
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,8
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,8
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,8
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,8
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,8
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,8
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,8
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,8
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,8
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,8
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,8
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,8
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,8
	.byte	'OS_STATUS_STOPPED_1',0,133,10,8
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,8
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,8
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,8
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,8
	.byte	'OS_STATUS_NEXTED_1',0,133,14,8
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,8
	.byte	'OS_STATUS_LOCKED',0,129,16,8
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,8
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,8
	.byte	'OS_STATUS_PRIORITY',0,129,18,8
	.byte	'OS_STATUS_ORDER',0,133,18,8
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,8
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,8
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,8
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,3
	.byte	'Os_ErrOsStatus2UserStatus',0,3,2,185,19,1
	.word	399
	.byte	1,1,5
	.byte	'OsStatus',0,2,185,19,1
	.word	416
	.byte	4,0,3
	.byte	'Os_ErrIsPropagationRequired',0,3,2,203,19,1
	.word	236
	.byte	1,1,5
	.byte	'OsStatus',0,2,203,19,1
	.word	416
	.byte	4,0,7,5,223,1,9,1,8
	.byte	'OS_CORESTATE_INACTIVE',0,0,8
	.byte	'OS_CORESTATE_ACTIVATED_ASR',0,1,8
	.byte	'OS_CORESTATE_ACTIVATED_NONASR',0,2,0,9,1
	.word	3041
	.byte	10,0,0,11
	.byte	'Os_CoreStatusType_Tag',0,5,251,1,8,2,12
	.byte	'ActivationState',0
	.word	3041
	.byte	1,2,35,0,12
	.byte	'CoreStartRequests',0
	.word	3133
	.byte	1,2,35,1,0,13
	.word	3142
	.byte	14
	.word	3223
	.byte	11
	.byte	'Os_Hal_CoreConfigType_Tag',0,6,99,8,24,12
	.byte	'CoreId',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ProgramCounterRegister',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'StartLabelAddress',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'DBGSRRegister',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'SYSCON_CORECON_Register',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'BOOTCONRegister',0
	.word	135
	.byte	4,2,35,20,0,15
	.word	3233
	.byte	14
	.word	3421
	.byte	11
	.byte	'Os_Hal_IntIsrConfigType_Tag',0,8,118,8,12,12
	.byte	'Level',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Source',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'CoreAssignment',0
	.word	399
	.byte	1,2,35,8,0,15
	.word	3431
	.byte	14
	.word	3520
	.byte	11
	.byte	'Os_Hal_IntIsrMapConfigType_Tag',0,8,132,1,8,4,12
	.byte	'dummy',0
	.word	135
	.byte	4,2,35,0,0,15
	.word	3530
	.byte	14
	.word	3583
	.byte	11
	.byte	'Os_IsrHwConfigType_Tag',0,7,154,1,8,12,12
	.byte	'HwConfig',0
	.word	3525
	.byte	4,2,35,0,12
	.byte	'MapConfig',0
	.word	3588
	.byte	4,2,35,4,12
	.byte	'IsMapped',0
	.word	399
	.byte	1,2,35,8,12
	.byte	'IsPostActionRequired',0
	.word	399
	.byte	1,2,35,9,0,15
	.word	3593
	.byte	14
	.word	3708
	.byte	16
	.byte	'Os_InterruptSourceConfigRefType',0,5,172,2,56
	.word	3713
	.byte	15
	.word	3718
	.byte	14
	.word	3759
	.byte	2
	.byte	'unsigned short int',0,2,7,7,9,86,9,1,8
	.byte	'OS_CORE_ID_0',0,0,8
	.byte	'OS_CORE_ID_MASTER',0,0,8
	.byte	'OS_COREID_COUNT',0,1,0,7,10,204,2,9,1,8
	.byte	'OS_TRACE_TASK_ACTIVATION',0,1,8
	.byte	'OS_TRACE_ISR_START',0,2,8
	.byte	'OS_TRACE_TASK_SETEVENT',0,4,8
	.byte	'OS_TRACE_TASK_GOTSEMA',0,8,8
	.byte	'OS_TRACE_THREAD_RESUME',0,16,8
	.byte	'OS_TRACE_THREAD_CLEANUP',0,32,8
	.byte	'OS_TRACE_THREAD_MISC',0,33,0,11
	.byte	'Os_TraceThreadType_Tag',0,10,244,3,8,1,12
	.byte	'NextRunReason',0
	.word	3850
	.byte	1,2,35,0,0,14
	.word	4028
	.byte	7,11,214,1,9,1,8
	.byte	'OS_TRACE_THREADID_COUNT',0,0,8
	.byte	'OS_TRACE_INVALID_THREAD',0,1,0,7,10,228,3,9,1,8
	.byte	'OS_TRACE_THREAD_TYPE_TASK',0,0,8
	.byte	'OS_TRACE_THREAD_TYPE_ISR',0,1,8
	.byte	'OS_TRACE_THREAD_TYPE_MISC',0,2,0,11
	.byte	'Os_TraceThreadConfigType_Tag',0,10,254,3,8,8,12
	.byte	'Dyn',0
	.word	4081
	.byte	4,2,35,0,12
	.byte	'Id',0
	.word	4086
	.byte	1,2,35,4,12
	.byte	'Type',0
	.word	4145
	.byte	1,2,35,5,0,15
	.word	4235
	.byte	14
	.word	4310
	.byte	11
	.byte	'Os_TraceCoreType_Tag',0,10,137,4,8,12,12
	.byte	'CurrentTask',0
	.word	4315
	.byte	4,2,35,0,12
	.byte	'CurrentIsr',0
	.word	4315
	.byte	4,2,35,4,12
	.byte	'OrtiCurrentServiceId',0
	.word	399
	.byte	1,2,35,8,0,14
	.word	4320
	.byte	11
	.byte	'Os_CoreConfigType_Tag',0,5,176,2,8,24,12
	.byte	'Status',0
	.word	3228
	.byte	4,2,35,0,12
	.byte	'HwConfig',0
	.word	3426
	.byte	4,2,35,4,12
	.byte	'InterruptSourceRefs',0
	.word	3764
	.byte	4,2,35,8,12
	.byte	'InterruptSourceCount',0
	.word	3769
	.byte	2,2,35,12,12
	.byte	'Id',0
	.word	3791
	.byte	1,2,35,14,12
	.byte	'Trace',0
	.word	4419
	.byte	4,2,35,16,12
	.byte	'IsAsrCore',0
	.word	399
	.byte	1,2,35,20,12
	.byte	'IsAutostart',0
	.word	399
	.byte	1,2,35,21,12
	.byte	'IsMasterStartAllowed',0
	.word	399
	.byte	1,2,35,22,12
	.byte	'IsHardwareInitCore',0
	.word	399
	.byte	1,2,35,23,0,17,13,67,9,8,12
	.byte	'Global',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Level',0
	.word	135
	.byte	4,2,35,4,0,17,12,81,9,6,18
	.byte	'InDisableAll',0,1
	.word	399
	.byte	1,7,2,35,0,12
	.byte	'SuspendAllCounter',0
	.word	3769
	.byte	2,2,35,2,12
	.byte	'SuspendOsCounter',0
	.word	3769
	.byte	2,2,35,4,0,11
	.byte	'Os_IntApiStateType_Tag',0,12,89,8,28,12
	.byte	'SuspendAllPrevState',0
	.word	4671
	.byte	8,2,35,0,12
	.byte	'SuspendOsPrevState',0
	.word	4671
	.byte	8,2,35,8,12
	.byte	'Os_IntLockingState',0
	.word	4708
	.byte	6,2,35,16,12
	.byte	'SuspendAllSnapshot',0
	.word	3769
	.byte	2,2,35,22,12
	.byte	'SuspendOsSnapshot',0
	.word	3769
	.byte	2,2,35,24,0,2
	.byte	'short int',0,2,5,11
	.byte	'Os_Hal_ContextConfigType_Tag',0,15,153,1,8,28,12
	.byte	'StackEndAddr',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'StackStartAddr',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'ProgramStatus',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'ProtectionSet',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'Entry',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'ReturnAddress',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'IntStatus',0
	.word	135
	.byte	4,2,35,24,0,15
	.word	4973
	.byte	14
	.word	5158
	.byte	11
	.byte	'Os_Hal_ContextType_Tag',0,15,115,8,28,12
	.byte	'Lr',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'PreviousContextInfo',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'InitPCXI',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'RunningPCXI',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'MpuRegionForStackLow',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'MpuRegionForStackUpper',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'A4',0
	.word	135
	.byte	4,2,35,24,0,14
	.word	5168
	.byte	14
	.word	135
	.byte	11
	.byte	'Os_StackConfigType_Tag',0,16,104,8,8,12
	.byte	'LowAddress',0
	.word	5356
	.byte	4,2,35,0,12
	.byte	'HighAddress',0
	.word	5356
	.byte	4,2,35,4,0,15
	.word	5361
	.byte	14
	.word	5431
	.byte	11
	.byte	'Os_LockType_Tag',0,17,82,8,4,12
	.byte	'Next',0
	.word	.L209-.L36
	.byte	4,2,35,0,0,14
	.word	5441
	.byte	7,17,73,9,1,8
	.byte	'OS_LOCKTYPE_RESOURCE_STANDARD',0,0,8
	.byte	'OS_LOCKTYPE_RESOURCE_INTERRUPT',0,1,8
	.byte	'OS_LOCKTYPE_SPINLOCK',0,2,0,11
	.byte	'Os_LockConfigType_Tag',0,17,92,8,12,12
	.byte	'Dyn',0
	.word	5477
	.byte	4,2,35,0,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'Type',0
	.word	5482
	.byte	1,2,35,8,0,15
	.word	5576
.L209:
	.byte	14
	.word	5662
	.byte	16
	.byte	'Os_LockListType',0,18,65,55
	.word	5667
	.byte	7,19,135,1,9,1,8
	.byte	'OS_SPINLOCKMETHOD_ALL_INT',0,0,8
	.byte	'OS_SPINLOCKMETHOD_CAT2',0,1,8
	.byte	'OS_SPINLOCKMETHOD_SCHEDULER',0,2,8
	.byte	'OS_SPINLOCKMETHOD_NOTHING',0,3,0,7,19,149,1,9,1,8
	.byte	'OS_SPINLOCKMODE_USER',0,0,8
	.byte	'OS_SPINLOCKMODE_SUPERVISOR',0,1,0,7,19,160,1,9,1,8
	.byte	'OS_SPINLOCKTRACE_DISABLED',0,0,8
	.byte	'OS_SPINLOCKTRACE_ENABLED',0,1,0,7,19,173,1,9,1,8
	.byte	'OS_SPINLOCKCHECK_DISABLED',0,0,8
	.byte	'OS_SPINLOCKCHECK_ENABLED',0,1,0,7,11,221,1,9,1,8
	.byte	'OS_TRACE_NUMBER_OF_ALL_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_NUMBER_OF_CONFIGURED_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_INVALID_SPINLOCK',0,1,0,11
	.byte	'Os_TraceSpinlockConfigType_Tag',0,10,148,4,8,1,12
	.byte	'SpinlockId',0
	.word	5997
	.byte	1,2,35,0,0,15
	.word	6109
	.byte	14
	.word	6167
	.byte	11
	.byte	'Os_SpinlockConfigType_Tag',0,19,214,1,8,24,12
	.byte	'Lock',0
	.word	5576
	.byte	12,2,35,0,12
	.byte	'Method',0
	.word	5696
	.byte	1,2,35,12,12
	.byte	'CeilingPriority',0
	.word	3769
	.byte	2,2,35,14,12
	.byte	'Mode',0
	.word	5814
	.byte	1,2,35,16,12
	.byte	'Trace',0
	.word	5873
	.byte	1,2,35,17,12
	.byte	'Checks',0
	.word	5935
	.byte	1,2,35,18,12
	.byte	'Order',0
	.word	399
	.byte	1,2,35,19,12
	.byte	'TimingHookTrace',0
	.word	6172
	.byte	4,2,35,20,0,15
	.word	6177
	.byte	14
	.word	6350
	.byte	16
	.byte	'Os_SpinlockListType',0,20,62,59
	.word	6355
	.byte	7,3,128,3,9,1,8
	.byte	'APPLICATION_TERMINATED',0,0,8
	.byte	'APPLICATION_RESTARTING',0,1,8
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,17,21,118,9,1,12
	.byte	'State',0
	.word	6388
	.byte	1,2,35,0,0,14
	.word	6470
	.byte	7,11,145,1,9,1,8
	.byte	'Default_Init_Task',0,0,8
	.byte	'Default_Init_Task_Trusted',0,1,8
	.byte	'IdleTask_OsCore0',0,2,8
	.byte	'bsw_task',0,3,8
	.byte	'swc_init',0,4,8
	.byte	'swc_task',0,5,8
	.byte	'INVALID_TASK',0,6,8
	.byte	'OS_TASKID_COUNT',0,6,0,7,22,105,9,1,8
	.byte	'OS_TASKSCHEDULE_ALLOWED',0,0,8
	.byte	'OS_TASKSCHEDULE_PROHIBITED',0,1,0,11
	.byte	'Os_TaskConfigType_Tag',0,22,143,1,8,80,12
	.byte	'Thread',0
	.word	.L210-.L36
	.byte	60,2,35,0,12
	.byte	'HomePriority',0
	.word	3769
	.byte	2,2,35,60,12
	.byte	'TaskId',0
	.word	6496
	.byte	1,2,35,62,12
	.byte	'RunningPriority',0
	.word	3769
	.byte	2,2,35,64,12
	.byte	'MaxActivations',0
	.word	399
	.byte	1,2,35,66,12
	.byte	'AutostartModes',0
	.word	399
	.byte	1,2,35,67,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,68,12
	.byte	'NumScheduleEventsRoundRobin',0
	.word	135
	.byte	4,2,35,72,12
	.byte	'RoundRobinEnabled',0
	.word	399
	.byte	1,2,35,76,12
	.byte	'IsExtended',0
	.word	399
	.byte	1,2,35,77,12
	.byte	'Reschedule',0
	.word	6636
	.byte	1,2,35,78,0,15
	.word	6697
	.byte	14
	.word	6988
	.byte	16
	.byte	'Os_TaskConfigRefType',0,21,100,55
	.word	6993
	.byte	15
	.word	6998
	.byte	14
	.word	7027
	.byte	7,11,158,1,9,1,8
	.byte	'CounterIsr_SystemTimer',0,0,8
	.byte	'INVALID_ISR',0,1,8
	.byte	'OS_ISRID_COUNT',0,1,0,11
	.byte	'Os_IsrConfigType_Tag',0,7,189,1,8,68,12
	.byte	'Thread',0
	.word	.L210-.L36
	.byte	60,2,35,0,12
	.byte	'SourceConfig',0
	.word	3713
	.byte	4,2,35,60,12
	.byte	'Id',0
	.word	7037
	.byte	1,2,35,64,12
	.byte	'IsEnabledOnInitialization',0
	.word	399
	.byte	1,2,35,65,0,15
	.word	7100
	.byte	14
	.word	7213
	.byte	16
	.byte	'Os_IsrConfigRefType',0,23,66,54
	.word	7218
	.byte	15
	.word	7223
	.byte	14
	.word	7251
	.byte	11
	.byte	'Os_IsrCat1ConfigType_Tag',0,7,207,1,8,4,12
	.byte	'SourceConfig',0
	.word	3713
	.byte	4,2,35,0,0,15
	.word	7261
	.byte	14
	.word	7315
	.byte	16
	.byte	'Os_IsrCat1ConfigRefType',0,23,69,58
	.word	7320
	.byte	15
	.word	7325
	.byte	14
	.word	7357
	.byte	11
	.byte	'Os_CounterCharacteristicsConfigType_Tag',0,24,164,1,8,20,12
	.byte	'MaxAllowedValue',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'MaxCountingValue',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'MaxDifferentialValue',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'MinCycle',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'TicksPerBase',0
	.word	135
	.byte	4,2,35,16,0,11
	.byte	'Os_JobType_Tag',0,26,78,8,4,12
	.byte	'ExpirationTimestamp',0
	.word	135
	.byte	4,2,35,0,0,14
	.word	7535
	.byte	15
	.word	.L211-.L36
	.byte	14
	.word	7590
	.byte	19,1,1,20
	.word	7595
	.byte	0,14
	.word	7600
	.byte	16
	.byte	'Os_JobCallbackType',0,26,94,9
	.word	7609
.L211:
	.byte	11
	.byte	'Os_JobConfigType_Tag',0,26,98,8,12,12
	.byte	'Dyn',0
	.word	7585
	.byte	4,2,35,0,12
	.byte	'Counter',0
	.word	.L212-.L36
	.byte	4,2,35,4,12
	.byte	'Callback',0
	.word	7614
	.byte	4,2,35,8,0,15
	.word	7641
	.byte	14
	.word	7716
	.byte	17,25,77,9,4,12
	.byte	'Data',0
	.word	7721
	.byte	4,2,35,0,0,14
	.word	7726
	.byte	17,25,84,9,2,12
	.byte	'QueueUsage',0
	.word	3769
	.byte	2,2,35,0,0,14
	.word	7751
	.byte	17,25,91,9,12,12
	.byte	'Queue',0
	.word	7746
	.byte	4,2,35,0,12
	.byte	'Dyn',0
	.word	7777
	.byte	4,2,35,4,12
	.byte	'QueueSize',0
	.word	3769
	.byte	2,2,35,8,0,7,27,63,9,1,8
	.byte	'OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER',0,20,8
	.byte	'OS_TIMERTYPE_PERIODIC_TICK',0,39,8
	.byte	'OS_TIMERTYPE_SOFTWARE',0,195,0,8
	.byte	'OS_TIMERTYPE_HIGH_RESOLUTION',0,203,0,0,11
	.byte	'Os_CounterConfigType_Tag',0,24,209,1,8,48,12
	.byte	'Characteristics',0
	.word	7367
	.byte	20,2,35,0,12
	.byte	'JobQueue',0
	.word	7782
	.byte	12,2,35,20,12
	.byte	'DriverType',0
	.word	7835
	.byte	1,2,35,32,12
	.byte	'Core',0
	.word	.L213-.L36
	.byte	4,2,35,36,12
	.byte	'OwnerApplication',0
	.word	.L214-.L36
	.byte	4,2,35,40,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,44,0,15
	.word	7970
.L212:
	.byte	14
	.word	8136
	.byte	16
	.byte	'Os_CounterConfigRefType',0,21,103,58
	.word	8141
	.byte	15
	.word	8146
	.byte	14
	.word	8178
	.byte	7,28,107,9,1,8
	.byte	'OS_ALARMMODE_ABSOLUTE',0,0,8
	.byte	'OS_ALARMMODE_RELATIVE',0,1,0,17,28,127,9,12,12
	.byte	'AlarmTime',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Cycle',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'ApplicationModes',0
	.word	399
	.byte	1,2,35,8,12
	.byte	'AlarmMode',0
	.word	8188
	.byte	1,2,35,9,0,11
	.byte	'Os_AlarmConfigType_Tag',0,28,169,1,8,32,12
	.byte	'Job',0
	.word	7641
	.byte	12,2,35,0,12
	.byte	'Autostart',0
	.word	8242
	.byte	12,2,35,12,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,24,12
	.byte	'OwnerApplication',0
	.word	.L214-.L36
	.byte	4,2,35,28,0,15
	.word	8327
	.byte	14
	.word	8446
	.byte	16
	.byte	'Os_AlarmConfigRefType',0,21,106,56
	.word	8451
	.byte	15
	.word	8456
	.byte	14
	.word	8486
	.byte	7,29,135,2,9,1,8
	.byte	'OS_SCHT_AUTOSTART_NON',0,0,8
	.byte	'OS_SCHT_AUTOSTART_RELATIVE',0,1,8
	.byte	'OS_SCHT_AUTOSTART_SYNCHRON',0,2,8
	.byte	'OS_SCHT_AUTOSTART_ABSOLUTE',0,3,0,11
	.byte	'Os_SchTAutostartConfigType_Tag',0,29,145,2,8,6,12
	.byte	'StartTime',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'AutostartModes',0
	.word	8496
	.byte	1,2,35,4,12
	.byte	'ApplicationModes',0
	.word	399
	.byte	1,2,35,5,0,7,29,251,1,9,1,8
	.byte	'OS_SCHT_SYNC_KIND_NON',0,0,8
	.byte	'OS_SCHT_SYNC_KIND_IMPLICIT',0,1,8
	.byte	'OS_SCHT_SYNC_KIND_EXPLICIT',0,2,0,7,29,186,1,9,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE',0,0,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC',0,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC_ZERO',0,2,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_CYCLIC',0,3,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SINGLE_SHOT',0,4,0,11
	.byte	'Os_SchTExPoActionTaskConfigType_Tag',0,29,178,1,8,4,12
	.byte	'Task',0
	.word	6993
	.byte	4,2,35,0,0,15
	.word	8991
	.byte	14
	.word	9048
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'Os_SchTExPoActionEventConfigType_Tag',0,29,166,1,8,12,12
	.byte	'Task',0
	.word	6993
	.byte	4,2,35,0,12
	.byte	'EventMask',0
	.word	9058
	.byte	8,2,35,4,0,15
	.word	9084
	.byte	14
	.word	9161
	.byte	11
	.byte	'Os_SchTExPoConfigType_Tag',0,29,202,1,8,28,12
	.byte	'Next',0
	.word	.L215-.L36
	.byte	4,2,35,0,12
	.byte	'Kind',0
	.word	8810
	.byte	1,2,35,4,12
	.byte	'Tasks',0
	.word	9053
	.byte	4,2,35,8,12
	.byte	'TaskCount',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'Events',0
	.word	9166
	.byte	4,2,35,16,12
	.byte	'EventCount',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'RelOffsetToNext',0
	.word	135
	.byte	4,2,35,24,0,15
	.word	9171
.L215:
	.byte	14
	.word	9327
	.byte	11
	.byte	'Os_SchTConfigType_Tag',0,29,156,2,8,36,12
	.byte	'Job',0
	.word	7641
	.byte	12,2,35,0,12
	.byte	'Autostart',0
	.word	8614
	.byte	6,2,35,12,12
	.byte	'SyncKind',0
	.word	8721
	.byte	1,2,35,18,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'OwnerApplication',0
	.word	.L214-.L36
	.byte	4,2,35,24,12
	.byte	'ExPoHead',0
	.word	9332
	.byte	4,2,35,28,12
	.byte	'InitialNext',0
	.word	.L216-.L36
	.byte	4,2,35,32,0,15
	.word	9337
.L216:
	.byte	14
	.word	9512
	.byte	16
	.byte	'Os_SchTConfigRefType',0,21,109,55
	.word	9517
	.byte	15
	.word	9522
	.byte	14
	.word	9551
	.byte	17,32,68,9,8,12
	.byte	'StartAddress',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'EndAddress',0
	.word	135
	.byte	4,2,35,4,0,15
	.word	9561
	.byte	14
	.word	9609
	.byte	11
	.byte	'Os_Hal_MpAppConfigType_Tag',0,32,114,8,36,12
	.byte	'ProtectionSet',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,1,12
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,2,12
	.byte	'MpuDataRegions',0
	.word	9614
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionEnableMask',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'MpuDataRegionReadEnable',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,20,12
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,21,12
	.byte	'MpuCodeRegions',0
	.word	9614
	.byte	4,2,35,24,12
	.byte	'MpuCodeRegionEnableMask',0
	.word	135
	.byte	4,2,35,28,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	135
	.byte	4,2,35,32,0,15
	.word	9619
	.byte	14
	.word	10014
	.byte	11
	.byte	'Os_Hal_MpThreadConfigType_Tag',0,32,139,1,8,36,12
	.byte	'ProtectionSet',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,1,12
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,2,12
	.byte	'MpuDataRegions',0
	.word	9614
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionEnableMask',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'MpuDataRegionReadEnable',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,20,12
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,21,12
	.byte	'MpuCodeRegions',0
	.word	9614
	.byte	4,2,35,24,12
	.byte	'MpuCodeRegionEnableMask',0
	.word	135
	.byte	4,2,35,28,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	135
	.byte	4,2,35,32,0,15
	.word	10024
	.byte	14
	.word	10423
	.byte	11
	.byte	'Os_MpAccessRightsType_Tag',0,31,132,1,8,8,12
	.byte	'AppAccessRights',0
	.word	10019
	.byte	4,2,35,0,12
	.byte	'ThreadAccessRights',0
	.word	10428
	.byte	4,2,35,4,0,15
	.word	10433
	.byte	14
	.word	10519
	.byte	7,30,117,9,1,8
	.byte	'OS_SERVICE_TRUSTEDFUNCTION',0,0,8
	.byte	'OS_SERVICE_NONTRUSTEDFUNCTION',0,1,8
	.byte	'OS_SERVICE_FASTTRUSTEDFUNCTION',0,2,0,11
	.byte	'Os_ServiceConfigType_Tag',0,30,209,1,8,12,12
	.byte	'OwnerApplication',0
	.word	.L214-.L36
	.byte	4,2,35,0,12
	.byte	'MpAccessRights',0
	.word	10524
	.byte	4,2,35,4,12
	.byte	'ServiceType',0
	.word	10529
	.byte	1,2,35,8,0,15
	.word	10629
	.byte	14
	.word	10732
	.byte	16
	.byte	'Os_ServiceConfigRefType',0,21,112,58
	.word	10737
	.byte	15
	.word	10742
	.byte	14
	.word	10774
	.byte	7,33,97,9,1,8
	.byte	'Os_HookTaskReturn_ToCallerTask',0,0,8
	.byte	'Os_HookTaskReturn_WithSchedule',0,1,8
	.byte	'Os_HookTaskReturn_BeginScheduling',0,2,0,11
	.byte	'Os_HookConfigType_Tag',0,33,162,1,8,76,12
	.byte	'Thread',0
	.word	.L210-.L36
	.byte	60,2,35,0,12
	.byte	'HookTypeFlag',0
	.word	135
	.byte	4,2,35,60,12
	.byte	'NestingMask',0
	.word	135
	.byte	4,2,35,64,12
	.byte	'Id',0
	.word	135
	.byte	4,2,35,68,12
	.byte	'TaskReturn',0
	.word	10784
	.byte	1,2,35,72,0,21,1,1,14
	.word	11012
	.byte	16
	.byte	'Os_HookVoidHookCbkType',0,33,112,9
	.word	11015
	.byte	11
	.byte	'Os_HookCallbackConfigType_Tag',0,33,195,1,8,80,12
	.byte	'Hook',0
	.word	10892
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	11020
	.byte	4,2,35,76,0,15
	.word	11051
	.byte	14
	.word	11120
	.byte	19,1,1,20
	.word	399
	.byte	0,14
	.word	11130
	.byte	16
	.byte	'Os_HookStatusHookCbkType',0,33,109,9
	.word	11139
	.byte	11
	.byte	'Os_HookStatusHookConfigType_Tag',0,33,183,1,8,80,12
	.byte	'Hook',0
	.word	10892
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	11144
	.byte	4,2,35,76,0,15
	.word	11177
	.byte	14
	.word	11248
	.byte	15
	.word	10892
	.byte	14
	.word	11258
	.byte	16
	.byte	'Os_HookConfigRefType',0,34,133,1,55
	.word	11263
	.byte	15
	.word	11268
	.byte	14
	.word	11298
	.byte	7,11,118,9,1,8
	.byte	'OsApplication_OsCore0',0,0,8
	.byte	'SystemApplication_OsCore0',0,1,8
	.byte	'INVALID_OSAPPLICATION',0,2,8
	.byte	'OS_APPID_COUNT',0,2,0,11
	.byte	'Os_AppConfigType_Tag',0,21,126,8,96,12
	.byte	'Dyn',0
	.word	6491
	.byte	4,2,35,0,12
	.byte	'Core',0
	.word	.L213-.L36
	.byte	4,2,35,4,12
	.byte	'AccessRightId',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'TaskRefs',0
	.word	7032
	.byte	4,2,35,12,12
	.byte	'TaskCount',0
	.word	3769
	.byte	2,2,35,16,12
	.byte	'IsrCat2Refs',0
	.word	7256
	.byte	4,2,35,20,12
	.byte	'IsrCat2Count',0
	.word	3769
	.byte	2,2,35,24,12
	.byte	'IsrCat1Refs',0
	.word	7362
	.byte	4,2,35,28,12
	.byte	'IsrCat1Count',0
	.word	3769
	.byte	2,2,35,32,12
	.byte	'CounterRefs',0
	.word	8183
	.byte	4,2,35,36,12
	.byte	'CounterCount',0
	.word	3769
	.byte	2,2,35,40,12
	.byte	'AlarmRefs',0
	.word	8491
	.byte	4,2,35,44,12
	.byte	'AlarmCount',0
	.word	3769
	.byte	2,2,35,48,12
	.byte	'SchTRefs',0
	.word	9556
	.byte	4,2,35,52,12
	.byte	'SchTCount',0
	.word	3769
	.byte	2,2,35,56,12
	.byte	'ServiceFunctions',0
	.word	10779
	.byte	4,2,35,60,12
	.byte	'ServiceFunctionCount',0
	.word	3769
	.byte	2,2,35,64,12
	.byte	'StartupHookRef',0
	.word	11125
	.byte	4,2,35,68,12
	.byte	'ShutdownHookRef',0
	.word	11253
	.byte	4,2,35,72,12
	.byte	'ErrorHookRef',0
	.word	11253
	.byte	4,2,35,76,12
	.byte	'HookRefs',0
	.word	11303
	.byte	4,2,35,80,12
	.byte	'HookCount',0
	.word	3769
	.byte	2,2,35,84,12
	.byte	'RestartTask',0
	.word	6993
	.byte	4,2,35,88,12
	.byte	'IsTrusted',0
	.word	399
	.byte	1,2,35,92,12
	.byte	'IsPrivileged',0
	.word	399
	.byte	1,2,35,93,12
	.byte	'HasTimingProtectionDelay',0
	.word	399
	.byte	1,2,35,94,12
	.byte	'Id',0
	.word	11308
	.byte	1,2,35,95,0,15
	.word	11407
.L214:
	.byte	14
	.word	11998
	.byte	7,11,127,9,1,8
	.byte	'OS_TRUSTEDFUNCTIONID_COUNT',0,0,0,22
	.byte	'void',0,14
	.word	12043
	.byte	16
	.byte	'TrustedFunctionParameterRefType',0,3,204,1,44
	.word	12049
	.byte	17,30,126,9,8,12
	.byte	'FunctionIndex',0
	.word	12008
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12054
	.byte	4,2,35,4,0,7,11,133,1,9,1,8
	.byte	'OS_NONTRUSTEDFUNCTIONID_COUNT',0,0,0,16
	.byte	'Os_NonTrustedFunctionParameterRefType',0,3,207,1,44
	.word	12049
	.byte	17,30,136,1,9,8,12
	.byte	'FunctionIndex',0
	.word	12148
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12187
	.byte	4,2,35,4,0,7,11,139,1,9,1,8
	.byte	'OS_FASTTRUSTEDFUNCTIONID_COUNT',0,0,0,16
	.byte	'Os_FastTrustedFunctionParameterRefType',0,3,210,1,44
	.word	12049
	.byte	17,30,146,1,9,8,12
	.byte	'FunctionIndex',0
	.word	12288
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12328
	.byte	4,2,35,4,0,23,30,157,1,9,8,12
	.byte	'TrustedFunctionParameters',0
	.word	12095
	.byte	8,2,35,0,12
	.byte	'NonTrustedFunctionParameters',0
	.word	12234
	.byte	8,2,35,0,12
	.byte	'FastTrustedFunctionParameters',0
	.word	12376
	.byte	8,2,35,0,0,11
	.byte	'Os_ServiceCallType_Tag',0,30,167,1,8,56,12
	.byte	'PrevApplication',0
	.word	12003
	.byte	4,2,35,0,12
	.byte	'PrevMpAccessRights',0
	.word	10524
	.byte	4,2,35,4,12
	.byte	'PrevServiceCalls',0
	.word	.L217-.L36
	.byte	4,2,35,8,12
	.byte	'CallerContext',0
	.word	5168
	.byte	28,2,35,12,12
	.byte	'ServiceCallContext',0
	.word	5351
	.byte	4,2,35,40,12
	.byte	'Service',0
	.word	10737
	.byte	4,2,35,44,12
	.byte	'Parameters',0
	.word	12430
	.byte	8,2,35,48,0
.L217:
	.byte	14
	.word	12549
	.byte	11
	.byte	'Os_ThreadType_Tag',0,14,117,8,24,12
	.byte	'Locks',0
	.word	5672
	.byte	4,2,35,0,12
	.byte	'Spinlocks',0
	.word	6360
	.byte	4,2,35,4,12
	.byte	'Application',0
	.word	12003
	.byte	4,2,35,8,12
	.byte	'MpAccessRights',0
	.word	10524
	.byte	4,2,35,12,12
	.byte	'ServiceCalls',0
	.word	12746
	.byte	4,2,35,16,12
	.byte	'CallContext',0
	.word	3769
	.byte	2,2,35,20,0,14
	.word	12751
	.byte	14
	.word	4791
	.byte	7,35,146,2,9,1,8
	.byte	'OS_TPTHREADKIND_OWNER',0,0,8
	.byte	'OS_TPTHREADKIND_HEIR',0,1,8
	.byte	'OS_TPTHREADKIND_TPISR',0,2,0,11
	.byte	'Os_TpThreadConfigType_Tag',0,35,202,2,8,1,12
	.byte	'ThreadKind',0
	.word	12907
	.byte	1,2,35,0,0,15
	.word	12985
	.byte	14
	.word	13038
	.byte	7,3,211,6,9,1,8
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,8
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,8
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,8
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,8
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,8
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,8
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,8
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,8
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,8
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,8
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,8
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,17,36,90,9,12,12
	.byte	'AddressStart',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'AddressEnd',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'AccessRights',0
	.word	13048
	.byte	1,2,35,8,0,15
	.word	13551
	.byte	14
	.word	13621
	.byte	11
	.byte	'Os_AccessCheckConfigType_Tag',0,36,99,8,8,12
	.byte	'Regions',0
	.word	13626
	.byte	4,2,35,0,12
	.byte	'RegionCount',0
	.word	399
	.byte	1,2,35,4,0,15
	.word	13631
	.byte	14
	.word	13704
	.byte	11
	.byte	'Os_Hal_ContextFpuContextType_Tag',0,15,200,1,9,4,12
	.byte	'DummyFpuFlagRegister',0
	.word	135
	.byte	4,2,35,0,0,14
	.word	13714
	.byte	16
	.byte	'Os_PreThreadHookCbkType',0,37,196,3,9
	.word	11015
.L210:
	.byte	11
	.byte	'Os_ThreadConfigType_Tag',0,14,141,1,8,60,12
	.byte	'ContextConfig',0
	.word	5163
	.byte	4,2,35,0,12
	.byte	'Context',0
	.word	5351
	.byte	4,2,35,4,12
	.byte	'Stack',0
	.word	5436
	.byte	4,2,35,8,12
	.byte	'Dyn',0
	.word	12897
	.byte	4,2,35,12,12
	.byte	'OwnerApplication',0
	.word	12003
	.byte	4,2,35,16,12
	.byte	'Core',0
	.word	.L213-.L36
	.byte	4,2,35,20,12
	.byte	'IntApiState',0
	.word	12902
	.byte	4,2,35,24,12
	.byte	'TimeProtConfig',0
	.word	13043
	.byte	4,2,35,28,12
	.byte	'MpAccessRightsInitial',0
	.word	10524
	.byte	4,2,35,32,12
	.byte	'AccessRights',0
	.word	13709
	.byte	4,2,35,36,12
	.byte	'Trace',0
	.word	4315
	.byte	4,2,35,40,12
	.byte	'FpuContext',0
	.word	13784
	.byte	4,2,35,44,12
	.byte	'InitialCallContext',0
	.word	3769
	.byte	2,2,35,48,12
	.byte	'PreThreadHook',0
	.word	13789
	.byte	4,2,35,52,12
	.byte	'InitDuringStartUp',0
	.word	399
	.byte	1,2,35,56,12
	.byte	'UsesFpu',0
	.word	399
	.byte	1,2,35,57,0,15
	.word	13822
	.byte	14
	.word	14189
	.byte	16
	.byte	'Os_CoreInterruptedThreadsType',0,5,164,2,57
	.word	14194
	.byte	9,36
	.word	14199
	.byte	10,8,0,7,3,177,3,9,1,8
	.byte	'OSServiceId_GetApplicationID',0,0,8
	.byte	'OSServiceId_GetISRID',0,1,8
	.byte	'OSServiceId_CallTrustedFunction',0,2,8
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,8
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,8
	.byte	'OSServiceId_CheckObjectAccess',0,5,8
	.byte	'OSServiceId_CheckObjectOwnership',0,6,8
	.byte	'OSServiceId_StartScheduleTableRel',0,7,8
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,8
	.byte	'OSServiceId_StopScheduleTable',0,9,8
	.byte	'OSServiceId_NextScheduleTable',0,10,8
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,8
	.byte	'OSServiceId_SyncScheduleTable',0,12,8
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,8
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,8
	.byte	'OSServiceId_IncrementCounter',0,15,8
	.byte	'OSServiceId_GetCounterValue',0,16,8
	.byte	'OSServiceId_GetElapsedValue',0,17,8
	.byte	'OSServiceId_TerminateApplication',0,18,8
	.byte	'OSServiceId_AllowAccess',0,19,8
	.byte	'OSServiceId_GetApplicationState',0,20,8
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,8
	.byte	'OSServiceId_GetCoreID',0,22,8
	.byte	'OSServiceId_StartCore',0,23,8
	.byte	'OSServiceId_StartNonAutosarCore',0,24,8
	.byte	'OSServiceId_GetSpinlock',0,25,8
	.byte	'OSServiceId_ReleaseSpinlock',0,26,8
	.byte	'OSServiceId_TryToGetSpinlock',0,27,8
	.byte	'OSServiceId_ShutdownAllCores',0,28,8
	.byte	'OSServiceId_ControlIdle',0,29,8
	.byte	'OSServiceId_IocSend',0,30,8
	.byte	'OSServiceId_IocWrite',0,31,8
	.byte	'OSServiceId_IocSendGroup',0,32,8
	.byte	'OSServiceId_IocWriteGroup',0,33,8
	.byte	'OSServiceId_IocReceive',0,34,8
	.byte	'OSServiceId_IocRead',0,35,8
	.byte	'OSServiceId_IocReceiveGroup',0,36,8
	.byte	'OSServiceId_IocReadGroup',0,37,8
	.byte	'OSServiceId_IocEmptyQueue',0,38,8
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,8
	.byte	'OSServiceId_GetExceptionContext',0,160,1,8
	.byte	'OSServiceId_SetExceptionContext',0,161,1,8
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,8
	.byte	'OSServiceId_AppKill',0,163,1,8
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,8
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,8
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,8
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,8
	.byte	'OSServiceId_TimerIsr',0,168,1,8
	.byte	'OSServiceId_IsrWrapper',0,169,1,8
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,8
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,8
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,8
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,8
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,8
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,8
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,8
	.byte	'OSServiceId_GetSemaphore',0,177,1,8
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,8
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,8
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,8
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,8
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,8
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,8
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,8
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,8
	.byte	'OSServiceId_HookCallCallback',0,186,1,8
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,8
	.byte	'OSServiceId_IsInterruptPending',0,188,1,8
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,8
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,8
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,8
	.byte	'OSServiceId_GetCoreStartState',0,192,1,8
	.byte	'OSServiceId_StartOS',0,208,1,8
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,8
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,8
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,8
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,8
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,8
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,8
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,8
	.byte	'OSServiceId_ActivateTask',0,217,1,8
	.byte	'OSServiceId_TerminateTask',0,218,1,8
	.byte	'OSServiceId_ChainTask',0,219,1,8
	.byte	'OSServiceId_GetTaskID',0,220,1,8
	.byte	'OSServiceId_GetTaskState',0,221,1,8
	.byte	'OSServiceId_Schedule',0,222,1,8
	.byte	'OSServiceId_SetEvent',0,223,1,8
	.byte	'OSServiceId_ClearEvent',0,224,1,8
	.byte	'OSServiceId_GetEvent',0,225,1,8
	.byte	'OSServiceId_WaitEvent',0,226,1,8
	.byte	'OSServiceId_GetAlarmBase',0,227,1,8
	.byte	'OSServiceId_GetAlarm',0,228,1,8
	.byte	'OSServiceId_SetRelAlarm',0,229,1,8
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,8
	.byte	'OSServiceId_CancelAlarm',0,231,1,8
	.byte	'OSServiceId_GetResource',0,232,1,8
	.byte	'OSServiceId_ReleaseResource',0,233,1,8
	.byte	'OSSERVICEID_COUNT',0,255,1,0,17,3,133,6,9,4,12
	.byte	'Service',0
	.word	14247
	.byte	1,2,35,0,12
	.byte	'Error',0
	.word	399
	.byte	1,2,35,1,12
	.byte	'DetailedError',0
	.word	416
	.byte	2,2,35,2,0,17,3,220,2,9,12,12
	.byte	'maxallowedvalue',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	135
	.byte	4,2,35,8,0,14
	.word	17454
	.byte	16
	.byte	'AlarmBaseRefType',0,3,231,2,61
	.word	17526
	.byte	7,11,166,1,9,1,8
	.byte	'Rte_Al_TE2_bsw_task_0_10ms',0,0,8
	.byte	'Rte_Al_TE_swc_test_swc_test_10ms',0,1,8
	.byte	'Rte_Al_TE_swc_test_swc_test_500ms',0,2,8
	.byte	'OS_ALARMID_COUNT',0,3,0,14
	.word	6388
	.byte	16
	.byte	'ApplicationStateRefType',0,3,163,3,68
	.word	17683
	.byte	14
	.word	399
	.byte	7,11,175,1,9,1,8
	.byte	'SystemTimer',0,0,8
	.byte	'OS_COUNTERID_COUNT',0,1,0,14
	.word	9058
	.byte	7,3,230,1,9,1,8
	.byte	'IDLE_NO_HALT',0,0,8
	.byte	'OS_IDLEMODE_COUNT',0,1,0,15
	.word	12043
	.byte	14
	.word	17815
	.byte	16
	.byte	'MemoryStartAddressType',0,3,203,6,49
	.word	17820
	.byte	7,11,188,1,9,1,8
	.byte	'OsResource',0,0,8
	.byte	'OS_RESOURCEID_COUNT',0,1,0,7,3,244,2,9,1,8
	.byte	'RESTART',0,0,8
	.byte	'NO_RESTART',0,1,8
	.byte	'OS_RESTARTTYPE_COUNT',0,2,0,7,3,175,6,9,1,8
	.byte	'SCHEDULETABLE_STOPPED',0,0,8
	.byte	'SCHEDULETABLE_NEXT',0,1,8
	.byte	'SCHEDULETABLE_WAITING',0,2,8
	.byte	'SCHEDULETABLE_RUNNING',0,3,8
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,14
	.word	17952
	.byte	16
	.byte	'ScheduleTableStatusRefType',0,3,195,6,34
	.word	18092
	.byte	7,11,182,1,9,1,8
	.byte	'OS_SCHTID_COUNT',0,0,0,7,11,195,1,9,1,8
	.byte	'INVALID_SPINLOCK',0,0,8
	.byte	'OS_SPINLOCKID_COUNT',0,0,0,14
	.word	399
	.byte	17,40,134,1,9,8,12
	.byte	'vendorID',0
	.word	3769
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	3769
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	399
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	399
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	399
	.byte	1,2,35,6,0,14
	.word	18211
	.byte	14
	.word	6496
	.byte	16
	.byte	'TaskRefType',0,3,152,2,56
	.word	18337
	.byte	7,3,161,2,9,1,8
	.byte	'RUNNING',0,0,8
	.byte	'READY',0,1,8
	.byte	'WAITING',0,2,8
	.byte	'SUSPENDED',0,3,0,14
	.word	18363
	.byte	16
	.byte	'TaskStateRefType',0,3,178,2,61
	.word	18410
	.byte	14
	.word	135
	.byte	16
	.byte	'TickRefType',0,3,210,2,56
	.word	18441
	.byte	7,3,138,2,9,1,8
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,8
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,14
	.word	18467
	.byte	15
	.word	18467
	.byte	14
	.word	18535
	.byte	7,3,138,3,9,1,8
	.byte	'OBJECT_TASK',0,0,8
	.byte	'OBJECT_ISR',0,1,8
	.byte	'OBJECT_ALARM',0,2,8
	.byte	'OBJECT_RESOURCE',0,3,8
	.byte	'OBJECT_COUNTER',0,4,8
	.byte	'OBJECT_SCHEDULETABLE',0,5,8
	.byte	'OBJECT_SPINLOCK',0,6,0,14
	.word	135
	.byte	16
	.byte	'Os_ExceptionSourceIdRefType',0,3,250,1,61
	.word	18670
	.byte	14
	.word	135
	.byte	16
	.byte	'Os_InterruptSourceIdRefType',0,3,242,1,61
	.word	18712
	.byte	7,11,202,1,9,1,8
	.byte	'OS_PERIPHERALID_COUNT',0,0,0,14
	.word	17392
	.byte	16
	.byte	'Os_ErrorInformationRefType',0,3,147,6,64
	.word	18785
	.byte	7,11,208,1,9,1,8
	.byte	'OS_BARRIERID_COUNT',0,0,0,9,64
	.word	135
	.byte	10,15,0,11
	.byte	'Os_ExceptionContextType_Tag',0,41,71,8,160,1,12
	.byte	'AddressRegisters',0
	.word	18854
	.byte	64,2,35,0,12
	.byte	'DataRegisters',0
	.word	18854
	.byte	64,2,35,64,12
	.byte	'Ra',0
	.word	135
	.byte	4,3,35,128,1,12
	.byte	'Psw',0
	.word	135
	.byte	4,3,35,132,1,12
	.byte	'ExceptionSource',0
	.word	135
	.byte	4,3,35,136,1,12
	.byte	'Pcpn',0
	.word	135
	.byte	4,3,35,140,1,12
	.byte	'Pie',0
	.word	135
	.byte	4,3,35,144,1,12
	.byte	'MpuRegionForStackLow',0
	.word	135
	.byte	4,3,35,148,1,12
	.byte	'MpuRegionForStackUpper',0
	.word	135
	.byte	4,3,35,152,1,12
	.byte	'RawPCXI',0
	.word	135
	.byte	4,3,35,156,1,0,14
	.word	18863
	.byte	16
	.byte	'Os_ExceptionContextRefType',0,3,254,1,60
	.word	19111
	.byte	7,3,250,6,9,1,8
	.byte	'OS_CORESTARTSTATE_START_UNREQUESTED',0,0,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_ASR',0,1,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_NONASR',0,2,8
	.byte	'OS_CORESTARTSTATE_STARTED_ASR',0,3,8
	.byte	'OS_CORESTARTSTATE_STARTED_NONASR',0,4,0,14
	.word	19152
	.byte	24
	.byte	'Os_ParamType_Tag',0,39,88,7,8,12
	.byte	'ParamAlarmBaseRefType',0
	.word	17531
	.byte	4,2,35,0,12
	.byte	'ParamAlarmType',0
	.word	17557
	.byte	1,2,35,0,12
	.byte	'ParamAppModeType',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ParamApplicationStateRefType',0
	.word	17688
	.byte	4,2,35,0,12
	.byte	'ParamApplicationStateType',0
	.word	6388
	.byte	1,2,35,0,12
	.byte	'ParamApplicationType',0
	.word	11308
	.byte	1,2,35,0,12
	.byte	'Paramboolean',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ParambooleanRefType',0
	.word	17721
	.byte	4,2,35,0,12
	.byte	'ParamCoreIdType',0
	.word	3791
	.byte	1,2,35,0,12
	.byte	'ParamCounterType',0
	.word	17726
	.byte	1,2,35,0,12
	.byte	'ParamEventMaskType',0
	.word	9058
	.byte	8,2,35,0,12
	.byte	'ParamEventMaskRefType',0
	.word	17768
	.byte	4,2,35,0,12
	.byte	'ParamISRType',0
	.word	7037
	.byte	1,2,35,0,12
	.byte	'ParamIdleModeType',0
	.word	17773
	.byte	1,2,35,0,12
	.byte	'ParamMemorySizeType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamMemoryStartAddressType',0
	.word	17825
	.byte	4,2,35,0,12
	.byte	'ParamResourceType',0
	.word	17857
	.byte	1,2,35,0,12
	.byte	'ParamRestartType',0
	.word	17899
	.byte	1,2,35,0,12
	.byte	'ParamScheduleTableStatusRefType',0
	.word	18097
	.byte	4,2,35,0,12
	.byte	'ParamScheduleTableStatusType',0
	.word	17952
	.byte	1,2,35,0,12
	.byte	'ParamScheduleTableType',0
	.word	18133
	.byte	1,2,35,0,12
	.byte	'ParamSpinlockIdType',0
	.word	18158
	.byte	1,2,35,0,12
	.byte	'ParamStatusType',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ParamStatusRefType',0
	.word	18206
	.byte	4,2,35,0,12
	.byte	'ParamStd_VersionInfoRefType',0
	.word	18332
	.byte	4,2,35,0,12
	.byte	'ParamTaskRefType',0
	.word	18342
	.byte	4,2,35,0,12
	.byte	'ParamTaskStateRefType',0
	.word	18415
	.byte	4,2,35,0,12
	.byte	'ParamTaskStateType',0
	.word	18363
	.byte	1,2,35,0,12
	.byte	'ParamTaskType',0
	.word	6496
	.byte	1,2,35,0,12
	.byte	'ParamTickRefType',0
	.word	18446
	.byte	4,2,35,0,12
	.byte	'ParamTickType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamTrustedFunctionIndexType',0
	.word	12008
	.byte	1,2,35,0,12
	.byte	'ParamTrustedFunctionParameterRefType',0
	.word	12054
	.byte	4,2,35,0,12
	.byte	'ParamTryToGetSpinlockRefType',0
	.word	18530
	.byte	4,2,35,0,12
	.byte	'ParamTryToGetSpinlockConstRefType',0
	.word	18540
	.byte	4,2,35,0,12
	.byte	'Paramuint32',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamVoidRefType',0
	.word	17820
	.byte	4,2,35,0,12
	.byte	'ParamObjectTypeType',0
	.word	18545
	.byte	1,2,35,0,12
	.byte	'ParamOs_NonTrustedFunctionIndexType',0
	.word	12148
	.byte	1,2,35,0,12
	.byte	'ParamOs_NonTrustedFunctionParameterRefType',0
	.word	12187
	.byte	4,2,35,0,12
	.byte	'ParamOs_FastTrustedFunctionIndexType',0
	.word	12288
	.byte	1,2,35,0,12
	.byte	'ParamOs_FastTrustedFunctionParameterRefType',0
	.word	12328
	.byte	4,2,35,0,12
	.byte	'ParamExceptionSourceIdType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamInterruptSourceIdType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamExceptionSourceIdRefType',0
	.word	18675
	.byte	4,2,35,0,12
	.byte	'ParamInterruptSourceIdRefType',0
	.word	18717
	.byte	4,2,35,0,12
	.byte	'ParamObjectIdType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamPeripheralIdType',0
	.word	18754
	.byte	1,2,35,0,12
	.byte	'ParamErrorInformationRefType',0
	.word	18790
	.byte	4,2,35,0,12
	.byte	'ParamHookIdType',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamBarrierIdType',0
	.word	18826
	.byte	1,2,35,0,12
	.byte	'ParamExceptionContextRefType',0
	.word	19116
	.byte	4,2,35,0,12
	.byte	'ParamCoreStartStateRefType',0
	.word	19347
	.byte	4,2,35,0,0,9,24
	.word	19352
	.byte	10,2,0,11
	.byte	'Os_ErrorParamsType_Tag',0,38,171,1,8,24,12
	.byte	'Parameter',0
	.word	21086
	.byte	24,2,35,0,0,16
	.byte	'Os_AddressOfConstType',0,3,241,6,43
	.word	17820
	.byte	11
	.byte	'Os_ErrorType_Tag',0,38,177,1,8,32,12
	.byte	'ErrorDetails',0
	.word	17392
	.byte	4,2,35,0,12
	.byte	'Parameters',0
	.word	21095
	.byte	24,2,35,4,12
	.byte	'ExceptionInstructionAddress',0
	.word	21144
	.byte	4,2,35,28,0,7,42,97,9,1,8
	.byte	'OS_UNHANDLEDEVENTREPORT_NOTAVAILABLE',0,0,8
	.byte	'OS_UNHANDLEDEVENTREPORT_AVAILABLE',0,1,0,17,34,123,9,4,12
	.byte	'InHookFlags',0
	.word	135
	.byte	4,2,35,0,0,16
	.byte	'Os_StackConfigRefType',0,5,156,2,56
	.word	5436
	.byte	11
	.byte	'Os_CoreAsrType_Tag',0,5,213,2,8,120,12
	.byte	'IntApiState',0
	.word	4791
	.byte	28,2,35,0,12
	.byte	'InterruptedThreadsCounter',0
	.word	4960
	.byte	2,2,35,28,12
	.byte	'InterruptedThreads',0
	.word	14238
	.byte	36,2,35,32,12
	.byte	'LastError',0
	.word	21175
	.byte	32,2,35,68,12
	.byte	'LastUnhandledIrq',0
	.word	135
	.byte	4,2,35,100,12
	.byte	'UnhandledIrqReported',0
	.word	21278
	.byte	1,2,35,104,12
	.byte	'LastUnhandledExc',0
	.word	135
	.byte	4,2,35,106,12
	.byte	'UnhandledExcReported',0
	.word	21278
	.byte	1,2,35,110,12
	.byte	'IdleMode',0
	.word	17773
	.byte	1,2,35,111,12
	.byte	'HookInfo',0
	.word	21359
	.byte	4,2,35,112,12
	.byte	'CurrentStack',0
	.word	21386
	.byte	4,2,35,116,0,14
	.word	21417
	.byte	17,44,114,9,4,12
	.byte	'AllocationMask',0
	.word	135
	.byte	4,2,35,0,0,14
	.word	21721
	.byte	14
	.word	135
	.byte	17,44,123,9,12,12
	.byte	'Dyn',0
	.word	21751
	.byte	4,2,35,0,12
	.byte	'Data',0
	.word	21756
	.byte	4,2,35,4,12
	.byte	'Size',0
	.word	3769
	.byte	2,2,35,8,12
	.byte	'BitLength',0
	.word	3769
	.byte	2,2,35,10,0,11
	.byte	'Os_SchedulerType_Tag',0,43,181,1,8,16,12
	.byte	'NextPriority',0
	.word	3769
	.byte	2,2,35,0,12
	.byte	'NextTask',0
	.word	6993
	.byte	4,2,35,4,12
	.byte	'CurrentPriority',0
	.word	3769
	.byte	2,2,35,8,12
	.byte	'CurrentTask',0
	.word	6993
	.byte	4,2,35,12,0,14
	.word	21827
	.byte	17,45,75,9,8,12
	.byte	'ReadIdx',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'WriteIdx',0
	.word	135
	.byte	4,2,35,4,0,14
	.word	21946
	.byte	17,45,85,9,4,12
	.byte	'Value',0
	.word	6993
	.byte	4,2,35,0,0,14
	.word	21992
	.byte	17,45,92,9,12,12
	.byte	'Dyn',0
	.word	21987
	.byte	4,2,35,0,12
	.byte	'Buffer',0
	.word	22013
	.byte	4,2,35,4,12
	.byte	'Size',0
	.word	135
	.byte	4,2,35,8,0,15
	.word	22018
	.byte	14
	.word	22067
	.byte	11
	.byte	'Os_SchedulerConfigType_Tag',0,43,196,1,8,24,12
	.byte	'BitArray',0
	.word	21761
	.byte	12,2,35,0,12
	.byte	'Dyn',0
	.word	21941
	.byte	4,2,35,12,12
	.byte	'TaskQueues',0
	.word	22072
	.byte	4,2,35,16,12
	.byte	'NumberOfPriorities',0
	.word	3769
	.byte	2,2,35,20,0,15
	.word	22077
	.byte	14
	.word	22190
	.byte	7,3,237,5,9,1,8
	.byte	'PRO_IGNORE',0,0,8
	.byte	'PRO_IGNORE_EXCEPTION',0,1,8
	.byte	'PRO_TERMINATETASKISR',0,2,8
	.byte	'PRO_TERMINATEAPPL',0,3,8
	.byte	'PRO_TERMINATEAPPL_RESTART',0,4,8
	.byte	'PRO_SHUTDOWN',0,5,8
	.byte	'OS_PROTECTIONREACTION_COUNT',0,6,0,25
	.word	22200
	.byte	1,1,20
	.word	399
	.byte	0,14
	.word	22359
	.byte	16
	.byte	'Os_HookProtectionHookCbkType',0,33,115,9
	.word	22372
	.byte	11
	.byte	'Os_HookProtectionHookConfigType_Tag',0,33,207,1,8,80,12
	.byte	'Hook',0
	.word	10892
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	22377
	.byte	4,2,35,76,0,15
	.word	22414
	.byte	14
	.word	22489
	.byte	16
	.byte	'Os_HookInitHookCbkType',0,33,118,9
	.word	11139
	.byte	11
	.byte	'Os_HookInitHookConfigType_Tag',0,33,218,1,8,80,12
	.byte	'Hook',0
	.word	10892
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	22499
	.byte	4,2,35,76,0,15
	.word	22530
	.byte	14
	.word	22599
	.byte	16
	.byte	'Os_AppConfigRefType',0,5,128,3,54
	.word	12003
	.byte	15
	.word	22609
	.byte	14
	.word	22638
	.byte	11
	.byte	'Os_ResourceConfigType_Tag',0,46,171,1,8,20,12
	.byte	'Lock',0
	.word	5576
	.byte	12,2,35,0,12
	.byte	'Core',0
	.word	.L213-.L36
	.byte	4,2,35,12,12
	.byte	'ResourceId',0
	.word	17857
	.byte	1,2,35,16,12
	.byte	'CeilingPriority',0
	.word	3769
	.byte	2,2,35,18,0,15
	.word	22648
	.byte	14
	.word	22754
	.byte	16
	.byte	'Os_ResourceConfigRefType',0,5,252,2,59
	.word	22759
	.byte	15
	.word	22764
	.byte	14
	.word	22798
	.byte	11
	.byte	'Os_Hal_CoreAsrConfigType_Tag',0,6,127,8,4,12
	.byte	'CoreId',0
	.word	135
	.byte	4,2,35,0,0,15
	.word	22808
	.byte	14
	.word	22859
	.byte	9,24
	.word	135
	.byte	10,5,0,11
	.byte	'Os_Hal_MpCoreConfigType_Tag',0,32,93,8,88,12
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,1,12
	.byte	'MpuDataRegions',0
	.word	9614
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionReadEnable',0
	.word	22869
	.byte	24,2,35,8,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	22869
	.byte	24,2,35,32,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,56,12
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,57,12
	.byte	'MpuCodeRegions',0
	.word	9614
	.byte	4,2,35,60,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	22869
	.byte	24,2,35,64,0,15
	.word	22878
	.byte	14
	.word	23185
	.byte	11
	.byte	'Os_MpCoreConfigType_Tag',0,31,124,8,4,12
	.byte	'HwConfig',0
	.word	23190
	.byte	4,2,35,0,0,15
	.word	23195
	.byte	14
	.word	23243
	.byte	17,47,131,2,9,20,12
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Compare',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'ValueMask',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'HwLastCounterValue',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'HwTimeAtLogicalZero',0
	.word	135
	.byte	4,2,35,16,0,14
	.word	23253
	.byte	11
	.byte	'Os_Hal_TimerFrtConfigType_Tag',0,48,106,8,40,12
	.byte	'CounterRegisterAddress',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'CompareRegisterAddress',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'CMCONRegisterAddress',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'CMCONMask',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'CMCONValue',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'InterruptSRCRegisterAddress',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'ICRRegisterAddress',0
	.word	135
	.byte	4,2,35,24,12
	.byte	'ICRMask',0
	.word	135
	.byte	4,2,35,28,12
	.byte	'ICRValue',0
	.word	135
	.byte	4,2,35,32,12
	.byte	'ReloadValue',0
	.word	135
	.byte	4,2,35,36,0,15
	.word	23373
	.byte	14
	.word	23663
	.byte	11
	.byte	'Os_TimerHrtConfigType_Tag',0,47,158,2,8,56,12
	.byte	'Counter',0
	.word	7970
	.byte	48,2,35,0,12
	.byte	'Dyn',0
	.word	23368
	.byte	4,2,35,48,12
	.byte	'HwConfig',0
	.word	23668
	.byte	4,2,35,52,0,15
	.word	23673
	.byte	14
	.word	23754
	.byte	11
	.byte	'Os_TpType_Tag',0,35,241,2,8,16,12
	.byte	'Snapshot',0
	.word	9058
	.byte	8,2,35,0,12
	.byte	'LastCounterValue',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'MonitoredThread',0
	.word	14194
	.byte	4,2,35,12,0,14
	.word	23764
	.byte	11
	.byte	'Os_TpConfigType_Tag',0,35,128,3,8,8,12
	.byte	'Timer',0
	.word	23759
	.byte	4,2,35,0,12
	.byte	'Dyn',0
	.word	23854
	.byte	4,2,35,4,0,15
	.word	23859
	.byte	14
	.word	23914
	.byte	15
	.word	21386
	.byte	14
	.word	23924
	.byte	7,49,86,9,1,8
	.byte	'OS_COREASRCOREIDX_0',0,0,8
	.byte	'OS_COREASRCOREIDX_COUNT',0,1,0,17,51,191,1,9,4,12
	.byte	'SendIdx',0
	.word	3769
	.byte	2,2,35,0,12
	.byte	'ResultIdx',0
	.word	3769
	.byte	2,2,35,2,0,13
	.word	23988
	.byte	14
	.word	24031
	.byte	17,51,211,1,9,2,12
	.byte	'ReceiveIdx',0
	.word	3769
	.byte	2,2,35,0,0,13
	.word	24041
	.byte	15
	.word	24068
	.byte	14
	.word	24073
	.byte	7,52,77,9,1,8
	.byte	'OS_XSIGFUNCTIONIDX_USEDCOUNT',0,0,8
	.byte	'XSigFunctionIdx_ActivateTask',0,0,8
	.byte	'XSigFunctionIdx_CancelAlarm',0,1,8
	.byte	'XSigFunctionIdx_ControlIdle',0,2,8
	.byte	'XSigFunctionIdx_GetAlarm',0,3,8
	.byte	'XSigFunctionIdx_GetApplicationState',0,4,8
	.byte	'XSigFunctionIdx_GetCounterValue',0,5,8
	.byte	'XSigFunctionIdx_GetErrorHookStackUsage',0,6,8
	.byte	'XSigFunctionIdx_GetEvent',0,7,8
	.byte	'XSigFunctionIdx_GetISRStackUsage',0,8,8
	.byte	'XSigFunctionIdx_GetKernelStackUsage',0,9,8
	.byte	'XSigFunctionIdx_GetProtectionHookStackUsage',0,10,8
	.byte	'XSigFunctionIdx_GetScheduleTableStatus',0,11,8
	.byte	'XSigFunctionIdx_GetShutdownHookStackUsage',0,12,8
	.byte	'XSigFunctionIdx_GetStartupHookStackUsage',0,13,8
	.byte	'XSigFunctionIdx_GetTaskStackUsage',0,14,8
	.byte	'XSigFunctionIdx_GetTaskState',0,15,8
	.byte	'XSigFunctionIdx_HookCallCallback',0,16,8
	.byte	'XSigFunctionIdx_NextScheduleTable',0,17,8
	.byte	'XSigFunctionIdx_SetAbsAlarm',0,18,8
	.byte	'XSigFunctionIdx_SetEvent',0,19,8
	.byte	'XSigFunctionIdx_SetRelAlarm',0,20,8
	.byte	'XSigFunctionIdx_ShutdownAllCores',0,21,8
	.byte	'XSigFunctionIdx_StartScheduleTableAbs',0,22,8
	.byte	'XSigFunctionIdx_StartScheduleTableRel',0,23,8
	.byte	'XSigFunctionIdx_StopScheduleTable',0,24,8
	.byte	'XSigFunctionIdx_TerminateApplication',0,25,8
	.byte	'OS_XSIGFUNCTIONIDX_COUNT',0,26,0,9,32
	.word	19352
	.byte	10,3,0,17,51,119,9,32,12
	.byte	'ParameterData',0
	.word	25067
	.byte	32,2,35,0,0,7,51,94,9,1,8
	.byte	'OS_XSIGSTATE_ASYNC_NACK',0,0,8
	.byte	'OS_XSIGSTATE_SYNC_NACK',0,1,8
	.byte	'OS_XSIGSTATE_SYNC_PENDING',0,2,8
	.byte	'OS_XSIGSTATE_ACK',0,3,0,11
	.byte	'Os_XSigSendDataType_Tag',0,51,151,1,8,48,12
	.byte	'FunctionIdx',0
	.word	24083
	.byte	1,2,35,0,12
	.byte	'ParameterData',0
	.word	25076
	.byte	32,2,35,4,12
	.byte	'Sender',0
	.word	14194
	.byte	4,2,35,36,12
	.byte	'SenderApp',0
	.word	12003
	.byte	4,2,35,40,12
	.byte	'Acknowledge',0
	.word	25105
	.byte	1,2,35,44,0,13
	.word	25209
	.byte	14
	.word	25340
	.byte	17,51,129,1,9,8,12
	.byte	'ParameterData',0
	.word	19352
	.byte	8,2,35,0,0,17,51,140,1,9,12,12
	.byte	'Status',0
	.word	416
	.byte	2,2,35,0,12
	.byte	'OutputParameter',0
	.word	25350
	.byte	8,2,35,4,0,11
	.byte	'Os_XSigRecvDataType_Tag',0,51,175,1,8,12,12
	.byte	'ReturnData',0
	.word	25380
	.byte	12,2,35,0,0,13
	.word	25428
	.byte	14
	.word	25479
	.byte	17,51,104,9,12,12
	.byte	'SendData',0
	.word	25345
	.byte	4,2,35,0,12
	.byte	'RecvData',0
	.word	25484
	.byte	4,2,35,4,12
	.byte	'Idx',0
	.word	3769
	.byte	2,2,35,8,0,15
	.word	25489
	.byte	14
	.word	25544
	.byte	17,51,221,1,9,16,12
	.byte	'Dyn',0
	.word	24036
	.byte	4,2,35,0,12
	.byte	'Receive',0
	.word	24078
	.byte	4,2,35,4,12
	.byte	'Buffer',0
	.word	25549
	.byte	4,2,35,8,12
	.byte	'BufferSize',0
	.word	3769
	.byte	2,2,35,12,0,15
	.word	11407
	.byte	14
	.word	25627
	.byte	15
	.word	25076
	.byte	14
	.word	25637
	.byte	14
	.word	25350
	.byte	25
	.word	416
	.byte	1,1,20
	.word	25632
	.byte	20
	.word	25642
	.byte	20
	.word	25647
	.byte	0,14
	.word	25652
	.byte	16
	.byte	'Os_XSigFunctionType',0,50,177,1,9
	.word	25675
	.byte	17,50,186,1,9,4,12
	.byte	'FunctionRef',0
	.word	25680
	.byte	4,2,35,0,0,9,4
	.word	25709
	.byte	10,0,0,11
	.byte	'Os_XSigFunctionTableConfigType_Tag',0,50,194,1,8,4,12
	.byte	'FunctionDescription',0
	.word	25737
	.byte	4,2,35,0,0,15
	.word	25746
	.byte	14
	.word	25817
	.byte	13
	.word	24041
	.byte	14
	.word	25827
	.byte	13
	.word	23988
	.byte	15
	.word	25837
	.byte	14
	.word	25842
	.byte	17,51,238,1,9,16,12
	.byte	'Dyn',0
	.word	25832
	.byte	4,2,35,0,12
	.byte	'Send',0
	.word	25847
	.byte	4,2,35,4,12
	.byte	'Buffer',0
	.word	25549
	.byte	4,2,35,8,12
	.byte	'BufferSize',0
	.word	3769
	.byte	2,2,35,12,0,11
	.byte	'Os_XSigRecvPortConfigType_Tag',0,50,202,1,8,20,12
	.byte	'RecvChannel',0
	.word	25852
	.byte	16,2,35,0,12
	.byte	'SendPort',0
	.word	.L218-.L36
	.byte	4,2,35,16,0,15
	.word	25922
	.byte	14
	.word	25998
	.byte	16
	.byte	'Os_XSigRecvPortConfigRefType',0,53,81,65
	.word	26003
	.byte	15
	.word	26008
	.byte	14
	.word	26045
	.byte	11
	.byte	'Os_Hal_XSigInterruptConfigType_Tag',0,6,149,1,8,4,12
	.byte	'ConfigData',0
	.word	3525
	.byte	4,2,35,0,0,15
	.word	26055
	.byte	14
	.word	26117
	.byte	11
	.byte	'Os_XSigIsrConfigType_Tag',0,50,232,1,8,84,12
	.byte	'IsrCfg',0
	.word	7100
	.byte	68,2,35,0,12
	.byte	'FunctionTable',0
	.word	25822
	.byte	4,2,35,68,12
	.byte	'RecvPortRefs',0
	.word	26050
	.byte	4,2,35,72,12
	.byte	'RecvPortCount',0
	.word	3769
	.byte	2,2,35,76,12
	.byte	'HwConfig',0
	.word	26122
	.byte	4,2,35,80,0,15
	.word	26127
	.byte	14
	.word	26261
	.byte	11
	.byte	'Os_XSigSendPortConfigType_Tag',0,50,213,1,8,28,12
	.byte	'SendChannel',0
	.word	25554
	.byte	16,2,35,0,12
	.byte	'XSigIsr',0
	.word	26266
	.byte	4,2,35,16,12
	.byte	'RecvPort',0
	.word	26003
	.byte	4,2,35,20,12
	.byte	'SendCore',0
	.word	.L213-.L36
	.byte	4,2,35,24,0,15
	.word	26271
.L218:
	.byte	14
	.word	26382
	.byte	9,4
	.word	26387
	.byte	10,0,0,16
	.byte	'Os_XSigIsrConfigRefType',0,53,68,60
	.word	26266
	.byte	15
	.word	26401
	.byte	14
	.word	26433
	.byte	11
	.byte	'Os_XSigConfigType_Tag',0,50,135,2,8,12,12
	.byte	'SendPorts',0
	.word	26392
	.byte	4,2,35,0,12
	.byte	'RecvIsrRefs',0
	.word	26438
	.byte	4,2,35,4,12
	.byte	'RecvIsrCount',0
	.word	3769
	.byte	2,2,35,8,0,15
	.word	26443
	.byte	14
	.word	26534
	.byte	7,55,53,9,1,8
	.byte	'OS_IOCLOCKMODE_NONE',0,0,8
	.byte	'OS_IOCLOCKMODE_INTERRUPTS',0,1,8
	.byte	'OS_IOCLOCKMODE_SPINLOCKS',0,2,8
	.byte	'OS_IOCLOCKMODE_ALL',0,3,0,7,55,67,9,1,8
	.byte	'OS_IOCCHANNELSTATE_DISABLED',0,0,8
	.byte	'OS_IOCCHANNELSTATE_ENABLED',0,1,0,11
	.byte	'Os_IocType_Tag',0,54,146,3,8,1,12
	.byte	'State',0
	.word	26648
	.byte	1,2,35,0,0,13
	.word	26713
	.byte	14
	.word	26750
	.byte	7,54,154,3,9,1,8
	.byte	'Ioc08Receive',0,0,8
	.byte	'Ioc08MultiReceive',0,1,8
	.byte	'Ioc08Send',0,2,8
	.byte	'Ioc16Receive',0,3,8
	.byte	'Ioc16MultiReceive',0,4,8
	.byte	'Ioc16Send',0,5,8
	.byte	'Ioc32Receive',0,6,8
	.byte	'Ioc32MultiReceive',0,7,8
	.byte	'Ioc32Send',0,8,8
	.byte	'IocRefReceive',0,9,8
	.byte	'IocRefMultiReceive',0,10,8
	.byte	'IocRefSend',0,11,8
	.byte	'IocRead',0,12,8
	.byte	'IocWrite',0,13,0,11
	.byte	'Os_IocConfigType_Tag',0,54,174,3,8,20,12
	.byte	'Spinlock',0
	.word	6355
	.byte	4,2,35,0,12
	.byte	'LockMode',0
	.word	26544
	.byte	1,2,35,4,12
	.byte	'Dyn',0
	.word	26755
	.byte	4,2,35,8,12
	.byte	'SubClass',0
	.word	26760
	.byte	1,2,35,12,12
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,14,0,15
	.word	26979
	.byte	14
	.word	27105
	.byte	16
	.byte	'Os_IocConfigRefType',0,5,160,2,54
	.word	27110
	.byte	15
	.word	27115
	.byte	14
	.word	27144
	.byte	7,56,117,9,1,8
	.byte	'OS_BARRIERATTENDEESTATE_DETACHED',0,0,8
	.byte	'OS_BARRIERATTENDEESTATE_ATTACHED',0,1,0,11
	.byte	'Os_BarrierBaseType_Tag',0,56,131,1,8,2,12
	.byte	'AttendeeState',0
	.word	27154
	.byte	1,2,35,0,12
	.byte	'Counter',0
	.word	399
	.byte	1,2,35,1,0,13
	.word	27230
	.byte	14
	.word	27300
	.byte	16
	.byte	'Os_BarrierAttendeeRefType',0,56,115,69
	.word	.L219-.L36
	.byte	15
	.word	27310
	.byte	14
	.word	27344
	.byte	11
	.byte	'Os_BarrierBaseConfigType_Tag',0,56,142,1,8,16,12
	.byte	'Dyn',0
	.word	27305
	.byte	4,2,35,0,12
	.byte	'AttendeeRefs',0
	.word	27349
	.byte	4,2,35,4,12
	.byte	'AttendeeCount',0
	.word	399
	.byte	1,2,35,8,12
	.byte	'TaskPtr',0
	.word	6993
	.byte	4,2,35,12,0,15
	.word	27354
.L219:
	.byte	14
	.word	27465
	.byte	16
	.byte	'Os_BarrierBaseConfigRefType',0,57,62,62
	.word	27470
	.byte	15
	.word	27475
	.byte	14
	.word	27511
	.byte	11
	.byte	'Os_ThreadClassType_Tag',0,14,109,8,4,12
	.byte	'InitialFpuContext',0
	.word	13714
	.byte	4,2,35,0,0,14
	.word	27521
	.byte	11
	.byte	'Os_CoreAsrConfigType_Tag',0,5,133,3,8,148,1,12
	.byte	'Core',0
	.word	4424
	.byte	24,2,35,0,12
	.byte	'Dyn',0
	.word	21716
	.byte	4,2,35,24,12
	.byte	'Scheduler',0
	.word	22195
	.byte	4,2,35,28,12
	.byte	'IdleTask',0
	.word	6993
	.byte	4,2,35,32,12
	.byte	'KernelApp',0
	.word	12003
	.byte	4,2,35,36,12
	.byte	'KernelStack',0
	.word	5436
	.byte	4,2,35,40,12
	.byte	'PreStartTask',0
	.word	6993
	.byte	4,2,35,44,12
	.byte	'StartupHookRef',0
	.word	11125
	.byte	4,2,35,48,12
	.byte	'ShutdownHookRef',0
	.word	11253
	.byte	4,2,35,52,12
	.byte	'ErrorHookRef',0
	.word	11253
	.byte	4,2,35,56,12
	.byte	'ProtectionHookRef',0
	.word	22494
	.byte	4,2,35,60,12
	.byte	'InitHookRef',0
	.word	22604
	.byte	4,2,35,64,12
	.byte	'HookRefs',0
	.word	11303
	.byte	4,2,35,68,12
	.byte	'HookCount',0
	.word	3769
	.byte	2,2,35,72,12
	.byte	'AppRefs',0
	.word	22643
	.byte	4,2,35,76,12
	.byte	'AppCount',0
	.word	3769
	.byte	2,2,35,80,12
	.byte	'ResourceRefs',0
	.word	22803
	.byte	4,2,35,84,12
	.byte	'ResourceCount',0
	.word	3769
	.byte	2,2,35,88,12
	.byte	'HwConfig',0
	.word	22864
	.byte	4,2,35,92,12
	.byte	'MemoryProtection',0
	.word	23248
	.byte	4,2,35,96,12
	.byte	'TimingProtection',0
	.word	23919
	.byte	4,2,35,100,12
	.byte	'StackRefs',0
	.word	23929
	.byte	4,2,35,104,12
	.byte	'StackCount',0
	.word	3769
	.byte	2,2,35,108,12
	.byte	'CoreIdx',0
	.word	23934
	.byte	1,2,35,110,12
	.byte	'XSignal',0
	.word	26539
	.byte	4,2,35,112,12
	.byte	'IocRefs',0
	.word	27149
	.byte	4,2,35,116,12
	.byte	'IocCount',0
	.word	3769
	.byte	2,2,35,120,12
	.byte	'Barrier',0
	.word	27470
	.byte	4,2,35,124,12
	.byte	'BarrierRefs',0
	.word	27516
	.byte	4,3,35,128,1,12
	.byte	'BarrierCount',0
	.word	3769
	.byte	2,3,35,132,1,12
	.byte	'ThreadClass',0
	.word	27577
	.byte	4,3,35,136,1,12
	.byte	'IsrRefs',0
	.word	7256
	.byte	4,3,35,140,1,12
	.byte	'IsrCount',0
	.word	3769
	.byte	2,3,35,144,1,0,15
	.word	27582
.L213:
	.byte	14
	.word	28276
	.byte	3
	.byte	'Os_CounterGetCore',0,3,4,182,1,1
	.word	28281
	.byte	1,1,5
	.byte	'Counter',0,4,182,1,1
	.word	8141
	.byte	4,0,15
	.word	3593
	.byte	14
	.word	28335
	.byte	15
	.word	13822
	.byte	14
	.word	28345
	.byte	15
	.word	5576
	.byte	14
	.word	28355
	.byte	15
	.word	6177
	.byte	14
	.word	28365
	.byte	15
	.word	6697
	.byte	14
	.word	28375
	.byte	15
	.word	7100
	.byte	14
	.word	28385
	.byte	15
	.word	7261
	.byte	14
	.word	28395
	.byte	15
	.word	7970
	.byte	14
	.word	28405
	.byte	14
	.word	7600
	.byte	15
	.word	8327
	.byte	14
	.word	28420
	.byte	15
	.word	9337
	.byte	14
	.word	28430
	.byte	15
	.word	10629
	.byte	14
	.word	28440
	.byte	14
	.word	11012
	.byte	14
	.word	11130
	.byte	15
	.word	10892
	.byte	14
	.word	28460
	.byte	14
	.word	12043
	.byte	14
	.word	12043
	.byte	14
	.word	12043
	.byte	14
	.word	11012
	.byte	14
	.word	17454
	.byte	14
	.word	6388
	.byte	15
	.word	12043
	.byte	14
	.word	28500
	.byte	14
	.word	17952
	.byte	14
	.word	6496
	.byte	14
	.word	18363
	.byte	14
	.word	135
	.byte	14
	.word	135
	.byte	14
	.word	135
	.byte	14
	.word	17392
	.byte	14
	.word	18863
	.byte	15
	.word	12043
	.byte	14
	.word	28550
	.byte	15
	.word	5361
	.byte	14
	.word	28560
	.byte	14
	.word	22359
	.byte	14
	.word	11130
	.byte	15
	.word	11407
	.byte	14
	.word	28580
	.byte	15
	.word	22648
	.byte	14
	.word	28590
	.byte	14
	.word	25652
	.byte	15
	.word	25922
	.byte	14
	.word	28605
	.byte	15
	.word	26127
	.byte	14
	.word	28615
	.byte	15
	.word	26979
	.byte	14
	.word	28625
	.byte	15
	.word	27354
	.byte	14
	.word	28635
	.byte	15
	.word	27354
	.byte	14
	.word	28645
	.byte	3
	.byte	'Os_CounterIsFutureValue',0,3,4,200,1,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,4,200,1,1
	.word	8141
	.byte	5
	.byte	'Value',0,4,200,1,1
	.word	135
	.byte	5
	.byte	'ReferenceValue',0,4,200,1,1
	.word	135
	.byte	26,4,0,0
.L135:
	.byte	3
	.byte	'Os_CounterIsFutureValueInternal',0,3,4,225,1,1
	.word	236
	.byte	1,1
.L137:
	.byte	5
	.byte	'MaxCountingValue',0,4,225,1,1
	.word	135
.L139:
	.byte	5
	.byte	'MaxDifferentialValue',0,4,225,1,1
	.word	135
.L141:
	.byte	5
	.byte	'Value',0,4,225,1,1
	.word	135
.L143:
	.byte	5
	.byte	'ReferenceValue',0,4,225,1,1
	.word	135
.L145:
	.byte	26,4,4,0,0,3
	.byte	'Os_CounterCheckValueLeMaxAllowed',0,3,4,145,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,4,145,2,1
	.word	8141
	.byte	5
	.byte	'Value',0,4,145,2,1
	.word	135
	.byte	26,4,0,0,3
	.byte	'Os_CounterCheckValueLeReducedMaxAllowed',0,3,4,159,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,4,159,2,1
	.word	8141
	.byte	5
	.byte	'Reduce',0,4,159,2,1
	.word	135
	.byte	5
	.byte	'Value',0,4,159,2,1
	.word	135
	.byte	26,4,4,0,0,3
	.byte	'Os_CounterCheckValueGeMinCycleOrZero',0,3,4,175,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,4,175,2,1
	.word	8141
	.byte	5
	.byte	'Cycle',0,4,175,2,1
	.word	135
	.byte	26,4,0,0,15
	.word	7367
	.byte	14
	.word	29166
	.byte	3
	.byte	'Os_CounterGetCharacteristics',0,3,4,189,2,1
	.word	29171
	.byte	1,1,5
	.byte	'Counter',0,4,189,2,1
	.word	8141
	.byte	4,0,3
	.byte	'Os_CounterGetMaxAllowedValue',0,3,4,203,2,1
	.word	135
	.byte	1,1,5
	.byte	'Counter',0,4,203,2,1
	.word	8141
	.byte	4,0,3
	.byte	'Os_CounterGetMaxCountingValue',0,3,4,217,2,1
	.word	135
	.byte	1,1,5
	.byte	'Counter',0,4,217,2,1
	.word	8141
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableGlobal',0,3,58,92,1,1,1,4,0,6
	.byte	'Os_Hal_IntDisableGlobal',0,3,58,108,1,1,1,4,0,3
	.byte	'Os_Hal_IntDisableAndReturnGlobalState',0,3,58,125,1
	.word	135
	.byte	1,1,4,0,15
	.word	135
	.byte	14
	.word	29473
	.byte	6
	.byte	'Os_Hal_IntSetGlobalState',0,3,58,148,1,1,1,1,5
	.byte	'State',0,58,148,1,1
	.word	29478
	.byte	4,0,14
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetLevel',0,3,58,173,1,1,1,1,5
	.byte	'Level',0,58,173,1,1
	.word	29533
	.byte	4,0,15
	.word	135
	.byte	14
	.word	29582
	.byte	6
	.byte	'Os_Hal_IntSetLevel',0,3,58,194,1,1,1,1,5
	.byte	'Level',0,58,194,1,1
	.word	29587
	.byte	26,4,4,0,0,14
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetGlobalEnable',0,3,58,223,1,1,1,1,5
	.byte	'State',0,58,223,1,1
	.word	29639
	.byte	4,0,6
	.byte	'Os_Hal_IntGetCat2LockLevel',0,3,58,242,1,1,1,1,5
	.byte	'Level',0,58,242,1,1
	.word	29533
	.byte	4,0,6
	.byte	'Os_Hal_IntGetTaskLevel',0,3,58,171,2,1,1,1,5
	.byte	'Level',0,58,171,2,1
	.word	29533
	.byte	4,0,14
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetInterruptState',0,3,58,190,2,1,1,1,5
	.byte	'InterruptState',0,58,190,2,1
	.word	29795
	.byte	4,0,6
	.byte	'Os_Hal_IntDisableSource',0,3,58,212,2,1,1,1,5
	.byte	'IsrConfig',0,58,212,2,1
	.word	3525
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableSource',0,3,58,246,2,1,1,1,5
	.byte	'IsrConfig',0,58,246,2,1
	.word	3525
	.byte	4,0,6
	.byte	'Os_Hal_IntClearPending',0,3,58,162,3,1,1,1,5
	.byte	'IsrConfig',0,58,162,3,1
	.word	3525
	.byte	4,0,3
	.byte	'Os_Hal_IntIsrLevelIsLe',0,3,58,179,4,1
	.word	236
	.byte	1,1,5
	.byte	'IsrConfig',0,58,179,4,1
	.word	3525
	.byte	5
	.byte	'Level',0,58,179,4,1
	.word	29587
	.byte	4,0,3
	.byte	'Os_Hal_IntLevelIsGt',0,3,58,199,4,1
	.word	236
	.byte	1,1,5
	.byte	'LevelX',0,58,199,4,1
	.word	29587
	.byte	5
	.byte	'LevelY',0,58,199,4,1
	.word	29587
	.byte	4,0,6
	.byte	'Os_Hal_IntInterruptSourceInit',0,3,58,141,5,1,1,1,5
	.byte	'InterruptSource',0,58,141,5,1
	.word	3525
	.byte	4,0,6
	.byte	'Os_Hal_IntGetGlobalState',0,3,58,221,5,1,1,1,5
	.byte	'State',0,58,221,5,1
	.word	29639
	.byte	4,0,15
	.word	135
	.byte	14
	.word	30271
	.byte	6
	.byte	'Os_Hal_InitializeAccessDPRE',0,3,59,109,1,1,1,5
	.byte	'Value',0,59,109,1
	.word	30276
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessDPWE',0,3,59,127,1,1,1,5
	.byte	'Value',0,59,127,1
	.word	30276
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessCPXE',0,3,59,145,1,1,1,1,5
	.byte	'Value',0,59,145,1,1
	.word	30276
	.byte	4,0,15
	.word	399
	.byte	15
	.word	135
	.byte	15
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPRE',0,3,59,163,1,1,1,1,5
	.byte	'ProtectionSet',0,59,163,1,1
	.word	30436
	.byte	5
	.byte	'Mask',0,59,163,1,1
	.word	30441
	.byte	5
	.byte	'Value',0,59,163,1,1
	.word	30446
	.byte	4,0,15
	.word	399
	.byte	15
	.word	135
	.byte	15
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPWE',0,3,59,200,1,1,1,1,5
	.byte	'ProtectionSet',0,59,200,1,1
	.word	30541
	.byte	5
	.byte	'Mask',0,59,200,1,1
	.word	30546
	.byte	5
	.byte	'Value',0,59,200,1,1
	.word	30551
	.byte	4,0,15
	.word	399
	.byte	15
	.word	135
	.byte	15
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessCPXE',0,3,59,237,1,1,1,1,5
	.byte	'ProtectionSet',0,59,237,1,1
	.word	30646
	.byte	5
	.byte	'Mask',0,59,237,1,1
	.word	30651
	.byte	5
	.byte	'Value',0,59,237,1,1
	.word	30656
	.byte	4,0,15
	.word	135
	.byte	6
	.byte	'Os_Hal_ContextPreparePRS',0,3,59,145,2,1,1,1,5
	.byte	'PcxiAddr',0,59,145,2,1
	.word	30751
	.byte	5
	.byte	'CurrentConfig',0,59,145,2,1
	.word	5163
	.byte	4,0,3
	.byte	'Os_Hal_CoreGetId',0,3,59,158,2,1
	.word	135
	.byte	1,1,4,0,11
	.byte	'Os_Hal_Core2ThreadType_Tag',0,6,135,1,8,4,12
	.byte	'Thread',0
	.word	14194
	.byte	4,2,35,0,0,14
	.word	30863
	.byte	9,4
	.word	30913
	.byte	10,0,0,11
	.byte	'Os_Hal_Core2ThreadConfigType_Tag',0,6,143,1,8,4,12
	.byte	'Core2Thread',0
	.word	30918
	.byte	4,2,35,0,0,15
	.word	30927
	.byte	14
	.word	30988
	.byte	6
	.byte	'Os_Hal_CoreSetThread',0,3,60,130,1,1,1,1,5
	.byte	'Core2Thread',0,60,130,1,1
	.word	30993
	.byte	5
	.byte	'Thread',0,60,130,1,1
	.word	14194
	.byte	26,4,4,0,0
.L161:
	.byte	3
	.byte	'Os_Hal_CoreGetThread',0,3,60,169,1,1
	.word	14194
	.byte	1,1
.L163:
	.byte	5
	.byte	'Core2Thread',0,60,169,1,1
	.word	30993
.L165:
	.byte	26,4,0,0,3
	.byte	'Os_Hal_CountLeadingZeros',0,3,60,128,2,1
	.word	399
	.byte	1,1,5
	.byte	'BitField',0,60,128,2,1
	.word	135
	.byte	4,0,3
	.byte	'Os_Hal_StackEndGet',0,3,60,141,2,1
	.word	5356
	.byte	1,1,5
	.byte	'LowAddress',0,60,141,2,1
	.word	5356
	.byte	5
	.byte	'HighAddress',0,60,141,2,1
	.word	5356
	.byte	4,0,13
	.word	135
	.byte	14
	.word	31258
	.byte	6
	.byte	'Os_Hal_SpinInit',0,3,60,216,2,1,1,1,5
	.byte	'Spinlock',0,60,216,2,1
	.word	31263
	.byte	4,0,13
	.word	135
	.byte	15
	.word	31312
	.byte	14
	.word	31317
	.byte	3
	.byte	'Os_Hal_SpinIsLocked',0,3,60,231,2,1
	.word	236
	.byte	1,1,5
	.byte	'Spinlock',0,60,231,2,1
	.word	31322
	.byte	4,0,3
	.byte	'Os_Hal_SpinTryLock',0,3,60,245,2,1
	.word	135
	.byte	1,1,5
	.byte	'Spinlock',0,60,245,2,1
	.word	31263
	.byte	4,0,6
	.byte	'Os_Hal_SpinUnlock',0,3,60,133,3,1,1,1,5
	.byte	'Spinlock',0,60,133,3,1
	.word	31263
	.byte	4,0,6
	.byte	'Os_Hal_CoreNop',0,3,60,209,3,1,1,1,4,0,6
	.byte	'Os_StackOverflowCheck',0,3,61,138,1,1,1,1,26,4,4,4,0,0,14
	.word	4671
	.byte	6
	.byte	'Os_IntSuspend',0,3,62,126,1,1,1,5
	.byte	'State',0,62,126,1
	.word	31537
	.byte	26,4,4,0,0,15
	.word	4671
	.byte	14
	.word	31582
	.byte	6
	.byte	'Os_IntResume',0,3,62,166,1,1,1,1,5
	.byte	'State',0,62,166,1,1
	.word	31587
	.byte	26,4,0,0,15
	.word	4791
	.byte	14
	.word	31632
	.byte	3
	.byte	'Os_InterruptCheckEnabled',0,3,62,211,1,1
	.word	236
	.byte	1,1,5
	.byte	'InterruptState',0,62,211,1,1
	.word	31637
	.byte	26,4,0,0,6
	.byte	'Os_InterruptCleanup',0,3,62,231,1,1,1,1,5
	.byte	'InterruptState',0,62,231,1,1
	.word	12902
	.byte	4,0,6
	.byte	'Os_InterruptTpLockAllStart',0,3,62,142,3,1,1,1,5
	.byte	'Thread',0,62,142,3,1
	.word	14194
	.byte	26,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockAllStop',0,3,62,167,3,1,1,1,5
	.byte	'Thread',0,62,167,3,1
	.word	14194
	.byte	26,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStart',0,3,62,192,3,1,1,1,5
	.byte	'Thread',0,62,192,3,1
	.word	14194
	.byte	26,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStop',0,3,62,217,3,1,1,1,5
	.byte	'Thread',0,62,217,3,1
	.word	14194
	.byte	26,4,4,4,0,0,3
	.byte	'Os_Bit_CountLeadingZeros',0,3,63,123,1
	.word	399
	.byte	1,1,5
	.byte	'BitField',0,63,123,1
	.word	135
	.byte	26,4,4,0,0,15
	.word	21761
	.byte	14
	.word	32043
	.byte	3
	.byte	'Os_BitArrayIdxIsValid',0,3,64,79,1
	.word	3769
	.byte	1,1,5
	.byte	'BitArray',0,64,79,1
	.word	32048
	.byte	5
	.byte	'BitIdx',0,64,79,1
	.word	3769
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetAllocationIdx',0,3,64,108,1
	.word	3769
	.byte	1,1,5
	.byte	'BitArrayIdx',0,64,108,1
	.word	135
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetFieldIdx',0,3,64,127,1
	.word	3769
	.byte	1,1,5
	.byte	'BitArrayIdx',0,64,127,1
	.word	3769
	.byte	4,0,6
	.byte	'Os_BitArraySetBitInternal',0,3,64,181,1,1,1,1,5
	.byte	'BitArray',0,64,181,1,1
	.word	32048
	.byte	5
	.byte	'BitIdx',0,64,181,1,1
	.word	3769
	.byte	26,4,4,4,4,0,0,14
	.word	135
	.byte	15
	.word	135
	.byte	6
	.byte	'Os_DequeIdxDecrement',0,3,65,91,1,1,1,5
	.byte	'Index',0,65,91,1
	.word	32318
	.byte	5
	.byte	'Size',0,65,91,1
	.word	32323
	.byte	4,0,15
	.word	135
	.byte	6
	.byte	'Os_DequeIdxIncrement',0,3,65,116,1,1,1,5
	.byte	'Index',0,65,116,1
	.word	32318
	.byte	5
	.byte	'Size',0,65,116,1
	.word	32385
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigherOrEqual',0,3,66,115,1
	.word	236
	.byte	1,1,5
	.byte	'PrioX',0,66,115,1
	.word	3769
	.byte	5
	.byte	'PrioY',0,66,115,1
	.word	3769
	.byte	4,0,3
	.byte	'Os_SchedulerGetCurrentTask',0,3,66,143,1,1
	.word	6993
	.byte	1,1,5
	.byte	'Scheduler',0,66,143,1,1
	.word	22195
	.byte	4,0,3
	.byte	'Os_SchedulerTaskSwitchIsNeeded',0,3,66,156,1,1
	.word	236
	.byte	1,1,5
	.byte	'Scheduler',0,66,156,1,1
	.word	22195
	.byte	4,0,14
	.word	5672
	.byte	6
	.byte	'Os_LockListInit',0,3,67,90,1,1,1,5
	.byte	'LockList',0,67,90,1
	.word	32648
	.byte	4,0,15
	.word	5672
	.byte	14
	.word	32695
	.byte	3
	.byte	'Os_LockListNext',0,3,67,168,1,1
	.word	5667
	.byte	1,1,5
	.byte	'LockList',0,67,168,1,1
	.word	32700
	.byte	4,0,3
	.byte	'Os_LockListNextIterator',0,3,67,180,1,1
	.word	32648
	.byte	1,1,5
	.byte	'Iterator',0,67,180,1,1
	.word	32700
	.byte	4,0,3
	.byte	'Os_LockListIsEmpty',0,3,67,193,1,1
	.word	236
	.byte	1,1,5
	.byte	'LockList',0,67,193,1,1
	.word	32700
	.byte	4,0,3
	.byte	'Os_LockListIsTopRes',0,3,67,213,1,1
	.word	236
	.byte	1,1,5
	.byte	'LockList',0,67,213,1,1
	.word	32700
	.byte	26,4,4,0,0,3
	.byte	'Os_LockListIsTopSpinlock',0,3,67,131,2,1
	.word	236
	.byte	1,1,5
	.byte	'LockList',0,67,131,2,1
	.word	32700
	.byte	26,4,0,0,6
	.byte	'Os_LockInit',0,3,67,169,2,1,1,1,5
	.byte	'Lock',0,67,169,2,1
	.word	5667
	.byte	4,0,3
	.byte	'Os_LockIsResource',0,3,67,195,2,1
	.word	236
	.byte	1,1,5
	.byte	'Lock',0,67,195,2,1
	.word	5667
	.byte	4,0,3
	.byte	'Os_LockGetAccessingApplications',0,3,67,250,2,1
	.word	135
	.byte	1,1,5
	.byte	'Lock',0,67,250,2,1
	.word	5667
	.byte	4,0,3
	.byte	'Os_LockGetDyn',0,3,67,237,2,1
	.word	5477
	.byte	1,1,5
	.byte	'Lock',0,67,237,2,1
	.word	5667
	.byte	4,0,14
	.word	6360
	.byte	6
	.byte	'Os_SpinlockListInit',0,3,68,106,1,1,1,5
	.byte	'LockList',0,68,106,1
	.word	33158
	.byte	4,0,13
	.word	135
	.byte	11
	.byte	'Os_SpinlockType_Tag',0,19,189,1,8,20,12
	.byte	'Lock',0
	.word	5441
	.byte	4,2,35,0,12
	.byte	'OwnerThread',0
	.word	14194
	.byte	4,2,35,4,12
	.byte	'PreviousSpinlock',0
	.word	6355
	.byte	4,2,35,8,12
	.byte	'Spinlock',0
	.word	33209
	.byte	4,2,35,12,12
	.byte	'PreviousPriority',0
	.word	3769
	.byte	2,2,35,16,0,14
	.word	33214
	.byte	3
	.byte	'Os_SpinlockGetDyn',0,3,68,150,1,1
	.word	33346
	.byte	1,1,5
	.byte	'Spinlock',0,68,150,1,1
	.word	6355
	.byte	26,4,0,0,3
	.byte	'Os_SpinlockInternalTryGet',0,3,68,132,2,1
	.word	135
	.byte	1,1,5
	.byte	'Spinlock',0,68,132,2,1
	.word	6355
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_CoreAsrIsCoreLocal',0,3,69,126,1
	.word	236
	.byte	1,1,5
	.byte	'Core',0,69,126,1
	.word	28281
	.byte	26,4,0,0,15
	.word	4424
	.byte	14
	.word	33516
	.byte	3
	.byte	'Os_CoreGetCurrentCore',0,3,69,245,1,1
	.word	33521
	.byte	1,1,26,4,0,0,3
	.byte	'Os_Core2AsrCore',0,3,69,204,1,1
	.word	28281
	.byte	1,1,5
	.byte	'Core',0,69,204,1,1
	.word	33521
	.byte	26,4,0,0,3
	.byte	'Os_CoreAsrGetDyn',0,3,69,153,1,1
	.word	21716
	.byte	1,1,5
	.byte	'Core',0,69,153,1,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreAsrGetTimingProtection',0,3,69,166,1,1
	.word	23919
	.byte	1,1,5
	.byte	'Core',0,69,166,1,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreIsAsrCore',0,3,69,154,2,1
	.word	236
	.byte	1,1,5
	.byte	'Core',0,69,154,2,1
	.word	33521
	.byte	4,0,3
	.byte	'Os_CoreIsStartedAsAsr',0,3,69,167,2,1
	.word	236
	.byte	1,1,5
	.byte	'Core',0,69,167,2,1
	.word	33521
	.byte	4,0,7,5,239,1,9,1,8
	.byte	'OS_COREOSSTATE_INITIALZE',0,0,8
	.byte	'OS_COREOSSTATE_PRESTARTTASK',0,1,8
	.byte	'OS_COREOSSTATE_STARTED',0,2,0,11
	.byte	'Os_CoreAsrStatusType_Tag',0,5,135,2,8,8,12
	.byte	'Core',0
	.word	3142
	.byte	2,2,35,0,12
	.byte	'OsState',0
	.word	33808
	.byte	1,2,35,2,12
	.byte	'ApplicationMode',0
	.word	399
	.byte	1,2,35,3,12
	.byte	'CriticalUserSection',0
	.word	135
	.byte	4,2,35,4,0,13
	.word	33897
	.byte	14
	.word	34014
	.byte	3
	.byte	'Os_CoreAsrGetAsrStatus',0,3,69,232,2,1
	.word	34019
	.byte	1,1,5
	.byte	'Core',0,69,232,2,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreGetIdleTask',0,3,69,246,3,1
	.word	6993
	.byte	1,1,5
	.byte	'Core',0,69,246,3,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreGetKernelApp',0,3,69,131,4,1
	.word	12003
	.byte	1,1,5
	.byte	'Core',0,69,131,4,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreGetScheduler',0,3,69,144,4,1
	.word	22195
	.byte	1,1,5
	.byte	'Core',0,69,144,4,1
	.word	28281
	.byte	4,0,3
	.byte	'Os_CoreInterruptedThreadsGetTopIdx',0,3,69,149,5,1
	.word	4960
	.byte	1,1,5
	.byte	'Core',0,69,149,5,1
	.word	28281
	.byte	26,4,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsGet',0,3,69,169,5,1
	.word	14194
	.byte	1,1,5
	.byte	'Core',0,69,169,5,1
	.word	28281
	.byte	5
	.byte	'Idx',0,69,169,5,1
	.word	4960
	.byte	26,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsMoveDown',0,3,69,209,5,1
	.word	4960
	.byte	1,1,5
	.byte	'Iterator',0,69,209,5,1
	.word	4960
	.byte	4,0,6
	.byte	'Os_CoreSetThread',0,3,69,224,5,1,1,1,5
	.byte	'Thread',0,69,224,5,1
	.word	14194
	.byte	26,4,4,4,0,0
.L158:
	.byte	3
	.byte	'Os_CoreGetThread',0,3,69,238,5,1
	.word	14194
	.byte	1,1
.L160:
	.byte	26,4,4,4,0,0,6
	.byte	'Os_CoreSetCurrentStack',0,3,69,252,5,1,1,1,5
	.byte	'Stack',0,69,252,5,1
	.word	5436
	.byte	5
	.byte	'Core',0,69,252,5,1
	.word	28281
	.byte	26,4,0,0,3
	.byte	'Os_CoreGetCurrentStack',0,3,69,142,6,1
	.word	5436
	.byte	1,1,26,4,4,4,0,0,16
	.byte	'Os_SpinlockConfigRefType',0,5,152,2,59
	.word	6355
	.byte	15
	.word	34609
	.byte	14
	.word	34643
	.byte	15
	.word	135
	.byte	14
	.word	34653
	.byte	11
	.byte	'Os_Hal_MpSystemConfigType_Tag',0,32,83,8,4,12
	.byte	'SysMpuId',0
	.word	135
	.byte	4,2,35,0,0,15
	.word	34663
	.byte	14
	.word	34717
	.byte	11
	.byte	'Os_MpSystemConfigType_Tag',0,31,114,8,4,12
	.byte	'HwConfig',0
	.word	34722
	.byte	4,2,35,0,0,15
	.word	34727
	.byte	14
	.word	34777
	.byte	11
	.byte	'Os_SystemConfigType_Tag',0,5,238,3,8,40,12
	.byte	'VersionInfo',0
	.word	18211
	.byte	8,2,35,0,12
	.byte	'NumberOfAsrCores',0
	.word	23934
	.byte	1,2,35,8,12
	.byte	'SpinlockRefs',0
	.word	34648
	.byte	4,2,35,12,12
	.byte	'SpinlockCount',0
	.word	3769
	.byte	2,2,35,16,12
	.byte	'HwConfig',0
	.word	34658
	.byte	4,2,35,20,12
	.byte	'MemoryProtection',0
	.word	34782
	.byte	4,2,35,24,12
	.byte	'InterruptSourceRefs',0
	.word	3764
	.byte	4,2,35,28,12
	.byte	'InterruptSourceCount',0
	.word	3769
	.byte	2,2,35,32,12
	.byte	'Core2Thread',0
	.word	30993
	.byte	4,2,35,36,0,15
	.word	34787
	.byte	14
	.word	35034
	.byte	3
	.byte	'Os_SystemGet',0,3,69,160,6,1
	.word	35039
	.byte	1,1,4,0,15
	.word	6177
	.byte	14
	.word	35071
	.byte	3
	.byte	'Os_SystemGetCore2Thread',0,3,69,173,6,1
	.word	30993
	.byte	1,1,5
	.byte	'System',0,69,173,6,1
	.word	35039
	.byte	4,0,6
	.byte	'Os_Hal_ProgramDataRegions',0,3,70,174,2,1,1,1,5
	.byte	'StartSlot',0,70,174,2,1
	.word	399
	.byte	5
	.byte	'Count',0,70,174,2,1
	.word	399
	.byte	5
	.byte	'RegionsConfig',0,70,174,2,1
	.word	9614
	.byte	4,0,6
	.byte	'Os_Hal_ProgramCodeRegions',0,3,70,202,2,1,1,1,5
	.byte	'StartSlot',0,70,202,2,1
	.word	399
	.byte	5
	.byte	'Count',0,70,202,2,1
	.word	399
	.byte	5
	.byte	'RegionsConfig',0,70,202,2,1
	.word	9614
	.byte	4,0,6
	.byte	'Os_Hal_ContextInit',0,3,71,96,1,1,1,5
	.byte	'Config',0,71,96,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,96,1
	.word	5351
	.byte	26,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReset',0,3,71,147,1,1,1,1,5
	.byte	'Config',0,71,147,1,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,147,1,1
	.word	5351
	.byte	26,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextSetParameter',0,3,71,194,1,1,1,1,5
	.byte	'Context',0,71,194,1,1
	.word	5351
	.byte	5
	.byte	'Parameter',0,71,194,1,1
	.word	17820
	.byte	4,0,11
	.byte	'Os_Hal_ContextStackConfigType_Tag',0,15,189,1,8,8,12
	.byte	'StackRegionStart',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'StackRegionEnd',0
	.word	135
	.byte	4,2,35,4,0,15
	.word	35528
	.byte	14
	.word	35619
	.byte	6
	.byte	'Os_Hal_ContextSetStack',0,3,71,213,1,1,1,1,5
	.byte	'Context',0,71,213,1,1
	.word	5351
	.byte	5
	.byte	'Stack',0,71,213,1,1
	.word	35624
	.byte	4,0,15
	.word	135
	.byte	14
	.word	35694
	.byte	6
	.byte	'Os_Hal_ContextSetInterruptState',0,3,71,250,1,1,1,1,5
	.byte	'Context',0,71,250,1,1
	.word	5351
	.byte	5
	.byte	'InterruptState',0,71,250,1,1
	.word	35699
	.byte	4,0,6
	.byte	'Os_Hal_ContextSetUserMsrBits',0,3,71,143,2,1,1,1,5
	.byte	'Context',0,71,143,2,1
	.word	5351
	.byte	4,0,15
	.word	5168
	.byte	14
	.word	35843
	.byte	6
	.byte	'Os_Hal_ContextFirstResume',0,3,71,173,2,1,1,1,5
	.byte	'Next',0,71,173,2,1
	.word	35848
	.byte	26,4,4,4,0,0,6
	.byte	'Os_Hal_ContextResetAndResume',0,3,71,220,2,1,1,1,5
	.byte	'CurrentConfig',0,71,220,2,1
	.word	5163
	.byte	5
	.byte	'Current',0,71,220,2,1
	.word	5351
	.byte	5
	.byte	'Next',0,71,220,2,1
	.word	35848
	.byte	26,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextAbort',0,3,71,145,3,1,1,1,5
	.byte	'Config',0,71,145,3,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,145,3,1
	.word	5351
	.byte	26,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReturn',0,3,71,204,3,1,1,1,5
	.byte	'Current',0,71,204,3,1
	.word	35848
	.byte	5
	.byte	'Next',0,71,204,3,1
	.word	35848
	.byte	26,4,4,4,0,0,6
	.byte	'Os_Hal_ContextIntCleanupCSAs',0,3,71,133,4,1,1,1,5
	.byte	'Context',0,71,133,4,1
	.word	35848
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,133,4,1
	.word	29478
	.byte	26,4,0,0,6
	.byte	'Os_Hal_ContextIntPrepareCSAContent',0,3,71,178,4,1,1,1,5
	.byte	'CurrentConfig',0,71,178,4,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,178,4,1
	.word	5351
	.byte	26,4,0,0,6
	.byte	'Os_Hal_ContextIntInitialize',0,3,71,235,4,1,1,1,5
	.byte	'CurrentConfig',0,71,235,4,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,235,4,1
	.word	5351
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,235,4,1
	.word	29478
	.byte	26,4,4,0,0,6
	.byte	'Os_Hal_ContextIntInitializeReserved',0,3,71,148,5,1,1,1,5
	.byte	'CurrentConfig',0,71,148,5,1
	.word	5163
	.byte	5
	.byte	'Context',0,71,148,5,1
	.word	5351
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,148,5,1
	.word	29478
	.byte	26,4,4,0,0,6
	.byte	'Os_Hal_ContextIntRestore',0,3,71,243,5,1,1,1,5
	.byte	'Context',0,71,243,5,1
	.word	35848
	.byte	4,0,16
	.byte	'Os_MpAccessRightsRefType',0,31,146,1,59
	.word	10524
	.byte	14
	.word	36606
	.byte	6
	.byte	'Os_MpThreadInit',0,3,72,130,1,1,1,1,5
	.byte	'Config',0,72,130,1,1
	.word	10524
	.byte	5
	.byte	'Settings',0,72,130,1,1
	.word	36640
	.byte	4,0,15
	.word	10433
	.byte	14
	.word	36705
	.byte	6
	.byte	'Os_MpSwitch',0,3,72,193,1,1,1,1,5
	.byte	'Current',0,72,193,1,1
	.word	10524
	.byte	5
	.byte	'Next',0,72,193,1,1
	.word	10524
	.byte	4,0,6
	.byte	'Os_MpSwitchTo',0,3,72,230,1,1,1,1,5
	.byte	'AccessRights',0,72,230,1,1
	.word	10524
	.byte	4,0,6
	.byte	'Os_TraceThreadInit',0,3,73,139,6,1,1,1,5
	.byte	'Thread',0,73,139,6,1
	.word	4315
	.byte	4,0,6
	.byte	'Os_TraceThreadInitAndStart',0,3,73,178,6,1,1,1,5
	.byte	'Task',0,73,178,6,1
	.word	4315
	.byte	26,4,0,0,6
	.byte	'Os_TraceThreadSwitch',0,3,73,229,6,1,1,1,5
	.byte	'CurrentTaskState',0,73,229,6,1
	.word	18363
	.byte	5
	.byte	'Current',0,73,229,6,1
	.word	4315
	.byte	5
	.byte	'Next',0,73,229,6,1
	.word	4315
	.byte	26,4,4,0,0,6
	.byte	'Os_TraceThreadResetAndResume',0,3,73,170,7,1,1,1,5
	.byte	'Current',0,73,170,7,1
	.word	4315
	.byte	5
	.byte	'Next',0,73,170,7,1
	.word	4315
	.byte	26,4,4,0,0,6
	.byte	'Os_TraceThreadCleanupAndResume',0,3,73,228,7,1,1,1,5
	.byte	'Current',0,73,228,7,1
	.word	4315
	.byte	5
	.byte	'Next',0,73,228,7,1
	.word	4315
	.byte	26,4,4,0,0,6
	.byte	'Os_TraceSpinlockRequested',0,3,73,183,11,1,1,1,5
	.byte	'Spinlock',0,73,183,11,1
	.word	6172
	.byte	26,4,0,0,6
	.byte	'Os_TraceSpinlockTaken',0,3,73,239,11,1,1,1,5
	.byte	'Spinlock',0,73,239,11,1
	.word	6172
	.byte	26,4,0,0,6
	.byte	'Os_TraceSpinlockReleased',0,3,73,167,12,1,1,1,5
	.byte	'Spinlock',0,73,167,12,1
	.word	6172
	.byte	26,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalDisabled',0,3,73,221,12,1,1,1,26,4,0,0,6
	.byte	'Os_TraceInterruptsLevelDisabled',0,3,73,128,13,1,1,1,26,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalEnabled',0,3,73,163,13,1,1,1,26,4,0,0,6
	.byte	'Os_TraceInterruptsLevelEnabled',0,3,73,198,13,1,1,1,26,4,0,0,3
	.byte	'Os_ThreadGetSpinlocks',0,3,74,117,1
	.word	33158
	.byte	1,1,5
	.byte	'Thread',0,74,117,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetTrace',0,3,74,159,1,1
	.word	4315
	.byte	1,1,5
	.byte	'Thread',0,74,159,1,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetTpConfig',0,3,74,173,1,1
	.word	13043
	.byte	1,1,5
	.byte	'Thread',0,74,173,1,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetInterruptApiState',0,3,74,213,1,1
	.word	12902
	.byte	1,1,5
	.byte	'Thread',0,74,213,1,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetCore',0,3,74,227,1,1
	.word	28281
	.byte	1,1,5
	.byte	'Thread',0,74,227,1,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentType',0,3,74,241,1,1
	.word	3769
	.byte	1,1,5
	.byte	'Thread',0,74,241,1,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadIsTask',0,3,74,158,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,158,2,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadIsIsr',0,3,74,185,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,185,2,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadIsAnyInitialContext',0,3,74,198,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,198,2,1
	.word	14194
	.byte	5
	.byte	'Context',0,74,198,2,1
	.word	3769
	.byte	4,0,3
	.byte	'Os_ThreadIsHook',0,3,74,225,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,225,2,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadGetOwnerApplication',0,3,74,138,3,1
	.word	12003
	.byte	1,1,5
	.byte	'Thread',0,74,138,3,1
	.word	14194
	.byte	4,0,3
	.byte	'Os_ThreadHasResourcesLocked',0,3,74,185,3,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,185,3,1
	.word	14194
	.byte	26,4,4,4,0,0,3
	.byte	'Os_ThreadHasSpinlockLocked',0,3,74,223,3,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,74,223,3,1
	.word	14194
	.byte	26,4,4,4,0,0,6
	.byte	'Os_ThreadSpinlockForceRelease',0,3,74,167,4,1,1,1,5
	.byte	'Thread',0,74,167,4,1
	.word	14194
	.byte	4,0,6
	.byte	'Os_ThreadResourceForceRelease',0,3,74,180,4,1,1,1,5
	.byte	'Thread',0,74,180,4,1
	.word	14194
	.byte	4,0,6
	.byte	'Os_ThreadLocksForceRelease',0,3,74,199,4,1,1,1,5
	.byte	'Thread',0,74,199,4,1
	.word	14194
	.byte	26,4,4,4,0,0,6
	.byte	'Os_ThreadResetAndResume',0,3,74,223,5,1,1,1,5
	.byte	'Next',0,74,223,5,1
	.word	14194
	.byte	5
	.byte	'CallPreThreadHook',0,74,223,5,1
	.word	399
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadStartFirst',0,3,74,172,6,1,1,1,5
	.byte	'Next',0,74,172,6,1
	.word	14194
	.byte	5
	.byte	'CallPreThreadHook',0,74,172,6,1
	.word	399
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadCleanupAndResume',0,3,74,230,6,1,1,1,5
	.byte	'Next',0,74,230,6,1
	.word	14194
	.byte	5
	.byte	'CallPreThreadHook',0,74,230,6,1
	.word	399
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadSwitch',0,3,74,133,8,1,1,1,5
	.byte	'Current',0,74,133,8,1
	.word	14194
	.byte	5
	.byte	'Next',0,74,133,8,1
	.word	14194
	.byte	5
	.byte	'CallPreThreadHook',0,74,133,8,1
	.word	399
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_ThreadGetAccessRights',0,3,74,137,9,1
	.word	13709
	.byte	1,1,5
	.byte	'Thread',0,74,137,9,1
	.word	14194
	.byte	4,0,6
	.byte	'Os_ThreadSetInterruptState',0,3,74,180,9,1,1,1,5
	.byte	'Thread',0,74,180,9,1
	.word	14194
	.byte	5
	.byte	'InterruptState',0,74,180,9,1
	.word	35699
	.byte	26,4,0,0,6
	.byte	'Os_ThreadCallPreThreadHook',0,3,74,199,9,1,1,1,5
	.byte	'Thread',0,74,199,9,1
	.word	14194
	.byte	5
	.byte	'CallPreThreadHook',0,74,199,9,1
	.word	399
	.byte	4,0,6
	.byte	'Os_ThreadInitFpuContext',0,3,74,237,10,1,1,1,5
	.byte	'Thread',0,74,237,10,1
	.word	14194
	.byte	26,4,0,0,6
	.byte	'Os_ThreadInitFpu',0,3,74,136,11,1,1,1,5
	.byte	'Thread',0,74,136,11,1
	.word	14194
	.byte	26,4,0,0,6
	.byte	'Os_ThreadStoreFpuContext',0,3,74,163,11,1,1,1,5
	.byte	'Thread',0,74,163,11,1
	.word	14194
	.byte	4,0,6
	.byte	'Os_ThreadRestoreFpuContext',0,3,74,185,11,1,1,1,5
	.byte	'Thread',0,74,185,11,1
	.word	14194
	.byte	4,0,6
	.byte	'Os_IsrDisableSource',0,3,75,231,1,1,1,1,5
	.byte	'Isr',0,75,231,1,1
	.word	3713
	.byte	26,4,0,0,3
	.byte	'Os_IsrGetThread',0,3,75,160,1,1
	.word	14194
	.byte	1,1,5
	.byte	'Isr',0,75,160,1,1
	.word	7218
	.byte	4,0,6
	.byte	'Os_IsrInitialEnable',0,3,75,160,2,1,1,1,5
	.byte	'Isr',0,75,160,2,1
	.word	7218
	.byte	5
	.byte	'ClearPending',0,75,160,2,1
	.word	399
	.byte	26,4,4,0,0,6
	.byte	'Os_IsrEnable',0,3,75,192,2,1,1,1,5
	.byte	'Isr',0,75,192,2,1
	.word	7218
	.byte	26,4,0,0,6
	.byte	'Os_IsrClearPending',0,3,75,220,2,1,1,1,5
	.byte	'Isr',0,75,220,2,1
	.word	3713
	.byte	26,4,0,0
.L80:
	.byte	6
	.byte	'Os_Hal_TimerFrtInit',0,3,76,93,1,1,1
.L83:
	.byte	5
	.byte	'TimerConfig',0,76,93,1
	.word	23668
.L85:
	.byte	4,0
.L88:
	.byte	3
	.byte	'Os_Hal_TimerFrtGetCounterValue',0,3,76,125,1
	.word	135
	.byte	1,1
.L91:
	.byte	5
	.byte	'TimerConfig',0,76,125,1
	.word	23668
.L93:
	.byte	4,0
.L127:
	.byte	6
	.byte	'Os_Hal_TimerFrtSetCompareValue',0,3,76,139,1,1,1,1
.L128:
	.byte	5
	.byte	'TimerConfig',0,76,139,1,1
	.word	23668
.L130:
	.byte	5
	.byte	'ExpirationTime',0,76,139,1,1
	.word	135
.L132:
	.byte	4,0
.L150:
	.byte	6
	.byte	'Os_Hal_TimerFrtTriggerIrq',0,3,76,172,1,1,1,1
.L151:
	.byte	5
	.byte	'TimerConfig',0,76,172,1,1
	.word	23668
.L153:
	.byte	4,0,11
	.byte	'Os_Hal_TimerPitConfigType_Tag',0,78,105,8,32,12
	.byte	'CounterRegisterAddress',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'CounterConfRegisterAddress',0
	.word	135
	.byte	4,2,35,4,12
	.byte	'CounterConfRegisterValue',0
	.word	135
	.byte	4,2,35,8,12
	.byte	'ReloadRegisterAddress',0
	.word	135
	.byte	4,2,35,12,12
	.byte	'ReloadConfRegisterAddress',0
	.word	135
	.byte	4,2,35,16,12
	.byte	'ReloadConfRegisterValue',0
	.word	135
	.byte	4,2,35,20,12
	.byte	'ReloadValue',0
	.word	3769
	.byte	2,2,35,24,12
	.byte	'InterruptSRCRegisterAddress',0
	.word	135
	.byte	4,2,35,26,0,15
	.word	39645
	.byte	14
	.word	39940
	.byte	6
	.byte	'Os_Hal_TimerPitInit',0,3,77,92,1,1,1,5
	.byte	'TimerConfig',0,77,92,1
	.word	39945
	.byte	4,0,3
	.byte	'Os_Hal_TimerPitIsPending',0,3,77,143,1,1
	.word	135
	.byte	1,1,5
	.byte	'TimerConfig',0,77,143,1,1
	.word	39945
	.byte	4,0,17,47,219,1,9,8,12
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Compare',0
	.word	135
	.byte	4,2,35,4,0,14
	.word	40059
	.byte	11
	.byte	'Os_TimerSwConfigType_Tag',0,47,232,1,8,52,12
	.byte	'Counter',0
	.word	7970
	.byte	48,2,35,0,12
	.byte	'Dyn',0
	.word	40098
	.byte	4,2,35,48,0,15
	.word	40103
.L75:
	.byte	14
	.word	40165
	.byte	6
	.byte	'Os_TimerSwInit',0,3,79,84,1,1,1,5
	.byte	'Timer',0,79,84,1
	.word	40170
	.byte	26,4,4,0,0,3
	.byte	'Os_TimerSwGetValue',0,3,79,220,1,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,79,220,1,1
	.word	40170
	.byte	4,0,6
	.byte	'Os_TimerSwSetCompareValue',0,3,79,233,1,1,1,1,5
	.byte	'Timer',0,79,233,1,1
	.word	40170
	.byte	5
	.byte	'ExpirationTime',0,79,233,1,1
	.word	135
	.byte	4,0,3
	.byte	'Os_TimerSwUserModulo',0,3,79,252,1,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,79,252,1,1
	.word	40170
	.byte	5
	.byte	'Value',0,79,252,1,1
	.word	135
	.byte	26,4,0,0,3
	.byte	'Os_TimerHrtGetValue',0,3,79,211,4,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,79,211,4,1
	.word	23759
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCounter',0,3,79,205,2,1
	.word	8141
	.byte	1,1,5
	.byte	'Timer',0,79,205,2,1
	.word	23759
	.byte	4,0,3
	.byte	'Os_TimerHrtComputeHardwareCompareValue',0,3,79,229,2,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,79,229,2,1
	.word	23759
	.byte	5
	.byte	'ExpirationTime',0,79,229,2,1
	.word	135
	.byte	26,26,4,0,0,0,6
	.byte	'Os_TimerHrtSetCompareValue',0,3,79,157,3,1,1,1,5
	.byte	'Timer',0,79,157,3,1
	.word	23759
	.byte	5
	.byte	'ExpirationTime',0,79,157,3,1
	.word	135
	.byte	26,4,4,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCompareValue',0,3,79,247,3,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,79,247,3,1
	.word	23759
	.byte	4,0,3
	.byte	'Os_TimerSwAbsCounter2AbsTimerValue',0,3,79,137,5,1
	.word	135
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,79,137,5,1
	.word	135
	.byte	5
	.byte	'Now',0,79,137,5,1
	.word	135
	.byte	5
	.byte	'CounterValue',0,79,137,5,1
	.word	135
	.byte	4,0
.L104:
	.byte	3
	.byte	'Os_TimerAdd',0,3,79,253,5,1
	.word	135
	.byte	1,1
.L107:
	.byte	5
	.byte	'MaxAllowedValue',0,79,253,5,1
	.word	135
.L109:
	.byte	5
	.byte	'MaxCountingValue',0,79,253,5,1
	.word	135
.L111:
	.byte	5
	.byte	'Value',0,79,253,5,1
	.word	135
.L113:
	.byte	5
	.byte	'Add',0,79,253,5,1
	.word	135
.L115:
	.byte	26
.L117:
	.byte	4,4,4,4,0,0,3
	.byte	'Os_TimerSub',0,3,79,173,6,1
	.word	135
	.byte	1,1,5
	.byte	'MaxCountingValue',0,79,173,6,1
	.word	135
	.byte	5
	.byte	'Value',0,79,173,6,1
	.word	135
	.byte	5
	.byte	'Sub',0,79,173,6,1
	.word	135
	.byte	26,4,4,4,0,0
.L119:
	.byte	6
	.byte	'Os_TimerFrtSetCompareValue',0,3,79,222,6,1,1,1
.L122:
	.byte	5
	.byte	'TimerConfig',0,79,222,6,1
	.word	23668
.L124:
	.byte	5
	.byte	'CompareValue',0,79,222,6,1
	.word	135
.L126:
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TimerFrtTickType2TickType',0,3,79,134,7,1
	.word	135
	.byte	1,1,5
	.byte	'Value',0,79,134,7,1
	.word	135
	.byte	4,0,3
	.byte	'Os_TimerTickType2FrtTickType',0,3,79,147,7,1
	.word	135
	.byte	1,1,5
	.byte	'Value',0,79,147,7,1
	.word	135
	.byte	4,0,13
	.word	3769
	.byte	14
	.word	41249
	.byte	6
	.byte	'Os_XSigChannelIdxIncrement',0,3,80,90,1,1,1,5
	.byte	'Index',0,80,90,1
	.word	41254
	.byte	5
	.byte	'Size',0,80,90,1
	.word	3769
	.byte	26,4,0,0,15
	.word	25554
	.byte	14
	.word	41324
	.byte	3
	.byte	'Os_XSigChannelIsResultAvailable',0,3,80,129,2,1
	.word	236
	.byte	1,1,5
	.byte	'Channel',0,80,129,2,1
	.word	41329
	.byte	4,0,15
	.word	25076
	.byte	14
	.word	41397
	.byte	3
	.byte	'Os_XSigSend',0,3,81,129,1,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,81,129,1,1
	.word	28281
	.byte	5
	.byte	'SendThread',0,81,129,1,1
	.word	14194
	.byte	5
	.byte	'FunctionIdx',0,81,129,1,1
	.word	24083
	.byte	5
	.byte	'Parameters',0,81,129,1,1
	.word	41402
	.byte	26,4,0,0,3
	.byte	'Os_XSigSend_ActivateTaskAsync',0,3,81,191,1,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,81,191,1,1
	.word	28281
	.byte	5
	.byte	'SendThread',0,81,191,1,1
	.word	14194
	.byte	5
	.byte	'TaskID',0,81,191,1,1
	.word	6496
	.byte	4,0,3
	.byte	'Os_TaskGetThread',0,3,82,111,1
	.word	14194
	.byte	1,1,5
	.byte	'Task',0,82,111,1
	.word	6993
	.byte	4,0,3
	.byte	'Os_TaskThread2Task',0,3,82,125,1
	.word	6993
	.byte	1,1,5
	.byte	'Thread',0,82,125,1
	.word	14194
	.byte	26,4,4,0,0,13
	.word	9058
	.byte	13
	.word	9058
	.byte	17,83,70,9,16,12
	.byte	'Waiting',0
	.word	41705
	.byte	8,2,35,0,12
	.byte	'Triggered',0
	.word	41710
	.byte	8,2,35,8,0,11
	.byte	'Os_TaskType_Tag',0,22,116,8,52,12
	.byte	'Thread',0
	.word	12751
	.byte	24,2,35,0,12
	.byte	'Events',0
	.word	41715
	.byte	16,2,35,24,12
	.byte	'State',0
	.word	18363
	.byte	1,2,35,40,12
	.byte	'Priority',0
	.word	3769
	.byte	2,2,35,42,12
	.byte	'ActivationsAllowed',0
	.word	399
	.byte	1,2,35,44,12
	.byte	'NumRemainScheduleEventsRoundRobin',0
	.word	135
	.byte	4,2,35,46,0,14
	.word	41757
	.byte	3
	.byte	'Os_TaskGetDyn',0,3,82,139,1,1
	.word	41915
	.byte	1,1,5
	.byte	'Task',0,82,139,1,1
	.word	6993
	.byte	26,4,0,0,6
	.byte	'Os_TaskSetState',0,3,82,152,1,1,1,1,5
	.byte	'Task',0,82,152,1,1
	.word	6993
	.byte	5
	.byte	'State',0,82,152,1,1
	.word	18363
	.byte	26,4,0,0,3
	.byte	'Os_TaskGetId',0,3,82,219,1,1
	.word	6496
	.byte	1,1,5
	.byte	'Task',0,82,219,1,1
	.word	6993
	.byte	4,0,3
	.byte	'Os_TaskGetScheduler',0,3,82,128,2,1
	.word	22195
	.byte	1,1,5
	.byte	'Task',0,82,128,2,1
	.word	6993
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TaskGetCore',0,3,82,154,2,1
	.word	28281
	.byte	1,1,5
	.byte	'Task',0,82,154,2,1
	.word	6993
	.byte	26,4,4,0,0,3
	.byte	'Os_TaskIsCoreLocal',0,3,82,167,2,1
	.word	135
	.byte	1,1,5
	.byte	'Task',0,82,167,2,1
	.word	6993
	.byte	26,4,4,0,0,6
	.byte	'Os_TaskSwitch',0,3,82,252,2,1,1,1,5
	.byte	'Scheduler',0,82,252,2,1
	.word	22195
	.byte	5
	.byte	'CallerThread',0,82,252,2,1
	.word	14194
	.byte	26,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskResume',0,3,82,161,3,1,1,1,5
	.byte	'Scheduler',0,82,161,3,1
	.word	22195
	.byte	26,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskCallPostTaskHook',0,3,82,232,5,1,1,1,26,4,0,0,15
	.word	.L220-.L36
	.byte	14
	.word	42371
	.byte	11
	.byte	'Os_TpBudgetType_Tag',0,35,157,2,8,8,12
	.byte	'Remaining',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'Previous',0
	.word	42376
	.byte	4,2,35,4,0,14
	.word	42381
	.byte	7,85,94,9,1,8
	.byte	'OS_TPMONITORINGTYPE_NONE',0,0,8
	.byte	'OS_TPMONITORINGTYPE_LOCK',0,1,8
	.byte	'OS_TPMONITORINGTYPE_EXECUTION',0,2,8
	.byte	'OS_TPMONITORINGTYPE_ARRIVAL',0,3,8
	.byte	'OS_TPMONITORINGTYPE_COUNT',0,4,0
.L220:
	.byte	11
	.byte	'Os_TpBudgetConfigType_Tag',0,35,168,2,8,12,12
	.byte	'Dyn',0
	.word	42445
	.byte	4,2,35,0,12
	.byte	'BudgetKind',0
	.word	42450
	.byte	1,2,35,4,12
	.byte	'Budget',0
	.word	135
	.byte	4,2,35,6,0,16
	.byte	'Os_TpBudgetConfigRefType',0,85,82,59
	.word	42376
	.byte	15
	.word	42682
	.byte	14
	.word	42715
	.byte	11
	.byte	'Os_TpOwnerThreadType_Tag',0,35,182,2,8,20,12
	.byte	'EarliestArrival',0
	.word	9058
	.byte	8,2,35,0,12
	.byte	'DelayLevel',0
	.word	399
	.byte	1,2,35,8,12
	.byte	'MonitoredBudgets',0
	.word	42376
	.byte	4,2,35,12,12
	.byte	'Violation',0
	.word	42450
	.byte	1,2,35,16,0,14
	.word	42725
	.byte	11
	.byte	'Os_TpOwnerThreadConfigType_Tag',0,35,213,2,8,56,12
	.byte	'Base',0
	.word	12985
	.byte	1,2,35,0,12
	.byte	'TimeFrame',0
	.word	9058
	.byte	8,2,35,4,12
	.byte	'ExecutionBudget',0
	.word	42600
	.byte	12,2,35,12,12
	.byte	'AllInterruptLockBudget',0
	.word	42600
	.byte	12,2,35,24,12
	.byte	'OsInterruptLockBudget',0
	.word	42600
	.byte	12,2,35,36,12
	.byte	'ResourceLockBudgets',0
	.word	42720
	.byte	4,2,35,48,12
	.byte	'Dyn',0
	.word	42847
	.byte	4,2,35,52,0,15
	.word	42852
	.byte	14
	.word	43053
	.byte	3
	.byte	'Os_TpThread2TpOwnerThread',0,3,84,94,1
	.word	43058
	.byte	1,1,5
	.byte	'TpThread',0,84,94,1
	.word	13043
	.byte	26,4,0,0,15
	.word	42600
	.byte	14
	.word	43121
	.byte	3
	.byte	'Os_TpGetCurrentTpOwnerThread',0,3,84,108,1
	.word	43058
	.byte	1,1,5
	.byte	'Config',0,84,108,1
	.word	23919
	.byte	26,4,4,0,0,6
	.byte	'Os_TpThreadInit',0,3,84,127,1,1,1,5
	.byte	'Config',0,84,127,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,127,1
	.word	13043
	.byte	26,4,4,0,0,6
	.byte	'Os_TpThreadKill',0,3,84,157,1,1,1,1,5
	.byte	'Thread',0,84,157,1,1
	.word	13043
	.byte	26,4,4,0,0,6
	.byte	'Os_TpResume',0,3,84,184,1,1,1,1,5
	.byte	'Config',0,84,184,1,1
	.word	23919
	.byte	5
	.byte	'Now',0,84,184,1,1
	.word	135
	.byte	5
	.byte	'RemainingTime',0,84,184,1,1
	.word	135
	.byte	26,4,4,0,0,6
	.byte	'Os_TpSuspend',0,3,84,209,1,1,1,1,5
	.byte	'Config',0,84,209,1,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,209,1,1
	.word	43058
	.byte	5
	.byte	'Now',0,84,209,1,1
	.word	135
	.byte	5
	.byte	'Deadline',0,84,209,1,1
	.word	135
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TpSub',0,3,84,239,1,1
	.word	135
	.byte	1,1,5
	.byte	'Config',0,84,239,1,1
	.word	23919
	.byte	5
	.byte	'Value',0,84,239,1,1
	.word	135
	.byte	5
	.byte	'Sub',0,84,239,1,1
	.word	135
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TpAdd',0,3,84,139,2,1
	.word	135
	.byte	1,1,5
	.byte	'Config',0,84,139,2,1
	.word	23919
	.byte	5
	.byte	'Value',0,84,139,2,1
	.word	135
	.byte	5
	.byte	'Add',0,84,139,2,1
	.word	135
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_TpGetArrivalTimeStamp',0,3,84,171,2,1
	.word	9058
	.byte	1,1,5
	.byte	'Config',0,84,171,2,1
	.word	23919
	.byte	26,4,0,0,6
	.byte	'Os_TpSwitch',0,3,84,207,2,1,1,1,5
	.byte	'Config',0,84,207,2,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,207,2,1
	.word	13043
	.byte	5
	.byte	'Next',0,84,207,2,1
	.word	13043
	.byte	5
	.byte	'NextThread',0,84,207,2,1
	.word	14194
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAndResume',0,3,84,157,3,1,1,1,5
	.byte	'Config',0,84,157,3,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,157,3,1
	.word	13043
	.byte	5
	.byte	'Next',0,84,157,3,1
	.word	13043
	.byte	5
	.byte	'NextThread',0,84,157,3,1
	.word	14194
	.byte	26,26,4,0,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAfterWait',0,3,84,225,3,1,1,1,5
	.byte	'Config',0,84,225,3,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,225,3,1
	.word	13043
	.byte	26,26,4,0,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpCheckInterArrival',0,3,84,153,4,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,153,4,1
	.word	23919
	.byte	5
	.byte	'TpThread',0,84,153,4,1
	.word	13043
	.byte	26,26,4,0,4,4,4,4,4,0,0,3
	.byte	'Os_TpGetResourceBudget',0,3,84,128,5,1
	.word	42376
	.byte	1,1,5
	.byte	'Current',0,84,128,5,1
	.word	43058
	.byte	5
	.byte	'Resource',0,84,128,5,1
	.word	17857
	.byte	26,4,4,0,0,6
	.byte	'Os_TpStartAllInterrupt',0,3,84,176,6,1,1,1,5
	.byte	'Config',0,84,176,6,1
	.word	23919
	.byte	26,4,4,4,4,0,0,6
	.byte	'Os_TpStopAllInterrupt',0,3,84,207,6,1,1,1,5
	.byte	'Config',0,84,207,6,1
	.word	23919
	.byte	26,4,4,4,4,0,0,6
	.byte	'Os_TpStartOsInterrupt',0,3,84,239,6,1,1,1,5
	.byte	'Config',0,84,239,6,1
	.word	23919
	.byte	26,4,4,4,4,0,0,6
	.byte	'Os_TpStopOsInterrupt',0,3,84,142,7,1,1,1,5
	.byte	'Config',0,84,142,7,1
	.word	23919
	.byte	26,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStart',0,3,84,182,7,1,1,1,5
	.byte	'Config',0,84,182,7,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,182,7,1
	.word	43058
	.byte	5
	.byte	'Budget',0,84,182,7,1
	.word	42376
	.byte	26,26,4,0,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStop',0,3,84,131,8,1,1,1,5
	.byte	'Config',0,84,131,8,1
	.word	23919
	.byte	5
	.byte	'Current',0,84,131,8,1
	.word	43058
	.byte	5
	.byte	'Budget',0,84,131,8,1
	.word	42376
	.byte	26,26,4,0,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpIsEnabledByCoreTpConfig',0,3,84,213,8,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,213,8,1
	.word	23919
	.byte	4,0,3
	.byte	'Os_TpIsEnabledByThreadTpConfig',0,3,84,244,8,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,244,8,1
	.word	13043
	.byte	4,0,3
	.byte	'Os_AppCheckIsAccessible',0,3,86,232,1,1
	.word	236
	.byte	1,1,5
	.byte	'App',0,86,232,1,1
	.word	12003
	.byte	4,0,3
	.byte	'Os_AppGetCore',0,3,86,144,2,1
	.word	28281
	.byte	1,1,5
	.byte	'App',0,86,144,2,1
	.word	12003
	.byte	4,0,3
	.byte	'Os_JobGetCore',0,3,87,190,2,1
	.word	28281
	.byte	1,1,5
	.byte	'Job',0,87,190,2,1
	.word	7721
	.byte	26,4,0,0,16
	.byte	'Os_ServiceCallListType',0,89,66,59
	.word	12746
	.byte	14
	.word	44743
	.byte	6
	.byte	'Os_ServiceCallsInit',0,3,88,134,1,1,1,1,5
	.byte	'ServiceCalls',0,88,134,1,1
	.word	44774
	.byte	4,0,14
	.word	12549
	.byte	14
	.word	399
	.byte	6
	.byte	'Os_FifoIdxIncrement',0,3,90,88,1,1,1,5
	.byte	'Index',0,90,88,1
	.word	44836
	.byte	5
	.byte	'Size',0,90,88,1
	.word	399
	.byte	26,4,0,0,3
	.byte	'Os_FifoIsFull',0,3,90,118,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,118,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,118,1
	.word	399
	.byte	5
	.byte	'Size',0,90,118,1
	.word	399
	.byte	26,4,0,0,3
	.byte	'Os_FifoIsEmpty',0,3,90,142,1,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,142,1,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,142,1,1
	.word	399
	.byte	4,0,15
	.word	399
	.byte	14
	.word	45038
	.byte	6
	.byte	'Os_FifoEmptyQueue',0,3,90,158,1,1,1,1,5
	.byte	'WriteIdx',0,90,158,1,1
	.word	45043
	.byte	5
	.byte	'ReadIdx',0,90,158,1,1
	.word	44836
	.byte	4,0,3
	.byte	'Os_FifoIndicesInRange',0,3,90,178,1,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,178,1,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,178,1,1
	.word	399
	.byte	5
	.byte	'Size',0,90,178,1,1
	.word	399
	.byte	4,0,17,92,80,9,1,12
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,14
	.word	45196
	.byte	17,92,87,9,1,12
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,15
	.word	45225
	.byte	14
	.word	45248
	.byte	17,92,73,9,1,12
	.byte	'Value',0
	.word	399
	.byte	1,2,35,0,0,14
	.word	45258
	.byte	11
	.byte	'Os_Fifo08WriteConfigType_Tag',0,92,94,8,16,12
	.byte	'Dyn',0
	.word	45220
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	45253
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45279
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	45284
	.byte	14
	.word	45374
	.byte	3
	.byte	'Os_Fifo08IsFull',0,3,91,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,91,169,1,1
	.word	45379
	.byte	26,4,0,0,14
	.word	45225
	.byte	15
	.word	45196
	.byte	14
	.word	45435
	.byte	15
	.word	45258
	.byte	14
	.word	45445
	.byte	11
	.byte	'Os_Fifo08ReadConfigType_Tag',0,92,104,8,16,12
	.byte	'Dyn',0
	.word	45430
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	45440
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45450
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	45455
	.byte	14
	.word	45545
	.byte	3
	.byte	'Os_Fifo08IsEmpty',0,3,91,132,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,91,132,2,1
	.word	45550
	.byte	26,4,0,0,17,94,80,9,1,12
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,14
	.word	45602
	.byte	17,94,87,9,1,12
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,15
	.word	45631
	.byte	14
	.word	45654
	.byte	17,94,73,9,2,12
	.byte	'Value',0
	.word	3769
	.byte	2,2,35,0,0,14
	.word	45664
	.byte	11
	.byte	'Os_Fifo16WriteConfigType_Tag',0,94,94,8,16,12
	.byte	'Dyn',0
	.word	45626
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	45659
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45685
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	45690
	.byte	14
	.word	45780
	.byte	3
	.byte	'Os_Fifo16IsFull',0,3,93,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,93,169,1,1
	.word	45785
	.byte	26,4,0,0,14
	.word	45631
	.byte	15
	.word	45602
	.byte	14
	.word	45841
	.byte	15
	.word	45664
	.byte	14
	.word	45851
	.byte	11
	.byte	'Os_Fifo16ReadConfigType_Tag',0,94,104,8,16,12
	.byte	'Dyn',0
	.word	45836
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	45846
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45856
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	45861
	.byte	14
	.word	45951
	.byte	3
	.byte	'Os_Fifo16IsEmpty',0,3,93,133,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,93,133,2,1
	.word	45956
	.byte	26,4,0,0,17,96,80,9,1,12
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,14
	.word	46008
	.byte	17,96,87,9,1,12
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,15
	.word	46037
	.byte	14
	.word	46060
	.byte	17,96,73,9,4,12
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,0,14
	.word	46070
	.byte	11
	.byte	'Os_Fifo32WriteConfigType_Tag',0,96,94,8,16,12
	.byte	'Dyn',0
	.word	46032
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	46065
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46091
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	46096
	.byte	14
	.word	46186
	.byte	3
	.byte	'Os_Fifo32IsFull',0,3,95,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,95,169,1,1
	.word	46191
	.byte	26,4,0,0,14
	.word	46037
	.byte	15
	.word	46008
	.byte	14
	.word	46247
	.byte	15
	.word	46070
	.byte	14
	.word	46257
	.byte	11
	.byte	'Os_Fifo32ReadConfigType_Tag',0,96,104,8,16,12
	.byte	'Dyn',0
	.word	46242
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	46252
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46262
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,15
	.word	46267
	.byte	14
	.word	46357
	.byte	3
	.byte	'Os_Fifo32IsEmpty',0,3,95,131,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,95,131,2,1
	.word	46362
	.byte	26,4,0,0,17,98,101,9,1,12
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,14
	.word	46414
	.byte	17,98,108,9,1,12
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,15
	.word	46443
	.byte	14
	.word	46466
	.byte	19,1,1,20
	.word	12049
	.byte	20
	.word	399
	.byte	20
	.word	17820
	.byte	0,14
	.word	46476
	.byte	16
	.byte	'Os_FifoRefWriteCbk',0,98,92,9
	.word	46495
	.byte	11
	.byte	'Os_FifoRefWriteConfigType_Tag',0,98,115,8,20,12
	.byte	'Dyn',0
	.word	46438
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	46471
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	12049
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,12
	.byte	'WriteCbk',0
	.word	46500
	.byte	4,2,35,16,0,15
	.word	46527
	.byte	14
	.word	46636
	.byte	3
	.byte	'Os_FifoRefIsFull',0,3,97,167,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,97,167,1,1
	.word	46641
	.byte	26,4,0,0,14
	.word	46476
	.byte	14
	.word	46443
	.byte	15
	.word	46414
	.byte	14
	.word	46703
	.byte	19,1,1,20
	.word	17820
	.byte	20
	.word	399
	.byte	20
	.word	12049
	.byte	0,14
	.word	46713
	.byte	16
	.byte	'Os_FifoRefReadCbk',0,98,78,9
	.word	46732
	.byte	11
	.byte	'Os_FifoRefReadConfigType_Tag',0,98,126,8,20,12
	.byte	'Dyn',0
	.word	46698
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	46708
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	17820
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,12
	.byte	'ReadCbk',0
	.word	46737
	.byte	4,2,35,16,0,15
	.word	46763
	.byte	14
	.word	46871
	.byte	3
	.byte	'Os_FifoRefIsEmpty',0,3,97,255,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,97,255,1,1
	.word	46876
	.byte	26,4,0,0,14
	.word	46713
	.byte	11
	.byte	'Os_TimerIsrConfigType_Tag',0,47,209,2,8,72,12
	.byte	'Isr',0
	.word	7100
	.byte	68,2,35,0,12
	.byte	'Counter',0
	.word	8141
	.byte	4,2,35,68,0,15
	.word	46934
	.byte	14
	.word	46997
	.byte	3
	.byte	'Os_TimerThread2CounterIsr',0,3,99,185,1,1
	.word	47002
	.byte	1,1,5
	.byte	'Thread',0,99,185,1,1
	.word	14194
	.byte	4,0,11
	.byte	'Os_TimerPfrtConfigType_Tag',0,47,187,2,8,68,12
	.byte	'SwCounter',0
	.word	40103
	.byte	52,2,35,0,12
	.byte	'Period',0
	.word	135
	.byte	4,2,35,52,12
	.byte	'MaxDifferentialValue',0
	.word	135
	.byte	4,2,35,56,12
	.byte	'MaxCountingValue',0
	.word	135
	.byte	4,2,35,60,12
	.byte	'HwConfig',0
	.word	23668
	.byte	4,2,35,64,0,15
	.word	47063
.L78:
	.byte	14
	.word	47206
.L94:
	.byte	6
	.byte	'Os_TimerPfrtSetNextHardwareCompareValue',0,3,99,226,1,1,1,1
.L96:
	.byte	5
	.byte	'Timer',0,99,226,1,1
	.word	47211
.L98:
	.byte	26,4,4,4,4,4,4,4,4,0,0,17,47,173,2,9,12,12
	.byte	'Base',0
	.word	40059
	.byte	8,2,35,0,12
	.byte	'Compare',0
	.word	135
	.byte	4,2,35,8,0,14
	.word	47290
.L99:
	.byte	3
	.byte	'Os_TimerPfrtGetDyn',0,3,99,168,2,1
	.word	47328
	.byte	1,1
.L101:
	.byte	5
	.byte	'Timer',0,99,168,2,1
	.word	47211
.L103:
	.byte	4,0,2
	.byte	'int',0,4,5,15
	.word	47381
	.byte	27
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,20
	.word	47388
	.byte	0,13
	.word	236
	.byte	14
	.word	236
	.byte	28
	.byte	'__cmpswapw',0
	.word	47430
	.byte	1,1,1,1,29
	.byte	'p',0
	.word	47435
	.byte	29
	.byte	'value',0
	.word	236
	.byte	29
	.byte	'compare',0
	.word	236
	.byte	0,30
	.word	156
	.byte	4,0,30
	.word	183
	.byte	4,0,30
	.word	210
	.byte	4,0,31
	.byte	'Os_ErrKernelPanic',0,38,200,16,1,1,1,1,1,30
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	4,0,30
	.word	311
	.byte	32
	.word	343
	.byte	4,0,30
	.word	360
	.byte	32
	.word	378
	.byte	4,0,30
	.word	2923
	.byte	32
	.word	2961
	.byte	4,0,30
	.word	2981
	.byte	32
	.word	3021
	.byte	4,0,30
	.word	28286
	.byte	32
	.word	28316
	.byte	4,0,30
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	26,33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,4,0,0,30
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	28895
	.byte	32
	.word	28940
	.byte	32
	.word	28957
	.byte	26,33
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,30
	.word	28976
	.byte	32
	.word	29028
	.byte	32
	.word	29045
	.byte	32
	.word	29061
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,30
	.word	29081
	.byte	32
	.word	29130
	.byte	32
	.word	29147
	.byte	26,33
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,30
	.word	29176
	.byte	32
	.word	29217
	.byte	4,0,30
	.word	29236
	.byte	32
	.word	29277
	.byte	4,0,30
	.word	29296
	.byte	32
	.word	29338
	.byte	4,0,36
	.byte	'Os_CounterWorkJobs',0,24,167,6,21,1,1,1,1,5
	.byte	'Counter',0,24,169,6,54
	.word	8141
	.byte	0,30
	.word	29357
	.byte	4,0,30
	.word	29389
	.byte	4,0,30
	.word	29422
	.byte	4,0,30
	.word	29483
	.byte	32
	.word	29516
	.byte	4,0,30
	.word	29538
	.byte	32
	.word	29565
	.byte	4,0,30
	.word	29592
	.byte	32
	.word	29619
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,0,0,30
	.word	29644
	.byte	32
	.word	29678
	.byte	4,0,30
	.word	29695
	.byte	32
	.word	29730
	.byte	4,0,30
	.word	29747
	.byte	32
	.word	29778
	.byte	4,0,30
	.word	29800
	.byte	32
	.word	29836
	.byte	4,0,30
	.word	29862
	.byte	32
	.word	29894
	.byte	4,0,30
	.word	29915
	.byte	32
	.word	29946
	.byte	4,0,30
	.word	29967
	.byte	32
	.word	29998
	.byte	4,0,30
	.word	30019
	.byte	32
	.word	30054
	.byte	32
	.word	30073
	.byte	4,0,30
	.word	30090
	.byte	32
	.word	30122
	.byte	32
	.word	30138
	.byte	4,0,30
	.word	30156
	.byte	32
	.word	30194
	.byte	4,0,30
	.word	30221
	.byte	32
	.word	30254
	.byte	4,0,30
	.word	30281
	.byte	32
	.word	30316
	.byte	4,0,30
	.word	30332
	.byte	32
	.word	30367
	.byte	4,0,30
	.word	30383
	.byte	32
	.word	30419
	.byte	4,0,30
	.word	30451
	.byte	32
	.word	30487
	.byte	32
	.word	30510
	.byte	32
	.word	30524
	.byte	4,0,30
	.word	30556
	.byte	32
	.word	30592
	.byte	32
	.word	30615
	.byte	32
	.word	30629
	.byte	4,0,30
	.word	30661
	.byte	32
	.word	30697
	.byte	32
	.word	30720
	.byte	32
	.word	30734
	.byte	4,0,30
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	4,0,30
	.word	30832
	.byte	4,0,30
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,0,0,30
	.word	31069
	.byte	32
	.word	31102
	.byte	26,33
	.word	210
	.byte	35
	.word	234
	.byte	0,4,0,0,30
	.word	31127
	.byte	32
	.word	31164
	.byte	4,0,30
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	4,0,30
	.word	31268
	.byte	32
	.word	31292
	.byte	4,0,30
	.word	31327
	.byte	32
	.word	31359
	.byte	4,0,30
	.word	31379
	.byte	32
	.word	31410
	.byte	4,0,30
	.word	31430
	.byte	32
	.word	31456
	.byte	4,0,30
	.word	31476
	.byte	4,0,30
	.word	31501
	.byte	26,26,33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,4,4,0,0,30
	.word	31542
	.byte	32
	.word	31563
	.byte	26,4,33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,4,0,0,30
	.word	31592
	.byte	32
	.word	31613
	.byte	26,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,0,0,30
	.word	31642
	.byte	32
	.word	31679
	.byte	26,33
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,30
	.word	31707
	.byte	32
	.word	31735
	.byte	4,0,30
	.word	31761
	.byte	32
	.word	31796
	.byte	26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,4,33
	.word	44102
	.byte	32
	.word	44133
	.byte	34
	.word	44149
	.byte	34
	.word	44150
	.byte	33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44314
	.byte	32
	.word	44339
	.byte	32
	.word	44355
	.byte	32
	.word	44372
	.byte	34
	.word	44388
	.byte	34
	.word	44389
	.byte	34
	.word	44390
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44392
	.byte	35
	.word	44393
	.byte	35
	.word	44394
	.byte	35
	.word	44395
	.byte	35
	.word	44396
	.byte	35
	.word	44397
	.byte	35
	.word	44398
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44151
	.byte	35
	.word	44152
	.byte	35
	.word	44153
	.byte	0,0,4,0,0,30
	.word	31818
	.byte	32
	.word	31852
	.byte	26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,4,33
	.word	44156
	.byte	32
	.word	44186
	.byte	34
	.word	44202
	.byte	34
	.word	44203
	.byte	33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44401
	.byte	32
	.word	44425
	.byte	32
	.word	44441
	.byte	32
	.word	44458
	.byte	34
	.word	44474
	.byte	34
	.word	44475
	.byte	34
	.word	44476
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44478
	.byte	35
	.word	44479
	.byte	35
	.word	44480
	.byte	35
	.word	44481
	.byte	35
	.word	44482
	.byte	35
	.word	44483
	.byte	35
	.word	44484
	.byte	35
	.word	44485
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44204
	.byte	35
	.word	44205
	.byte	35
	.word	44206
	.byte	0,0,4,0,0,30
	.word	31874
	.byte	32
	.word	31908
	.byte	26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,4,33
	.word	44209
	.byte	32
	.word	44239
	.byte	34
	.word	44255
	.byte	34
	.word	44256
	.byte	33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44314
	.byte	32
	.word	44339
	.byte	32
	.word	44355
	.byte	32
	.word	44372
	.byte	34
	.word	44388
	.byte	34
	.word	44389
	.byte	34
	.word	44390
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44392
	.byte	35
	.word	44393
	.byte	35
	.word	44394
	.byte	35
	.word	44395
	.byte	35
	.word	44396
	.byte	35
	.word	44397
	.byte	35
	.word	44398
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44257
	.byte	35
	.word	44258
	.byte	35
	.word	44259
	.byte	0,0,4,0,0,30
	.word	31930
	.byte	32
	.word	31963
	.byte	26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,4,33
	.word	44262
	.byte	32
	.word	44291
	.byte	34
	.word	44307
	.byte	34
	.word	44308
	.byte	33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44401
	.byte	32
	.word	44425
	.byte	32
	.word	44441
	.byte	32
	.word	44458
	.byte	34
	.word	44474
	.byte	34
	.word	44475
	.byte	34
	.word	44476
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44478
	.byte	35
	.word	44479
	.byte	35
	.word	44480
	.byte	35
	.word	44481
	.byte	35
	.word	44482
	.byte	35
	.word	44483
	.byte	35
	.word	44484
	.byte	35
	.word	44485
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44309
	.byte	35
	.word	44310
	.byte	35
	.word	44311
	.byte	0,0,4,0,0,30
	.word	31985
	.byte	32
	.word	32021
	.byte	26,4,33
	.word	31127
	.byte	32
	.word	31164
	.byte	35
	.word	31182
	.byte	0,4,0,0,30
	.word	32053
	.byte	32
	.word	32086
	.byte	32
	.word	32103
	.byte	4,0,30
	.word	32120
	.byte	32
	.word	32162
	.byte	4,0,30
	.word	32184
	.byte	32
	.word	32221
	.byte	4,0,30
	.word	32243
	.byte	32
	.word	32277
	.byte	32
	.word	32295
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	32120
	.byte	32
	.word	32162
	.byte	35
	.word	32182
	.byte	0,4,33
	.word	32184
	.byte	32
	.word	32221
	.byte	35
	.word	32241
	.byte	0,4,33
	.word	32053
	.byte	32
	.word	32086
	.byte	32
	.word	32103
	.byte	35
	.word	32118
	.byte	0,4,0,0,30
	.word	32328
	.byte	32
	.word	32356
	.byte	32
	.word	32370
	.byte	4,0,30
	.word	32390
	.byte	32
	.word	32418
	.byte	32
	.word	32432
	.byte	4,0,30
	.word	32447
	.byte	32
	.word	32494
	.byte	32
	.word	32508
	.byte	4,0,30
	.word	32524
	.byte	32
	.word	32563
	.byte	4,0,30
	.word	32584
	.byte	32
	.word	32627
	.byte	4,0,30
	.word	32653
	.byte	32
	.word	32676
	.byte	4,0,30
	.word	32705
	.byte	32
	.word	32733
	.byte	4,0,30
	.word	32753
	.byte	32
	.word	32789
	.byte	4,0,30
	.word	32809
	.byte	32
	.word	32840
	.byte	4,0,30
	.word	32860
	.byte	32
	.word	32892
	.byte	26,33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,4,33
	.word	33010
	.byte	32
	.word	33040
	.byte	35
	.word	33054
	.byte	0,4,0,0,30
	.word	32915
	.byte	32
	.word	32952
	.byte	26,33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,4,0,0,30
	.word	32974
	.byte	32
	.word	32994
	.byte	4,0,30
	.word	33010
	.byte	32
	.word	33040
	.byte	4,0,30
	.word	33056
	.byte	32
	.word	33100
	.byte	4,0,30
	.word	33116
	.byte	32
	.word	33142
	.byte	4,0,30
	.word	33163
	.byte	32
	.word	33190
	.byte	4,0,30
	.word	33351
	.byte	32
	.word	33381
	.byte	26,33
	.word	33116
	.byte	32
	.word	33142
	.byte	35
	.word	33156
	.byte	0,4,0,0,30
	.word	33403
	.byte	32
	.word	33441
	.byte	26,4,33
	.word	37207
	.byte	32
	.word	37237
	.byte	34
	.word	37255
	.byte	35
	.word	37256
	.byte	0,0,4,33
	.word	33351
	.byte	32
	.word	33381
	.byte	34
	.word	33399
	.byte	33
	.word	33116
	.byte	32
	.word	33142
	.byte	35
	.word	33156
	.byte	0,35
	.word	33400
	.byte	0,0,4,33
	.word	31379
	.byte	32
	.word	31410
	.byte	35
	.word	31428
	.byte	0,4,0,0,30
	.word	33466
	.byte	32
	.word	33499
	.byte	26,33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,4,0,0,30
	.word	33526
	.byte	26,33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,4,0,0,30
	.word	33564
	.byte	32
	.word	33592
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	33610
	.byte	32
	.word	33639
	.byte	4,0,30
	.word	33655
	.byte	32
	.word	33697
	.byte	4,0,30
	.word	33713
	.byte	32
	.word	33742
	.byte	4,0,30
	.word	33758
	.byte	32
	.word	33792
	.byte	4,0,30
	.word	34024
	.byte	32
	.word	34059
	.byte	4,0,30
	.word	34075
	.byte	32
	.word	34106
	.byte	4,0,30
	.word	34122
	.byte	32
	.word	34154
	.byte	4,0,30
	.word	34170
	.byte	32
	.word	34202
	.byte	4,0,30
	.word	34218
	.byte	32
	.word	34265
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,4,0,0,30
	.word	34284
	.byte	32
	.word	34325
	.byte	32
	.word	34339
	.byte	26,33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,4,0,0,30
	.word	34356
	.byte	32
	.word	34402
	.byte	4,0,30
	.word	34422
	.byte	32
	.word	34447
	.byte	26,33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,4,33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,4,33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,4,0,0,30
	.word	34469
	.byte	26,33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,4,33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,4,33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,4,0,0,30
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	26,33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,4,0,0,30
	.word	34568
	.byte	26,33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,4,33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,4,33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,4,0,0,30
	.word	35044
	.byte	4,0,30
	.word	35081
	.byte	32
	.word	35117
	.byte	4,0,30
	.word	35135
	.byte	32
	.word	35169
	.byte	32
	.word	35188
	.byte	32
	.word	35203
	.byte	4,0,30
	.word	35228
	.byte	32
	.word	35262
	.byte	32
	.word	35281
	.byte	32
	.word	35296
	.byte	4,0,30
	.word	35321
	.byte	32
	.word	35347
	.byte	32
	.word	35362
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	34
	.word	36428
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36429
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36430
	.byte	0,0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,4,0,0,30
	.word	35385
	.byte	32
	.word	35413
	.byte	32
	.word	35429
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	34
	.word	36428
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36429
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36430
	.byte	0,0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,4,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,4,0,0,30
	.word	35455
	.byte	32
	.word	35490
	.byte	32
	.word	35507
	.byte	4,0,30
	.word	35629
	.byte	32
	.word	35660
	.byte	32
	.word	35677
	.byte	4,0,30
	.word	35704
	.byte	32
	.word	35744
	.byte	32
	.word	35761
	.byte	4,0,30
	.word	35787
	.byte	32
	.word	35824
	.byte	4,0,30
	.word	35853
	.byte	32
	.word	35887
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,4,0,0,30
	.word	35907
	.byte	32
	.word	35944
	.byte	32
	.word	35967
	.byte	32
	.word	35984
	.byte	26,26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,33
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	34
	.word	36428
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36429
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36430
	.byte	0,0,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,0,4,4,33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,4,4,4,33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,4,0,0,30
	.word	36008
	.byte	32
	.word	36036
	.byte	32
	.word	36052
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,4,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,4,0,0,30
	.word	36077
	.byte	32
	.word	36106
	.byte	32
	.word	36123
	.byte	26,33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,4,33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,4,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,4,0,0,30
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	26,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,0,0,30
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	26,33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,4,0,0,30
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	26,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,4,0,0,30
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	26,33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,4,33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,4,0,0,30
	.word	36554
	.byte	32
	.word	36587
	.byte	4,0,30
	.word	36645
	.byte	32
	.word	36669
	.byte	32
	.word	36685
	.byte	4,0,30
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	4,0,30
	.word	36768
	.byte	32
	.word	36790
	.byte	4,0,30
	.word	36814
	.byte	32
	.word	36841
	.byte	4,0,30
	.word	36859
	.byte	32
	.word	36894
	.byte	26,4,0,0,30
	.word	36912
	.byte	32
	.word	36941
	.byte	32
	.word	36967
	.byte	32
	.word	36984
	.byte	26,4,4,0,0,30
	.word	37003
	.byte	32
	.word	37040
	.byte	32
	.word	37057
	.byte	26,4,4,0,0,30
	.word	37076
	.byte	32
	.word	37115
	.byte	32
	.word	37132
	.byte	26,4,4,0,0,30
	.word	37151
	.byte	32
	.word	37185
	.byte	26,4,0,0,30
	.word	37207
	.byte	32
	.word	37237
	.byte	26,4,0,0,30
	.word	37259
	.byte	32
	.word	37292
	.byte	26,4,0,0,30
	.word	37314
	.byte	26,4,0,0,30
	.word	37359
	.byte	26,4,0,0,30
	.word	37403
	.byte	26,4,0,0,30
	.word	37447
	.byte	26,4,0,0,30
	.word	37490
	.byte	32
	.word	37523
	.byte	4,0,30
	.word	37540
	.byte	32
	.word	37570
	.byte	4,0,30
	.word	37588
	.byte	32
	.word	37621
	.byte	4,0,30
	.word	37639
	.byte	32
	.word	37681
	.byte	4,0,30
	.word	37699
	.byte	32
	.word	37728
	.byte	4,0,30
	.word	37746
	.byte	32
	.word	37782
	.byte	4,0,30
	.word	37800
	.byte	32
	.word	37828
	.byte	4,0,30
	.word	37846
	.byte	32
	.word	37873
	.byte	4,0,30
	.word	37891
	.byte	32
	.word	37932
	.byte	32
	.word	37948
	.byte	4,0,30
	.word	37967
	.byte	32
	.word	37995
	.byte	4,0,30
	.word	38013
	.byte	32
	.word	38054
	.byte	4,0,30
	.word	38072
	.byte	32
	.word	38112
	.byte	26,33
	.word	32705
	.byte	32
	.word	32733
	.byte	35
	.word	32751
	.byte	0,4,33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,4,33
	.word	32860
	.byte	32
	.word	32892
	.byte	34
	.word	32910
	.byte	33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,35
	.word	32911
	.byte	33
	.word	33010
	.byte	32
	.word	33040
	.byte	35
	.word	33054
	.byte	0,35
	.word	32912
	.byte	0,0,4,0,0,30
	.word	38134
	.byte	32
	.word	38173
	.byte	26,33
	.word	32705
	.byte	32
	.word	32733
	.byte	35
	.word	32751
	.byte	0,4,33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,4,33
	.word	32915
	.byte	32
	.word	32952
	.byte	34
	.word	32970
	.byte	33
	.word	32809
	.byte	32
	.word	32840
	.byte	35
	.word	32858
	.byte	0,35
	.word	32971
	.byte	0,0,4,0,0,30
	.word	38195
	.byte	32
	.word	38233
	.byte	4,0,30
	.word	38251
	.byte	32
	.word	38289
	.byte	4,0,30
	.word	38307
	.byte	32
	.word	38342
	.byte	26,33
	.word	31707
	.byte	32
	.word	31735
	.byte	35
	.word	31759
	.byte	0,4,33
	.word	38251
	.byte	32
	.word	38289
	.byte	35
	.word	38305
	.byte	0,4,33
	.word	38195
	.byte	32
	.word	38233
	.byte	35
	.word	38249
	.byte	0,4,0,0,30
	.word	38364
	.byte	32
	.word	38396
	.byte	32
	.word	38410
	.byte	26,26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	43764
	.byte	32
	.word	43792
	.byte	32
	.word	43808
	.byte	32
	.word	43825
	.byte	32
	.word	43839
	.byte	34
	.word	43859
	.byte	34
	.word	43860
	.byte	34
	.word	43861
	.byte	33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,35
	.word	43863
	.byte	35
	.word	43864
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43865
	.byte	35
	.word	43866
	.byte	35
	.word	43867
	.byte	35
	.word	43868
	.byte	35
	.word	43869
	.byte	35
	.word	43870
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	38950
	.byte	32
	.word	38982
	.byte	34
	.word	38998
	.byte	35
	.word	38999
	.byte	0,0,4,33
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	35
	.word	36766
	.byte	0,4,33
	.word	39098
	.byte	32
	.word	39133
	.byte	35
	.word	39149
	.byte	0,4,4,4,4,4,33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,4,33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,4,33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,4,33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,4,33
	.word	37800
	.byte	32
	.word	37828
	.byte	35
	.word	37844
	.byte	0,4,33
	.word	31501
	.byte	34
	.word	31531
	.byte	34
	.word	31532
	.byte	33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,35
	.word	31533
	.byte	35
	.word	31534
	.byte	0,0,4,33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,4,33
	.word	35907
	.byte	32
	.word	35944
	.byte	32
	.word	35967
	.byte	32
	.word	35984
	.byte	34
	.word	35998
	.byte	34
	.word	35999
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,33
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	34
	.word	36428
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36429
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36430
	.byte	0,0,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,0,35
	.word	36000
	.byte	35
	.word	36001
	.byte	33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,35
	.word	36002
	.byte	35
	.word	36003
	.byte	35
	.word	36004
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36005
	.byte	0,0,4,4,0,0,30
	.word	38458
	.byte	32
	.word	38486
	.byte	32
	.word	38500
	.byte	26,33
	.word	36768
	.byte	32
	.word	36790
	.byte	35
	.word	36812
	.byte	0,4,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,4,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,4,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,4,33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,4,33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,4,33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,4,33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,4,33
	.word	35853
	.byte	32
	.word	35887
	.byte	34
	.word	35901
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	35902
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	35903
	.byte	33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,35
	.word	35904
	.byte	0,0,4,33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,4,33
	.word	43764
	.byte	32
	.word	43792
	.byte	32
	.word	43808
	.byte	32
	.word	43825
	.byte	32
	.word	43839
	.byte	34
	.word	43859
	.byte	34
	.word	43860
	.byte	34
	.word	43861
	.byte	33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,35
	.word	43863
	.byte	35
	.word	43864
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43865
	.byte	35
	.word	43866
	.byte	35
	.word	43867
	.byte	35
	.word	43868
	.byte	35
	.word	43869
	.byte	35
	.word	43870
	.byte	0,0,4,0,0,30
	.word	38542
	.byte	32
	.word	38576
	.byte	32
	.word	38590
	.byte	26,26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	43764
	.byte	32
	.word	43792
	.byte	32
	.word	43808
	.byte	32
	.word	43825
	.byte	32
	.word	43839
	.byte	34
	.word	43859
	.byte	34
	.word	43860
	.byte	34
	.word	43861
	.byte	33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,35
	.word	43863
	.byte	35
	.word	43864
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43865
	.byte	35
	.word	43866
	.byte	35
	.word	43867
	.byte	35
	.word	43868
	.byte	35
	.word	43869
	.byte	35
	.word	43870
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	35
	.word	36766
	.byte	0,4,33
	.word	39098
	.byte	32
	.word	39133
	.byte	35
	.word	39149
	.byte	0,4,4,4,4,4,33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,4,33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,4,33
	.word	36077
	.byte	32
	.word	36106
	.byte	32
	.word	36123
	.byte	34
	.word	36137
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	36138
	.byte	33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,35
	.word	36139
	.byte	33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,35
	.word	36140
	.byte	0,0,4,33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,4,33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,4,33
	.word	37800
	.byte	32
	.word	37828
	.byte	35
	.word	37844
	.byte	0,4,33
	.word	31501
	.byte	34
	.word	31531
	.byte	34
	.word	31532
	.byte	33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,35
	.word	31533
	.byte	35
	.word	31534
	.byte	0,0,4,33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,4,4,0,0,30
	.word	38637
	.byte	32
	.word	38661
	.byte	32
	.word	38678
	.byte	32
	.word	38692
	.byte	26,26,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	43663
	.byte	32
	.word	43683
	.byte	32
	.word	43699
	.byte	32
	.word	43716
	.byte	32
	.word	43730
	.byte	34
	.word	43750
	.byte	34
	.word	43751
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43372
	.byte	32
	.word	43393
	.byte	32
	.word	43409
	.byte	32
	.word	43426
	.byte	32
	.word	43439
	.byte	34
	.word	43457
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43458
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	43459
	.byte	33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,35
	.word	43460
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,35
	.word	43752
	.byte	35
	.word	43753
	.byte	35
	.word	43754
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43755
	.byte	35
	.word	43756
	.byte	35
	.word	43757
	.byte	35
	.word	43758
	.byte	35
	.word	43759
	.byte	35
	.word	43760
	.byte	35
	.word	43761
	.byte	0,0,0,33
	.word	39047
	.byte	32
	.word	39080
	.byte	35
	.word	39096
	.byte	0,4,33
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	35
	.word	36766
	.byte	0,4,33
	.word	39098
	.byte	32
	.word	39133
	.byte	35
	.word	39149
	.byte	0,4,4,4,4,4,33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,4,33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,4,33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,4,33
	.word	31501
	.byte	34
	.word	31531
	.byte	34
	.word	31532
	.byte	33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,35
	.word	31533
	.byte	35
	.word	31534
	.byte	0,0,4,33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,4,4,0,0,30
	.word	38736
	.byte	32
	.word	38773
	.byte	4,0,30
	.word	38791
	.byte	32
	.word	38826
	.byte	32
	.word	38842
	.byte	26,33
	.word	35704
	.byte	32
	.word	35744
	.byte	32
	.word	35761
	.byte	35
	.word	35785
	.byte	0,4,0,0,30
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	4,0,30
	.word	38950
	.byte	32
	.word	38982
	.byte	26,4,0,0,30
	.word	39002
	.byte	32
	.word	39027
	.byte	26,4,0,0,30
	.word	39047
	.byte	32
	.word	39080
	.byte	4,0,30
	.word	39098
	.byte	32
	.word	39133
	.byte	4,0,30
	.word	39151
	.byte	32
	.word	39179
	.byte	26,33
	.word	29862
	.byte	32
	.word	29894
	.byte	35
	.word	29913
	.byte	0,4,0,0,30
	.word	39196
	.byte	32
	.word	39224
	.byte	4,0,30
	.word	39239
	.byte	32
	.word	39267
	.byte	32
	.word	39280
	.byte	26,33
	.word	39345
	.byte	32
	.word	39372
	.byte	34
	.word	39385
	.byte	33
	.word	29967
	.byte	32
	.word	29998
	.byte	35
	.word	30017
	.byte	0,35
	.word	39386
	.byte	0,0,4,33
	.word	39307
	.byte	32
	.word	39328
	.byte	34
	.word	39341
	.byte	33
	.word	29915
	.byte	32
	.word	29946
	.byte	35
	.word	29965
	.byte	0,35
	.word	39342
	.byte	0,0,4,0,0,30
	.word	39307
	.byte	32
	.word	39328
	.byte	26,33
	.word	29915
	.byte	32
	.word	29946
	.byte	35
	.word	29965
	.byte	0,4,0,0,30
	.word	39345
	.byte	32
	.word	39372
	.byte	26,33
	.word	29967
	.byte	32
	.word	29998
	.byte	35
	.word	30017
	.byte	0,4,0,0,30
	.word	39389
	.byte	32
	.word	39416
	.byte	4,0,30
	.word	39438
	.byte	32
	.word	39480
	.byte	4,0,30
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	4,0,30
	.word	39588
	.byte	32
	.word	39622
	.byte	4,0,30
	.word	39950
	.byte	32
	.word	39977
	.byte	4,0,30
	.word	39999
	.byte	32
	.word	40036
	.byte	4,0,30
	.word	40175
	.byte	32
	.word	40197
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	40216
	.byte	32
	.word	40247
	.byte	4,0,30
	.word	40264
	.byte	32
	.word	40298
	.byte	32
	.word	40313
	.byte	4,0,30
	.word	40339
	.byte	32
	.word	40372
	.byte	32
	.word	40387
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	40406
	.byte	32
	.word	40438
	.byte	26,33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,4,33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,4,33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,4,33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,4,0,0,30
	.word	40460
	.byte	32
	.word	40494
	.byte	4,0,30
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	26,26,4,0,0,0,30
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	26,4,33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,4,33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,4,33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,4,33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,4,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,4,0,0,30
	.word	40690
	.byte	32
	.word	40729
	.byte	4,0,30
	.word	40746
	.byte	32
	.word	40793
	.byte	32
	.word	40818
	.byte	32
	.word	40831
	.byte	4,0,30
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	26,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	26,4,33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,4,33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,4,0,0,30
	.word	41133
	.byte	32
	.word	41174
	.byte	4,0,30
	.word	41191
	.byte	32
	.word	41232
	.byte	4,0,30
	.word	41259
	.byte	32
	.word	41293
	.byte	32
	.word	41307
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	41334
	.byte	32
	.word	41378
	.byte	4,0,30
	.word	41407
	.byte	32
	.word	41431
	.byte	32
	.word	41449
	.byte	32
	.word	41469
	.byte	32
	.word	41490
	.byte	26,4,0,0,30
	.word	41514
	.byte	32
	.word	41556
	.byte	32
	.word	41574
	.byte	32
	.word	41594
	.byte	4,0,30
	.word	41612
	.byte	32
	.word	41640
	.byte	4,0,30
	.word	41655
	.byte	32
	.word	41685
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	37800
	.byte	32
	.word	37828
	.byte	35
	.word	37844
	.byte	0,4,0,0,30
	.word	41920
	.byte	32
	.word	41946
	.byte	26,33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,4,0,0,30
	.word	41964
	.byte	32
	.word	41988
	.byte	32
	.word	42002
	.byte	26,33
	.word	41920
	.byte	32
	.word	41946
	.byte	34
	.word	41960
	.byte	33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,35
	.word	41961
	.byte	0,0,4,0,0,30
	.word	42021
	.byte	32
	.word	42046
	.byte	4,0,30
	.word	42062
	.byte	32
	.word	42094
	.byte	26,33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,4,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,33
	.word	34170
	.byte	32
	.word	34202
	.byte	35
	.word	34216
	.byte	0,4,0,0,30
	.word	42114
	.byte	32
	.word	42141
	.byte	26,33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,4,33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,4,0,0,30
	.word	42160
	.byte	32
	.word	42191
	.byte	26,33
	.word	33466
	.byte	32
	.word	33499
	.byte	34
	.word	33512
	.byte	33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,35
	.word	33513
	.byte	0,0,4,33
	.word	42114
	.byte	32
	.word	42141
	.byte	34
	.word	42155
	.byte	33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,35
	.word	42156
	.byte	33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,35
	.word	42157
	.byte	0,0,4,0,0,30
	.word	42210
	.byte	32
	.word	42232
	.byte	32
	.word	42251
	.byte	26,33
	.word	42335
	.byte	34
	.word	42367
	.byte	35
	.word	42368
	.byte	0,0,4,33
	.word	36912
	.byte	32
	.word	36941
	.byte	32
	.word	36967
	.byte	32
	.word	36984
	.byte	34
	.word	36998
	.byte	35
	.word	36999
	.byte	35
	.word	37000
	.byte	0,0,4,33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,4,33
	.word	37540
	.byte	32
	.word	37570
	.byte	35
	.word	37586
	.byte	0,4,33
	.word	37540
	.byte	32
	.word	37570
	.byte	35
	.word	37586
	.byte	0,4,33
	.word	41920
	.byte	32
	.word	41946
	.byte	34
	.word	41960
	.byte	33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,35
	.word	41961
	.byte	0,0,4,33
	.word	41655
	.byte	32
	.word	41685
	.byte	34
	.word	41700
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41701
	.byte	33
	.word	37800
	.byte	32
	.word	37828
	.byte	35
	.word	37844
	.byte	0,35
	.word	41702
	.byte	0,0,4,33
	.word	38637
	.byte	32
	.word	38661
	.byte	32
	.word	38678
	.byte	32
	.word	38692
	.byte	34
	.word	38719
	.byte	34
	.word	38720
	.byte	33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	43663
	.byte	32
	.word	43683
	.byte	32
	.word	43699
	.byte	32
	.word	43716
	.byte	32
	.word	43730
	.byte	34
	.word	43750
	.byte	34
	.word	43751
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43372
	.byte	32
	.word	43393
	.byte	32
	.word	43409
	.byte	32
	.word	43426
	.byte	32
	.word	43439
	.byte	34
	.word	43457
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43458
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	43459
	.byte	33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,35
	.word	43460
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,35
	.word	43752
	.byte	35
	.word	43753
	.byte	35
	.word	43754
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43755
	.byte	35
	.word	43756
	.byte	35
	.word	43757
	.byte	35
	.word	43758
	.byte	35
	.word	43759
	.byte	35
	.word	43760
	.byte	35
	.word	43761
	.byte	0,0,0,33
	.word	39047
	.byte	32
	.word	39080
	.byte	35
	.word	39096
	.byte	0,35
	.word	38721
	.byte	33
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	35
	.word	36766
	.byte	0,35
	.word	38722
	.byte	33
	.word	39098
	.byte	32
	.word	39133
	.byte	35
	.word	39149
	.byte	0,35
	.word	38723
	.byte	35
	.word	38724
	.byte	35
	.word	38725
	.byte	35
	.word	38726
	.byte	35
	.word	38727
	.byte	33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,35
	.word	38728
	.byte	33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,35
	.word	38729
	.byte	33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,35
	.word	38730
	.byte	33
	.word	31501
	.byte	34
	.word	31531
	.byte	34
	.word	31532
	.byte	33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,35
	.word	31533
	.byte	35
	.word	31534
	.byte	0,0,35
	.word	38731
	.byte	33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,35
	.word	38732
	.byte	35
	.word	38733
	.byte	0,0,4,0,0,30
	.word	42284
	.byte	32
	.word	42306
	.byte	26,33
	.word	42335
	.byte	34
	.word	42367
	.byte	35
	.word	42368
	.byte	0,0,4,33
	.word	37003
	.byte	32
	.word	37040
	.byte	32
	.word	37057
	.byte	34
	.word	37071
	.byte	35
	.word	37072
	.byte	35
	.word	37073
	.byte	0,0,4,33
	.word	41612
	.byte	32
	.word	41640
	.byte	35
	.word	41653
	.byte	0,4,33
	.word	37540
	.byte	32
	.word	37570
	.byte	35
	.word	37586
	.byte	0,4,33
	.word	37540
	.byte	32
	.word	37570
	.byte	35
	.word	37586
	.byte	0,4,33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,4,33
	.word	38364
	.byte	32
	.word	38396
	.byte	32
	.word	38410
	.byte	34
	.word	38437
	.byte	34
	.word	38438
	.byte	33
	.word	37699
	.byte	32
	.word	37728
	.byte	35
	.word	37744
	.byte	0,33
	.word	33655
	.byte	32
	.word	33697
	.byte	35
	.word	33711
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,33
	.word	43764
	.byte	32
	.word	43792
	.byte	32
	.word	43808
	.byte	32
	.word	43825
	.byte	32
	.word	43839
	.byte	34
	.word	43859
	.byte	34
	.word	43860
	.byte	34
	.word	43861
	.byte	33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,35
	.word	43863
	.byte	35
	.word	43864
	.byte	33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	43865
	.byte	35
	.word	43866
	.byte	35
	.word	43867
	.byte	35
	.word	43868
	.byte	35
	.word	43869
	.byte	35
	.word	43870
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	38439
	.byte	33
	.word	38950
	.byte	32
	.word	38982
	.byte	34
	.word	38998
	.byte	35
	.word	38999
	.byte	0,0,35
	.word	38440
	.byte	33
	.word	36715
	.byte	32
	.word	36735
	.byte	32
	.word	36752
	.byte	35
	.word	36766
	.byte	0,35
	.word	38441
	.byte	33
	.word	39098
	.byte	32
	.word	39133
	.byte	35
	.word	39149
	.byte	0,35
	.word	38442
	.byte	35
	.word	38443
	.byte	35
	.word	38444
	.byte	35
	.word	38445
	.byte	35
	.word	38446
	.byte	33
	.word	34504
	.byte	32
	.word	34535
	.byte	32
	.word	34550
	.byte	34
	.word	34564
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34565
	.byte	0,0,35
	.word	38447
	.byte	33
	.word	34469
	.byte	34
	.word	34498
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34499
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34500
	.byte	33
	.word	31069
	.byte	32
	.word	31102
	.byte	34
	.word	31123
	.byte	33
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	31124
	.byte	0,0,35
	.word	34501
	.byte	0,0,35
	.word	38448
	.byte	33
	.word	38870
	.byte	32
	.word	38905
	.byte	32
	.word	38921
	.byte	35
	.word	38948
	.byte	0,35
	.word	38449
	.byte	33
	.word	34422
	.byte	32
	.word	34447
	.byte	34
	.word	34463
	.byte	33
	.word	35044
	.byte	35
	.word	35069
	.byte	0,35
	.word	34464
	.byte	33
	.word	35081
	.byte	32
	.word	35117
	.byte	35
	.word	35133
	.byte	0,35
	.word	34465
	.byte	33
	.word	30998
	.byte	32
	.word	31027
	.byte	32
	.word	31048
	.byte	34
	.word	31064
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,35
	.word	31065
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31066
	.byte	0,0,35
	.word	34466
	.byte	0,0,35
	.word	38450
	.byte	33
	.word	37800
	.byte	32
	.word	37828
	.byte	35
	.word	37844
	.byte	0,35
	.word	38451
	.byte	33
	.word	31501
	.byte	34
	.word	31531
	.byte	34
	.word	31532
	.byte	33
	.word	31184
	.byte	32
	.word	31215
	.byte	32
	.word	31235
	.byte	35
	.word	31256
	.byte	0,33
	.word	34568
	.byte	34
	.word	34603
	.byte	33
	.word	33610
	.byte	32
	.word	33639
	.byte	35
	.word	33653
	.byte	0,35
	.word	34604
	.byte	33
	.word	33526
	.byte	34
	.word	33560
	.byte	33
	.word	30832
	.byte	35
	.word	30861
	.byte	0,35
	.word	33561
	.byte	0,0,35
	.word	34605
	.byte	33
	.word	33564
	.byte	32
	.word	33592
	.byte	34
	.word	33606
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	33607
	.byte	0,0,35
	.word	34606
	.byte	0,0,0,35
	.word	31533
	.byte	35
	.word	31534
	.byte	0,0,35
	.word	38452
	.byte	33
	.word	35787
	.byte	32
	.word	35824
	.byte	35
	.word	35841
	.byte	0,35
	.word	38453
	.byte	33
	.word	35907
	.byte	32
	.word	35944
	.byte	32
	.word	35967
	.byte	32
	.word	35984
	.byte	34
	.word	35998
	.byte	34
	.word	35999
	.byte	33
	.word	30221
	.byte	32
	.word	30254
	.byte	35
	.word	30269
	.byte	0,33
	.word	36320
	.byte	32
	.word	36356
	.byte	32
	.word	36379
	.byte	32
	.word	36396
	.byte	34
	.word	36428
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36429
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36430
	.byte	0,0,33
	.word	36143
	.byte	32
	.word	36180
	.byte	32
	.word	36197
	.byte	34
	.word	36229
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36230
	.byte	0,0,33
	.word	36433
	.byte	32
	.word	36477
	.byte	32
	.word	36500
	.byte	32
	.word	36517
	.byte	34
	.word	36549
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36550
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	36551
	.byte	0,0,0,35
	.word	36000
	.byte	35
	.word	36001
	.byte	33
	.word	36554
	.byte	32
	.word	36587
	.byte	35
	.word	36604
	.byte	0,35
	.word	36002
	.byte	35
	.word	36003
	.byte	35
	.word	36004
	.byte	33
	.word	36233
	.byte	32
	.word	36276
	.byte	32
	.word	36299
	.byte	34
	.word	36316
	.byte	33
	.word	30756
	.byte	32
	.word	30789
	.byte	32
	.word	30807
	.byte	35
	.word	30830
	.byte	0,35
	.word	36317
	.byte	0,0,35
	.word	36005
	.byte	0,0,35
	.word	38454
	.byte	35
	.word	38455
	.byte	0,0,4,0,0,30
	.word	42335
	.byte	26,4,0,0,30
	.word	43063
	.byte	32
	.word	43100
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	43131
	.byte	32
	.word	43171
	.byte	26,33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,4,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,4,0,0,30
	.word	43191
	.byte	32
	.word	43214
	.byte	32
	.word	43229
	.byte	26,4,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,0,0,30
	.word	43250
	.byte	32
	.word	43274
	.byte	26,4,33
	.word	44547
	.byte	32
	.word	44590
	.byte	35
	.word	44606
	.byte	0,4,0,0,30
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	26,33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,4,33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,4,0,0,30
	.word	43372
	.byte	32
	.word	43393
	.byte	32
	.word	43409
	.byte	32
	.word	43426
	.byte	32
	.word	43439
	.byte	26,33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,4,33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,4,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,4,0,0,30
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	26,33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,4,33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,4,33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,4,0,0,30
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	26,33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,4,33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,4,33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,4,33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,4,0,0,30
	.word	43606
	.byte	32
	.word	43643
	.byte	26,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,4,0,0,30
	.word	43663
	.byte	32
	.word	43683
	.byte	32
	.word	43699
	.byte	32
	.word	43716
	.byte	32
	.word	43730
	.byte	26,26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43372
	.byte	32
	.word	43393
	.byte	32
	.word	43409
	.byte	32
	.word	43426
	.byte	32
	.word	43439
	.byte	34
	.word	43457
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43458
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	43459
	.byte	33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,35
	.word	43460
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,4,4,4,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,4,4,0,0,30
	.word	43764
	.byte	32
	.word	43792
	.byte	32
	.word	43808
	.byte	32
	.word	43825
	.byte	32
	.word	43839
	.byte	26,26,26,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,4,4,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,4,0,0,30
	.word	43873
	.byte	32
	.word	43901
	.byte	32
	.word	43917
	.byte	26,26,26,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,0,4,4,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,0,0,30
	.word	43947
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	26,26,26,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43606
	.byte	32
	.word	43643
	.byte	34
	.word	43659
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	43660
	.byte	0,0,0,33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,0,0,30
	.word	44027
	.byte	32
	.word	44062
	.byte	32
	.word	44079
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,33
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	35
	.word	309
	.byte	0,4,0,0,30
	.word	44102
	.byte	32
	.word	44133
	.byte	26,26,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44314
	.byte	32
	.word	44339
	.byte	32
	.word	44355
	.byte	32
	.word	44372
	.byte	34
	.word	44388
	.byte	34
	.word	44389
	.byte	34
	.word	44390
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44392
	.byte	35
	.word	44393
	.byte	35
	.word	44394
	.byte	35
	.word	44395
	.byte	35
	.word	44396
	.byte	35
	.word	44397
	.byte	35
	.word	44398
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,0,0,30
	.word	44156
	.byte	32
	.word	44186
	.byte	26,26,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44401
	.byte	32
	.word	44425
	.byte	32
	.word	44441
	.byte	32
	.word	44458
	.byte	34
	.word	44474
	.byte	34
	.word	44475
	.byte	34
	.word	44476
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44478
	.byte	35
	.word	44479
	.byte	35
	.word	44480
	.byte	35
	.word	44481
	.byte	35
	.word	44482
	.byte	35
	.word	44483
	.byte	35
	.word	44484
	.byte	35
	.word	44485
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,0,0,30
	.word	44209
	.byte	32
	.word	44239
	.byte	26,26,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44314
	.byte	32
	.word	44339
	.byte	32
	.word	44355
	.byte	32
	.word	44372
	.byte	34
	.word	44388
	.byte	34
	.word	44389
	.byte	34
	.word	44390
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44392
	.byte	35
	.word	44393
	.byte	35
	.word	44394
	.byte	35
	.word	44395
	.byte	35
	.word	44396
	.byte	35
	.word	44397
	.byte	35
	.word	44398
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,0,0,30
	.word	44262
	.byte	32
	.word	44291
	.byte	26,26,33
	.word	43131
	.byte	32
	.word	43171
	.byte	34
	.word	43186
	.byte	33
	.word	37588
	.byte	32
	.word	37621
	.byte	35
	.word	37637
	.byte	0,35
	.word	43187
	.byte	33
	.word	43063
	.byte	32
	.word	43100
	.byte	34
	.word	43117
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43118
	.byte	0,0,35
	.word	43188
	.byte	0,0,33
	.word	44401
	.byte	32
	.word	44425
	.byte	32
	.word	44441
	.byte	32
	.word	44458
	.byte	34
	.word	44474
	.byte	34
	.word	44475
	.byte	34
	.word	44476
	.byte	33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,35
	.word	44478
	.byte	35
	.word	44479
	.byte	35
	.word	44480
	.byte	35
	.word	44481
	.byte	35
	.word	44482
	.byte	35
	.word	44483
	.byte	35
	.word	44484
	.byte	35
	.word	44485
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,0,0,30
	.word	44314
	.byte	32
	.word	44339
	.byte	32
	.word	44355
	.byte	32
	.word	44372
	.byte	26,26,26,33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,4,4,0,0,30
	.word	44401
	.byte	32
	.word	44425
	.byte	32
	.word	44441
	.byte	32
	.word	44458
	.byte	26,26,26,33
	.word	40690
	.byte	32
	.word	40729
	.byte	35
	.word	40744
	.byte	0,33
	.word	43295
	.byte	32
	.word	43315
	.byte	32
	.word	43331
	.byte	32
	.word	43344
	.byte	34
	.word	43367
	.byte	33
	.word	43534
	.byte	32
	.word	43555
	.byte	32
	.word	43571
	.byte	32
	.word	43586
	.byte	34
	.word	43599
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43600
	.byte	33
	.word	29236
	.byte	32
	.word	29277
	.byte	35
	.word	29294
	.byte	0,35
	.word	43601
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43602
	.byte	33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,35
	.word	43603
	.byte	0,0,35
	.word	43368
	.byte	33
	.word	40607
	.byte	32
	.word	40642
	.byte	32
	.word	40657
	.byte	34
	.word	40681
	.byte	35
	.word	40682
	.byte	33
	.word	40511
	.byte	32
	.word	40562
	.byte	32
	.word	40577
	.byte	34
	.word	40601
	.byte	34
	.word	40602
	.byte	35
	.word	40603
	.byte	0,0,0,35
	.word	40683
	.byte	33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,35
	.word	40684
	.byte	33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,35
	.word	40685
	.byte	33
	.word	28655
	.byte	32
	.word	28691
	.byte	32
	.word	28708
	.byte	32
	.word	28723
	.byte	34
	.word	28747
	.byte	33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,35
	.word	28748
	.byte	0,0,35
	.word	40686
	.byte	33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,35
	.word	40687
	.byte	0,0,35
	.word	43369
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	43463
	.byte	32
	.word	43484
	.byte	32
	.word	43500
	.byte	32
	.word	43515
	.byte	34
	.word	43528
	.byte	33
	.word	40460
	.byte	32
	.word	40494
	.byte	35
	.word	40509
	.byte	0,35
	.word	43529
	.byte	33
	.word	29296
	.byte	32
	.word	29338
	.byte	35
	.word	29355
	.byte	0,35
	.word	43530
	.byte	33
	.word	40965
	.byte	32
	.word	40989
	.byte	32
	.word	41015
	.byte	32
	.word	41030
	.byte	34
	.word	41043
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41044
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41045
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41046
	.byte	0,0,35
	.word	43531
	.byte	0,0,33
	.word	40406
	.byte	32
	.word	40438
	.byte	34
	.word	40453
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40454
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	40455
	.byte	33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,35
	.word	40456
	.byte	33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,35
	.word	40457
	.byte	0,0,0,33
	.word	31542
	.byte	32
	.word	31563
	.byte	34
	.word	31577
	.byte	35
	.word	31578
	.byte	33
	.word	29422
	.byte	35
	.word	29471
	.byte	0,35
	.word	31579
	.byte	0,0,33
	.word	31592
	.byte	32
	.word	31613
	.byte	34
	.word	31628
	.byte	33
	.word	29483
	.byte	32
	.word	29516
	.byte	35
	.word	29531
	.byte	0,35
	.word	31629
	.byte	0,0,0,33
	.word	44488
	.byte	32
	.word	44529
	.byte	35
	.word	44545
	.byte	0,4,4,4,4,4,4,4,4,0,0,30
	.word	44488
	.byte	32
	.word	44529
	.byte	4,0,30
	.word	44547
	.byte	32
	.word	44590
	.byte	4,0,30
	.word	44608
	.byte	32
	.word	44644
	.byte	4,0,30
	.word	44659
	.byte	32
	.word	44685
	.byte	4,0,30
	.word	44700
	.byte	32
	.word	44726
	.byte	26,33
	.word	28286
	.byte	32
	.word	28316
	.byte	35
	.word	28333
	.byte	0,4,0,0,30
	.word	44779
	.byte	32
	.word	44807
	.byte	4,0,30
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	26,33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,30
	.word	44899
	.byte	32
	.word	44924
	.byte	32
	.word	44941
	.byte	32
	.word	44957
	.byte	26,33
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	34
	.word	44895
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44896
	.byte	0,0,4,0,0,30
	.word	44974
	.byte	32
	.word	45001
	.byte	32
	.word	45019
	.byte	4,0,30
	.word	45048
	.byte	32
	.word	45074
	.byte	32
	.word	45092
	.byte	4,0,30
	.word	45111
	.byte	32
	.word	45145
	.byte	32
	.word	45163
	.byte	32
	.word	45180
	.byte	4,0,30
	.word	45384
	.byte	32
	.word	45412
	.byte	26,33
	.word	44899
	.byte	32
	.word	44924
	.byte	32
	.word	44941
	.byte	32
	.word	44957
	.byte	34
	.word	44970
	.byte	33
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	34
	.word	44895
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44896
	.byte	0,0,35
	.word	44971
	.byte	0,0,4,0,0,30
	.word	45555
	.byte	32
	.word	45584
	.byte	26,33
	.word	44974
	.byte	32
	.word	45001
	.byte	32
	.word	45019
	.byte	35
	.word	45036
	.byte	0,4,0,0,30
	.word	45790
	.byte	32
	.word	45818
	.byte	26,33
	.word	44899
	.byte	32
	.word	44924
	.byte	32
	.word	44941
	.byte	32
	.word	44957
	.byte	34
	.word	44970
	.byte	33
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	34
	.word	44895
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44896
	.byte	0,0,35
	.word	44971
	.byte	0,0,4,0,0,30
	.word	45961
	.byte	32
	.word	45990
	.byte	26,33
	.word	44974
	.byte	32
	.word	45001
	.byte	32
	.word	45019
	.byte	35
	.word	45036
	.byte	0,4,0,0,30
	.word	46196
	.byte	32
	.word	46224
	.byte	26,33
	.word	44899
	.byte	32
	.word	44924
	.byte	32
	.word	44941
	.byte	32
	.word	44957
	.byte	34
	.word	44970
	.byte	33
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	34
	.word	44895
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44896
	.byte	0,0,35
	.word	44971
	.byte	0,0,4,0,0,30
	.word	46367
	.byte	32
	.word	46396
	.byte	26,33
	.word	44974
	.byte	32
	.word	45001
	.byte	32
	.word	45019
	.byte	35
	.word	45036
	.byte	0,4,0,0,30
	.word	46646
	.byte	32
	.word	46675
	.byte	26,33
	.word	44899
	.byte	32
	.word	44924
	.byte	32
	.word	44941
	.byte	32
	.word	44957
	.byte	34
	.word	44970
	.byte	33
	.word	44841
	.byte	32
	.word	44868
	.byte	32
	.word	44882
	.byte	34
	.word	44895
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44896
	.byte	0,0,35
	.word	44971
	.byte	0,0,4,0,0,30
	.word	46881
	.byte	32
	.word	46911
	.byte	26,33
	.word	44974
	.byte	32
	.word	45001
	.byte	32
	.word	45019
	.byte	35
	.word	45036
	.byte	0,4,0,0,30
	.word	47007
	.byte	32
	.word	47045
	.byte	4,0,30
	.word	47216
	.byte	32
	.word	47264
	.byte	26,4,33
	.word	41133
	.byte	32
	.word	41174
	.byte	35
	.word	41189
	.byte	0,4,33
	.word	39438
	.byte	32
	.word	39480
	.byte	35
	.word	39500
	.byte	0,4,33
	.word	47333
	.byte	32
	.word	47364
	.byte	35
	.word	47379
	.byte	0,4,33
	.word	39588
	.byte	32
	.word	39622
	.byte	35
	.word	39643
	.byte	0,4,33
	.word	41049
	.byte	32
	.word	41084
	.byte	32
	.word	41105
	.byte	34
	.word	41127
	.byte	35
	.word	41128
	.byte	33
	.word	41191
	.byte	32
	.word	41232
	.byte	35
	.word	41247
	.byte	0,35
	.word	41129
	.byte	33
	.word	39502
	.byte	32
	.word	39541
	.byte	32
	.word	39562
	.byte	35
	.word	39586
	.byte	0,35
	.word	41130
	.byte	0,0,4,33
	.word	40855
	.byte	32
	.word	40879
	.byte	32
	.word	40904
	.byte	32
	.word	40930
	.byte	32
	.word	40945
	.byte	34
	.word	40958
	.byte	35
	.word	40959
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40960
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40961
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40962
	.byte	0,0,4,33
	.word	28751
	.byte	32
	.word	28795
	.byte	32
	.word	28821
	.byte	32
	.word	28851
	.byte	32
	.word	28866
	.byte	34
	.word	28890
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28891
	.byte	33
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	28892
	.byte	0,0,4,0,0,30
	.word	47333
	.byte	32
	.word	47364
	.byte	4,0,37,1,14
	.word	83984
	.byte	16
	.byte	'__codeptr',0,99,1,1
	.word	83986
	.byte	16
	.byte	'boolean',0,100,101,31
	.word	399
	.byte	16
	.byte	'uint8',0,100,104,31
	.word	399
	.byte	16
	.byte	'sint16',0,100,105,31
	.word	4960
	.byte	16
	.byte	'uint16',0,100,106,31
	.word	3769
	.byte	2
	.byte	'long int',0,4,5,16
	.byte	'sint32',0,100,107,31
	.word	84069
	.byte	16
	.byte	'uint32',0,100,108,31
	.word	135
	.byte	16
	.byte	'uint8_least',0,100,111,31
	.word	399
	.byte	16
	.byte	'uint16_least',0,100,113,31
	.word	3769
	.byte	16
	.byte	'uint64',0,100,121,30
	.word	9058
	.byte	16
	.byte	'StatusType',0,40,127,23
	.word	399
	.byte	16
	.byte	'Std_ReturnType',0,40,132,1,15
	.word	399
	.byte	16
	.byte	'Std_VersionInfoType',0,40,141,1,3
	.word	18211
	.byte	16
	.byte	'Os_Hal_TimerFrtTickType',0,101,66,16
	.word	135
	.byte	16
	.byte	'Os_Hal_TimerFrtConfigType',0,102,61,46
	.word	23373
	.byte	16
	.byte	'Os_Hal_TimerPitConfigType',0,102,65,46
	.word	39645
	.byte	16
	.byte	'Os_TimerSwConfigType',0,103,59,41
	.word	40103
	.byte	11
	.byte	'Os_TimerPitConfigType_Tag',0,47,246,1,8,56,12
	.byte	'SwCounter',0
	.word	40103
	.byte	52,2,35,0,12
	.byte	'HwConfig',0
	.word	39945
	.byte	4,2,35,52,0,16
	.byte	'Os_TimerPitConfigType',0,103,62,42
	.word	84368
	.byte	16
	.byte	'Os_TimerHrtConfigType',0,103,65,42
	.word	23673
	.byte	16
	.byte	'Os_TimerPfrtConfigType',0,103,68,43
	.word	47063
	.byte	16
	.byte	'Os_TimerIsrConfigType',0,103,71,42
	.word	46934
	.byte	16
	.byte	'Os_TimerTypeType',0,27,72,3
	.word	7835
	.byte	16
	.byte	'Os_CounterCharacteristicsConfigType',0,27,75,56
	.word	7367
	.byte	16
	.byte	'Os_CounterConfigType',0,27,78,41
	.word	7970
	.byte	16
	.byte	'Os_AppAccessMaskType',0,11,115,17
	.word	135
	.byte	16
	.byte	'ApplicationType',0,11,124,3
	.word	11308
	.byte	16
	.byte	'TrustedFunctionIndexType',0,11,130,1,3
	.word	12008
	.byte	16
	.byte	'Os_NonTrustedFunctionIndexType',0,11,136,1,3
	.word	12148
	.byte	16
	.byte	'Os_FastTrustedFunctionIndexType',0,11,142,1,3
	.word	12288
	.byte	16
	.byte	'TaskType',0,11,155,1,3
	.word	6496
	.byte	16
	.byte	'ISRType',0,11,163,1,3
	.word	7037
	.byte	16
	.byte	'AlarmType',0,11,172,1,3
	.word	17557
	.byte	16
	.byte	'CounterType',0,11,179,1,3
	.word	17726
	.byte	16
	.byte	'ScheduleTableType',0,11,185,1,3
	.word	18133
	.byte	16
	.byte	'ResourceType',0,11,192,1,3
	.word	17857
	.byte	16
	.byte	'SpinlockIdType',0,11,199,1,3
	.word	18158
	.byte	16
	.byte	'Os_PeripheralIdType',0,11,205,1,3
	.word	18754
	.byte	16
	.byte	'Os_BarrierIdType',0,11,211,1,3
	.word	18826
	.byte	16
	.byte	'Os_TraceThreadIdType',0,11,218,1,3
	.word	4086
	.byte	16
	.byte	'Os_TraceSpinlockIdType',0,11,226,1,3
	.word	5997
	.byte	16
	.byte	'Os_Hal_AddressType',0,104,61,16
	.word	135
	.byte	16
	.byte	'Os_ExceptionContextType',0,104,66,44
	.word	18863
	.byte	16
	.byte	'AppModeType',0,3,216,1,16
	.word	399
	.byte	16
	.byte	'IdleModeType',0,3,234,1,3
	.word	17773
	.byte	16
	.byte	'Os_InterruptSourceIdType',0,3,238,1,16
	.word	135
	.byte	16
	.byte	'Os_ExceptionSourceIdType',0,3,246,1,16
	.word	135
	.byte	16
	.byte	'TryToGetSpinlockType',0,3,142,2,2
	.word	18467
	.byte	16
	.byte	'TaskStateType',0,3,175,2,3
	.word	18363
	.byte	16
	.byte	'EventMaskType',0,3,182,2,16
	.word	9058
	.byte	16
	.byte	'EventMaskRefType',0,3,185,2,56
	.word	17768
	.byte	16
	.byte	'Os_TickType',0,3,200,2,19
	.word	135
	.byte	16
	.byte	'TickType',0,3,206,2,21
	.word	135
	.byte	16
	.byte	'AlarmBaseType',0,3,228,2,2
	.word	17454
	.byte	7,3,235,2,9,1,8
	.byte	'NO_ACCESS',0,0,8
	.byte	'ACCESS',0,1,0,16
	.byte	'ObjectAccessType',0,3,239,2,3
	.word	85424
	.byte	16
	.byte	'RestartType',0,3,249,2,3
	.word	17899
	.byte	16
	.byte	'ApplicationStateType',0,3,133,3,3
	.word	6388
	.byte	16
	.byte	'ObjectTypeType',0,3,147,3,3
	.word	18545
	.byte	16
	.byte	'Os_ObjectIdType',0,3,151,3,16
	.word	135
	.byte	16
	.byte	'OSServiceIdType',0,3,156,4,3
	.word	14247
	.byte	16
	.byte	'Os_StatusType',0,3,232,5,3
	.word	416
	.byte	16
	.byte	'ProtectionReturnType',0,3,247,5,3
	.word	22200
	.byte	16
	.byte	'Os_ErrorInformationType',0,3,143,6,3
	.word	17392
	.byte	16
	.byte	'ScheduleTableStatusType',0,3,192,6,3
	.word	17952
	.byte	16
	.byte	'Os_AccessCheckAddress',0,3,199,6,29
	.word	135
	.byte	16
	.byte	'MemorySizeType',0,3,207,6,31
	.word	135
	.byte	16
	.byte	'Os_MemAccessType',0,3,233,6,3
	.word	13048
	.byte	16
	.byte	'AccessType',0,3,235,6,26
	.word	13048
	.byte	16
	.byte	'Os_CoreStartStateType',0,3,134,7,2
	.word	19152
	.byte	16
	.byte	'CoreIdType',0,9,91,3
	.word	3791
	.byte	16
	.byte	'Os_StdReturnType',0,105,74,22
	.word	236
	.byte	16
	.byte	'Os_WordType',0,105,77,22
	.word	236
	.byte	16
	.byte	'Os_ObjIdxType',0,105,80,16
	.word	3769
	.byte	16
	.byte	'Os_ObjIdx_IteratorType',0,105,81,22
	.word	3769
	.byte	16
	.byte	'Os_ParamType',0,105,84,32
	.word	19352
	.byte	16
	.byte	'Os_HookConfigType',0,34,106,38
	.word	10892
	.byte	16
	.byte	'Os_HookStatusHookConfigType',0,34,109,48
	.word	11177
	.byte	16
	.byte	'Os_HookCallbackConfigType',0,34,112,46
	.word	11051
	.byte	16
	.byte	'Os_HookProtectionHookConfigType',0,34,115,52
	.word	22414
	.byte	16
	.byte	'Os_HookInitHookConfigType',0,34,118,46
	.word	22530
	.byte	16
	.byte	'Os_HookFlagType',0,34,120,16
	.word	135
	.byte	16
	.byte	'Os_HookInfoType',0,34,127,3
	.word	21359
	.byte	16
	.byte	'Os_HookIdType',0,34,130,1,16
	.word	135
	.byte	16
	.byte	'Os_ErrorType',0,106,56,33
	.word	21175
	.byte	16
	.byte	'Os_ErrorParamsType',0,106,58,39
	.word	21095
	.byte	16
	.byte	'Os_JobConfigType',0,107,53,37
	.word	7641
	.byte	16
	.byte	'Os_JobType',0,107,56,31
	.word	7535
	.byte	16
	.byte	'Os_PriorityQueueNodeIdxType',0,25,72,16
	.word	3769
	.byte	16
	.byte	'Os_PriorityQueueNodeType',0,25,80,3
	.word	7726
	.byte	16
	.byte	'Os_PriorityQueueType',0,25,87,3
	.word	7751
	.byte	16
	.byte	'Os_PriorityQueueConfigType',0,25,96,3
	.word	7782
	.byte	16
	.byte	'Os_AppMaskType',0,108,85,16
	.word	135
	.byte	16
	.byte	'Os_AppConfigType',0,108,88,37
	.word	11407
	.byte	16
	.byte	'Os_CoreStatusType',0,42,61,38
	.word	3142
	.byte	16
	.byte	'Os_CoreAsrStatusType',0,42,64,41
	.word	33897
	.byte	16
	.byte	'Os_CoreConfigType',0,42,67,38
	.word	4424
	.byte	16
	.byte	'Os_CoreAsrType',0,42,70,35
	.word	21417
	.byte	16
	.byte	'Os_CoreAsrConfigType',0,42,73,41
	.word	27582
	.byte	16
	.byte	'Os_SystemConfigType',0,42,76,40
	.word	34787
	.byte	16
	.byte	'Os_CorePhysicalIdType',0,42,82,16
	.word	135
	.byte	16
	.byte	'Os_CoreBootBarrierContentType',0,42,89,16
	.word	135
	.byte	16
	.byte	'Os_UnhandledEventReportType',0,42,104,3
	.word	21278
	.byte	16
	.byte	'Os_IsrHwConfigType',0,23,54,39
	.word	3593
	.byte	11
	.byte	'Os_IsrType_Tag',0,7,172,1,8,28,12
	.byte	'Thread',0
	.word	12751
	.byte	24,2,35,0,12
	.byte	'IsKilled',0
	.word	399
	.byte	1,2,35,24,0,16
	.byte	'Os_IsrType',0,23,57,31
	.word	86798
	.byte	16
	.byte	'Os_IsrConfigType',0,23,60,37
	.word	7100
	.byte	16
	.byte	'Os_IsrCat1ConfigType',0,23,63,41
	.word	7261
	.byte	16
	.byte	'Os_XSigBufferIdxType',0,53,60,23
	.word	3769
	.byte	16
	.byte	'Os_XSigConfigType',0,53,64,38
	.word	26443
	.byte	16
	.byte	'Os_XSigIsrConfigType',0,53,67,41
	.word	26127
	.byte	16
	.byte	'Os_XSigSendDataType',0,53,71,40
	.word	25209
	.byte	16
	.byte	'Os_XSigRecvDataType',0,53,74,40
	.word	25428
	.byte	16
	.byte	'Os_XSigSendPortConfigType',0,53,77,46
	.word	26271
	.byte	16
	.byte	'Os_XSigRecvPortConfigType',0,53,80,46
	.word	25922
	.byte	16
	.byte	'Os_XSigFunctionTableConfigType',0,53,84,51
	.word	25746
	.byte	16
	.byte	'Os_Hal_ContextType',0,109,66,39
	.word	5168
	.byte	16
	.byte	'Os_Hal_ContextConfigType',0,109,70,45
	.word	4973
	.byte	16
	.byte	'Os_Hal_ContextStackConfigType',0,109,74,50
	.word	35528
	.byte	16
	.byte	'Os_Hal_ContextFpuContextType',0,109,78,49
	.word	13714
	.byte	16
	.byte	'Os_ThreadClassType',0,37,183,3,39
	.word	27521
	.byte	16
	.byte	'Os_ThreadType',0,37,186,3,34
	.word	12751
	.byte	16
	.byte	'Os_ThreadConfigType',0,37,189,3,40
	.word	13822
	.byte	16
	.byte	'Os_CallContextType',0,37,193,3,23
	.word	3769
	.byte	16
	.byte	'Os_ThreadContextRefType',0,37,199,3,61
	.word	5351
	.byte	16
	.byte	'Os_Hal_BitFieldType',0,110,99,16
	.word	135
	.byte	16
	.byte	'Os_Hal_StackType',0,110,104,16
	.word	135
	.byte	16
	.byte	'Os_Hal_SpinlockType',0,110,108,16
	.word	135
	.byte	16
	.byte	'Os_Hal_SpinlockResultType',0,110,111,29
	.word	135
	.byte	16
	.byte	'Os_Hal_CoreConfigType',0,110,115,42
	.word	3233
	.byte	16
	.byte	'Os_Hal_Core2ThreadType',0,110,118,43
	.word	30863
	.byte	16
	.byte	'Os_Hal_Core2ThreadConfigType',0,110,121,49
	.word	30927
	.byte	16
	.byte	'Os_Hal_CoreAsrConfigType',0,110,125,45
	.word	22808
	.byte	16
	.byte	'Os_Hal_SystemConfigType',0,110,127,16
	.word	135
	.byte	16
	.byte	'Os_Hal_XSigInterruptConfigType',0,110,131,1,51
	.word	26055
	.byte	16
	.byte	'Os_StackConfigType',0,111,140,1,39
	.word	5361
	.byte	16
	.byte	'Os_TaskType',0,112,58,32
	.word	41757
	.byte	16
	.byte	'Os_TaskConfigType',0,112,61,38
	.word	6697
	.byte	16
	.byte	'Os_Hal_IntGlobalStateType',0,113,66,16
	.word	135
	.byte	16
	.byte	'Os_Hal_IntLevelType',0,113,73,16
	.word	135
	.byte	16
	.byte	'Os_Hal_IntTrapStateType',0,113,82,16
	.word	135
	.byte	16
	.byte	'Os_Hal_IntStateType',0,113,89,16
	.word	135
	.byte	16
	.byte	'Os_Hal_IntSourceType',0,113,95,16
	.word	135
	.byte	16
	.byte	'Os_Hal_IntIsrConfigType',0,113,99,44
	.word	3431
	.byte	16
	.byte	'Os_Hal_IntIsrMapConfigType',0,113,103,47
	.word	3530
	.byte	16
	.byte	'Os_IntApiStateType',0,13,64,39
	.word	4791
	.byte	16
	.byte	'Os_IntStateType',0,13,74,3
	.word	4671
	.byte	17,13,88,9,4,12
	.byte	'State',0
	.word	135
	.byte	4,2,35,0,0,16
	.byte	'Os_IntLevelType',0,13,92,3
	.word	88111
	.byte	16
	.byte	'Os_TpType',0,85,69,30
	.word	23764
	.byte	16
	.byte	'Os_TpConfigType',0,85,72,36
	.word	23859
	.byte	16
	.byte	'Os_TpThreadConfigType',0,85,75,42
	.word	12985
	.byte	16
	.byte	'Os_TpBudgetType',0,85,78,36
	.word	42381
	.byte	16
	.byte	'Os_TpBudgetConfigType',0,85,81,42
	.word	42600
	.byte	16
	.byte	'Os_TpOwnerThreadConfigType',0,85,85,47
	.word	42852
	.byte	16
	.byte	'Os_TpOwnerThreadType',0,85,88,41
	.word	42725
	.byte	16
	.byte	'Os_InterArrivalTimeType',0,85,91,16
	.word	9058
	.byte	16
	.byte	'Os_TpMonitoringType',0,85,101,3
	.word	42450
	.byte	16
	.byte	'Os_IntApiCntType',0,12,78,16
	.word	3769
	.byte	16
	.byte	'Os_IntLockingStateType',0,12,86,3
	.word	4708
	.byte	16
	.byte	'Os_CoreAsrCoreIdx',0,49,90,3
	.word	23934
	.byte	16
	.byte	'Os_TaskPrioType',0,114,76,16
	.word	3769
	.byte	16
	.byte	'Os_SchedulerType',0,114,83,37
	.word	21827
	.byte	16
	.byte	'Os_SchedulerConfigType',0,114,86,43
	.word	22077
	.byte	16
	.byte	'Os_LockType',0,18,58,32
	.word	5441
	.byte	16
	.byte	'Os_LockConfigType',0,18,61,38
	.word	5576
	.byte	11
	.byte	'Os_ResourceType_Tag',0,46,159,1,8,8,12
	.byte	'Lock',0
	.word	5441
	.byte	4,2,35,0,12
	.byte	'PreviousPriority',0
	.word	3769
	.byte	2,2,35,4,0,16
	.byte	'Os_ResourceType',0,115,60,36
	.word	88614
	.byte	16
	.byte	'Os_ResourceConfigType',0,115,64,42
	.word	22648
	.byte	16
	.byte	'Os_ServiceCallType',0,89,63,39
	.word	12549
	.byte	16
	.byte	'Os_ServiceConfigType',0,89,71,41
	.word	10629
	.byte	9,2
	.word	399
	.byte	10,1,0,11
	.byte	'Os_ServiceStackPoolType_Tag',0,30,162,2,8,2,12
	.byte	'AccessCounter',0
	.word	88791
	.byte	2,2,35,0,0,14
	.word	88800
	.byte	11
	.byte	'Os_ServiceStackConfigType_Tag',0,30,148,2,9,12,12
	.byte	'Stack',0
	.word	5436
	.byte	4,2,35,0,12
	.byte	'HwConfig',0
	.word	35624
	.byte	4,2,35,4,12
	.byte	'PoolIndex',0
	.word	399
	.byte	1,2,35,8,0,15
	.word	88863
	.byte	14
	.word	88952
	.byte	11
	.byte	'Os_ServiceStackPoolConfigType_Tag',0,30,170,2,8,24,12
	.byte	'Dyn',0
	.word	88858
	.byte	4,2,35,0,12
	.byte	'AvailabilityMap',0
	.word	21761
	.byte	12,2,35,4,12
	.byte	'Stacks',0
	.word	88957
	.byte	4,2,35,16,12
	.byte	'StackCount',0
	.word	399
	.byte	1,2,35,20,12
	.byte	'AccessCounter',0
	.word	88791
	.byte	2,2,35,21,0,16
	.byte	'Os_ServiceStackPoolConfigType',0,89,88,50
	.word	88962
	.byte	16
	.byte	'Os_ServiceStackPoolType',0,89,91,44
	.word	88800
	.byte	16
	.byte	'Os_ServiceStackConfigType',0,89,94,48
	.word	88863
	.byte	16
	.byte	'Os_IocLockModeType',0,55,63,2
	.word	26544
	.byte	16
	.byte	'Os_IocChannelStateType',0,55,73,2
	.word	26648
	.byte	16
	.byte	'Os_IocCallbackConfigRefType',0,54,132,3,65
	.word	11125
	.byte	15
	.word	89262
	.byte	14
	.word	89299
	.byte	11
	.byte	'Os_IocCallbacksConfigType_Tag',0,54,135,3,8,8,12
	.byte	'CallbackRefs',0
	.word	89304
	.byte	4,2,35,0,12
	.byte	'CallbackCount',0
	.word	135
	.byte	4,2,35,4,0,16
	.byte	'Os_IocCallbacksConfigType',0,55,77,46
	.word	89309
	.byte	15
	.word	11051
	.byte	14
	.word	89425
	.byte	16
	.byte	'Os_IocLostCounterType',0,55,81,15
	.word	399
	.byte	16
	.byte	'Os_IocConfigType',0,55,83,37
	.word	26979
	.byte	16
	.byte	'Os_IocType',0,55,84,31
	.word	26713
	.byte	15
	.word	.L221-.L36
	.byte	14
	.word	89509
	.byte	11
	.byte	'Os_IocSendConfigType_Tag',0,54,237,3,8,32,12
	.byte	'Base',0
	.word	26979
	.byte	20,2,35,0,12
	.byte	'Callbacks',0
	.word	89309
	.byte	8,2,35,20,12
	.byte	'Receive',0
	.word	89514
	.byte	4,2,35,28,0,15
	.word	89519
	.byte	14
	.word	89601
.L221:
	.byte	11
	.byte	'Os_IocReceiveConfigType_Tag',0,54,211,3,8,24,12
	.byte	'Base',0
	.word	26979
	.byte	20,2,35,0,12
	.byte	'Send',0
	.word	89606
	.byte	4,2,35,20,0,16
	.byte	'Os_IocReceiveConfigType',0,55,86,44
	.word	89611
	.byte	16
	.byte	'Os_IocSendConfigType',0,55,87,41
	.word	89519
	.byte	11
	.byte	'Os_IocSendType_Tag',0,54,224,3,8,2,12
	.byte	'Base',0
	.word	26713
	.byte	1,2,35,0,12
	.byte	'LostCounter',0
	.word	399
	.byte	1,2,35,1,0,16
	.byte	'Os_IocSendType',0,55,88,35
	.word	89735
	.byte	11
	.byte	'Os_IocReceiveType_Tag',0,54,197,3,8,2,12
	.byte	'Base',0
	.word	26713
	.byte	1,2,35,0,12
	.byte	'LostCounterSnapshot',0
	.word	399
	.byte	1,2,35,1,0,16
	.byte	'Os_IocReceiveType',0,55,89,38
	.word	89819
	.byte	11
	.byte	'Os_IocMultiReceiveConfigType_Tag',0,54,140,4,8,24,12
	.byte	'Base',0
	.word	26979
	.byte	20,2,35,0,12
	.byte	'ReceiveChannelCount',0
	.word	3769
	.byte	2,2,35,20,0,16
	.byte	'Os_IocMultiReceiveConfigType',0,55,92,49
	.word	89917
	.byte	11
	.byte	'Os_Ioc08ReceiveConfigType_Tag',0,54,169,4,8,40,12
	.byte	'Ioc',0
	.word	89611
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	45455
	.byte	16,2,35,24,0,16
	.byte	'Os_Ioc08ReceiveConfigType',0,55,94,46
	.word	90037
	.byte	11
	.byte	'Os_Ioc08SendConfigType_Tag',0,54,209,4,8,48,12
	.byte	'Ioc',0
	.word	89519
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	45284
	.byte	16,2,35,32,0,16
	.byte	'Os_Ioc08SendConfigType',0,55,95,43
	.word	90139
	.byte	15
	.word	90037
	.byte	14
	.word	90236
	.byte	11
	.byte	'Os_Ioc08MultiReceiveConfigType_Tag',0,54,183,4,8,28,12
	.byte	'Ioc',0
	.word	89917
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	90241
	.byte	4,2,35,24,0,16
	.byte	'Os_Ioc08MultiReceiveConfigType',0,55,96,51
	.word	90246
	.byte	11
	.byte	'Os_Ioc16ReceiveConfigType_Tag',0,54,239,4,8,40,12
	.byte	'Ioc',0
	.word	89611
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	45861
	.byte	16,2,35,24,0,16
	.byte	'Os_Ioc16ReceiveConfigType',0,55,100,46
	.word	90359
	.byte	11
	.byte	'Os_Ioc16SendConfigType_Tag',0,54,151,5,8,48,12
	.byte	'Ioc',0
	.word	89519
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	45690
	.byte	16,2,35,32,0,16
	.byte	'Os_Ioc16SendConfigType',0,55,101,43
	.word	90461
	.byte	15
	.word	90359
	.byte	14
	.word	90558
	.byte	11
	.byte	'Os_Ioc16MultiReceiveConfigType_Tag',0,54,253,4,8,28,12
	.byte	'Ioc',0
	.word	89917
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	90563
	.byte	4,2,35,24,0,16
	.byte	'Os_Ioc16MultiReceiveConfigType',0,55,102,51
	.word	90568
	.byte	11
	.byte	'Os_Ioc32ReceiveConfigType_Tag',0,54,181,5,8,40,12
	.byte	'Ioc',0
	.word	89611
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	46267
	.byte	16,2,35,24,0,16
	.byte	'Os_Ioc32ReceiveConfigType',0,55,106,46
	.word	90681
	.byte	11
	.byte	'Os_Ioc32SendConfigType_Tag',0,54,221,5,8,48,12
	.byte	'Ioc',0
	.word	89519
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	46096
	.byte	16,2,35,32,0,16
	.byte	'Os_Ioc32SendConfigType',0,55,107,43
	.word	90783
	.byte	15
	.word	90681
	.byte	14
	.word	90880
	.byte	11
	.byte	'Os_Ioc32MultiReceiveConfigType_Tag',0,54,195,5,8,28,12
	.byte	'Ioc',0
	.word	89917
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	90885
	.byte	4,2,35,24,0,16
	.byte	'Os_Ioc32MultiReceiveConfigType',0,55,108,51
	.word	90890
	.byte	11
	.byte	'Os_IocRefReceiveConfigType_Tag',0,54,251,5,8,44,12
	.byte	'Ioc',0
	.word	89611
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	46763
	.byte	20,2,35,24,0,16
	.byte	'Os_IocRefReceiveConfigType',0,55,112,47
	.word	91003
	.byte	11
	.byte	'Os_IocRefSendConfigType_Tag',0,54,163,6,8,52,12
	.byte	'Ioc',0
	.word	89519
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	46527
	.byte	20,2,35,32,0,16
	.byte	'Os_IocRefSendConfigType',0,55,113,44
	.word	91107
	.byte	15
	.word	91003
	.byte	14
	.word	91206
	.byte	11
	.byte	'Os_IocRefMultiReceiveConfigType_Tag',0,54,137,6,8,28,12
	.byte	'Ioc',0
	.word	89917
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	91211
	.byte	4,2,35,24,0,16
	.byte	'Os_IocRefMultiReceiveConfigType',0,55,114,52
	.word	91216
	.byte	19,1,1,20
	.word	17820
	.byte	20
	.word	12049
	.byte	0,14
	.word	91331
	.byte	16
	.byte	'Os_IocCopyCbk',0,54,183,6,9
	.word	91345
	.byte	11
	.byte	'Os_IocReadConfigType_Tag',0,54,213,6,8,28,12
	.byte	'Ioc',0
	.word	26979
	.byte	20,2,35,0,12
	.byte	'Data',0
	.word	17820
	.byte	4,2,35,20,12
	.byte	'CopyCbk',0
	.word	91350
	.byte	4,2,35,24,0,16
	.byte	'Os_IocReadConfigType',0,55,119,41
	.word	91373
	.byte	14
	.word	91331
	.byte	19,1,1,20
	.word	12049
	.byte	0,14
	.word	91483
	.byte	16
	.byte	'Os_IocInitCbk',0,54,195,6,9
	.word	91492
	.byte	11
	.byte	'Os_IocWriteConfigType_Tag',0,54,239,6,8,40,12
	.byte	'Ioc',0
	.word	26979
	.byte	20,2,35,0,12
	.byte	'Data',0
	.word	12049
	.byte	4,2,35,20,12
	.byte	'Callbacks',0
	.word	89309
	.byte	8,2,35,24,12
	.byte	'CopyCbk',0
	.word	91350
	.byte	4,2,35,32,12
	.byte	'InitCbk',0
	.word	91497
	.byte	4,2,35,36,0,16
	.byte	'Os_IocWriteConfigType',0,55,120,42
	.word	91520
	.byte	14
	.word	91483
	.byte	16
	.byte	'Os_BitIndexType',0,116,80,15
	.word	399
	.byte	16
	.byte	'Os_BitFieldType',0,116,84,29
	.word	135
	.byte	16
	.byte	'Os_BitArrayIndexType',0,44,110,16
	.word	3769
	.byte	16
	.byte	'Os_BitArrayType',0,44,119,2
	.word	21721
	.byte	16
	.byte	'Os_BitArrayConfigType',0,44,133,1,2
	.word	21761
	.byte	16
	.byte	'Os_DequeType',0,45,82,2
	.word	21946
	.byte	16
	.byte	'Os_DequeNodeType',0,45,88,2
	.word	21992
	.byte	16
	.byte	'Os_DequeConfigType',0,45,104,2
	.word	22018
	.byte	16
	.byte	'Os_SpinlockType',0,20,54,36
	.word	33214
	.byte	16
	.byte	'Os_SpinlockConfigType',0,20,58,42
	.word	6177
	.byte	16
	.byte	'Os_LockTypeType',0,17,78,3
	.word	5482
	.byte	16
	.byte	'Os_TraceThreadConfigType',0,117,60,45
	.word	4235
	.byte	16
	.byte	'Os_TraceThreadType',0,117,63,39
	.word	4028
	.byte	16
	.byte	'Os_TraceCoreType',0,117,66,37
	.word	4320
	.byte	16
	.byte	'Os_TraceSpinlockConfigType',0,117,69,47
	.word	6109
	.byte	16
	.byte	'Os_SpinlockMethodType',0,19,145,1,2
	.word	5696
	.byte	16
	.byte	'Os_SpinlockModeType',0,19,156,1,2
	.word	5814
	.byte	16
	.byte	'Os_SpinlockTraceType',0,19,169,1,2
	.word	5873
	.byte	16
	.byte	'Os_SpinlockCheckType',0,19,180,1,2
	.word	5935
	.byte	16
	.byte	'Os_SpinlockOrderType',0,19,184,1,15
	.word	399
	.byte	16
	.byte	'Os_BarrierBaseType',0,57,58,39
	.word	27230
	.byte	16
	.byte	'Os_BarrierBaseConfigType',0,57,60,45
	.word	27354
	.byte	16
	.byte	'Os_BarrierAttendeeIdxType',0,56,110,15
	.word	399
	.byte	16
	.byte	'Os_BarrierCounterType',0,56,113,15
	.word	399
	.byte	16
	.byte	'Os_BarrierAttendeeStateType',0,56,124,2
	.word	27154
	.byte	16
	.byte	'Os_MpSystemConfigType',0,118,54,42
	.word	34727
	.byte	16
	.byte	'Os_MpCoreConfigType',0,118,57,40
	.word	23195
	.byte	16
	.byte	'Os_MpAccessRightsType',0,118,60,42
	.word	10433
	.byte	16
	.byte	'Os_CoreStateType',0,5,231,1,2
	.word	3041
	.byte	16
	.byte	'Os_CoreOsStateType',0,5,247,1,2
	.word	33808
	.byte	16
	.byte	'Os_CoreThreadIdx',0,5,168,2,16
	.word	4960
	.byte	16
	.byte	'Os_Hal_MpSystemConfigType',0,119,59,46
	.word	34663
	.byte	16
	.byte	'Os_Hal_MpCoreConfigType',0,119,63,44
	.word	22878
	.byte	16
	.byte	'Os_Hal_MpAppConfigType',0,119,67,43
	.word	9619
	.byte	16
	.byte	'Os_Hal_MpThreadConfigType',0,119,71,46
	.word	10024
	.byte	16
	.byte	'Os_Hal_MpuRegionRangeConfigType',0,32,75,3
	.word	9561
	.byte	16
	.byte	'Os_AccessCheckIdx',0,120,62,15
	.word	399
	.byte	16
	.byte	'Os_AccessCheckConfigType',0,120,66,45
	.word	13631
	.byte	16
	.byte	'Os_TraceThreadRunReason',0,10,220,2,2
	.word	3850
	.byte	7,10,245,2,9,1,8
	.byte	'OsOrtiApiIdGetApplicationID',0,2,8
	.byte	'OsOrtiApiIdGetISRID',0,4,8
	.byte	'OsOrtiApiIdCallTrustedFunction',0,6,8
	.byte	'OsOrtiApiIdCheckISRMemoryAccess',0,8,8
	.byte	'OsOrtiApiIdCheckTaskMemoryAccess',0,10,8
	.byte	'OsOrtiApiIdCheckObjectAccess',0,12,8
	.byte	'OsOrtiApiIdCheckObjectOwnership',0,14,8
	.byte	'OsOrtiApiIdStartScheduleTableRel',0,16,8
	.byte	'OsOrtiApiIdStartScheduleTableAbs',0,18,8
	.byte	'OsOrtiApiIdStopScheduleTable',0,20,8
	.byte	'OsOrtiApiIdNextScheduleTable',0,22,8
	.byte	'OsOrtiApiIdStartScheduleTableSynchron',0,24,8
	.byte	'OsOrtiApiIdSyncScheduleTable',0,26,8
	.byte	'OsOrtiApiIdSetScheduleTableAsync',0,28,8
	.byte	'OsOrtiApiIdGetScheduleTableStatus',0,30,8
	.byte	'OsOrtiApiIdIncrementCounter',0,32,8
	.byte	'OsOrtiApiIdGetCounterValue',0,34,8
	.byte	'OsOrtiApiIdGetElapsedValue',0,36,8
	.byte	'OsOrtiApiIdTerminateApplication',0,38,8
	.byte	'OsOrtiApiIdAllowAccess',0,40,8
	.byte	'OsOrtiApiIdGetApplicationState',0,42,8
	.byte	'OsOrtiApiIdGetNumberOfActivatedCores',0,44,8
	.byte	'OsOrtiApiIdGetCoreID',0,46,8
	.byte	'OsOrtiApiIdStartCore',0,48,8
	.byte	'OsOrtiApiIdStartNonAutosarCore',0,50,8
	.byte	'OsOrtiApiIdGetSpinlock',0,52,8
	.byte	'OsOrtiApiIdReleaseSpinlock',0,54,8
	.byte	'OsOrtiApiIdTryToGetSpinlock',0,56,8
	.byte	'OsOrtiApiIdShutdownAllCores',0,58,8
	.byte	'OsOrtiApiIdControlIdle',0,60,8
	.byte	'OsOrtiApiIdIocSend',0,62,8
	.byte	'OsOrtiApiIdIocWrite',0,192,0,8
	.byte	'OsOrtiApiIdIocSendGroup',0,194,0,8
	.byte	'OsOrtiApiIdIocWriteGroup',0,196,0,8
	.byte	'OsOrtiApiIdIocReceive',0,198,0,8
	.byte	'OsOrtiApiIdIocRead',0,200,0,8
	.byte	'OsOrtiApiIdIocReceiveGroup',0,202,0,8
	.byte	'OsOrtiApiIdIocReadGroup',0,204,0,8
	.byte	'OsOrtiApiIdIocEmptyQueue',0,206,0,8
	.byte	'OsOrtiApiIdGetCurrentApplicationID',0,208,0,8
	.byte	'OsOrtiApiIdCallNonTrustedFunction',0,210,0,8
	.byte	'OsOrtiApiIdGetTaskStackUsage',0,212,0,8
	.byte	'OsOrtiApiIdGetISRStackUsage',0,214,0,8
	.byte	'OsOrtiApiIdGetKernelStackUsage',0,216,0,8
	.byte	'OsOrtiApiIdGetStartupHookStackUsage',0,218,0,8
	.byte	'OsOrtiApiIdGetErrorHookStackUsage',0,220,0,8
	.byte	'OsOrtiApiIdGetShutdownHookStackUsage',0,222,0,8
	.byte	'OsOrtiApiIdGetProtectionHookStackUsage',0,224,0,8
	.byte	'OsOrtiApiIdGetSemaphore',0,226,0,8
	.byte	'OsOrtiApiIdReleaseSemaphore',0,228,0,8
	.byte	'OsOrtiApiIdStartOS',0,230,0,8
	.byte	'OsOrtiApiIdGetActiveApplicationMode',0,232,0,8
	.byte	'OsOrtiApiIdDisableAllInterrupts',0,234,0,8
	.byte	'OsOrtiApiIdEnableAllInterrupts',0,236,0,8
	.byte	'OsOrtiApiIdSuspendAllInterrupts',0,238,0,8
	.byte	'OsOrtiApiIdResumeAllInterrupts',0,240,0,8
	.byte	'OsOrtiApiIdSuspendOSInterrupts',0,242,0,8
	.byte	'OsOrtiApiIdResumeOSInterrupts',0,244,0,8
	.byte	'OsOrtiApiIdActivateTask',0,246,0,8
	.byte	'OsOrtiApiIdTerminateTask',0,248,0,8
	.byte	'OsOrtiApiIdChainTask',0,250,0,8
	.byte	'OsOrtiApiIdGetTaskID',0,252,0,8
	.byte	'OsOrtiApiIdGetTaskState',0,254,0,8
	.byte	'OsOrtiApiIdSchedule',0,128,1,8
	.byte	'OsOrtiApiIdSetEvent',0,130,1,8
	.byte	'OsOrtiApiIdClearEvent',0,132,1,8
	.byte	'OsOrtiApiIdGetEvent',0,134,1,8
	.byte	'OsOrtiApiIdWaitEvent',0,136,1,8
	.byte	'OsOrtiApiIdGetAlarmBase',0,138,1,8
	.byte	'OsOrtiApiIdGetAlarm',0,140,1,8
	.byte	'OsOrtiApiIdSetRelAlarm',0,142,1,8
	.byte	'OsOrtiApiIdSetAbsAlarm',0,144,1,8
	.byte	'OsOrtiApiIdCancelAlarm',0,146,1,8
	.byte	'OsOrtiApiIdGetResource',0,148,1,8
	.byte	'OsOrtiApiIdReleaseResource',0,150,1,8
	.byte	'OsOrtiApiIdGetVersionInfo',0,152,1,8
	.byte	'OsOrtiApiIdEnterPreStartTask',0,158,1,8
	.byte	'OsOrtiApiIdShutdownOS',0,160,1,8
	.byte	'OsOrtiApiIdGetUnhandledIrq',0,162,1,8
	.byte	'OsOrtiApiIdGetUnhandledExc',0,164,1,8
	.byte	'OsOrtiApiIdDisableOSInterrupts',0,166,1,8
	.byte	'OsOrtiApiIdEnableOSInterrupts',0,168,1,8
	.byte	'OsOrtiApiIdReadPeripheral8',0,170,1,8
	.byte	'OsOrtiApiIdReadPeripheral16',0,172,1,8
	.byte	'OsOrtiApiIdReadPeripheral32',0,174,1,8
	.byte	'OsOrtiApiIdWritePeripheral8',0,176,1,8
	.byte	'OsOrtiApiIdWritePeripheral16',0,178,1,8
	.byte	'OsOrtiApiIdWritePeripheral32',0,180,1,8
	.byte	'OsOrtiApiIdModifyPeripheral8',0,182,1,8
	.byte	'OsOrtiApiIdModifyPeripheral16',0,184,1,8
	.byte	'OsOrtiApiIdModifyPeripheral32',0,186,1,8
	.byte	'OsOrtiApiIdGetDetailedError',0,188,1,8
	.byte	'OsOrtiApiIdOSErrorGetServiceId',0,190,1,8
	.byte	'OsOrtiApiIdDisableInterruptSource',0,192,1,8
	.byte	'OsOrtiApiIdEnableInterruptSource',0,194,1,8
	.byte	'OsOrtiApiIdClearPendingInterrupt',0,196,1,8
	.byte	'OsOrtiApiIdIsInterruptSourceEnabled',0,198,1,8
	.byte	'OsOrtiApiIdIsInterruptPending',0,200,1,8
	.byte	'OsOrtiApiIdCallFastTrustedFunction',0,202,1,8
	.byte	'OsOrtiApiIdBarrierSynchronize',0,204,1,8
	.byte	'OsOrtiApiIdGetExceptionContext',0,206,1,8
	.byte	'OsOrtiApiIdSetExceptionContext',0,208,1,8
	.byte	'OsOrtiApiIdInitialEnableInterruptSources',0,210,1,8
	.byte	'OsOrtiApiIdGetCoreStartState',0,212,1,8
	.byte	'OsOrtiApiIdGetExceptionAddress',0,214,1,0,16
	.byte	'OsOrtiApiIdType',0,10,225,3,3
	.word	92812
	.byte	16
	.byte	'Os_TraceThreadTypeType',0,10,236,3,2
	.word	4145
	.byte	16
	.byte	'Os_TimerSwType',0,47,226,1,3
	.word	40059
	.byte	16
	.byte	'Os_TimerHrtType',0,47,151,2,3
	.word	23253
	.byte	16
	.byte	'Os_TimerPfrtType',0,47,181,2,3
	.word	47290
	.byte	16
	.byte	'Os_HookTaskReturnType',0,33,105,2
	.word	10784
	.byte	23,33,121,9,1,12
	.byte	'Status',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'Mode',0
	.word	399
	.byte	1,2,35,0,0,16
	.byte	'Os_HookParameterType',0,33,125,2
	.word	96221
	.byte	23,33,128,1,9,1,12
	.byte	'ProtectionReaction',0
	.word	22200
	.byte	1,2,35,0,0,16
	.byte	'Os_HookReturnType',0,33,131,1,2
	.word	96286
	.byte	16
	.byte	'Os_EventStateType',0,83,77,3
	.word	41715
	.byte	16
	.byte	'Os_XSigFunctionIdx',0,52,109,3
	.word	24083
	.byte	16
	.byte	'Os_AlarmConfigType',0,121,54,39
	.word	8327
	.byte	16
	.byte	'Os_SchTConfigType',0,122,55,38
	.word	9337
	.byte	16
	.byte	'Os_SchTExPoConfigType',0,122,61,42
	.word	9171
	.byte	16
	.byte	'Os_SchTAutostartConfigType',0,122,67,47
	.word	8614
	.byte	7,29,139,1,9,1,8
	.byte	'OS_SCHTSTATUS_STOPPED',0,0,8
	.byte	'OS_SCHTSTATUS_NEXT',0,1,8
	.byte	'OS_SCHTSTATUS_WAITING',0,2,8
	.byte	'OS_SCHTSTATUS_RUNNING',0,3,0,11
	.byte	'Os_SchTType_Tag',0,29,210,2,8,20,12
	.byte	'Job',0
	.word	7535
	.byte	4,2,35,0,12
	.byte	'ExPo',0
	.word	9332
	.byte	4,2,35,4,12
	.byte	'State',0
	.word	96519
	.byte	1,2,35,8,12
	.byte	'Next',0
	.word	9517
	.byte	4,2,35,12,12
	.byte	'Previous',0
	.word	9517
	.byte	4,2,35,16,0,16
	.byte	'Os_SchTType',0,122,70,32
	.word	96619
	.byte	16
	.byte	'Os_SchTExPoActionEventConfigType',0,122,76,53
	.word	9084
	.byte	16
	.byte	'Os_SchTExPoActionTaskConfigType',0,122,79,52
	.word	8991
	.byte	16
	.byte	'Os_XSigState_Type',0,51,100,2
	.word	25105
	.byte	16
	.byte	'Os_XSigComDataConfigType',0,51,114,2
	.word	25489
	.byte	16
	.byte	'Os_XSigParamsType',0,51,123,2
	.word	25076
	.byte	16
	.byte	'Os_XSigOutputParamsType',0,51,133,1,2
	.word	25350
	.byte	16
	.byte	'Os_XSigResultType',0,51,147,1,2
	.word	25380
	.byte	16
	.byte	'Os_XSigChannelSendType',0,51,207,1,2
	.word	23988
	.byte	16
	.byte	'Os_XSigChannelRecvType',0,51,217,1,2
	.word	24041
	.byte	16
	.byte	'Os_XSigChannelSendConfigType',0,51,234,1,2
	.word	25554
	.byte	16
	.byte	'Os_XSigChannelRecvConfigType',0,51,251,1,2
	.word	25852
	.byte	16
	.byte	'Os_XSigFunctionDescritorConfigType',0,50,190,1,2
	.word	25709
	.byte	16
	.byte	'Os_ActivationCntType',0,22,102,15
	.word	399
	.byte	16
	.byte	'Os_TaskScheduleType',0,22,111,2
	.word	6636
	.byte	16
	.byte	'Os_TpMonitoringKindType',0,35,151,2,2
	.word	12907
	.byte	16
	.byte	'Os_TpDelayLevelType',0,35,154,2,15
	.word	399
	.byte	16
	.byte	'Os_AppType',0,21,122,3
	.word	6470
	.byte	16
	.byte	'Os_AccessCheckRegionConfigType',0,36,95,3
	.word	13551
	.byte	16
	.byte	'Os_AlarmModeType',0,28,113,2
	.word	8188
	.byte	7,28,117,9,1,8
	.byte	'OS_ALARMSTATE_CANCELED',0,0,8
	.byte	'OS_ALARMSTATE_SET',0,1,0,16
	.byte	'Os_AlarmStateType',0,28,123,2
	.word	97348
	.byte	16
	.byte	'Os_AlarmAutostartConfigType',0,28,143,1,2
	.word	8242
	.byte	16
	.byte	'Os_AlarmCallbackType',0,28,241,1,9
	.word	11015
	.byte	16
	.byte	'Os_SchTEventIdxType',0,29,130,1,16
	.word	135
	.byte	16
	.byte	'Os_SchTTaskIdxType',0,29,133,1,16
	.word	135
	.byte	16
	.byte	'Os_SchTStatusType',0,29,149,1,3
	.word	96519
	.byte	7,29,153,1,9,1,8
	.byte	'OS_SCHTSYNCSTATUS_NOT_PROVIDED',0,0,8
	.byte	'OS_SCHTSYNCSTATUS_SYNC',0,1,8
	.byte	'OS_SCHTSYNCSTATUS_ASYNC',0,2,0,16
	.byte	'Os_SchTSyncStatusType',0,29,161,1,3
	.word	97576
	.byte	16
	.byte	'Os_SchTExPoKindType',0,29,198,1,2
	.word	8810
	.byte	16
	.byte	'Os_SchTSyncKindType',0,29,131,2,2
	.word	8721
	.byte	16
	.byte	'Os_SchTAutostartModeType',0,29,141,2,2
	.word	8496
	.byte	16
	.byte	'Os_ServiceTypeType',0,30,122,3
	.word	10529
	.byte	16
	.byte	'Os_ServiceTrustedFunctionParamsType',0,30,133,1,3
	.word	12095
	.byte	16
	.byte	'Os_ServiceNonTrustedFunctionParamsType',0,30,143,1,3
	.word	12234
	.byte	16
	.byte	'Os_ServiceFastTrustedFunctionParamsType',0,30,153,1,3
	.word	12376
	.byte	16
	.byte	'Os_ServiceParamsType',0,30,162,1,3
	.word	12430
	.byte	19,1,1,20
	.word	12008
	.byte	20
	.word	12049
	.byte	0,14
	.word	97989
	.byte	16
	.byte	'Os_ServiceTfCbkType',0,30,223,1,9
	.word	98003
	.byte	19,1,1,20
	.word	12148
	.byte	20
	.word	12049
	.byte	0,14
	.word	98037
	.byte	16
	.byte	'Os_ServiceNtfCbkType',0,30,248,1,9
	.word	98051
	.byte	19,1,1,20
	.word	12288
	.byte	20
	.word	12049
	.byte	0,14
	.word	98086
	.byte	16
	.byte	'Os_ServiceFtfCbkType',0,30,191,2,9
	.word	98100
	.byte	16
	.byte	'Os_FifoIdxType',0,123,73,15
	.word	399
	.byte	7,123,76,9,1,8
	.byte	'OS_FIFOWRITERESULT_OK',0,0,8
	.byte	'OS_FIFOWRITERESULT_BUFFEROVERFLOW',0,1,0,16
	.byte	'Os_FifoWriteResultType',0,123,80,2
	.word	98158
	.byte	16
	.byte	'Os_Fifo08WriteConfigType',0,92,66,45
	.word	45284
	.byte	16
	.byte	'Os_Fifo08ReadConfigType',0,92,69,44
	.word	45455
	.byte	16
	.byte	'Os_Fifo08NodeType',0,92,76,2
	.word	45258
	.byte	16
	.byte	'Os_Fifo08WriteType',0,92,83,2
	.word	45196
	.byte	16
	.byte	'Os_Fifo08ReadType',0,92,90,2
	.word	45225
	.byte	16
	.byte	'Os_Fifo16WriteConfigType',0,94,66,45
	.word	45690
	.byte	16
	.byte	'Os_Fifo16ReadConfigType',0,94,69,44
	.word	45861
	.byte	16
	.byte	'Os_Fifo16NodeType',0,94,76,2
	.word	45664
	.byte	16
	.byte	'Os_Fifo16WriteType',0,94,83,2
	.word	45602
	.byte	16
	.byte	'Os_Fifo16ReadType',0,94,90,2
	.word	45631
	.byte	16
	.byte	'Os_Fifo32WriteConfigType',0,96,66,45
	.word	46096
	.byte	16
	.byte	'Os_Fifo32ReadConfigType',0,96,69,44
	.word	46267
	.byte	16
	.byte	'Os_Fifo32NodeType',0,96,76,2
	.word	46070
	.byte	16
	.byte	'Os_Fifo32WriteType',0,96,83,2
	.word	46008
	.byte	16
	.byte	'Os_Fifo32ReadType',0,96,90,2
	.word	46037
	.byte	16
	.byte	'Os_FifoRefWriteConfigType',0,98,66,46
	.word	46527
	.byte	16
	.byte	'Os_FifoRefReadConfigType',0,98,69,45
	.word	46763
	.byte	16
	.byte	'Os_FifoRefWriteType',0,98,104,2
	.word	46414
	.byte	16
	.byte	'Os_FifoRefReadType',0,98,111,2
	.word	46443
	.byte	16
	.byte	'Os_IocSubClassType',0,54,170,3,2
	.word	26760
	.byte	7,124,96,9,1,8
	.byte	'OS_TRAPID_GETCOREID',0,0,8
	.byte	'OS_TRAPID_GETACTIVEAPPLICATIONMODE',0,1,8
	.byte	'OS_TRAPID_SHUTDOWNOS',0,2,8
	.byte	'OS_TRAPID_SHUTDOWNALLCORES',0,3,8
	.byte	'OS_TRAPID_DISABLELEVEL',0,4,8
	.byte	'OS_TRAPID_ENABLELEVEL',0,5,8
	.byte	'OS_TRAPID_DISABLEGLOBAL',0,6,8
	.byte	'OS_TRAPID_ENABLEGLOBAL',0,7,8
	.byte	'OS_TRAPID_DISABLEALLINTERRUPTS',0,8,8
	.byte	'OS_TRAPID_ENABLEALLINTERRUPTS',0,9,8
	.byte	'OS_TRAPID_SUSPENDALLINTERRUPTS',0,10,8
	.byte	'OS_TRAPID_RESUMEALLINTERRUPTS',0,11,8
	.byte	'OS_TRAPID_SUSPENDOSINTERRUPTS',0,12,8
	.byte	'OS_TRAPID_RESUMEOSINTERRUPTS',0,13,8
	.byte	'OS_TRAPID_DISABLEINTERRUPTSOURCE',0,14,8
	.byte	'OS_TRAPID_ENABLEINTERRUPTSOURCE',0,15,8
	.byte	'OS_TRAPID_CLEARPENDINGINTERRUPT',0,16,8
	.byte	'OS_TRAPID_ISINTERRUPTSOURCEENABLED',0,17,8
	.byte	'OS_TRAPID_ISINTERRUPTPENDING',0,18,8
	.byte	'OS_TRAPID_ALLOWACCESS',0,19,8
	.byte	'OS_TRAPID_GETAPPLICATIONID',0,20,8
	.byte	'OS_TRAPID_GETCURRENTAPPLICATIONID',0,21,8
	.byte	'OS_TRAPID_GETAPPLICATIONSTATE',0,22,8
	.byte	'OS_TRAPID_CHECKOBJECTACCESS',0,23,8
	.byte	'OS_TRAPID_CHECKOBJECTOWNERSHIP',0,24,8
	.byte	'OS_TRAPID_TERMINATEAPPLICATION',0,25,8
	.byte	'OS_TRAPID_ACTIVATETASK',0,26,8
	.byte	'OS_TRAPID_TERMINATETASK',0,27,8
	.byte	'OS_TRAPID_CHAINTASK',0,28,8
	.byte	'OS_TRAPID_GETTASKSTATE',0,29,8
	.byte	'OS_TRAPID_GETTASKID',0,30,8
	.byte	'OS_TRAPID_GETISRID',0,31,8
	.byte	'OS_TRAPID_SCHEDULE',0,32,8
	.byte	'OS_TRAPID_INCREMENTCOUNTER',0,33,8
	.byte	'OS_TRAPID_GETCOUNTERVALUE',0,34,8
	.byte	'OS_TRAPID_GETELAPSEDVALUE',0,35,8
	.byte	'OS_TRAPID_GETALARM',0,36,8
	.byte	'OS_TRAPID_GETALARMBASE',0,37,8
	.byte	'OS_TRAPID_SETRELALARM',0,38,8
	.byte	'OS_TRAPID_SETABSALARM',0,39,8
	.byte	'OS_TRAPID_CANCELALARM',0,40,8
	.byte	'OS_TRAPID_GETRESOURCE',0,41,8
	.byte	'OS_TRAPID_RELEASERESOURCE',0,42,8
	.byte	'OS_TRAPID_SETEVENT',0,43,8
	.byte	'OS_TRAPID_CLEAREVENT',0,44,8
	.byte	'OS_TRAPID_WAITEVENT',0,45,8
	.byte	'OS_TRAPID_GETEVENT',0,46,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEREL',0,47,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEABS',0,48,8
	.byte	'OS_TRAPID_STOPSCHEDULETABLE',0,49,8
	.byte	'OS_TRAPID_NEXTSCHEDULETABLE',0,50,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLESYNCHRON',0,51,8
	.byte	'OS_TRAPID_SETSCHEDULETABLEASYNC',0,52,8
	.byte	'OS_TRAPID_SYNCSCHEDULETABLE',0,53,8
	.byte	'OS_TRAPID_GETSCHEDULETABLESTATUS',0,54,8
	.byte	'OS_TRAPID_SPINLOCKGET',0,55,8
	.byte	'OS_TRAPID_SPINLOCKRELEASE',0,56,8
	.byte	'OS_TRAPID_SPINLOCKTRYGET',0,57,8
	.byte	'OS_TRAPID_IOC08RECEIVE',0,58,8
	.byte	'OS_TRAPID_IOC08EMPTYQUEUE',0,59,8
	.byte	'OS_TRAPID_IOC08SEND',0,60,8
	.byte	'OS_TRAPID_IOC16RECEIVE',0,61,8
	.byte	'OS_TRAPID_IOC16EMPTYQUEUE',0,62,8
	.byte	'OS_TRAPID_IOC16SEND',0,63,8
	.byte	'OS_TRAPID_IOC32RECEIVE',0,192,0,8
	.byte	'OS_TRAPID_IOC32EMPTYQUEUE',0,193,0,8
	.byte	'OS_TRAPID_IOC32SEND',0,194,0,8
	.byte	'OS_TRAPID_IOCREFRECEIVE',0,195,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYQUEUE',0,196,0,8
	.byte	'OS_TRAPID_IOCREFSEND',0,197,0,8
	.byte	'OS_TRAPID_IOCREAD',0,198,0,8
	.byte	'OS_TRAPID_IOCWRITE',0,199,0,8
	.byte	'OS_TRAPID_IOC08MULTIRECEIVE',0,200,0,8
	.byte	'OS_TRAPID_IOC08EMPTYMULTIQUEUE',0,201,0,8
	.byte	'OS_TRAPID_IOC16MULTIRECEIVE',0,202,0,8
	.byte	'OS_TRAPID_IOC16EMPTYMULTIQUEUE',0,203,0,8
	.byte	'OS_TRAPID_IOC32MULTIRECEIVE',0,204,0,8
	.byte	'OS_TRAPID_IOC32EMPTYMULTIQUEUE',0,205,0,8
	.byte	'OS_TRAPID_IOCREFMULTIRECEIVE',0,206,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYMULTIQUEUE',0,207,0,8
	.byte	'OS_TRAPID_READPERIPHERAL8',0,208,0,8
	.byte	'OS_TRAPID_READPERIPHERAL16',0,209,0,8
	.byte	'OS_TRAPID_READPERIPHERAL32',0,210,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL8',0,211,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL16',0,212,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL32',0,213,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL8',0,214,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL16',0,215,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL32',0,216,0,8
	.byte	'OS_TRAPID_CALLTRUSTEDFUNCTION',0,217,0,8
	.byte	'OS_TRAPID_CALLNONTRUSTEDFUNCTION',0,218,0,8
	.byte	'OS_TRAPID_CALLFASTTRUSTEDFUNCTION',0,219,0,8
	.byte	'OS_TRAPID_ERRAPPLICATIONERROR',0,220,0,8
	.byte	'OS_TRAPID_TASKMISSINGTERMINATETASK',0,221,0,8
	.byte	'OS_TRAPID_ISREPILOGUE',0,222,0,8
	.byte	'OS_TRAPID_SERVICERETURN',0,223,0,8
	.byte	'OS_TRAPID_HOOKRETURN',0,224,0,8
	.byte	'OS_TRAPID_CONTROLIDLE',0,225,0,8
	.byte	'OS_TRAPID_GETTASKSTACKUSAGE',0,226,0,8
	.byte	'OS_TRAPID_GETISRSTACKUSAGE',0,227,0,8
	.byte	'OS_TRAPID_GETKERNELSTACKUSAGE',0,228,0,8
	.byte	'OS_TRAPID_GETSTARTUPHOOKSTACKUSAGE',0,229,0,8
	.byte	'OS_TRAPID_GETERRORHOOKSTACKUSAGE',0,230,0,8
	.byte	'OS_TRAPID_GETSHUTDOWNHOOKSTACKUSAGE',0,231,0,8
	.byte	'OS_TRAPID_GETPROTECTIONHOOKSTACKUSAGE',0,232,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDIRQ',0,233,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDEXC',0,234,0,8
	.byte	'OS_TRAPID_GETDETAILEDERROR',0,235,0,8
	.byte	'OS_TRAPID_GETSERVICEID',0,236,0,8
	.byte	'OS_TRAPID_COREGETTHREAD',0,237,0,8
	.byte	'OS_TRAPID_GETNUMBEROFACTIVATEDCORES',0,238,0,8
	.byte	'OS_TRAPID_CHECKTASKMEMORYACCESS',0,239,0,8
	.byte	'OS_TRAPID_CHECKISRMEMORYACCESS',0,240,0,8
	.byte	'OS_TRAPID_BARRIERSYNCHRONIZE',0,241,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONCONTEXT',0,242,0,8
	.byte	'OS_TRAPID_SETEXCEPTIONCONTEXT',0,243,0,8
	.byte	'OS_TRAPID_GETCORESTARTSTATE',0,244,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONADDRESS',0,245,0,8
	.byte	'OS_TRAPID_COUNT',0,246,0,0,16
	.byte	'Os_TrapIdType',0,124,217,1,3
	.word	98837
	.byte	15
	.word	90139
	.byte	14
	.word	102353
	.byte	14
	.word	399
	.byte	15
	.word	399
	.byte	14
	.word	102368
	.byte	15
	.word	90461
	.byte	14
	.word	102378
	.byte	14
	.word	3769
	.byte	15
	.word	3769
	.byte	14
	.word	102393
	.byte	15
	.word	90783
	.byte	14
	.word	102403
	.byte	15
	.word	91107
	.byte	14
	.word	102413
	.byte	15
	.word	91373
	.byte	14
	.word	102423
	.byte	15
	.word	91520
	.byte	14
	.word	102433
	.byte	15
	.word	90246
	.byte	14
	.word	102443
	.byte	15
	.word	90568
	.byte	14
	.word	102453
	.byte	15
	.word	90890
	.byte	14
	.word	102463
	.byte	15
	.word	91216
	.byte	14
	.word	102473
	.byte	14
	.word	21095
	.byte	23,124,232,1,9,8,12
	.byte	'ParamApiType',0
	.word	19352
	.byte	8,2,35,0,12
	.byte	'ParamSpinlockConfigRefType',0
	.word	6355
	.byte	4,2,35,0,12
	.byte	'ParamIoc08SendConfigRefType',0
	.word	102358
	.byte	4,2,35,0,12
	.byte	'ParamIoc08ReceiveConfigRefType',0
	.word	90241
	.byte	4,2,35,0,12
	.byte	'ParamUint8RefType',0
	.word	102363
	.byte	4,2,35,0,12
	.byte	'ParamConstUint8RefType',0
	.word	102373
	.byte	4,2,35,0,12
	.byte	'ParamUint8Type',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ParamIoc16SendConfigRefType',0
	.word	102383
	.byte	4,2,35,0,12
	.byte	'ParamIoc16ReceiveConfigRefType',0
	.word	90563
	.byte	4,2,35,0,12
	.byte	'ParamUint16RefType',0
	.word	102388
	.byte	4,2,35,0,12
	.byte	'ParamConstUint16RefType',0
	.word	102398
	.byte	4,2,35,0,12
	.byte	'ParamUint16Type',0
	.word	3769
	.byte	2,2,35,0,12
	.byte	'ParamIoc32SendConfigRefType',0
	.word	102408
	.byte	4,2,35,0,12
	.byte	'ParamIoc32ReceiveConfigRefType',0
	.word	90885
	.byte	4,2,35,0,12
	.byte	'ParamUint32RefType',0
	.word	32318
	.byte	4,2,35,0,12
	.byte	'ParamConstUint32RefType',0
	.word	30276
	.byte	4,2,35,0,12
	.byte	'ParamUint32Type',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ParamIocRefSendConfigRefType',0
	.word	102418
	.byte	4,2,35,0,12
	.byte	'ParamIocRefReceiveConfigRefType',0
	.word	91211
	.byte	4,2,35,0,12
	.byte	'ParamVoidRefType',0
	.word	12049
	.byte	4,2,35,0,12
	.byte	'ParamVoidConfigRefType',0
	.word	17820
	.byte	4,2,35,0,12
	.byte	'ParamIocReadConfigRefType',0
	.word	102428
	.byte	4,2,35,0,12
	.byte	'ParamIocWriteConfigRefType',0
	.word	102438
	.byte	4,2,35,0,12
	.byte	'ParamIoc08MultiReceiveConfigRefType',0
	.word	102448
	.byte	4,2,35,0,12
	.byte	'ParamIoc16MultiReceiveConfigRefType',0
	.word	102458
	.byte	4,2,35,0,12
	.byte	'ParamIoc32MultiReceiveConfigRefType',0
	.word	102468
	.byte	4,2,35,0,12
	.byte	'ParamIocRefMultiReceiveConfigRefType',0
	.word	102478
	.byte	4,2,35,0,12
	.byte	'ParamOSServiceIdType',0
	.word	14247
	.byte	1,2,35,0,12
	.byte	'ParamOs_StatusType',0
	.word	416
	.byte	2,2,35,0,12
	.byte	'ParamOs_ErrorParamsRefType',0
	.word	102483
	.byte	4,2,35,0,0,16
	.byte	'Os_TrapParameterType',0,124,136,2,3
	.word	102488
	.byte	23,124,140,2,9,4,12
	.byte	'ReturnOs_StatusType',0
	.word	416
	.byte	2,2,35,0,12
	.byte	'ReturnStd_ReturnType',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ReturnUint8Type',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ReturnUint16Type',0
	.word	3769
	.byte	2,2,35,0,12
	.byte	'ReturnUint32Type',0
	.word	135
	.byte	4,2,35,0,12
	.byte	'ReturnCoreIdType',0
	.word	3791
	.byte	1,2,35,0,12
	.byte	'ReturnAppModeType',0
	.word	399
	.byte	1,2,35,0,12
	.byte	'ReturnISRType',0
	.word	7037
	.byte	1,2,35,0,12
	.byte	'ReturnApplicationType',0
	.word	11308
	.byte	1,2,35,0,12
	.byte	'ReturnObjectAccessType',0
	.word	85424
	.byte	1,2,35,0,12
	.byte	'ReturnAccessType',0
	.word	13048
	.byte	1,2,35,0,12
	.byte	'ReturnOSServiceIdType',0
	.word	14247
	.byte	1,2,35,0,12
	.byte	'ReturnOs_AddressOfConstType',0
	.word	21144
	.byte	4,2,35,0,12
	.byte	'ReturnThreadConfigRefType',0
	.word	14194
	.byte	4,2,35,0,0,16
	.byte	'Os_TrapReturnType',0,124,156,2,3
	.word	103552
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,46,1,3,8,32,13,58,15,59
	.byte	15,57,15,54,15,39,12,0,0,7,4,1,58,15,59,15,57,15,11,15,0,0,8,40,0,3,8,28,13,0,0,9,1,1,11,15,73,19,0,0
	.byte	10,33,0,47,15,0,0,11,19,1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,53,0,73
	.byte	19,0,0,14,15,0,73,19,0,0,15,38,0,73,19,0,0,16,22,0,3,8,58,15,59,15,57,15,73,19,0,0,17,19,1,58,15,59,15
	.byte	57,15,11,15,0,0,18,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,19,21,1,54,15,39,12,0,0,20,5,0,73,19,0,0
	.byte	21,21,0,54,15,39,12,0,0,22,59,0,3,8,0,0,23,23,1,58,15,59,15,57,15,11,15,0,0,24,23,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,25,21,1,73,19,54,15,39,12,0,0,26,11,1,0,0,27,46,1,3,8,54,15,39,12,63,12,60,12,0,0,28,46,1
	.byte	3,8,73,19,54,15,39,12,63,12,60,12,0,0,29,5,0,3,8,73,19,0,0,30,46,1,49,19,0,0,31,46,0,3,8,58,15,59,15,57
	.byte	15,54,15,39,12,63,12,60,12,0,0,32,5,0,49,19,0,0,33,29,1,49,19,0,0,34,11,1,49,19,0,0,35,11,0,49,19,0,0
	.byte	36,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,37,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L38:
	.word	.L223-.L222
.L222:
	.half	3
	.word	.L225-.L224
.L224:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error.h',0,0,0,0
	.byte	'Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IsrInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_InterruptInt.h',0,0,0,0
	.byte	'Os_Hal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TraceInt.h',0,0,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ThreadInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_ContextInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_StackInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_LockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SpinlockInt.h',0,0,0,0
	.byte	'Os_Spinlock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ApplicationInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TaskInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CounterInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_PriorityQueue_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_JobInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AlarmInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTableInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunctionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_HookInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheckInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ErrorInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CommonInt.h',0,0,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_OsInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SchedulerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArrayInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_DequeInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ResourceInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STMInt.h',0,0,0,0
	.byte	'Os_Hal_Kernel_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannelInt.h',0,0,0,0
	.byte	'Os_XSignal_Lcfg.h',0,2,0,0
	.byte	'Os_XSignal_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IocInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Ioc_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BarrierInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Barrier_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Bit.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArray.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Deque.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Spinlock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPT.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPTInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannel.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_EventInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRef.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRefInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Derivative_TC39x_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer_Types.h',0,0,0,0
	.byte	'Os_Hal_Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Common_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheck_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Alarm_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTable_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TrapInt.h',0,0,0,0,0
.L225:
.L223:
	.sdecl	'.debug_info',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_info'
.L39:
	.word	210
	.half	3
	.word	.L40
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L42,.L41
	.byte	2
	.word	.L35
	.byte	3
	.byte	'Os_TimerSwIncrement',0,1,195,2,21,1,1,1
	.word	.L22,.L74,.L21
	.byte	4
	.byte	'Timer',0,1,197,2,54
	.word	.L75,.L76
	.byte	5
	.word	.L22,.L74
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_abbrev'
.L40:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_line'
.L41:
	.word	.L227-.L226
.L226:
	.half	3
	.word	.L229-.L228
.L228:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0,0
.L229:
	.byte	5,6,7,0,5,2
	.word	.L22
	.byte	3,203,2,1,5,3,9
	.half	.L230-.L22
	.byte	1,5,25,7,9
	.half	.L231-.L230
	.byte	3,2,1,5,26,1,5,24,9
	.half	.L2-.L231
	.byte	3,5,1,5,6,9
	.half	.L232-.L2
	.byte	3,4,1,5,3,9
	.half	.L233-.L232
	.byte	1,5,31,7,9
	.half	.L234-.L233
	.byte	3,3,1,5,1,7,9
	.half	.L4-.L234
	.byte	3,2,1,7,9
	.half	.L43-.L4
	.byte	0,1,1
.L227:
	.sdecl	'.debug_ranges',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_ranges'
.L42:
	.word	-1,.L22,0,.L43-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_info'
.L44:
	.word	733
	.half	3
	.word	.L45
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L47,.L46
	.byte	2
	.word	.L35
	.byte	3
	.byte	'Os_TimerPfrtStart',0,1,234,2,21,1,1,1
	.word	.L24,.L77,.L23
	.byte	4
	.byte	'Timer',0,1,236,2,56
	.word	.L78,.L79
	.byte	5
	.word	.L24,.L77
	.byte	6
	.word	.L80,.L81,.L82
	.byte	7
	.word	.L83,.L84
	.byte	8
	.word	.L85,.L81,.L82
	.byte	9
	.byte	'tempSRC',0,2,99,10
	.word	.L86,.L87
	.byte	0,0,6
	.word	.L88,.L89,.L90
	.byte	7
	.word	.L91,.L92
	.byte	10
	.word	.L93,.L89,.L90
	.byte	0,6
	.word	.L94,.L95,.L11
	.byte	7
	.word	.L96,.L97
	.byte	8
	.word	.L98,.L95,.L11
	.byte	6
	.word	.L99,.L95,.L100
	.byte	7
	.word	.L101,.L102
	.byte	10
	.word	.L103,.L95,.L100
	.byte	0,6
	.word	.L104,.L105,.L106
	.byte	7
	.word	.L107,.L108
	.byte	7
	.word	.L109,.L110
	.byte	7
	.word	.L111,.L112
	.byte	7
	.word	.L113,.L114
	.byte	8
	.word	.L115,.L105,.L106
	.byte	9
	.byte	'result',0,3,134,6,15
	.word	.L86,.L116
	.byte	11
	.word	.L117,.L118
	.byte	0,0,6
	.word	.L119,.L120,.L121
	.byte	7
	.word	.L122,.L123
	.byte	7
	.word	.L124,.L125
	.byte	8
	.word	.L126,.L120,.L121
	.byte	6
	.word	.L127,.L120,.L121
	.byte	7
	.word	.L128,.L129
	.byte	7
	.word	.L130,.L131
	.byte	10
	.word	.L132,.L120,.L121
	.byte	0,0,0,6
	.word	.L88,.L133,.L134
	.byte	7
	.word	.L91,.L92
	.byte	10
	.word	.L93,.L133,.L134
	.byte	0,6
	.word	.L135,.L134,.L136
	.byte	7
	.word	.L137,.L138
	.byte	7
	.word	.L139,.L140
	.byte	7
	.word	.L141,.L142
	.byte	7
	.word	.L143,.L144
	.byte	12
	.word	.L145,.L146
	.byte	9
	.byte	'result',0,4,234,1,20
	.word	.L147,.L148
	.byte	9
	.byte	'diffTime',0,4,235,1,15
	.word	.L86,.L149
	.byte	0,0,6
	.word	.L150,.L136,.L11
	.byte	7
	.word	.L151,.L152
	.byte	10
	.word	.L153,.L136,.L11
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_abbrev'
.L45:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,0,49,16,85,6,0,0,12,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_line'
.L46:
	.word	.L236-.L235
.L235:
	.half	3
	.word	.L238-.L237
.L237:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0,0
.L238:
	.byte	5,28,7,0,5,2
	.word	.L24
	.byte	3,249,2,1,4,2,5,41,9
	.half	.L81-.L24
	.byte	3,238,125,1,5,4,9
	.half	.L239-.L81
	.byte	3,127,1,5,79,9
	.half	.L240-.L239
	.byte	3,1,1,5,10,9
	.half	.L241-.L240
	.byte	1,5,66,9
	.half	.L242-.L241
	.byte	1,5,106,1,5,93,9
	.half	.L243-.L242
	.byte	1,5,58,3,127,1,5,51,9
	.half	.L244-.L243
	.byte	3,4,1,5,4,9
	.half	.L245-.L244
	.byte	1,5,90,9
	.half	.L246-.L245
	.byte	1,5,77,9
	.half	.L247-.L246
	.byte	1,5,41,9
	.half	.L248-.L247
	.byte	3,4,1,5,4,9
	.half	.L249-.L248
	.byte	3,127,1,5,77,9
	.half	.L250-.L249
	.byte	3,1,1,5,10,9
	.half	.L251-.L250
	.byte	1,5,64,9
	.half	.L252-.L251
	.byte	1,5,102,1,5,89,9
	.half	.L253-.L252
	.byte	1,5,56,3,127,1,5,44,9
	.half	.L254-.L253
	.byte	3,4,1,5,14,9
	.half	.L255-.L254
	.byte	1,5,13,9
	.half	.L256-.L255
	.byte	1,5,11,9
	.half	.L257-.L256
	.byte	3,1,1,5,66,3,1,1,4,1,5,67,9
	.half	.L82-.L257
	.byte	3,138,2,1,4,2,5,58,9
	.half	.L89-.L82
	.byte	3,134,126,1,5,11,9
	.half	.L197-.L89
	.byte	1,5,10,9
	.half	.L258-.L197
	.byte	1,4,1,5,80,9
	.half	.L90-.L258
	.byte	3,170,1,1,5,16,9
	.half	.L259-.L90
	.byte	3,208,0,1,5,80,9
	.half	.L95-.L259
	.byte	3,176,127,1,5,30,9
	.half	.L100-.L95
	.byte	3,66,1,9
	.half	.L260-.L100
	.byte	3,2,1,5,28,9
	.half	.L261-.L260
	.byte	3,127,1,4,3,5,15,9
	.half	.L105-.L261
	.byte	3,164,4,1,4,1,5,16,9
	.half	.L106-.L105
	.byte	3,222,123,1,5,35,9
	.half	.L120-.L106
	.byte	3,3,1,4,2,5,51,9
	.half	.L262-.L120
	.byte	3,156,127,1,5,4,9
	.half	.L263-.L262
	.byte	1,5,77,9
	.half	.L264-.L263
	.byte	1,4,1,5,74,9
	.half	.L121-.L264
	.byte	3,231,0,1,5,6,9
	.half	.L265-.L121
	.byte	3,3,1,4,2,5,58,9
	.half	.L133-.L265
	.byte	3,136,127,1,5,11,9
	.half	.L266-.L133
	.byte	1,5,10,9
	.half	.L267-.L266
	.byte	1,4,4,5,3,9
	.half	.L134-.L267
	.byte	3,238,0,1,4,1,9
	.half	.L199-.L134
	.byte	3,10,1,4,2,5,34,7,9
	.half	.L136-.L199
	.byte	3,182,127,1,5,4,9
	.half	.L203-.L136
	.byte	1,5,65,9
	.half	.L268-.L203
	.byte	1,4,1,5,1,9
	.half	.L11-.L268
	.byte	3,208,1,1,7,9
	.half	.L48-.L11
	.byte	0,1,1
.L236:
	.sdecl	'.debug_ranges',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_ranges'
.L47:
	.word	-1,.L24,0,.L48-.L24,0,0
.L118:
	.word	-1,.L24,.L105-.L24,.L106-.L24,-1,.L26,0,.L73-.L26,0,0
.L146:
	.word	-1,.L24,.L134-.L24,.L136-.L24,-1,.L28,0,.L68-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_info'
.L49:
	.word	193
	.half	3
	.word	.L50
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L52,.L51
	.byte	2
	.word	.L35
	.byte	3
	.byte	'Os_Isr_Os_TimerPitIsr',0,1,144,3,1,1,1,1
	.word	.L30,.L154,.L29
	.byte	4
	.word	.L30,.L154
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_abbrev'
.L50:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_line'
.L51:
	.word	.L270-.L269
.L269:
	.half	3
	.word	.L272-.L271
.L271:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0,0
.L272:
	.byte	5,22,7,0,5,2
	.word	.L30
	.byte	3,157,3,1,5,1,7,9
	.half	.L53-.L30
	.byte	3,17,0,1,1
.L270:
	.sdecl	'.debug_ranges',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_ranges'
.L52:
	.word	-1,.L30,0,.L53-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_info'
.L54:
	.word	193
	.half	3
	.word	.L55
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L57,.L56
	.byte	2
	.word	.L35
	.byte	3
	.byte	'Os_Isr_Os_TimerHrtIsr',0,1,193,3,1,1,1,1
	.word	.L32,.L155,.L31
	.byte	4
	.word	.L32,.L155
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_abbrev'
.L55:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_line'
.L56:
	.word	.L274-.L273
.L273:
	.half	3
	.word	.L276-.L275
.L275:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0,0
.L276:
	.byte	5,22,7,0,5,2
	.word	.L32
	.byte	3,208,3,1,5,1,7,9
	.half	.L58-.L32
	.byte	3,30,0,1,1
.L274:
	.sdecl	'.debug_ranges',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_ranges'
.L57:
	.word	-1,.L32,0,.L58-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_info'
.L59:
	.word	775
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L62,.L61
	.byte	2
	.word	.L35
	.byte	3
	.byte	'Os_Isr_Os_TimerPfrtIsr',0,1,252,3,1,1,1,1
	.word	.L34,.L156,.L33
	.byte	4
	.word	.L34,.L156
	.byte	5
	.byte	'pfrtTimer',0,1,255,3,56
	.word	.L78,.L157
	.byte	6
	.word	.L158,.L34,.L159
	.byte	7
	.word	.L160,.L34,.L159
	.byte	6
	.word	.L161,.L34,.L162
	.byte	8
	.word	.L163,.L164
	.byte	7
	.word	.L165,.L34,.L162
	.byte	6
	.word	.L166,.L34,.L162
	.byte	7
	.word	.L167,.L34,.L162
	.byte	5
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L86,.L168
	.byte	0,0,0,0,0,0,6
	.word	.L94,.L169,.L20
	.byte	8
	.word	.L96,.L170
	.byte	7
	.word	.L98,.L169,.L20
	.byte	6
	.word	.L99,.L169,.L171
	.byte	8
	.word	.L101,.L172
	.byte	9
	.word	.L103,.L169,.L171
	.byte	0,6
	.word	.L104,.L173,.L174
	.byte	8
	.word	.L107,.L175
	.byte	8
	.word	.L109,.L176
	.byte	8
	.word	.L111,.L177
	.byte	8
	.word	.L113,.L178
	.byte	7
	.word	.L115,.L173,.L174
	.byte	5
	.byte	'result',0,3,134,6,15
	.word	.L86,.L179
	.byte	9
	.word	.L117,.L173,.L174
	.byte	0,0,6
	.word	.L119,.L180,.L181
	.byte	8
	.word	.L122,.L182
	.byte	8
	.word	.L124,.L183
	.byte	7
	.word	.L126,.L180,.L181
	.byte	6
	.word	.L127,.L180,.L181
	.byte	8
	.word	.L128,.L184
	.byte	8
	.word	.L130,.L185
	.byte	9
	.word	.L132,.L180,.L181
	.byte	0,0,0,6
	.word	.L88,.L186,.L187
	.byte	8
	.word	.L91,.L188
	.byte	9
	.word	.L93,.L186,.L187
	.byte	0,6
	.word	.L135,.L187,.L189
	.byte	8
	.word	.L137,.L190
	.byte	8
	.word	.L139,.L191
	.byte	8
	.word	.L141,.L192
	.byte	8
	.word	.L143,.L193
	.byte	7
	.word	.L145,.L187,.L189
	.byte	5
	.byte	'result',0,4,234,1,20
	.word	.L147,.L194
	.byte	5
	.byte	'diffTime',0,4,235,1,15
	.word	.L86,.L195
	.byte	0,0,6
	.word	.L150,.L189,.L20
	.byte	8
	.word	.L151,.L196
	.byte	9
	.word	.L153,.L189,.L20
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_line'
.L61:
	.word	.L278-.L277
.L277:
	.half	3
	.word	.L280-.L279
.L279:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0,0
.L280:
	.byte	4,2,5,3,7,0,5,2
	.word	.L34
	.byte	3,224,4,1,4,5,9
	.half	.L204-.L34
	.byte	3,212,124,1,4,1,5,8,9
	.half	.L162-.L204
	.byte	3,211,2,1,5,17,9
	.half	.L159-.L162
	.byte	1,5,33,9
	.half	.L281-.L159
	.byte	1,5,3,9
	.half	.L205-.L281
	.byte	1,5,22,7,9
	.half	.L282-.L205
	.byte	3,2,1,5,34,7,9
	.half	.L12-.L282
	.byte	3,9,1,5,80,9
	.half	.L169-.L12
	.byte	3,155,126,1,5,30,9
	.half	.L171-.L169
	.byte	3,66,1,9
	.half	.L283-.L171
	.byte	3,2,1,5,28,9
	.half	.L284-.L283
	.byte	3,127,1,4,3,5,15,9
	.half	.L173-.L284
	.byte	3,164,4,1,4,1,5,16,9
	.half	.L174-.L173
	.byte	3,222,123,1,5,35,9
	.half	.L180-.L174
	.byte	3,3,1,4,6,5,51,9
	.half	.L285-.L180
	.byte	3,156,127,1,5,4,9
	.half	.L286-.L285
	.byte	1,5,77,9
	.half	.L287-.L286
	.byte	1,4,1,5,74,9
	.half	.L181-.L287
	.byte	3,231,0,1,5,6,9
	.half	.L288-.L181
	.byte	3,3,1,4,6,5,58,9
	.half	.L186-.L288
	.byte	3,136,127,1,5,11,9
	.half	.L289-.L186
	.byte	1,5,10,9
	.half	.L290-.L289
	.byte	1,4,4,5,3,9
	.half	.L187-.L290
	.byte	3,238,0,1,4,1,9
	.half	.L206-.L187
	.byte	3,10,1,4,6,5,34,7,9
	.half	.L189-.L206
	.byte	3,182,127,1,5,4,9
	.half	.L208-.L189
	.byte	1,5,65,9
	.half	.L291-.L208
	.byte	1,4,1,5,1,9
	.half	.L20-.L291
	.byte	3,229,2,1,7,9
	.half	.L63-.L20
	.byte	0,1,1
.L278:
	.sdecl	'.debug_ranges',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_ranges'
.L62:
	.word	-1,.L34,0,.L63-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L64:
	.word	170
	.half	3
	.word	.L65
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L67,.L66
	.byte	2
	.word	.L35
	.byte	3
	.byte	'.cocofun_1',0,1,234,2,21,1
	.word	.L28,.L68,.L27
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L65:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L66:
	.word	.L293-.L292
.L292:
	.half	3
	.word	.L295-.L294
.L294:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0,0
.L295:
	.byte	4,2,5,3,7,0,5,2
	.word	.L28
	.byte	3,241,1,1,5,22,7,9
	.half	.L201-.L28
	.byte	3,2,1,5,42,9
	.half	.L200-.L201
	.byte	3,5,1,5,38,3,123,1,5,8,9
	.half	.L7-.L200
	.byte	3,7,1,5,31,7,9
	.half	.L202-.L7
	.byte	3,2,1,5,42,9
	.half	.L207-.L202
	.byte	3,5,1,5,38,3,123,1,5,12,9
	.half	.L9-.L207
	.byte	3,10,1,5,3,9
	.half	.L8-.L9
	.byte	3,116,1,7,9
	.half	.L68-.L8
	.byte	0,1,1,4,2,5,3,0,5,2
	.word	.L28
	.byte	3,241,1,1,5,22,7,9
	.half	.L201-.L28
	.byte	3,2,1,5,42,9
	.half	.L200-.L201
	.byte	3,5,1,5,38,3,123,1,5,8,9
	.half	.L7-.L200
	.byte	3,7,1,5,31,7,9
	.half	.L202-.L7
	.byte	3,2,1,5,42,9
	.half	.L207-.L202
	.byte	3,5,1,5,38,3,123,1,5,12,9
	.half	.L9-.L207
	.byte	3,10,1,5,3,9
	.half	.L8-.L9
	.byte	3,116,1,7,9
	.half	.L68-.L8
	.byte	0,1,1
.L293:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L67:
	.word	-1,.L28,0,.L68-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L69:
	.word	170
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L72,.L71
	.byte	2
	.word	.L35
	.byte	3
	.byte	'.cocofun_2',0,1,234,2,21,1
	.word	.L26,.L73,.L25
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L71:
	.word	.L297-.L296
.L296:
	.half	3
	.word	.L299-.L298
.L298:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0,0
.L299:
	.byte	4,2,5,15,7,0,5,2
	.word	.L26
	.byte	3,148,6,1,5,30,9
	.half	.L198-.L26
	.byte	3,119,1,5,3,9
	.half	.L300-.L198
	.byte	1,5,15,7,9
	.half	.L301-.L300
	.byte	3,9,1,5,3,9
	.half	.L5-.L301
	.byte	3,119,1,7,9
	.half	.L73-.L5
	.byte	0,1,1,4,2,5,15,0,5,2
	.word	.L26
	.byte	3,148,6,1,5,30,9
	.half	.L198-.L26
	.byte	3,119,1,5,3,9
	.half	.L300-.L198
	.byte	1,5,15,7,9
	.half	.L301-.L300
	.byte	3,9,1,5,3,9
	.half	.L5-.L301
	.byte	3,119,1,7,9
	.half	.L73-.L5
	.byte	0,1,1
.L297:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L72:
	.word	-1,.L26,0,.L73-.L26,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L27:
	.word	-1,.L28,0,.L68-.L28
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L73-.L26
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L155-.L32
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_loc'
.L178:
	.word	0,0
.L183:
	.word	0,0
.L164:
	.word	0,0
.L185:
	.word	0,0
.L175:
	.word	0,0
.L190:
	.word	0,0
.L176:
	.word	0,0
.L191:
	.word	0,0
.L33:
	.word	-1,.L34,0,.L156-.L34
	.half	2
	.byte	138,0
	.word	0,0
.L193:
	.word	0,0
.L168:
	.word	-1,.L34,.L204-.L34,.L205-.L34
	.half	1
	.byte	95
	.word	0,0
.L170:
	.word	0,0
.L172:
	.word	0,0
.L188:
	.word	0,0
.L184:
	.word	0,0
.L196:
	.word	0,0
.L182:
	.word	0,0
.L192:
	.word	0,0
.L177:
	.word	0,0
.L195:
	.word	-1,.L34,.L201-.L34,.L200-.L34
	.half	1
	.byte	95
	.word	.L202-.L34,.L9-.L34
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L157:
	.word	0,0
.L194:
	.word	-1,.L34,.L200-.L34,.L7-.L34
	.half	1
	.byte	95
	.word	.L207-.L34,.L9-.L34
	.half	1
	.byte	95
	.word	.L10-.L34,.L68-.L34
	.half	1
	.byte	95
	.word	.L206-.L34,.L208-.L34
	.half	1
	.byte	95
	.word	0,0
.L179:
	.word	-1,.L34,.L198-.L34,.L73-.L34
	.half	1
	.byte	95
	.word	.L174-.L34,.L206-.L34
	.half	1
	.byte	95
	.word	.L28-.L34,.L200-.L34
	.half	1
	.byte	95
	.word	.L7-.L34,.L207-.L34
	.half	1
	.byte	95
	.word	.L9-.L34,.L68-.L34
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L154-.L30
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_loc'
.L114:
	.word	0,0
.L125:
	.word	0,0
.L131:
	.word	0,0
.L108:
	.word	0,0
.L138:
	.word	0,0
.L110:
	.word	0,0
.L140:
	.word	0,0
.L23:
	.word	-1,.L24,0,.L77-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L144:
	.word	0,0
.L97:
	.word	0,0
.L102:
	.word	0,0
.L79:
	.word	-1,.L24,.L26-.L24,.L73-.L24
	.half	1
	.byte	100
	.word	.L28-.L24,.L68-.L24
	.half	1
	.byte	100
	.word	0,.L77-.L24
	.half	1
	.byte	100
	.word	0,0
.L84:
	.word	0,0
.L92:
	.word	0,0
.L129:
	.word	0,0
.L152:
	.word	0,0
.L123:
	.word	0,0
.L142:
	.word	0,0
.L112:
	.word	0,0
.L149:
	.word	-1,.L24,.L201-.L24,.L7-.L24
	.half	1
	.byte	95
	.word	.L202-.L24,.L9-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L148:
	.word	-1,.L24,.L10-.L24,.L68-.L24
	.half	1
	.byte	95
	.word	.L199-.L24,.L203-.L24
	.half	1
	.byte	95
	.word	0,0
.L116:
	.word	-1,.L24,.L198-.L24,.L73-.L24
	.half	1
	.byte	95
	.word	.L106-.L24,.L199-.L24
	.half	1
	.byte	95
	.word	.L28-.L24,.L200-.L24
	.half	1
	.byte	95
	.word	.L7-.L24,.L68-.L24
	.half	1
	.byte	95
	.word	0,0
.L87:
	.word	-1,.L24,.L82-.L24,.L197-.L24
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_loc'
.L21:
	.word	-1,.L22,0,.L74-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L76:
	.word	-1,.L22,0,.L74-.L22
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L302:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_TimerSwIncrement')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L22,.L74-.L22
	.sdecl	'.debug_frame',debug,cluster('Os_TimerPfrtStart')
	.sect	'.debug_frame'
	.word	20
	.word	.L302,.L24,.L77-.L24
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Isr_Os_TimerPitIsr')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L30,.L154-.L30
	.sdecl	'.debug_frame',debug,cluster('Os_Isr_Os_TimerHrtIsr')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L32,.L155-.L32
	.sdecl	'.debug_frame',debug,cluster('Os_Isr_Os_TimerPfrtIsr')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L34,.L156-.L34
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L303:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L303,.L26,.L73-.L26
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L303,.L28,.L68-.L28
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\Os\Implementation\Os_Timer.c	   536  
; ..\component\Os\Implementation\Os_Timer.c	   537  
; ..\component\Os\Implementation\Os_Timer.c	   538  #define OS_STOP_SEC_CODE
; ..\component\Os\Implementation\Os_Timer.c	   539  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Timer.c	   540  
; ..\component\Os\Implementation\Os_Timer.c	   541  
; ..\component\Os\Implementation\Os_Timer.c	   542  /* module specific MISRA deviations:
; ..\component\Os\Implementation\Os_Timer.c	   543   */
; ..\component\Os\Implementation\Os_Timer.c	   544  
; ..\component\Os\Implementation\Os_Timer.c	   545  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\Os\Implementation\Os_Timer.c	   546  
; ..\component\Os\Implementation\Os_Timer.c	   547  \ID SBSW_OS_TIMER_TIMERGETDYN_001
; ..\component\Os\Implementation\Os_Timer.c	   548   \DESCRIPTION    Write access to the dynamic data of a Timer.  The Timer pointer is passed as argument to the
; ..\component\Os\Implementation\Os_Timer.c	   549                   caller function. Precondition ensures that the argument pointer is valid. The compliance of the
; ..\component\Os\Implementation\Os_Timer.c	   550                   precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   551   \COUNTERMEASURE \N [CM_OS_TIMERGETDYN_N]
; ..\component\Os\Implementation\Os_Timer.c	   552  
; ..\component\Os\Implementation\Os_Timer.c	   553  \ID SBSW_OS_TIMER_HAL_TIMERPITINIT_001
; ..\component\Os\Implementation\Os_Timer.c	   554   \DESCRIPTION    Os_Hal_TimerPitInit is called with a HwConfig value derived from a pointer passed as argument to the
; ..\component\Os\Implementation\Os_Timer.c	   555                   caller function. Precondition ensures that the argument pointer is valid. The compliance of the
; ..\component\Os\Implementation\Os_Timer.c	   556                   precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   557   \COUNTERMEASURE \M [CM_OS_TIMERPITHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   558  
; ..\component\Os\Implementation\Os_Timer.c	   559  \ID SBSW_OS_TIMER_HAL_TIMERFRTINIT_001
; ..\component\Os\Implementation\Os_Timer.c	   560   \DESCRIPTION    Os_Hal_TimerFrtInit is called with a HwConfig value derived from a pointer passed as argument to the
; ..\component\Os\Implementation\Os_Timer.c	   561                   caller function. Precondition ensures that the argument pointer is valid. The compliance of the
; ..\component\Os\Implementation\Os_Timer.c	   562                   precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   563   \COUNTERMEASURE \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   564  
; ..\component\Os\Implementation\Os_Timer.c	   565  \ID SBSW_OS_TIMER_HAL_TIMERFRTTRIGGERIRQ_001
; ..\component\Os\Implementation\Os_Timer.c	   566   \DESCRIPTION    Os_Hal_TimerFrtTriggerIrq is called with a HwConfig value derived from a pointer passed as
; ..\component\Os\Implementation\Os_Timer.c	   567                   argument to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Timer.c	   568                   compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   569   \COUNTERMEASURE \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   570  
; ..\component\Os\Implementation\Os_Timer.c	   571  \ID SBSW_OS_TIMER_TIMERFRTSETCOMPAREVALUE_001
; ..\component\Os\Implementation\Os_Timer.c	   572   \DESCRIPTION    Os_TimerFrtSetCompareValue is called with a HwConfig value derived from a pointer passed as
; ..\component\Os\Implementation\Os_Timer.c	   573                   argument to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Timer.c	   574                   compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   575   \COUNTERMEASURE \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   576  
; ..\component\Os\Implementation\Os_Timer.c	   577  \ID SBSW_OS_TIMER_HAL_TIMERFRTACKNOWLEDGE_001
; ..\component\Os\Implementation\Os_Timer.c	   578   \DESCRIPTION    Os_Hal_TimerFrtAcknowledge is called with a HwConfig value derived from a pointer passed as
; ..\component\Os\Implementation\Os_Timer.c	   579                   argument to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Timer.c	   580                   compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   581   \COUNTERMEASURE \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   582  
; ..\component\Os\Implementation\Os_Timer.c	   583  \ID SBSW_OS_TIMER_HAL_TIMERFRTGETCOUNTERVALUE_001
; ..\component\Os\Implementation\Os_Timer.c	   584   \DESCRIPTION    Os_Hal_TimerFrtGetCounterValue is called with a HwConfig value derived from a pointer passed as
; ..\component\Os\Implementation\Os_Timer.c	   585                   argument to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Timer.c	   586                   compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   587   \COUNTERMEASURE \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   588  
; ..\component\Os\Implementation\Os_Timer.c	   589  \ID SBSW_OS_TIMER_HAL_TIMERPITACKANDRELOAD_001
; ..\component\Os\Implementation\Os_Timer.c	   590   \DESCRIPTION    Os_Hal_TimerPitAckAndReload is called with a HwConfig value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   591                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   592   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   593                   \M [CM_OS_TIMERPITHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   594  
; ..\component\Os\Implementation\Os_Timer.c	   595  \ID SBSW_OS_TIMER_HAL_TIMERFRTACKANDRELOAD_001
; ..\component\Os\Implementation\Os_Timer.c	   596   \DESCRIPTION    Os_Hal_TimerFrtAcknowledge is called with a HwConfig value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   597                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   598   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   599                   \M [CM_OS_TIMERHRTHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   600  
; ..\component\Os\Implementation\Os_Timer.c	   601  \ID SBSW_OS_TIMER_TIMERSWINCREMENT_001
; ..\component\Os\Implementation\Os_Timer.c	   602   \DESCRIPTION    Os_TimerSwIncrement is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   603                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   604   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   605  
; ..\component\Os\Implementation\Os_Timer.c	   606  \ID SBSW_OS_TIMER_COUNTERWORKJOBS_001
; ..\component\Os\Implementation\Os_Timer.c	   607   \DESCRIPTION    Os_CounterWorkJobs is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   608                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   609   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   610  
; ..\component\Os\Implementation\Os_Timer.c	   611  \ID SBSW_OS_TIMER_HAL_TIMERPITISPENDING_001
; ..\component\Os\Implementation\Os_Timer.c	   612   \DESCRIPTION    Os_Hal_TimerPitIsPending is called with a HwConfig value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   613                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   614   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   615                   \M [CM_OS_TIMERPITHWCONFIG_M]
; ..\component\Os\Implementation\Os_Timer.c	   616  
; ..\component\Os\Implementation\Os_Timer.c	   617  \ID SBSW_OS_TIMER_TIMERISLOGICALCOMPAREVALUEREACHED
; ..\component\Os\Implementation\Os_Timer.c	   618   \DESCRIPTION    Os_TimerHrtIsLogicalCompareValueReached is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   619                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   620   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   621  
; ..\component\Os\Implementation\Os_Timer.c	   622  \ID SBSW_OS_TIMER_TIMERHRTSETCOMPAREVALUE
; ..\component\Os\Implementation\Os_Timer.c	   623   \DESCRIPTION    Os_TimerSetCompareValue is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Timer.c	   624                   Os_TimerThread2CounterIsr.
; ..\component\Os\Implementation\Os_Timer.c	   625   \COUNTERMEASURE \R [CM_OS_TIMERTHREAD2COUNTERISR_R]
; ..\component\Os\Implementation\Os_Timer.c	   626  
; ..\component\Os\Implementation\Os_Timer.c	   627  \ID SBSW_OS_TIMER_TIMERTHREAD2COUNTERISR_001
; ..\component\Os\Implementation\Os_Timer.c	   628   \DESCRIPTION    Os_TimerThread2CounterIsr is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Timer.c	   629   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Timer.c	   630  
; ..\component\Os\Implementation\Os_Timer.c	   631  SBSW_JUSTIFICATION_END */
; ..\component\Os\Implementation\Os_Timer.c	   632  
; ..\component\Os\Implementation\Os_Timer.c	   633  /*
; ..\component\Os\Implementation\Os_Timer.c	   634  \CM CM_OS_TIMERTHREAD2COUNTERISR_R
; ..\component\Os\Implementation\Os_Timer.c	   635        Ensured by implementation the the returned value is valid.
; ..\component\Os\Implementation\Os_Timer.c	   636  
; ..\component\Os\Implementation\Os_Timer.c	   637  \CM CM_OS_TIMERHRTGETCOUNTER_N
; ..\component\Os\Implementation\Os_Timer.c	   638        Precondition ensures that the pointer is valid. The compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Timer.c	   639  
; ..\component\Os\Implementation\Os_Timer.c	   640  \CM CM_OS_TIMERPITHWCONFIG_M
; ..\component\Os\Implementation\Os_Timer.c	   641        Verify that the HwConfig reference in each PIT instance is a non NULL_PTR.
; ..\component\Os\Implementation\Os_Timer.c	   642  
; ..\component\Os\Implementation\Os_Timer.c	   643  \CM CM_OS_TIMERHRTHWCONFIG_M
; ..\component\Os\Implementation\Os_Timer.c	   644        Verify that the HwConfig reference in each HRT instance is a non NULL_PTR.
; ..\component\Os\Implementation\Os_Timer.c	   645  
; ..\component\Os\Implementation\Os_Timer.c	   646  \CM CM_OS_TIMERGETDYN_N
; ..\component\Os\Implementation\Os_Timer.c	   647        As each object of an abstract class is always part of a concrete class, the concrete class
; ..\component\Os\Implementation\Os_Timer.c	   648        guarantees, that the Dyn pointer is valid.
; ..\component\Os\Implementation\Os_Timer.c	   649  
; ..\component\Os\Implementation\Os_Timer.c	   650   */
; ..\component\Os\Implementation\Os_Timer.c	   651  /*!
; ..\component\Os\Implementation\Os_Timer.c	   652   * \}
; ..\component\Os\Implementation\Os_Timer.c	   653   */
; ..\component\Os\Implementation\Os_Timer.c	   654  
; ..\component\Os\Implementation\Os_Timer.c	   655  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Timer.c	   656   *  END OF FILE: Os_Timer.c
; ..\component\Os\Implementation\Os_Timer.c	   657   *********************************************************************************************************************/

	; Module end
