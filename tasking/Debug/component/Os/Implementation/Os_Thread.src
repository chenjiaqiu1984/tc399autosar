	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Os\\Implementation\\.Os_Thread.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Os\\Implementation\\Os_Thread.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Os\\Implementation\\Os_Thread.src ..\\component\\Os\\Implementation\\Os_Thread.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Os\\Implementation\\Os_Thread.c'

	
$TC162
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_ThreadSuicide')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_ThreadSuicide

; ..\component\Os\Implementation\Os_Thread.c	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.c	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.c	     6   *
; ..\component\Os\Implementation\Os_Thread.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.c	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.c	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.c	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.c	    14  /**
; ..\component\Os\Implementation\Os_Thread.c	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.c	    16   * \{
; ..\component\Os\Implementation\Os_Thread.c	    17   *
; ..\component\Os\Implementation\Os_Thread.c	    18   * \file
; ..\component\Os\Implementation\Os_Thread.c	    19   * \brief       Provides thread related function implementations.
; ..\component\Os\Implementation\Os_Thread.c	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.c	    21   *
; ..\component\Os\Implementation\Os_Thread.c	    22   *
; ..\component\Os\Implementation\Os_Thread.c	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.c	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.c	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.c	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    29  
; ..\component\Os\Implementation\Os_Thread.c	    30                                                                                                                          /* PRQA S 0777, 0779, 0828  EOF */ /* MD_MSR_Rule5.1, MD_MSR_Rule5.2, MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.c	    31  
; ..\component\Os\Implementation\Os_Thread.c	    32  
; ..\component\Os\Implementation\Os_Thread.c	    33  #define OS_THREAD_SOURCE
; ..\component\Os\Implementation\Os_Thread.c	    34  
; ..\component\Os\Implementation\Os_Thread.c	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.c	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.c	    39  #include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.c	    40  
; ..\component\Os\Implementation\Os_Thread.c	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.c	    42  #include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Thread.c	    43  
; ..\component\Os\Implementation\Os_Thread.c	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Thread.c	    45  #include "Os_Task.h"
; ..\component\Os\Implementation\Os_Thread.c	    46  #include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Thread.c	    47  #include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Thread.c	    48  #include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.c	    49  
; ..\component\Os\Implementation\Os_Thread.c	    50  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Thread.c	    51  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.c	    52  
; ..\component\Os\Implementation\Os_Thread.c	    53  
; ..\component\Os\Implementation\Os_Thread.c	    54  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    55   *  LOCAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.c	    56   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    57  
; ..\component\Os\Implementation\Os_Thread.c	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    59   *  LOCAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.c	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    61  
; ..\component\Os\Implementation\Os_Thread.c	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    63   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.c	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    65  
; ..\component\Os\Implementation\Os_Thread.c	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    67   *  LOCAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.c	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    69  
; ..\component\Os\Implementation\Os_Thread.c	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    71   *  GLOBAL DATA
; ..\component\Os\Implementation\Os_Thread.c	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    73  
; ..\component\Os\Implementation\Os_Thread.c	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    75   *  LOCAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.c	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    77  #define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.c	    78  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.c	    79  
; ..\component\Os\Implementation\Os_Thread.c	    80  
; ..\component\Os\Implementation\Os_Thread.c	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    82   *  LOCAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.c	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    84  
; ..\component\Os\Implementation\Os_Thread.c	    85  
; ..\component\Os\Implementation\Os_Thread.c	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    87   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.c	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    89  
; ..\component\Os\Implementation\Os_Thread.c	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	    91   *  Os_ThreadSuicide()
; ..\component\Os\Implementation\Os_Thread.c	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.c	    93  OS_FUNC_ATTRIBUTE_DEFINITION(void, OS_CODE, OS_NORETURN, Os_ThreadSuicide, (void))
; Function Os_ThreadSuicide
.L14:
Os_ThreadSuicide:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L211:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L36:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
	ld.hu	d0,[a15]48
.L33:

; ..\component\Os\Implementation\Os_Thread.c	    94  {
; ..\component\Os\Implementation\Os_Thread.c	    95    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.c	    96  
; ..\component\Os\Implementation\Os_Thread.c	    97    switch(Os_ThreadGetInitialType(currentThread))                                                                        /* SBSW_OS_TRD_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Thread.c	    98    {
; ..\component\Os\Implementation\Os_Thread.c	    99      case OS_CALLCONTEXT_TASK:
	jeq	d0,#1,.L2
.L277:

; ..\component\Os\Implementation\Os_Thread.c	   100          Os_TaskSuicide(); /* function never returns! */
; ..\component\Os\Implementation\Os_Thread.c	   101          break;                                                                                                          /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.c	   102  
; ..\component\Os\Implementation\Os_Thread.c	   103      case OS_CALLCONTEXT_ISR2:
	jeq	d0,#2,.L3
.L278:

; ..\component\Os\Implementation\Os_Thread.c	   104          Os_IsrSuicide(); /* function never returns! */
; ..\component\Os\Implementation\Os_Thread.c	   105          break;
; ..\component\Os\Implementation\Os_Thread.c	   106  
; ..\component\Os\Implementation\Os_Thread.c	   107      case OS_CALLCONTEXT_ERRORHOOK:
	jeq	d0,#4,.L4
.L279:

; ..\component\Os\Implementation\Os_Thread.c	   108      case OS_CALLCONTEXT_STARTUPHOOK:
	mov	d15,#32
.L212:
	jeq	d15,d0,.L5
.L280:

; ..\component\Os\Implementation\Os_Thread.c	   109      case OS_CALLCONTEXT_IOCCALLBACK:
	mov	d15,#2048
	jeq	d15,d0,.L6
	j	.L7
.L2:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L213:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L46:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a15]20
.L281:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a15]28
.L49:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   354  }
; ..\component\Os\Implementation\Os_Task.h	   355  
; ..\component\Os\Implementation\Os_Task.h	   356  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   357   *  Os_TaskIsSuspended
; ..\component\Os\Implementation\Os_Task.h	   358   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   359  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   360  Os_TaskIsSuspended,
; ..\component\Os\Implementation\Os_Task.h	   361  (
; ..\component\Os\Implementation\Os_Task.h	   362    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   363  ))
; ..\component\Os\Implementation\Os_Task.h	   364  {
; ..\component\Os\Implementation\Os_Task.h	   365    return ((Os_StdReturnType)(Os_TaskGetDyn(Task)->State == SUSPENDED));                                                 /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   366  }
; ..\component\Os\Implementation\Os_Task.h	   367  
; ..\component\Os\Implementation\Os_Task.h	   368  
; ..\component\Os\Implementation\Os_Task.h	   369  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   370   *  Os_TaskSwitch()
; ..\component\Os\Implementation\Os_Task.h	   371   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   372  /*!
; ..\component\Os\Implementation\Os_Task.h	   373   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   374   *
; ..\component\Os\Implementation\Os_Task.h	   375   *
; ..\component\Os\Implementation\Os_Task.h	   376   *
; ..\component\Os\Implementation\Os_Task.h	   377   *
; ..\component\Os\Implementation\Os_Task.h	   378   *
; ..\component\Os\Implementation\Os_Task.h	   379   */
; ..\component\Os\Implementation\Os_Task.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   381  Os_TaskSwitch,
; ..\component\Os\Implementation\Os_Task.h	   382  (
; ..\component\Os\Implementation\Os_Task.h	   383    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler,
; ..\component\Os\Implementation\Os_Task.h	   384    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CallerThread
; ..\component\Os\Implementation\Os_Task.h	   385  ))
; ..\component\Os\Implementation\Os_Task.h	   386  {
; ..\component\Os\Implementation\Os_Task.h	   387    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   388    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   389  
; ..\component\Os\Implementation\Os_Task.h	   390    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   391    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   392  
; ..\component\Os\Implementation\Os_Task.h	   393    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   394    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   395    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
; ..\component\Os\Implementation\Os_Task.h	   396  
; ..\component\Os\Implementation\Os_Task.h	   397    /* #30 Inform trace module. */
; ..\component\Os\Implementation\Os_Task.h	   398    Os_TraceThreadSwitch(Os_TaskGetDyn(Os_TaskThread2Task(CallerThread))->State,  Os_ThreadGetTrace(CallerThread),        /* SBSW_OS_TASK_TRACETHREADSWITCH_001 */ /* SBSW_OS_TASK_TASKGETDYN_003 */ /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   399                         Os_ThreadGetTrace(nextThread));                                                                  /* SBSW_OS_TASK_THREADGETTRACE_001 */
; ..\component\Os\Implementation\Os_Task.h	   400  
; ..\component\Os\Implementation\Os_Task.h	   401    /* #40 Perform thread switch. */
; ..\component\Os\Implementation\Os_Task.h	   402    Os_ThreadSwitch(CallerThread, nextThread, TRUE);                                                                      /* SBSW_OS_TASK_THREADSWITCH_001 */
; ..\component\Os\Implementation\Os_Task.h	   403  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Task.h	   404  
; ..\component\Os\Implementation\Os_Task.h	   405  
; ..\component\Os\Implementation\Os_Task.h	   406  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   407   *  Os_TaskResume()
; ..\component\Os\Implementation\Os_Task.h	   408   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   409  /*!
; ..\component\Os\Implementation\Os_Task.h	   410   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   411   *
; ..\component\Os\Implementation\Os_Task.h	   412   *
; ..\component\Os\Implementation\Os_Task.h	   413   *
; ..\component\Os\Implementation\Os_Task.h	   414   *
; ..\component\Os\Implementation\Os_Task.h	   415   *
; ..\component\Os\Implementation\Os_Task.h	   416   */
; ..\component\Os\Implementation\Os_Task.h	   417  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   418  Os_TaskResume,
; ..\component\Os\Implementation\Os_Task.h	   419  (
; ..\component\Os\Implementation\Os_Task.h	   420    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Task.h	   421  ))
; ..\component\Os\Implementation\Os_Task.h	   422  {
; ..\component\Os\Implementation\Os_Task.h	   423    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   424    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   425  
; ..\component\Os\Implementation\Os_Task.h	   426    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   427    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   428  
; ..\component\Os\Implementation\Os_Task.h	   429    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   430    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   431    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
; ..\component\Os\Implementation\Os_Task.h	   432  
; ..\component\Os\Implementation\Os_Task.h	   433    /* #30 Inform trace module. */
; ..\component\Os\Implementation\Os_Task.h	   434    Os_TraceThreadResetAndResume(Os_ThreadGetTrace(Os_CoreGetThread()), Os_ThreadGetTrace(nextThread));                   /* SBSW_OS_TASK_TRACETHREADRESETANDRESUME_001 */ /* SBSW_OS_TASK_THREADGETTRACE_002 */ /* SBSW_OS_TASK_THREADGETTRACE_001 */
; ..\component\Os\Implementation\Os_Task.h	   435  
; ..\component\Os\Implementation\Os_Task.h	   436    /* #40 Reset the current thread and resume the new one. */
; ..\component\Os\Implementation\Os_Task.h	   437    Os_ThreadResetAndResume(nextThread, TRUE);                                                                            /* SBSW_OS_TASK_THREADRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Task.h	   438  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Task.h	   439  
; ..\component\Os\Implementation\Os_Task.h	   440  
; ..\component\Os\Implementation\Os_Task.h	   441  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   442   *  Os_TaskSuicide()
; ..\component\Os\Implementation\Os_Task.h	   443   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   444  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   445  OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE, Os_TaskSuicide, (void))
; ..\component\Os\Implementation\Os_Task.h	   446  {
; ..\component\Os\Implementation\Os_Task.h	   447    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) currentTask;
; ..\component\Os\Implementation\Os_Task.h	   448  
; ..\component\Os\Implementation\Os_Task.h	   449    currentTask = Os_TaskThread2Task(Os_CoreGetThread());                                                                 /* SBSW_OS_TASK_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Task.h	   450  
; ..\component\Os\Implementation\Os_Task.h	   451    Os_TaskResume(Os_TaskGetScheduler(currentTask));                                                                      /* SBSW_OS_TASK_TASKRESUME_001 */ /* SBSW_OS_TASK_TASKGETSCHEDULER_001 */
	call	Os_SchedulerInternalSchedule
.L214:
	mov.aa	a12,a2
.L59:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L60:
	mov.d  d15, a8
.L216:
	mov.a	a13,d15
.L72:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
	ld.a	a2,[a13]12
.L68:
	lea	a4,[a2]16
	call	Os_ServiceCallForceRelease
.L75:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   281  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   282  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   284   *  Os_Hal_CoreGetId()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CorePhysicalIdType, OS_CODE,                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   287  OS_ALWAYS_INLINE, Os_Hal_CoreGetId,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   288  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   289    void
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   290  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   291  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   292    return (Os_CorePhysicalIdType)Os_Hal_Mfcr(OS_HAL_CORE_ID_REGISTER);
	mfcr	d15,#65052
.L85:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
	movh.a	a2,#@his(OsCfg_CorePhysicalRefs)
	lea	a2,[a2]@los(OsCfg_CorePhysicalRefs)
.L282:
	addsc.a	a15,a2,d15,#2
	ld.a	a15,[a15]
.L82:
	ld.a	a15,[a15]24
.L283:

; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
; ..\component\Os\Implementation\Os_Core.h	   775    }
; ..\component\Os\Implementation\Os_Core.h	   776  }
; ..\component\Os\Implementation\Os_Core.h	   777  
; ..\component\Os\Implementation\Os_Core.h	   778  
; ..\component\Os\Implementation\Os_Core.h	   779  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   780   *  Os_CoreGetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   781   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   782  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   783  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   784  OS_ALWAYS_INLINE, Os_CoreGetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   785  (
; ..\component\Os\Implementation\Os_Core.h	   786    void
; ..\component\Os\Implementation\Os_Core.h	   787  ))
; ..\component\Os\Implementation\Os_Core.h	   788  {
; ..\component\Os\Implementation\Os_Core.h	   789    if(Os_StackIsMonitoringEnabled() == 0u)                                                                               /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   790    {
; ..\component\Os\Implementation\Os_Core.h	   791      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   792    }
; ..\component\Os\Implementation\Os_Core.h	   793    return Os_CoreAsrGetDyn(Os_Core2AsrCore(Os_CoreGetCurrentCore()))->CurrentStack;                                      /* SBSW_OS_CORE_CORE2ASRCORE_002 */ /* SBSW_OS_CORE_COREASRGETDYN_002 */
	ld.a	a15,[a15]120
.L79:

; ..\component\Os\Implementation\Os_Stack.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Stack.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Stack.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Stack.h	     6   *
; ..\component\Os\Implementation\Os_Stack.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Stack.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Stack.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Stack.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Stack.h	    14  /**
; ..\component\Os\Implementation\Os_Stack.h	    15   * \addtogroup Os_Stack
; ..\component\Os\Implementation\Os_Stack.h	    16   * \{
; ..\component\Os\Implementation\Os_Stack.h	    17   *
; ..\component\Os\Implementation\Os_Stack.h	    18   * \file
; ..\component\Os\Implementation\Os_Stack.h	    19   * \brief       External interface to \ref Os_Stack.
; ..\component\Os\Implementation\Os_Stack.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Stack.h	    21   *
; ..\component\Os\Implementation\Os_Stack.h	    22   *
; ..\component\Os\Implementation\Os_Stack.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Stack.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Stack.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    29  
; ..\component\Os\Implementation\Os_Stack.h	    30  #ifndef OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    31  # define OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Stack.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Stack.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Stack.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Stack.h	    38  
; ..\component\Os\Implementation\Os_Stack.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Stack.h	    40  # include "Os_Stack_Cfg.h"
; ..\component\Os\Implementation\Os_Stack.h	    41  # include "Os_StackInt.h"
; ..\component\Os\Implementation\Os_Stack.h	    42  
; ..\component\Os\Implementation\Os_Stack.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    44  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Stack.h	    45  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Stack.h	    46  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    47  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Stack.h	    48  
; ..\component\Os\Implementation\Os_Stack.h	    49  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    50  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    51  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Stack.h	    52  
; ..\component\Os\Implementation\Os_Stack.h	    53  
; ..\component\Os\Implementation\Os_Stack.h	    54  
; ..\component\Os\Implementation\Os_Stack.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    56   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Stack.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    58  
; ..\component\Os\Implementation\Os_Stack.h	    59  
; ..\component\Os\Implementation\Os_Stack.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    61   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Stack.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    63  
; ..\component\Os\Implementation\Os_Stack.h	    64  
; ..\component\Os\Implementation\Os_Stack.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    68  
; ..\component\Os\Implementation\Os_Stack.h	    69  
; ..\component\Os\Implementation\Os_Stack.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    73  
; ..\component\Os\Implementation\Os_Stack.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Stack.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Stack.h	    76  
; ..\component\Os\Implementation\Os_Stack.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Stack.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    81   *  Os_StackIsModuleEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    83  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    84  OS_ALWAYS_INLINE, Os_StackIsModuleEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    85  {
; ..\component\Os\Implementation\Os_Stack.h	    86    return (Os_StdReturnType)(OS_CFG_STACKMODULE == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    87  }
; ..\component\Os\Implementation\Os_Stack.h	    88  
; ..\component\Os\Implementation\Os_Stack.h	    89  
; ..\component\Os\Implementation\Os_Stack.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    91   *  Os_StackIsMeasurementEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    94  OS_ALWAYS_INLINE, Os_StackIsMeasurementEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    95  {
; ..\component\Os\Implementation\Os_Stack.h	    96    return (Os_StdReturnType)(OS_CFG_STACKMEASUREMENT == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    97  }
; ..\component\Os\Implementation\Os_Stack.h	    98  
; ..\component\Os\Implementation\Os_Stack.h	    99  
; ..\component\Os\Implementation\Os_Stack.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   101   *  Os_StackIsMonitoringEnabled()
; ..\component\Os\Implementation\Os_Stack.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   104  OS_ALWAYS_INLINE, Os_StackIsMonitoringEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	   105  {
; ..\component\Os\Implementation\Os_Stack.h	   106    return (Os_StdReturnType)(OS_CFG_STACKMONITORING  == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   107  }
; ..\component\Os\Implementation\Os_Stack.h	   108  
; ..\component\Os\Implementation\Os_Stack.h	   109  
; ..\component\Os\Implementation\Os_Stack.h	   110  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   111   *  Os_StackInit()
; ..\component\Os\Implementation\Os_Stack.h	   112   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   113  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   114  Os_StackInit,
; ..\component\Os\Implementation\Os_Stack.h	   115  (
; ..\component\Os\Implementation\Os_Stack.h	   116    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack
; ..\component\Os\Implementation\Os_Stack.h	   117  ))
; ..\component\Os\Implementation\Os_Stack.h	   118  {
; ..\component\Os\Implementation\Os_Stack.h	   119  
; ..\component\Os\Implementation\Os_Stack.h	   120    if(Os_StackIsModuleEnabled() != 0u)                                                                                   /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   121    {
; ..\component\Os\Implementation\Os_Stack.h	   122      FUNC(void, OS_CODE) Os_StackInitInternal                                                                            /* PRQA S 3449, 3451 */ /* MD_Os_Rule8.5_3449, MD_Os_Rule8.5_3451 */
; ..\component\Os\Implementation\Os_Stack.h	   123      (P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack);
; ..\component\Os\Implementation\Os_Stack.h	   124  
; ..\component\Os\Implementation\Os_Stack.h	   125      Os_StackInitInternal(Stack);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Stack.h	   126    }
; ..\component\Os\Implementation\Os_Stack.h	   127  }
; ..\component\Os\Implementation\Os_Stack.h	   128  
; ..\component\Os\Implementation\Os_Stack.h	   129  
; ..\component\Os\Implementation\Os_Stack.h	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   131   *  Os_StackOverflowCheck()
; ..\component\Os\Implementation\Os_Stack.h	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   133  /*!
; ..\component\Os\Implementation\Os_Stack.h	   134   * Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   135   *
; ..\component\Os\Implementation\Os_Stack.h	   136   *
; ..\component\Os\Implementation\Os_Stack.h	   137   */
; ..\component\Os\Implementation\Os_Stack.h	   138  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   139  Os_StackOverflowCheck,( void ))
; ..\component\Os\Implementation\Os_Stack.h	   140  {
; ..\component\Os\Implementation\Os_Stack.h	   141    /* #10 Report protection error if the stack's last element is not equal to the fill pattern. */
; ..\component\Os\Implementation\Os_Stack.h	   142    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   143    {
; ..\component\Os\Implementation\Os_Stack.h	   144      P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) stack;
; ..\component\Os\Implementation\Os_Stack.h	   145      P2VAR(Os_Hal_StackType, AUTOMATIC, OS_VAR_NOINIT) stackEnd;
; ..\component\Os\Implementation\Os_Stack.h	   146  
; ..\component\Os\Implementation\Os_Stack.h	   147      stack = Os_CoreGetCurrentStack();
; ..\component\Os\Implementation\Os_Stack.h	   148      stackEnd = Os_Hal_StackEndGet(stack->LowAddress, stack->HighAddress);                                               /* SBSW_OS_ST_HAL_STACKENDGET_003 */
	ld.a	a15,[a15]
.L284:

; ..\component\Os\Implementation\Os_Stack.h	   149  
; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))
	mov.u	d15,#43690
	addih	d15,d15,#43690
	ld.w	d0,[a15]
.L285:

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
	jeq	d15,d0,.L8
.L286:

; ..\component\Os\Implementation\Os_Stack.h	   151      {
; ..\component\Os\Implementation\Os_Stack.h	   152        /*! Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   153   *
; ..\component\Os\Implementation\Os_Stack.h	   154   *
; ..\component\Os\Implementation\Os_Stack.h	   155   *
; ..\component\Os\Implementation\Os_Stack.h	   156   *
; ..\component\Os\Implementation\Os_Stack.h	   157   *
; ..\component\Os\Implementation\Os_Stack.h	   158   *
; ..\component\Os\Implementation\Os_Stack.h	   159   *
; ..\component\Os\Implementation\Os_Stack.h	   160   *
; ..\component\Os\Implementation\Os_Stack.h	   161   *
; ..\component\Os\Implementation\Os_Stack.h	   162   *
; ..\component\Os\Implementation\Os_Stack.h	   163   *
; ..\component\Os\Implementation\Os_Stack.h	   164   *
; ..\component\Os\Implementation\Os_Stack.h	   165   *
; ..\component\Os\Implementation\Os_Stack.h	   166   *
; ..\component\Os\Implementation\Os_Stack.h	   167   *
; ..\component\Os\Implementation\Os_Stack.h	   168   *
; ..\component\Os\Implementation\Os_Stack.h	   169   *
; ..\component\Os\Implementation\Os_Stack.h	   170         */
; ..\component\Os\Implementation\Os_Stack.h	   171        *stackEnd = OS_HAL_STACK_FILL_PATTERN;                                                                            /* SBSW_OS_ST_HAL_STACKENDGET_002 */
	st.w	[a15],d15
.L287:

; ..\component\Os\Implementation\Os_Stack.h	   172  
; ..\component\Os\Implementation\Os_Stack.h	   173        Os_ErrProtectionError(OS_STATUS_STACKFAULT);
	mov	d4,#13
	call	Os_ErrProtectionError

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
.L8:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mov.u	d8,#32768
.L288:
	mfcr	d15,#65068
.L217:
	and	d15,d8
.L100:
	disable
.L289:
	mfcr	d0,#65028
	or	d0,d0,#256

; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);      (inlined)
	mtcr  #0xFE04, d0
.L290:
	isync
.L291:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   354  }
; ..\component\Os\Implementation\Os_Task.h	   355  
; ..\component\Os\Implementation\Os_Task.h	   356  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   357   *  Os_TaskIsSuspended
; ..\component\Os\Implementation\Os_Task.h	   358   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   359  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   360  Os_TaskIsSuspended,
; ..\component\Os\Implementation\Os_Task.h	   361  (
; ..\component\Os\Implementation\Os_Task.h	   362    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   363  ))
; ..\component\Os\Implementation\Os_Task.h	   364  {
; ..\component\Os\Implementation\Os_Task.h	   365    return ((Os_StdReturnType)(Os_TaskGetDyn(Task)->State == SUSPENDED));                                                 /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   366  }
; ..\component\Os\Implementation\Os_Task.h	   367  
; ..\component\Os\Implementation\Os_Task.h	   368  
; ..\component\Os\Implementation\Os_Task.h	   369  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   370   *  Os_TaskSwitch()
; ..\component\Os\Implementation\Os_Task.h	   371   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   372  /*!
; ..\component\Os\Implementation\Os_Task.h	   373   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   374   *
; ..\component\Os\Implementation\Os_Task.h	   375   *
; ..\component\Os\Implementation\Os_Task.h	   376   *
; ..\component\Os\Implementation\Os_Task.h	   377   *
; ..\component\Os\Implementation\Os_Task.h	   378   *
; ..\component\Os\Implementation\Os_Task.h	   379   */
; ..\component\Os\Implementation\Os_Task.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   381  Os_TaskSwitch,
; ..\component\Os\Implementation\Os_Task.h	   382  (
; ..\component\Os\Implementation\Os_Task.h	   383    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler,
; ..\component\Os\Implementation\Os_Task.h	   384    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CallerThread
; ..\component\Os\Implementation\Os_Task.h	   385  ))
; ..\component\Os\Implementation\Os_Task.h	   386  {
; ..\component\Os\Implementation\Os_Task.h	   387    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   388    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   389  
; ..\component\Os\Implementation\Os_Task.h	   390    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   391    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   392  
; ..\component\Os\Implementation\Os_Task.h	   393    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   394    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   395    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
; ..\component\Os\Implementation\Os_Task.h	   396  
; ..\component\Os\Implementation\Os_Task.h	   397    /* #30 Inform trace module. */
; ..\component\Os\Implementation\Os_Task.h	   398    Os_TraceThreadSwitch(Os_TaskGetDyn(Os_TaskThread2Task(CallerThread))->State,  Os_ThreadGetTrace(CallerThread),        /* SBSW_OS_TASK_TRACETHREADSWITCH_001 */ /* SBSW_OS_TASK_TASKGETDYN_003 */ /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   399                         Os_ThreadGetTrace(nextThread));                                                                  /* SBSW_OS_TASK_THREADGETTRACE_001 */
; ..\component\Os\Implementation\Os_Task.h	   400  
; ..\component\Os\Implementation\Os_Task.h	   401    /* #40 Perform thread switch. */
; ..\component\Os\Implementation\Os_Task.h	   402    Os_ThreadSwitch(CallerThread, nextThread, TRUE);                                                                      /* SBSW_OS_TASK_THREADSWITCH_001 */
; ..\component\Os\Implementation\Os_Task.h	   403  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Task.h	   404  
; ..\component\Os\Implementation\Os_Task.h	   405  
; ..\component\Os\Implementation\Os_Task.h	   406  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   407   *  Os_TaskResume()
; ..\component\Os\Implementation\Os_Task.h	   408   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   409  /*!
; ..\component\Os\Implementation\Os_Task.h	   410   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   411   *
; ..\component\Os\Implementation\Os_Task.h	   412   *
; ..\component\Os\Implementation\Os_Task.h	   413   *
; ..\component\Os\Implementation\Os_Task.h	   414   *
; ..\component\Os\Implementation\Os_Task.h	   415   *
; ..\component\Os\Implementation\Os_Task.h	   416   */
; ..\component\Os\Implementation\Os_Task.h	   417  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   418  Os_TaskResume,
; ..\component\Os\Implementation\Os_Task.h	   419  (
; ..\component\Os\Implementation\Os_Task.h	   420    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Task.h	   421  ))
; ..\component\Os\Implementation\Os_Task.h	   422  {
; ..\component\Os\Implementation\Os_Task.h	   423    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   424    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   425  
; ..\component\Os\Implementation\Os_Task.h	   426    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   427    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   428  
; ..\component\Os\Implementation\Os_Task.h	   429    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   430    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   431    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
	mov.d	d0,a12
.L219:

; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */      (inlined)
	
	mov.a  a8, d0
	
.L105:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L292:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d0,#65068
.L220:
	insert	d0,d0,#0,#15,#1
.L221:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d0,d15
.L222:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L293:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L88:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1074  
; ..\component\Os\Implementation\Os_Thread.h	  1075    /* #70 Perform a hardware context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1076    Os_Hal_ContextSwitch(Current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1077  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1078  
; ..\component\Os\Implementation\Os_Thread.h	  1079  
; ..\component\Os\Implementation\Os_Thread.h	  1080  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1081   *  Os_ThreadSuspendAndStart()
; ..\component\Os\Implementation\Os_Thread.h	  1082   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1083  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1084   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1085   *
; ..\component\Os\Implementation\Os_Thread.h	  1086   *
; ..\component\Os\Implementation\Os_Thread.h	  1087   *
; ..\component\Os\Implementation\Os_Thread.h	  1088   *
; ..\component\Os\Implementation\Os_Thread.h	  1089   *
; ..\component\Os\Implementation\Os_Thread.h	  1090   *
; ..\component\Os\Implementation\Os_Thread.h	  1091   *
; ..\component\Os\Implementation\Os_Thread.h	  1092   *
; ..\component\Os\Implementation\Os_Thread.h	  1093   *
; ..\component\Os\Implementation\Os_Thread.h	  1094   *
; ..\component\Os\Implementation\Os_Thread.h	  1095   *
; ..\component\Os\Implementation\Os_Thread.h	  1096   *
; ..\component\Os\Implementation\Os_Thread.h	  1097   *
; ..\component\Os\Implementation\Os_Thread.h	  1098   */
; ..\component\Os\Implementation\Os_Thread.h	  1099  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1100  Os_ThreadSuspendAndStart,
; ..\component\Os\Implementation\Os_Thread.h	  1101  (
; ..\component\Os\Implementation\Os_Thread.h	  1102    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1103    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1104    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1105  ))
; ..\component\Os\Implementation\Os_Thread.h	  1106  {
; ..\component\Os\Implementation\Os_Thread.h	  1107    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1108  
; ..\component\Os\Implementation\Os_Thread.h	  1109    /* #10 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1110    {
; ..\component\Os\Implementation\Os_Thread.h	  1111      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1112      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1113      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1114      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1115  
; ..\component\Os\Implementation\Os_Thread.h	  1116      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1117      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1118      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1119      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1120      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1121    }
; ..\component\Os\Implementation\Os_Thread.h	  1122  
; ..\component\Os\Implementation\Os_Thread.h	  1123    /* #15 Store FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1124    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1125  
; ..\component\Os\Implementation\Os_Thread.h	  1126    /* #20 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1127    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1128  
; ..\component\Os\Implementation\Os_Thread.h	  1129    /* #25 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1130    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1131  
; ..\component\Os\Implementation\Os_Thread.h	  1132    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1133    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1134  
; ..\component\Os\Implementation\Os_Thread.h	  1135    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1136    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1137  
; ..\component\Os\Implementation\Os_Thread.h	  1138    /* #50 Prepare context of next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1139    Os_Hal_ContextInit(Next->ContextConfig, Next->Context);                                                               /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1140  
; ..\component\Os\Implementation\Os_Thread.h	  1141    /* #60 Setup FPU for next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1142    Os_ThreadInitFpu(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1143  
; ..\component\Os\Implementation\Os_Thread.h	  1144    /* #70 Set parameter for the entry function, currently only used for hooks (hook thread pointer). */
; ..\component\Os\Implementation\Os_Thread.h	  1145    Os_Hal_ContextSetParameter(Next->Context, Next);                                                                      /* PRQA S 0315 */ /* MD_Os_Dir1.1_0315 */ /* SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1146  
; ..\component\Os\Implementation\Os_Thread.h	  1147    /* #80 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1148    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1149  
; ..\component\Os\Implementation\Os_Thread.h	  1150    /* #90 Perform context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1151    Os_Hal_ContextCallOnStack(Current->Context, Next->Context);                                                           /* SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1152  
; ..\component\Os\Implementation\Os_Thread.h	  1153    /* #100 Restore FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1154    Os_ThreadRestoreFpuContext(Current);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1155  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1156  
; ..\component\Os\Implementation\Os_Thread.h	  1157  
; ..\component\Os\Implementation\Os_Thread.h	  1158  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1159   *  Os_ThreadGetAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1160   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1161  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1162  P2CONST(Os_AccessCheckConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1163  Os_ThreadGetAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1164  (
; ..\component\Os\Implementation\Os_Thread.h	  1165    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1166  ))
; ..\component\Os\Implementation\Os_Thread.h	  1167  {
; ..\component\Os\Implementation\Os_Thread.h	  1168    return Thread->AccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1169  }
; ..\component\Os\Implementation\Os_Thread.h	  1170  
; ..\component\Os\Implementation\Os_Thread.h	  1171  
; ..\component\Os\Implementation\Os_Thread.h	  1172  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1173   *  Os_ThreadGetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1174   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1175  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1176  P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1177  Os_ThreadGetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1178  (
; ..\component\Os\Implementation\Os_Thread.h	  1179    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1180  ))
; ..\component\Os\Implementation\Os_Thread.h	  1181  {
; ..\component\Os\Implementation\Os_Thread.h	  1182    return Thread->Dyn->MpAccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1183  }
; ..\component\Os\Implementation\Os_Thread.h	  1184  
; ..\component\Os\Implementation\Os_Thread.h	  1185  
; ..\component\Os\Implementation\Os_Thread.h	  1186  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1187   *  Os_ThreadSetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1188   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1189  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1190  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1191  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1192  (
; ..\component\Os\Implementation\Os_Thread.h	  1193    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1194    P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST) AccessRights
; ..\component\Os\Implementation\Os_Thread.h	  1195  ))
; ..\component\Os\Implementation\Os_Thread.h	  1196  {
; ..\component\Os\Implementation\Os_Thread.h	  1197    Thread->Dyn->MpAccessRights = AccessRights;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1198  }
; ..\component\Os\Implementation\Os_Thread.h	  1199  
; ..\component\Os\Implementation\Os_Thread.h	  1200  
; ..\component\Os\Implementation\Os_Thread.h	  1201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1202   *  Os_ThreadSetInterruptState()
; ..\component\Os\Implementation\Os_Thread.h	  1203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1204  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1205  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1206  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetInterruptState,
; ..\component\Os\Implementation\Os_Thread.h	  1207  (
; ..\component\Os\Implementation\Os_Thread.h	  1208    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1209    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_CONST) InterruptState
; ..\component\Os\Implementation\Os_Thread.h	  1210  ))
; ..\component\Os\Implementation\Os_Thread.h	  1211  {
; ..\component\Os\Implementation\Os_Thread.h	  1212    Os_Hal_ContextSetInterruptState(Thread->Context, InterruptState);                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1213  }
; ..\component\Os\Implementation\Os_Thread.h	  1214  
; ..\component\Os\Implementation\Os_Thread.h	  1215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1216   *  Os_ThreadCallPreThreadHook()
; ..\component\Os\Implementation\Os_Thread.h	  1217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1218  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1220   *
; ..\component\Os\Implementation\Os_Thread.h	  1221   *
; ..\component\Os\Implementation\Os_Thread.h	  1222   */
; ..\component\Os\Implementation\Os_Thread.h	  1223  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1224  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1225  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCallPreThreadHook,
; ..\component\Os\Implementation\Os_Thread.h	  1226  (
; ..\component\Os\Implementation\Os_Thread.h	  1227    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1228    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1229  ))
; ..\component\Os\Implementation\Os_Thread.h	  1230  {
; ..\component\Os\Implementation\Os_Thread.h	  1231    /* #10 Call the PreThreadHook if requested and configured. */
; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))
	ld.a	a15,[a12]52
.L294:

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
	jz.a	a15,.L9
.L295:

; ..\component\Os\Implementation\Os_Thread.h	  1233    {
; ..\component\Os\Implementation\Os_Thread.h	  1234      Thread->PreThreadHook();                                                                                            /* SBSW_OS_TRD_PRETHREAD_CALLBACK_001 */
	calli	a15

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
.L9:
	ld.a	a15,[a12]20
.L296:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
	ld.a	a15,[a15]24
.L297:
	ld.a	a2,[a12]8
.L298:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
	st.a	[a15]120,a2
.L117:
	ld.a	a15,[a12]4
.L124:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
	ld.w	d15,[a15]4
.L218:
	movh	d1,#15
	and	d0,d15,d1
	sh	d0,d0,#12
	insert	d15,d15,#0,#16,#16
	sh	d15,#6
.L223:
	or	d0,d15
.L225:

; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	add	d0,#4
.L224:
	mov.a	a15,d0
.L227:

; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
	ld.w	d15,[a15]
.L299:
	insert	d15,d15,#0,#16,#16
.L300:

; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
	mfcr	d0,#65028
.L226:
	insert	d0,d0,#0,#0,#16
.L301:
	or	d15,d0
	st.w	[a15],d15
.L70:
	ld.a	a15,[a13]
.L228:
	ld.a	a5,[a13]4
.L71:
	ld.a	a6,[a12]4
.L132:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
	mfcr	d0,#65024
.L302:
	ld.w	d15,[a5]12
.L303:

; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)      (inlined)
	jne	d15,d0,.L10
.L304:

; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
	disable
.L142:

; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   541  
; ..\component\Os\Implementation\Os_Hal_Context.h	   542    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   543    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   544  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   545  
; ..\component\Os\Implementation\Os_Hal_Context.h	   546  
; ..\component\Os\Implementation\Os_Hal_Context.h	   547  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   548  *  Os_Hal_ContextIntPrepareCSAContent()
; ..\component\Os\Implementation\Os_Hal_Context.h	   549  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   550  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   551   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   552   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   553   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   554   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   555   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   556   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   557   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   558   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   559   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   561   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   562  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   563  Os_Hal_ContextIntPrepareCSAContent,
; ..\component\Os\Implementation\Os_Hal_Context.h	   564  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   565    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   566    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   567  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   568  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   569    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   570    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   571  
; ..\component\Os\Implementation\Os_Hal_Context.h	   572    /* #10 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   573    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
	mfcr	d2,#65024
.L229:

; ..\component\Os\Implementation\Os_Hal_Context.h	   574    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
	fcall	.cocofun_1
.L215:

; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);      (inlined)
	mtcr  #0xFE00, d0
.L233:

; ..\component\Os\Implementation\Os_Hal_Context.h	   575  
; ..\component\Os\Implementation\Os_Hal_Context.h	   576    /* #20 Initialize the program status word with call depth 1 due to the reserved CSA frame */
; ..\component\Os\Implementation\Os_Hal_Context.h	   577    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus | OS_HAL_PSW_CDC_1;                       /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   578  
; ..\component\Os\Implementation\Os_Hal_Context.h	   579    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   580    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   581  
; ..\component\Os\Implementation\Os_Hal_Context.h	   582    /* #30 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   583    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   584  
; ..\component\Os\Implementation\Os_Hal_Context.h	   585    /* #40 Initialize the return address */
; ..\component\Os\Implementation\Os_Hal_Context.h	   586    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = CurrentConfig->ReturnAddress;                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   587  
; ..\component\Os\Implementation\Os_Hal_Context.h	   588    /* #50 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   589    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   590    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   592    Os_Hal_Isync();
	isync
.L305:

; ..\component\Os\Implementation\Os_Hal_Context.h	   593  
; ..\component\Os\Implementation\Os_Hal_Context.h	   594    /* #60 Initialize the MPU stack settings */
; ..\component\Os\Implementation\Os_Hal_Context.h	   595    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   596    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   597      Context->MpuRegionForStackLow = CurrentConfig->StackStartAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   598      Context->MpuRegionForStackUpper = CurrentConfig->StackEndAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   599    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   600  
; ..\component\Os\Implementation\Os_Hal_Context.h	   601    /* #70 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   602    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65024
.L306:
	st.w	[a5]4,d15
.L307:

; ..\component\Os\Implementation\Os_Hal_Context.h	   603    Context->RunningPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                               /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65024
.L308:
	st.w	[a5]12,d15
.L309:

; ..\component\Os\Implementation\Os_Hal_Context.h	   604    Context->Lr = CurrentConfig->Entry;                                                                                   /* SBSW_OS_HAL_PWA_CALLER */                                                                   /* SBSW_OS_HAL_FC_LOCAL_VAR */
	ld.w	d15,[a15]16
.L310:
	st.w	[a5],d15
.L143:

; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();      (inlined)
	j	.L11

; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)      (inlined)
.L10:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L250:
	and	d8,d15
.L154:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
	disable
.L311:

; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
	svlcx
.L312:

; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
	dsync
.L313:

; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
	mfcr	d0,#65024
.L234:

; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
	ld.w	d15,[a5]8
	and	d2,d15,d1
	sh	d2,d2,#12
	insert	d15,d15,#0,#16,#16
	sh	d15,#6
.L236:
	or	d2,d15
.L314:

; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a2,d2
.L238:
	ld.w	d15,[a2]

; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */      (inlined)
	mtcr  #0xFE00, d15
.L315:

; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
	mov.a	a2,d2
.L316:
	mfcr	d15,#65080
.L317:
	st.w	[a2],d15
.L318:

; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);      (inlined)
	mtcr  #0xFE38, d0
.L319:

; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
	isync
.L164:
	disable
.L320:
	mfcr	d15,#65068
.L321:
	insert	d15,d15,#0,#15,#1
.L240:
	or	d15,d8
.L241:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L322:
	isync
.L156:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   541  
; ..\component\Os\Implementation\Os_Hal_Context.h	   542    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   543    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   544  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   545  
; ..\component\Os\Implementation\Os_Hal_Context.h	   546  
; ..\component\Os\Implementation\Os_Hal_Context.h	   547  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   548  *  Os_Hal_ContextIntPrepareCSAContent()
; ..\component\Os\Implementation\Os_Hal_Context.h	   549  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   550  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   551   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   552   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   553   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   554   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   555   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   556   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   557   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   558   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   559   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   561   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   562  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   563  Os_Hal_ContextIntPrepareCSAContent,
; ..\component\Os\Implementation\Os_Hal_Context.h	   564  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   565    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   566    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   567  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   568  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   569    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   570    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   571  
; ..\component\Os\Implementation\Os_Hal_Context.h	   572    /* #10 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   573    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   574    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   575  
; ..\component\Os\Implementation\Os_Hal_Context.h	   576    /* #20 Initialize the program status word with call depth 1 due to the reserved CSA frame */
; ..\component\Os\Implementation\Os_Hal_Context.h	   577    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus | OS_HAL_PSW_CDC_1;                       /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   578  
; ..\component\Os\Implementation\Os_Hal_Context.h	   579    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   580    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   581  
; ..\component\Os\Implementation\Os_Hal_Context.h	   582    /* #30 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   583    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   584  
; ..\component\Os\Implementation\Os_Hal_Context.h	   585    /* #40 Initialize the return address */
; ..\component\Os\Implementation\Os_Hal_Context.h	   586    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = CurrentConfig->ReturnAddress;                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   587  
; ..\component\Os\Implementation\Os_Hal_Context.h	   588    /* #50 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   589    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   590    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   592    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   593  
; ..\component\Os\Implementation\Os_Hal_Context.h	   594    /* #60 Initialize the MPU stack settings */
; ..\component\Os\Implementation\Os_Hal_Context.h	   595    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   596    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   597      Context->MpuRegionForStackLow = CurrentConfig->StackStartAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   598      Context->MpuRegionForStackUpper = CurrentConfig->StackEndAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   599    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   600  
; ..\component\Os\Implementation\Os_Hal_Context.h	   601    /* #70 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   602    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   603    Context->RunningPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                               /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   604    Context->Lr = CurrentConfig->Entry;                                                                                   /* SBSW_OS_HAL_PWA_CALLER */                                                                   /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   605  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   606  
; ..\component\Os\Implementation\Os_Hal_Context.h	   607  
; ..\component\Os\Implementation\Os_Hal_Context.h	   608  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   609  *  Os_Hal_ContextIntInitialize()
; ..\component\Os\Implementation\Os_Hal_Context.h	   610  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   611  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   612   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   613   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   614   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   615   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   616   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   617   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   618   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   619  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   620  Os_Hal_ContextIntInitialize,
; ..\component\Os\Implementation\Os_Hal_Context.h	   621  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   622    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   623    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   624    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   625  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   626  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   627    /* #10 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   628    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   629  
; ..\component\Os\Implementation\Os_Hal_Context.h	   630    /* #20 Create a new CSA entry (lower context), which is actually used as part of the initial context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   631    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   632    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   633  
; ..\component\Os\Implementation\Os_Hal_Context.h	   634    /* #30 Adapt the created CSA entry based on the thread configuration. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   635    Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Context);                                                           /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   636  
; ..\component\Os\Implementation\Os_Hal_Context.h	   637    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   638    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   640  
; ..\component\Os\Implementation\Os_Hal_Context.h	   641  
; ..\component\Os\Implementation\Os_Hal_Context.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   643  *  Os_Hal_ContextIntInitializeReserved()
; ..\component\Os\Implementation\Os_Hal_Context.h	   644  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   652   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   653   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   654   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   655   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   656   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   657   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   658   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   659   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   660  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   661  Os_Hal_ContextIntInitializeReserved,
; ..\component\Os\Implementation\Os_Hal_Context.h	   662  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   663    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   664    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   665    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   666  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   667  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   668    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   669    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   670  
; ..\component\Os\Implementation\Os_Hal_Context.h	   671    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   672    Os_Hal_Disable();
	disable
.L323:

; ..\component\Os\Implementation\Os_Hal_Context.h	   673  
; ..\component\Os\Implementation\Os_Hal_Context.h	   674    /* #20 Create a new CSA entry (lower context), which is a reserved context and is only used when ISRs
; ..\component\Os\Implementation\Os_Hal_Context.h	   675     *     terminate or tasks terminate without calling TerminateTask */
; ..\component\Os\Implementation\Os_Hal_Context.h	   676    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, 0x00000000uL);
	mov	d15,#0

; ..\component\Os\Implementation\Os_Hal_Context.h	   676    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, 0x00000000uL);      (inlined)
	mtcr  #0xFE00, d15
.L324:

; ..\component\Os\Implementation\Os_Hal_Context.h	   677    Os_Hal_Isync();
	isync
.L325:

; ..\component\Os\Implementation\Os_Hal_Context.h	   678    Os_Hal_Svlcx();
	svlcx
.L326:

; ..\component\Os\Implementation\Os_Hal_Context.h	   679    Os_Hal_Dsync();
	dsync
.L327:

; ..\component\Os\Implementation\Os_Hal_Context.h	   680  
; ..\component\Os\Implementation\Os_Hal_Context.h	   681    /* #30 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   682    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
	mfcr	d0,#65024
.L235:

; ..\component\Os\Implementation\Os_Hal_Context.h	   683    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
	and	d15,d0,d1
	sh	d2,d15,#12
.L237:
	insert	d15,d0,#0,#16,#16
	sh	d15,#6
.L243:
	or	d2,d15
.L328:

; ..\component\Os\Implementation\Os_Hal_Context.h	   684  
; ..\component\Os\Implementation\Os_Hal_Context.h	   685    /* #40 Initialize the program status word */
; ..\component\Os\Implementation\Os_Hal_Context.h	   686    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus;                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d2,#4
.L329:
	mov.a	a2,d15
.L239:
	ld.w	d15,[a15]8
.L330:
	st.w	[a2],d15
.L178:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	ld.w	d3,[a15]12
.L331:
	or	d15,d3
	st.w	[a2],d15
.L179:

; ..\component\Os\Implementation\Os_Hal_Context.h	   687  
; ..\component\Os\Implementation\Os_Hal_Context.h	   688    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   689    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   690  
; ..\component\Os\Implementation\Os_Hal_Context.h	   691    /* #50 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   692    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d2,#8
.L332:
	mov.a	a2,d15
.L333:
	ld.w	d15,[a15]
.L334:
	st.w	[a2],d15
.L335:

; ..\component\Os\Implementation\Os_Hal_Context.h	   693  
; ..\component\Os\Implementation\Os_Hal_Context.h	   694    /* #60 Initialize the return address. When this CSA is restored, the program should never return */
; ..\component\Os\Implementation\Os_Hal_Context.h	   695    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = 0x00000000uL;                                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d2,#12
.L336:
	mov.a	a2,d15
.L337:
	mov	d15,#0
.L338:
	st.w	[a2],d15
.L339:

; ..\component\Os\Implementation\Os_Hal_Context.h	   696  
; ..\component\Os\Implementation\Os_Hal_Context.h	   697    /* #70 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   698    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
	insert	d0,d0,#0,#21,#9
.L242:

; ..\component\Os\Implementation\Os_Hal_Context.h	   699    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
	ld.w	d15,[a15]24
.L340:
	insert	d15,d15,#1,#20,#1
.L245:
	or	d0,d15
.L341:

; ..\component\Os\Implementation\Os_Hal_Context.h	   700    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);      (inlined)
	mtcr  #0xFE00, d0
.L342:

; ..\component\Os\Implementation\Os_Hal_Context.h	   700    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   701    Os_Hal_Isync();
	isync
.L343:

; ..\component\Os\Implementation\Os_Hal_Context.h	   702  
; ..\component\Os\Implementation\Os_Hal_Context.h	   703    /* #80 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   704    Context->InitPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                                  /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65024
.L344:
	st.w	[a5]8,d15
.L185:
	disable
.L345:
	mfcr	d15,#65068
.L346:
	insert	d15,d15,#0,#15,#1
.L246:
	or	d15,d8
.L247:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L347:
	isync
.L167:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   541  
; ..\component\Os\Implementation\Os_Hal_Context.h	   542    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   543    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   544  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   545  
; ..\component\Os\Implementation\Os_Hal_Context.h	   546  
; ..\component\Os\Implementation\Os_Hal_Context.h	   547  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   548  *  Os_Hal_ContextIntPrepareCSAContent()
; ..\component\Os\Implementation\Os_Hal_Context.h	   549  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   550  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   551   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   552   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   553   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   554   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   555   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   556   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   557   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   558   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   559   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   561   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   562  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   563  Os_Hal_ContextIntPrepareCSAContent,
; ..\component\Os\Implementation\Os_Hal_Context.h	   564  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   565    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   566    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   567  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   568  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   569    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   570    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   571  
; ..\component\Os\Implementation\Os_Hal_Context.h	   572    /* #10 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   573    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   574    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   575  
; ..\component\Os\Implementation\Os_Hal_Context.h	   576    /* #20 Initialize the program status word with call depth 1 due to the reserved CSA frame */
; ..\component\Os\Implementation\Os_Hal_Context.h	   577    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus | OS_HAL_PSW_CDC_1;                       /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   578  
; ..\component\Os\Implementation\Os_Hal_Context.h	   579    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   580    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   581  
; ..\component\Os\Implementation\Os_Hal_Context.h	   582    /* #30 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   583    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   584  
; ..\component\Os\Implementation\Os_Hal_Context.h	   585    /* #40 Initialize the return address */
; ..\component\Os\Implementation\Os_Hal_Context.h	   586    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = CurrentConfig->ReturnAddress;                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   587  
; ..\component\Os\Implementation\Os_Hal_Context.h	   588    /* #50 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   589    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   590    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   592    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   593  
; ..\component\Os\Implementation\Os_Hal_Context.h	   594    /* #60 Initialize the MPU stack settings */
; ..\component\Os\Implementation\Os_Hal_Context.h	   595    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   596    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   597      Context->MpuRegionForStackLow = CurrentConfig->StackStartAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   598      Context->MpuRegionForStackUpper = CurrentConfig->StackEndAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   599    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   600  
; ..\component\Os\Implementation\Os_Hal_Context.h	   601    /* #70 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   602    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   603    Context->RunningPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                               /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   604    Context->Lr = CurrentConfig->Entry;                                                                                   /* SBSW_OS_HAL_PWA_CALLER */                                                                   /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   605  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   606  
; ..\component\Os\Implementation\Os_Hal_Context.h	   607  
; ..\component\Os\Implementation\Os_Hal_Context.h	   608  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   609  *  Os_Hal_ContextIntInitialize()
; ..\component\Os\Implementation\Os_Hal_Context.h	   610  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   611  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   612   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   613   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   614   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   615   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   616   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   617   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   618   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   619  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   620  Os_Hal_ContextIntInitialize,
; ..\component\Os\Implementation\Os_Hal_Context.h	   621  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   622    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   623    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   624    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   625  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   626  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   627    /* #10 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   628    Os_Hal_Disable();
	disable
.L348:

; ..\component\Os\Implementation\Os_Hal_Context.h	   629  
; ..\component\Os\Implementation\Os_Hal_Context.h	   630    /* #20 Create a new CSA entry (lower context), which is actually used as part of the initial context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   631    Os_Hal_Svlcx();
	svlcx
.L349:

; ..\component\Os\Implementation\Os_Hal_Context.h	   632    Os_Hal_Dsync();
	dsync
.L195:
	mfcr	d2,#65024
.L248:
	fcall	.cocofun_1
.L244:

; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);      (inlined)
	mtcr  #0xFE00, d0
.L350:
	isync
.L351:
	mfcr	d15,#65024
.L352:
	st.w	[a5]4,d15
.L353:
	mfcr	d15,#65024
.L354:
	st.w	[a5]12,d15
.L355:
	ld.w	d15,[a15]16
.L356:
	st.w	[a5],d15
.L196:
	disable
.L357:
	mfcr	d15,#65068
.L358:
	insert	d15,d15,#0,#15,#1
.L251:
	or	d15,d8
.L252:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L359:
	isync

; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else      (inlined)
.L11:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   541  
; ..\component\Os\Implementation\Os_Hal_Context.h	   542    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   543    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   544  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   545  
; ..\component\Os\Implementation\Os_Hal_Context.h	   546  
; ..\component\Os\Implementation\Os_Hal_Context.h	   547  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   548  *  Os_Hal_ContextIntPrepareCSAContent()
; ..\component\Os\Implementation\Os_Hal_Context.h	   549  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   550  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   551   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   552   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   553   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   554   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   555   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   556   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   557   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   558   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   559   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   561   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   562  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   563  Os_Hal_ContextIntPrepareCSAContent,
; ..\component\Os\Implementation\Os_Hal_Context.h	   564  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   565    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   566    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   567  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   568  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   569    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   570    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   571  
; ..\component\Os\Implementation\Os_Hal_Context.h	   572    /* #10 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   573    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   574    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   575  
; ..\component\Os\Implementation\Os_Hal_Context.h	   576    /* #20 Initialize the program status word with call depth 1 due to the reserved CSA frame */
; ..\component\Os\Implementation\Os_Hal_Context.h	   577    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus | OS_HAL_PSW_CDC_1;                       /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   578  
; ..\component\Os\Implementation\Os_Hal_Context.h	   579    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   580    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   581  
; ..\component\Os\Implementation\Os_Hal_Context.h	   582    /* #30 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   583    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   584  
; ..\component\Os\Implementation\Os_Hal_Context.h	   585    /* #40 Initialize the return address */
; ..\component\Os\Implementation\Os_Hal_Context.h	   586    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = CurrentConfig->ReturnAddress;                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   587  
; ..\component\Os\Implementation\Os_Hal_Context.h	   588    /* #50 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   589    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   590    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
; ..\component\Os\Implementation\Os_Hal_Context.h	   591    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   592    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   593  
; ..\component\Os\Implementation\Os_Hal_Context.h	   594    /* #60 Initialize the MPU stack settings */
; ..\component\Os\Implementation\Os_Hal_Context.h	   595    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   596    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   597      Context->MpuRegionForStackLow = CurrentConfig->StackStartAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   598      Context->MpuRegionForStackUpper = CurrentConfig->StackEndAddr;                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   599    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   600  
; ..\component\Os\Implementation\Os_Hal_Context.h	   601    /* #70 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   602    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   603    Context->RunningPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                               /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   604    Context->Lr = CurrentConfig->Entry;                                                                                   /* SBSW_OS_HAL_PWA_CALLER */                                                                   /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   605  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   606  
; ..\component\Os\Implementation\Os_Hal_Context.h	   607  
; ..\component\Os\Implementation\Os_Hal_Context.h	   608  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   609  *  Os_Hal_ContextIntInitialize()
; ..\component\Os\Implementation\Os_Hal_Context.h	   610  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   611  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   612   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   613   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   614   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   615   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   616   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   617   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   618   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   619  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   620  Os_Hal_ContextIntInitialize,
; ..\component\Os\Implementation\Os_Hal_Context.h	   621  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   622    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   623    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   624    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   625  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   626  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   627    /* #10 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   628    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   629  
; ..\component\Os\Implementation\Os_Hal_Context.h	   630    /* #20 Create a new CSA entry (lower context), which is actually used as part of the initial context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   631    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   632    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   633  
; ..\component\Os\Implementation\Os_Hal_Context.h	   634    /* #30 Adapt the created CSA entry based on the thread configuration. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   635    Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Context);                                                           /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   636  
; ..\component\Os\Implementation\Os_Hal_Context.h	   637    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   638    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   640  
; ..\component\Os\Implementation\Os_Hal_Context.h	   641  
; ..\component\Os\Implementation\Os_Hal_Context.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   643  *  Os_Hal_ContextIntInitializeReserved()
; ..\component\Os\Implementation\Os_Hal_Context.h	   644  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   652   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   653   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   654   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   655   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   656   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   657   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   658   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   659   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   660  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   661  Os_Hal_ContextIntInitializeReserved,
; ..\component\Os\Implementation\Os_Hal_Context.h	   662  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   663    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   664    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   665    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   666  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   667  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   668    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   669    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   670  
; ..\component\Os\Implementation\Os_Hal_Context.h	   671    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   672    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   673  
; ..\component\Os\Implementation\Os_Hal_Context.h	   674    /* #20 Create a new CSA entry (lower context), which is a reserved context and is only used when ISRs
; ..\component\Os\Implementation\Os_Hal_Context.h	   675     *     terminate or tasks terminate without calling TerminateTask */
; ..\component\Os\Implementation\Os_Hal_Context.h	   676    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, 0x00000000uL);
; ..\component\Os\Implementation\Os_Hal_Context.h	   677    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   678    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   679    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   680  
; ..\component\Os\Implementation\Os_Hal_Context.h	   681    /* #30 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   682    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   683    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   684  
; ..\component\Os\Implementation\Os_Hal_Context.h	   685    /* #40 Initialize the program status word */
; ..\component\Os\Implementation\Os_Hal_Context.h	   686    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus;                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   687  
; ..\component\Os\Implementation\Os_Hal_Context.h	   688    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   689    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   690  
; ..\component\Os\Implementation\Os_Hal_Context.h	   691    /* #50 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   692    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   693  
; ..\component\Os\Implementation\Os_Hal_Context.h	   694    /* #60 Initialize the return address. When this CSA is restored, the program should never return */
; ..\component\Os\Implementation\Os_Hal_Context.h	   695    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = 0x00000000uL;                                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   696  
; ..\component\Os\Implementation\Os_Hal_Context.h	   697    /* #70 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   698    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   699    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
; ..\component\Os\Implementation\Os_Hal_Context.h	   700    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   701    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   702  
; ..\component\Os\Implementation\Os_Hal_Context.h	   703    /* #80 Initialize the runtime context variable */
; ..\component\Os\Implementation\Os_Hal_Context.h	   704    Context->InitPCXI = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   705  
; ..\component\Os\Implementation\Os_Hal_Context.h	   706    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   707    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   708  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   709  
; ..\component\Os\Implementation\Os_Hal_Context.h	   710  
; ..\component\Os\Implementation\Os_Hal_Context.h	   711  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   712  *  Os_Hal_ContextIntSave()
; ..\component\Os\Implementation\Os_Hal_Context.h	   713  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   714  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   715   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   716   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   717   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   718   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   719   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   720   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   722  Os_Hal_ContextIntSave,
; ..\component\Os\Implementation\Os_Hal_Context.h	   723  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   724    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   725  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   726  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   727    /* #10 Save the PCXI register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   728    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   729  
; ..\component\Os\Implementation\Os_Hal_Context.h	   730    /* #20 Save the link register (A11). */
; ..\component\Os\Implementation\Os_Hal_Context.h	   731    Context->Lr = Os_Hal_Mfa11();                                                                                         /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   732  
; ..\component\Os\Implementation\Os_Hal_Context.h	   733    /* #30 Save the stack region in MPU. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   734    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   735    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   736      Context->MpuRegionForStackLow = Os_Hal_Mfcr(OS_HAL_COREMPU_DPR_LOW0);                                               /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   737      Context->MpuRegionForStackUpper = Os_Hal_Mfcr(OS_HAL_COREMPU_DPR_UPPER0);                                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   738    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   739  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   740  
; ..\component\Os\Implementation\Os_Hal_Context.h	   741  
; ..\component\Os\Implementation\Os_Hal_Context.h	   742  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   743  *  Os_Hal_ContextIntRestore()
; ..\component\Os\Implementation\Os_Hal_Context.h	   744  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   745  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   746   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   747   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   748   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   749   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   750   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   751   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   752   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   753   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   754   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   755  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   756  Os_Hal_ContextIntRestore,
; ..\component\Os\Implementation\Os_Hal_Context.h	   757  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   758    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   759  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   760  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   761    /* #10 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   762    Os_Hal_Disable();
	disable
.L360:

; ..\component\Os\Implementation\Os_Hal_Context.h	   763  
; ..\component\Os\Implementation\Os_Hal_Context.h	   764    /* #20 Restore the stack region in MPU. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   765    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   766    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   767      Os_Hal_Mtcr(OS_HAL_COREMPU_DPR_UPPER0, Context->MpuRegionForStackUpper);
; ..\component\Os\Implementation\Os_Hal_Context.h	   768      Os_Hal_Mtcr(OS_HAL_COREMPU_DPR_LOW0, Context->MpuRegionForStackLow);
; ..\component\Os\Implementation\Os_Hal_Context.h	   769    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   770  
; ..\component\Os\Implementation\Os_Hal_Context.h	   771    /* #30 Restore the link register (A11). */
; ..\component\Os\Implementation\Os_Hal_Context.h	   772    Os_Hal_Mta11(Context->Lr);
	ld.w	d15,[a6]

; ..\component\Os\Implementation\Os_Hal_Context.h	   772    Os_Hal_Mta11(Context->Lr);      (inlined)
	
	mov.a  a11, d15
	
.L361:

; ..\component\Os\Implementation\Os_Hal_Context.h	   773  
; ..\component\Os\Implementation\Os_Hal_Context.h	   774    /* #40 Restore the parameter register (A4). */
; ..\component\Os\Implementation\Os_Hal_Context.h	   775    Os_Hal_Mta4(Context->A4);
	ld.w	d15,[a6]24

; ..\component\Os\Implementation\Os_Hal_Context.h	   775    Os_Hal_Mta4(Context->A4);      (inlined)
	
	mov.a  a4, d15
	
.L362:

; ..\component\Os\Implementation\Os_Hal_Context.h	   776  
; ..\component\Os\Implementation\Os_Hal_Context.h	   777    /* #50 Restore the PCXI register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   778    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
	ld.w	d15,[a6]4

; ..\component\Os\Implementation\Os_Hal_Context.h	   778    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);      (inlined)
	mtcr  #0xFE00, d15
.L363:

; ..\component\Os\Implementation\Os_Hal_Context.h	   779    Os_Hal_Isync();
	isync
.L364:

; ..\component\Os\Implementation\Os_Hal_Context.h	   780  
; ..\component\Os\Implementation\Os_Hal_Context.h	   781    /* #60 Go the next thread. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   782    Os_Hal_ContextIntGo();
	mfcr	d15,#65028
	insert	d15,d15,#0,#7,#1

; ..\component\Os\Implementation\Os_Hal_Context.h	   782    Os_Hal_ContextIntGo();      (inlined)
	mtcr  #0xFE04, d15
	isync

; ..\component\Os\Implementation\Os_Hal_Context.h	   782    Os_Hal_ContextIntGo();      (inlined)
	rfe
.L133:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
	call	Os_ErrKernelPanic
.L3:

; ..\component\Os\Implementation\Os_Isr.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Isr.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Isr.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Isr.h	     6   *
; ..\component\Os\Implementation\Os_Isr.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Isr.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Isr.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Isr.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Isr.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Isr.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Isr.h	    14  /**
; ..\component\Os\Implementation\Os_Isr.h	    15   * \addtogroup Os_Isr
; ..\component\Os\Implementation\Os_Isr.h	    16   * \{
; ..\component\Os\Implementation\Os_Isr.h	    17   *
; ..\component\Os\Implementation\Os_Isr.h	    18   * \file
; ..\component\Os\Implementation\Os_Isr.h	    19   * \brief       OS services concerning category 2 ISRs.
; ..\component\Os\Implementation\Os_Isr.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Isr.h	    21   *
; ..\component\Os\Implementation\Os_Isr.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Isr.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Isr.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    28  
; ..\component\Os\Implementation\Os_Isr.h	    29  #ifndef OS_ISR_H
; ..\component\Os\Implementation\Os_Isr.h	    30  # define OS_ISR_H
; ..\component\Os\Implementation\Os_Isr.h	    31                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Isr.h	    32  
; ..\component\Os\Implementation\Os_Isr.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Isr.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Isr.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Isr.h	    38  
; ..\component\Os\Implementation\Os_Isr.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    40  # include "Os_IsrInt.h"
; ..\component\Os\Implementation\Os_Isr.h	    41  # include "Os_Isr_Lcfg.h"
; ..\component\Os\Implementation\Os_Isr.h	    42  
; ..\component\Os\Implementation\Os_Isr.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Isr.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Isr.h	    46  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Isr.h	    47  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Isr.h	    48  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Isr.h	    49  # include "Os_Timer.h"
; ..\component\Os\Implementation\Os_Isr.h	    50  
; ..\component\Os\Implementation\Os_Isr.h	    51  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    52  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Isr.h	    53  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Isr.h	    54  
; ..\component\Os\Implementation\Os_Isr.h	    55  
; ..\component\Os\Implementation\Os_Isr.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    57   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Isr.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    59  
; ..\component\Os\Implementation\Os_Isr.h	    60  
; ..\component\Os\Implementation\Os_Isr.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    62   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Isr.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    64  
; ..\component\Os\Implementation\Os_Isr.h	    65  
; ..\component\Os\Implementation\Os_Isr.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    67   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Isr.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    69  
; ..\component\Os\Implementation\Os_Isr.h	    70  
; ..\component\Os\Implementation\Os_Isr.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    72   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Isr.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    74  
; ..\component\Os\Implementation\Os_Isr.h	    75  
; ..\component\Os\Implementation\Os_Isr.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    77   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Isr.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    79  
; ..\component\Os\Implementation\Os_Isr.h	    80  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Isr.h	    81  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Isr.h	    82  
; ..\component\Os\Implementation\Os_Isr.h	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    84   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Isr.h	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    86  
; ..\component\Os\Implementation\Os_Isr.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    88   *  Os_IsrThread2Isr()
; ..\component\Os\Implementation\Os_Isr.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	    91  P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrThread2Isr,
; ..\component\Os\Implementation\Os_Isr.h	    92  (
; ..\component\Os\Implementation\Os_Isr.h	    93    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Isr.h	    94  ))
; ..\component\Os\Implementation\Os_Isr.h	    95  {
; ..\component\Os\Implementation\Os_Isr.h	    96    Os_Assert((Os_StdReturnType)(Os_ThreadIsIsr(Thread) != 0u));                                                          /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Isr.h	    97    return (P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST))Thread;                                                        /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Isr.h	    98  }
; ..\component\Os\Implementation\Os_Isr.h	    99  
; ..\component\Os\Implementation\Os_Isr.h	   100  
; ..\component\Os\Implementation\Os_Isr.h	   101  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   102   *  Os_IsrId2Isr()
; ..\component\Os\Implementation\Os_Isr.h	   103   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   104  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   105  P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrId2Isr,
; ..\component\Os\Implementation\Os_Isr.h	   106  (
; ..\component\Os\Implementation\Os_Isr.h	   107    ISRType IsrId
; ..\component\Os\Implementation\Os_Isr.h	   108  ))
; ..\component\Os\Implementation\Os_Isr.h	   109  {
; ..\component\Os\Implementation\Os_Isr.h	   110    Os_Assert(Os_ErrIsValueLo((uint32)IsrId, (uint32)OS_ISRID_COUNT));
; ..\component\Os\Implementation\Os_Isr.h	   111    return OsCfg_IsrRefs[IsrId];                                                                                          /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Isr.h	   112  }
; ..\component\Os\Implementation\Os_Isr.h	   113  
; ..\component\Os\Implementation\Os_Isr.h	   114  
; ..\component\Os\Implementation\Os_Isr.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   116   *  Os_IsrCheckId()
; ..\component\Os\Implementation\Os_Isr.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   119  OS_ALWAYS_INLINE, Os_IsrCheckId,
; ..\component\Os\Implementation\Os_Isr.h	   120  (
; ..\component\Os\Implementation\Os_Isr.h	   121    ISRType IsrId
; ..\component\Os\Implementation\Os_Isr.h	   122  ))
; ..\component\Os\Implementation\Os_Isr.h	   123  {
; ..\component\Os\Implementation\Os_Isr.h	   124    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)IsrId, (uint32)OS_ISRID_COUNT));
; ..\component\Os\Implementation\Os_Isr.h	   125  }
; ..\component\Os\Implementation\Os_Isr.h	   126  
; ..\component\Os\Implementation\Os_Isr.h	   127  
; ..\component\Os\Implementation\Os_Isr.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   129   *  Os_IsrHalIntLevel2CoreIntLevel()
; ..\component\Os\Implementation\Os_Isr.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   132  Os_IsrHalIntLevel2CoreIntLevel,
; ..\component\Os\Implementation\Os_Isr.h	   133  (
; ..\component\Os\Implementation\Os_Isr.h	   134    P2VAR(Os_IntLevelType, AUTOMATIC, AUTOMATIC) Level,
; ..\component\Os\Implementation\Os_Isr.h	   135    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) HalLevel
; ..\component\Os\Implementation\Os_Isr.h	   136  ))
; ..\component\Os\Implementation\Os_Isr.h	   137  {
; ..\component\Os\Implementation\Os_Isr.h	   138    Level->State = *HalLevel;                                                                                             /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Isr.h	   139  }
; ..\component\Os\Implementation\Os_Isr.h	   140  
; ..\component\Os\Implementation\Os_Isr.h	   141  
; ..\component\Os\Implementation\Os_Isr.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   143   *  Os_IsrLevelIsLe()
; ..\component\Os\Implementation\Os_Isr.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   146  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Isr.h	   147  Os_IsrLevelIsLe,
; ..\component\Os\Implementation\Os_Isr.h	   148  (
; ..\component\Os\Implementation\Os_Isr.h	   149    P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST) Isr,
; ..\component\Os\Implementation\Os_Isr.h	   150    P2CONST(Os_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Isr.h	   151  ))
; ..\component\Os\Implementation\Os_Isr.h	   152  {
; ..\component\Os\Implementation\Os_Isr.h	   153    return Os_Hal_IntIsrLevelIsLe(Isr->SourceConfig->HwConfig, &(Level->State));                                          /* SBSW_OS_ISR_HAL_INTISRLEVELISLE_001 */
; ..\component\Os\Implementation\Os_Isr.h	   154  }
; ..\component\Os\Implementation\Os_Isr.h	   155  
; ..\component\Os\Implementation\Os_Isr.h	   156  
; ..\component\Os\Implementation\Os_Isr.h	   157  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   158   *  Os_IsrGetThread()
; ..\component\Os\Implementation\Os_Isr.h	   159   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   160  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   161  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrGetThread,
; ..\component\Os\Implementation\Os_Isr.h	   162  (
; ..\component\Os\Implementation\Os_Isr.h	   163    P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST) Isr
; ..\component\Os\Implementation\Os_Isr.h	   164  ))
; ..\component\Os\Implementation\Os_Isr.h	   165  {
; ..\component\Os\Implementation\Os_Isr.h	   166    return &(Isr->Thread);
; ..\component\Os\Implementation\Os_Isr.h	   167  }
; ..\component\Os\Implementation\Os_Isr.h	   168  
; ..\component\Os\Implementation\Os_Isr.h	   169  
; ..\component\Os\Implementation\Os_Isr.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   171   *  Os_IsrGetAccessRights()
; ..\component\Os\Implementation\Os_Isr.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   174  P2CONST(Os_AccessCheckConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrGetAccessRights,
; ..\component\Os\Implementation\Os_Isr.h	   175  (
; ..\component\Os\Implementation\Os_Isr.h	   176    P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST) Isr
; ..\component\Os\Implementation\Os_Isr.h	   177  ))
; ..\component\Os\Implementation\Os_Isr.h	   178  {
; ..\component\Os\Implementation\Os_Isr.h	   179    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) thread;
; ..\component\Os\Implementation\Os_Isr.h	   180  
; ..\component\Os\Implementation\Os_Isr.h	   181    thread = Os_IsrGetThread(Isr);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Isr.h	   182    return Os_ThreadGetAccessRights(thread);                                                                              /* SBSW_OS_ISR_THREADGETACCESSRIGHTS_001 */
; ..\component\Os\Implementation\Os_Isr.h	   183  }
; ..\component\Os\Implementation\Os_Isr.h	   184  
; ..\component\Os\Implementation\Os_Isr.h	   185  
; ..\component\Os\Implementation\Os_Isr.h	   186  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   187   *  Os_IsrSuicide()
; ..\component\Os\Implementation\Os_Isr.h	   188   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   189  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   190  OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE, Os_IsrSuicide, (void))
; ..\component\Os\Implementation\Os_Isr.h	   191  {
; ..\component\Os\Implementation\Os_Isr.h	   192    Os_IsrEpilogue();
	call	Os_IsrEpilogue
.L6:
.L5:
.L4:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L253:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L209:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
	ld.hu	d15,[a15]48
.L208:
	mov	d0,#6652
.L365:
	and	d15,d0
.L366:

; ..\component\Os\Implementation\Os_Hook.h	   186    if(OS_UNLIKELY(Os_ThreadIsHook(currentThread) == 0u))                                                                 /* SBSW_OS_HK_THREADISTASK_001 */ /* COV_OS_INVSTATE */      (inlined)
	jeq	d15,#0,.L12
.L367:

; ..\component\Os\Implementation\Os_Hook.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hook.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hook.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hook.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hook.h	     6   *
; ..\component\Os\Implementation\Os_Hook.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hook.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hook.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hook.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hook.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hook.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hook.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hook.h	    14  /**
; ..\component\Os\Implementation\Os_Hook.h	    15   * \addtogroup Os_Hook
; ..\component\Os\Implementation\Os_Hook.h	    16   * \{
; ..\component\Os\Implementation\Os_Hook.h	    17   *
; ..\component\Os\Implementation\Os_Hook.h	    18   * \file
; ..\component\Os\Implementation\Os_Hook.h	    19   * \brief       Public interface of Hook unit.
; ..\component\Os\Implementation\Os_Hook.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Hook.h	    21   *
; ..\component\Os\Implementation\Os_Hook.h	    22   *
; ..\component\Os\Implementation\Os_Hook.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hook.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hook.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Hook.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    29  
; ..\component\Os\Implementation\Os_Hook.h	    30  #ifndef OS_HOOK_H
; ..\component\Os\Implementation\Os_Hook.h	    31  # define OS_HOOK_H
; ..\component\Os\Implementation\Os_Hook.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hook.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hook.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hook.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hook.h	    38  
; ..\component\Os\Implementation\Os_Hook.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hook.h	    40  # include "Os_HookInt.h"
; ..\component\Os\Implementation\Os_Hook.h	    41  # include "Os_Hook_Cfg.h"
; ..\component\Os\Implementation\Os_Hook.h	    42  # include "Os_Hook_Lcfg.h"
; ..\component\Os\Implementation\Os_Hook.h	    43  
; ..\component\Os\Implementation\Os_Hook.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hook.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hook.h	    46  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hook.h	    47  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Hook.h	    48  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Hook.h	    49  
; ..\component\Os\Implementation\Os_Hook.h	    50  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Hook.h	    51  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hook.h	    52  
; ..\component\Os\Implementation\Os_Hook.h	    53  
; ..\component\Os\Implementation\Os_Hook.h	    54  
; ..\component\Os\Implementation\Os_Hook.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    56   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hook.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    58  
; ..\component\Os\Implementation\Os_Hook.h	    59  
; ..\component\Os\Implementation\Os_Hook.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    61   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hook.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    63  
; ..\component\Os\Implementation\Os_Hook.h	    64  
; ..\component\Os\Implementation\Os_Hook.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    66   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hook.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    68  
; ..\component\Os\Implementation\Os_Hook.h	    69  
; ..\component\Os\Implementation\Os_Hook.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    71   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hook.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    73  
; ..\component\Os\Implementation\Os_Hook.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hook.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hook.h	    76  
; ..\component\Os\Implementation\Os_Hook.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hook.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    80  
; ..\component\Os\Implementation\Os_Hook.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    82   *  Os_HookIsErrorHookEnabled()
; ..\component\Os\Implementation\Os_Hook.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hook.h	    85  Os_HookIsErrorHookEnabled, ( void ))
; ..\component\Os\Implementation\Os_Hook.h	    86  {
; ..\component\Os\Implementation\Os_Hook.h	    87    return (Os_StdReturnType)(OS_CFG_ERRORHOOKS  == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hook.h	    88  }
; ..\component\Os\Implementation\Os_Hook.h	    89  
; ..\component\Os\Implementation\Os_Hook.h	    90  
; ..\component\Os\Implementation\Os_Hook.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	    92   *  Os_HookIsProtectionHookEnabled()
; ..\component\Os\Implementation\Os_Hook.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	    94  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	    95  Os_HookIsProtectionHookEnabled, ( void ))
; ..\component\Os\Implementation\Os_Hook.h	    96  {
; ..\component\Os\Implementation\Os_Hook.h	    97    return (Os_StdReturnType)(OS_CFG_PROTECTIONHOOK == STD_ON);                                                           /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hook.h	    98  }
; ..\component\Os\Implementation\Os_Hook.h	    99  
; ..\component\Os\Implementation\Os_Hook.h	   100  
; ..\component\Os\Implementation\Os_Hook.h	   101  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   102   *  Os_HookCallbackGetThread()
; ..\component\Os\Implementation\Os_Hook.h	   103   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   104  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   105  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Hook.h	   106  OS_ALWAYS_INLINE, Os_HookCallbackGetThread,
; ..\component\Os\Implementation\Os_Hook.h	   107  (
; ..\component\Os\Implementation\Os_Hook.h	   108    P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST) Hook
; ..\component\Os\Implementation\Os_Hook.h	   109  ))
; ..\component\Os\Implementation\Os_Hook.h	   110  {
; ..\component\Os\Implementation\Os_Hook.h	   111    return &Hook->Hook.Thread;
; ..\component\Os\Implementation\Os_Hook.h	   112  }
; ..\component\Os\Implementation\Os_Hook.h	   113  
; ..\component\Os\Implementation\Os_Hook.h	   114  
; ..\component\Os\Implementation\Os_Hook.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   116   *  Os_HookStatusHookGetThread()
; ..\component\Os\Implementation\Os_Hook.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   119  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Hook.h	   120  OS_ALWAYS_INLINE, Os_HookStatusHookGetThread,
; ..\component\Os\Implementation\Os_Hook.h	   121  (
; ..\component\Os\Implementation\Os_Hook.h	   122    P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST) Hook
; ..\component\Os\Implementation\Os_Hook.h	   123  ))
; ..\component\Os\Implementation\Os_Hook.h	   124  {
; ..\component\Os\Implementation\Os_Hook.h	   125    return &Hook->Hook.Thread;
; ..\component\Os\Implementation\Os_Hook.h	   126  }
; ..\component\Os\Implementation\Os_Hook.h	   127  
; ..\component\Os\Implementation\Os_Hook.h	   128  
; ..\component\Os\Implementation\Os_Hook.h	   129  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   130   *  Os_HookProtectionHookGetThread()
; ..\component\Os\Implementation\Os_Hook.h	   131   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   132  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   133  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Hook.h	   134  OS_ALWAYS_INLINE, Os_HookProtectionHookGetThread,
; ..\component\Os\Implementation\Os_Hook.h	   135  (
; ..\component\Os\Implementation\Os_Hook.h	   136    P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST) Hook
; ..\component\Os\Implementation\Os_Hook.h	   137  ))
; ..\component\Os\Implementation\Os_Hook.h	   138  {
; ..\component\Os\Implementation\Os_Hook.h	   139    return &Hook->Hook.Thread;
; ..\component\Os\Implementation\Os_Hook.h	   140  }
; ..\component\Os\Implementation\Os_Hook.h	   141  
; ..\component\Os\Implementation\Os_Hook.h	   142  
; ..\component\Os\Implementation\Os_Hook.h	   143  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   144   *  Os_HookThread2Hook()
; ..\component\Os\Implementation\Os_Hook.h	   145   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   146  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_HookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,/* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   147  Os_HookThread2Hook,
; ..\component\Os\Implementation\Os_Hook.h	   148  (
; ..\component\Os\Implementation\Os_Hook.h	   149    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hook.h	   150  ))
; ..\component\Os\Implementation\Os_Hook.h	   151  {
; ..\component\Os\Implementation\Os_Hook.h	   152    Os_Assert((Os_StdReturnType)(Os_ThreadIsHook(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Hook.h	   153    return (P2CONST(Os_HookConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Hook.h	   154  }
; ..\component\Os\Implementation\Os_Hook.h	   155  
; ..\component\Os\Implementation\Os_Hook.h	   156  
; ..\component\Os\Implementation\Os_Hook.h	   157  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   158   *  Os_HookGetThread()
; ..\component\Os\Implementation\Os_Hook.h	   159   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   160  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   161  OS_ALWAYS_INLINE, Os_HookGetThread,
; ..\component\Os\Implementation\Os_Hook.h	   162  (
; ..\component\Os\Implementation\Os_Hook.h	   163    P2CONST(Os_HookConfigType, AUTOMATIC, OS_CONST) Hook
; ..\component\Os\Implementation\Os_Hook.h	   164  ))
; ..\component\Os\Implementation\Os_Hook.h	   165  {
; ..\component\Os\Implementation\Os_Hook.h	   166    return &(Hook->Thread);
; ..\component\Os\Implementation\Os_Hook.h	   167  }
; ..\component\Os\Implementation\Os_Hook.h	   168  
; ..\component\Os\Implementation\Os_Hook.h	   169  
; ..\component\Os\Implementation\Os_Hook.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hook.h	   171   *  Os_HookSuicide()
; ..\component\Os\Implementation\Os_Hook.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hook.h	   173  /*!
; ..\component\Os\Implementation\Os_Hook.h	   174   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hook.h	   175   *
; ..\component\Os\Implementation\Os_Hook.h	   176   *
; ..\component\Os\Implementation\Os_Hook.h	   177   *
; ..\component\Os\Implementation\Os_Hook.h	   178   *
; ..\component\Os\Implementation\Os_Hook.h	   179   */
; ..\component\Os\Implementation\Os_Hook.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hook.h	   181  OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE, Os_HookSuicide, (void))
; ..\component\Os\Implementation\Os_Hook.h	   182  {
; ..\component\Os\Implementation\Os_Hook.h	   183    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Hook.h	   184  
; ..\component\Os\Implementation\Os_Hook.h	   185    /* #10 If the current thread is no hook: */
; ..\component\Os\Implementation\Os_Hook.h	   186    if(OS_UNLIKELY(Os_ThreadIsHook(currentThread) == 0u))                                                                 /* SBSW_OS_HK_THREADISTASK_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hook.h	   187    {
; ..\component\Os\Implementation\Os_Hook.h	   188      /* #20 Panic! */
; ..\component\Os\Implementation\Os_Hook.h	   189      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Hook.h	   190    }
; ..\component\Os\Implementation\Os_Hook.h	   191  
; ..\component\Os\Implementation\Os_Hook.h	   192    /* #30 Otherwise return from hook. */
; ..\component\Os\Implementation\Os_Hook.h	   193    Os_HookReturn();
	call	Os_HookReturn

; ..\component\Os\Implementation\Os_Hook.h	   194  }      (inlined)
.L12:

; ..\component\Os\Implementation\Os_Thread.c	   110          Os_HookSuicide(); /* function never returns! */
; ..\component\Os\Implementation\Os_Thread.c	   111          break;
; ..\component\Os\Implementation\Os_Thread.c	   112  
; ..\component\Os\Implementation\Os_Thread.c	   113      case OS_CALLCONTEXT_PRETASKHOOK:                                                                                    /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Thread.c	   114      case OS_CALLCONTEXT_POSTTASKHOOK:                                                                                   /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Thread.c	   115      case OS_CALLCONTEXT_ALARMCALLBACK:                                                                                  /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Thread.c	   116      case OS_CALLCONTEXT_SHUTDOWNHOOK:                                                                                   /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Thread.c	   117      case OS_CALLCONTEXT_PROTECTIONHOOK:                                                                                 /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Thread.c	   118      default:                                                                                                            /* COV_OS_INVSTATE */
.L7:

; ..\component\Os\Implementation\Os_Thread.c	   119        /* Invalid OS state. */
; ..\component\Os\Implementation\Os_Thread.c	   120        Os_ErrKernelPanic(); /* function never returns! */
; ..\component\Os\Implementation\Os_Thread.c	   121        break;                                                                                                            /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.c	   122    }
; ..\component\Os\Implementation\Os_Thread.c	   123  
; ..\component\Os\Implementation\Os_Thread.c	   124    /* Invalid OS state. */
; ..\component\Os\Implementation\Os_Thread.c	   125    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */ /* COMP_WARN_OS_UNREACHABLE_CODE */
	j	Os_ErrKernelPanic
.L31:
	
__Os_ThreadSuicide_function_end:
	.size	Os_ThreadSuicide,__Os_ThreadSuicide_function_end-Os_ThreadSuicide
.L25:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_1')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_1
.L16:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
; ..\component\Os\Implementation\Os_Hal_Context.h	   286  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   287  
; ..\component\Os\Implementation\Os_Hal_Context.h	   288  
; ..\component\Os\Implementation\Os_Hal_Context.h	   289  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   290   *  Os_Hal_ContextFirstResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   291   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   292  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   293   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   294   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   295   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   298   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   299   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   300   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   301  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   302  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextFirstResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   303  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   304    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   305  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   306  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   307    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   308    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   309  
; ..\component\Os\Implementation\Os_Hal_Context.h	   310    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   311    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   312  
; ..\component\Os\Implementation\Os_Hal_Context.h	   313    for( PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   314         (PCXIRaw & OS_HAL_PCXI_PCX_MASK) != 0x0uL;
; ..\component\Os\Implementation\Os_Hal_Context.h	   315         PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET))
; ..\component\Os\Implementation\Os_Hal_Context.h	   316    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   317      /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   318      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   319  
; ..\component\Os\Implementation\Os_Hal_Context.h	   320      /* #30 Clean up CSA used by the startup code. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   321      Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, PCXIRaw & ~OS_HAL_PCXI_UL_MASK);
; ..\component\Os\Implementation\Os_Hal_Context.h	   322      Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   323      Os_Hal_Rslcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   324  
; ..\component\Os\Implementation\Os_Hal_Context.h	   325      /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   326      Os_Hal_IntSetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   327    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   328  
; ..\component\Os\Implementation\Os_Hal_Context.h	   329    /* #50 Restore the next thread context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   330    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   331  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   332  
; ..\component\Os\Implementation\Os_Hal_Context.h	   333  
; ..\component\Os\Implementation\Os_Hal_Context.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   335   *  Os_Hal_ContextResetAndResume()
; ..\component\Os\Implementation\Os_Hal_Context.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   337  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   338   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   339   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   340   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   341   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   342   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   343   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   344   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   345   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   346   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   347   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   348  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   349  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextResetAndResume,
; ..\component\Os\Implementation\Os_Hal_Context.h	   350  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   351    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   352    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   353    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   354  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   355  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   356    /* #10 Check if the current CSA chain is in the same state as just after initialization. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   357    if(Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET) == Current->RunningPCXI)
; ..\component\Os\Implementation\Os_Hal_Context.h	   358    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   359      /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   360      Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   361  
; ..\component\Os\Implementation\Os_Hal_Context.h	   362      /* #30 Re-prepare the CSA content. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   363      Os_Hal_ContextIntPrepareCSAContent(CurrentConfig, Current);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   364    }else
; ..\component\Os\Implementation\Os_Hal_Context.h	   365    /* #40 Otherwise we need to completely clean up the CSA chain. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   366    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   367      Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   368  
; ..\component\Os\Implementation\Os_Hal_Context.h	   369      /* #50 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   370      Os_Hal_IntGetGlobalState(&previousState);                                                                           /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   371  
; ..\component\Os\Implementation\Os_Hal_Context.h	   372      /* #60 Cleanup the CSAs and re-initialize the context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   373      Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                              /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   374      Os_Hal_ContextIntInitializeReserved(CurrentConfig, Current, &previousState);                                        /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   375      Os_Hal_ContextIntInitialize(CurrentConfig, Current, &previousState);                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   376    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   377  
; ..\component\Os\Implementation\Os_Hal_Context.h	   378    /* #70 Restore the next PCXI and the link register. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   379    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   380  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   381  
; ..\component\Os\Implementation\Os_Hal_Context.h	   382  
; ..\component\Os\Implementation\Os_Hal_Context.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   384   *  Os_Hal_ContextAbort()
; ..\component\Os\Implementation\Os_Hal_Context.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   386  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   387   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   388   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   389   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   390   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   391   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   392   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   393   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   394   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   395   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   396   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   397   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   398   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   399   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   400   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   401  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   402  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextAbort,
; ..\component\Os\Implementation\Os_Hal_Context.h	   403  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   404    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   405    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   406  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   407  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   408    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   409    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   410  
; ..\component\Os\Implementation\Os_Hal_Context.h	   411    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   412    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   413  
; ..\component\Os\Implementation\Os_Hal_Context.h	   414    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   415    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   416  
; ..\component\Os\Implementation\Os_Hal_Context.h	   417    /* #20 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   418    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   419  
; ..\component\Os\Implementation\Os_Hal_Context.h	   420    /* #30 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   421    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   422    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   423  
; ..\component\Os\Implementation\Os_Hal_Context.h	   424    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   425    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   426  
; ..\component\Os\Implementation\Os_Hal_Context.h	   427    /* #50 Cleanup the CSAs and re-initialize the context only with the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   428    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   429    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   430  
; ..\component\Os\Implementation\Os_Hal_Context.h	   431    /* #60 Overwrite the context pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   432    Context->PreviousContextInfo = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   433  
; ..\component\Os\Implementation\Os_Hal_Context.h	   434    /* #70 Overwrite the link register to the address of Os_IsrEpilogue */
; ..\component\Os\Implementation\Os_Hal_Context.h	   435    Context->Lr = Config->ReturnAddress;                                                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   436  
; ..\component\Os\Implementation\Os_Hal_Context.h	   437    /* #80 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   438    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   439  
; ..\component\Os\Implementation\Os_Hal_Context.h	   440    /* #90 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   441    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   442    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   443  
; ..\component\Os\Implementation\Os_Hal_Context.h	   444    /* #100 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   445    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   446  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   447  
; ..\component\Os\Implementation\Os_Hal_Context.h	   448  
; ..\component\Os\Implementation\Os_Hal_Context.h	   449  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   450   *  Os_Hal_ContextReturn()
; ..\component\Os\Implementation\Os_Hal_Context.h	   451   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   452   /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   453    *
; ..\component\Os\Implementation\Os_Hal_Context.h	   454    * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   455   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   456   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   457   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   458   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   459    */
; ..\component\Os\Implementation\Os_Hal_Context.h	   460  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   461  Os_Hal_ContextReturn,
; ..\component\Os\Implementation\Os_Hal_Context.h	   462  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   463    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Current,
; ..\component\Os\Implementation\Os_Hal_Context.h	   464    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Next
; ..\component\Os\Implementation\Os_Hal_Context.h	   465  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   466  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   467    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   468  
; ..\component\Os\Implementation\Os_Hal_Context.h	   469    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   470    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   471  
; ..\component\Os\Implementation\Os_Hal_Context.h	   472    /* #20 Clean up the used CSAs. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   473    Os_Hal_ContextIntCleanupCSAs(Current, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   474  
; ..\component\Os\Implementation\Os_Hal_Context.h	   475    /* #30 Restore the saved context. The interrupt state is assumed to be adjusted in core code */
; ..\component\Os\Implementation\Os_Hal_Context.h	   476    Os_Hal_ContextIntRestore(Next);                                                                                       /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   477  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   478  
; ..\component\Os\Implementation\Os_Hal_Context.h	   479  
; ..\component\Os\Implementation\Os_Hal_Context.h	   480  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   481   *  Os_Hal_ContextIsExceptionContextReadingSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   482   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   483  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   484  Os_Hal_ContextIsExceptionContextReadingSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   485  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   486    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   487  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   488  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   489    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   490  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   491  
; ..\component\Os\Implementation\Os_Hal_Context.h	   492  
; ..\component\Os\Implementation\Os_Hal_Context.h	   493  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   494   *  Os_Hal_ContextIsExceptionContextModificationSupported()
; ..\component\Os\Implementation\Os_Hal_Context.h	   495   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   496  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   497  Os_Hal_ContextIsExceptionContextModificationSupported,
; ..\component\Os\Implementation\Os_Hal_Context.h	   498  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   499    void
; ..\component\Os\Implementation\Os_Hal_Context.h	   500  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   501  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   502    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   503  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   504  
; ..\component\Os\Implementation\Os_Hal_Context.h	   505  
; ..\component\Os\Implementation\Os_Hal_Context.h	   506  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   507  *  Os_Hal_ContextIntCleanupCSAs()
; ..\component\Os\Implementation\Os_Hal_Context.h	   508  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   509  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   510   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   511   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   512   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   513   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   514   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   515   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   516   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   517  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   518  Os_Hal_ContextIntCleanupCSAs,
; ..\component\Os\Implementation\Os_Hal_Context.h	   519  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   520    P2CONST(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   521    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_CONST) PreviousGlobalIntState
; ..\component\Os\Implementation\Os_Hal_Context.h	   522  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   523  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   524    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   525    uint32 FirstPCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   526  
; ..\component\Os\Implementation\Os_Hal_Context.h	   527    /* #10 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   528    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   529  
; ..\component\Os\Implementation\Os_Hal_Context.h	   530    /* #20 Create a dummy CSA just for the case that the context list is empty */
; ..\component\Os\Implementation\Os_Hal_Context.h	   531    Os_Hal_Svlcx();
; ..\component\Os\Implementation\Os_Hal_Context.h	   532    Os_Hal_Dsync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   533  
; ..\component\Os\Implementation\Os_Hal_Context.h	   534    /* #30 Cleanup the CSAs based on the stored InitPCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   535    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   536    FirstPCXIAddr = Os_Hal_GetCsaAddress(Context->InitPCXI);
; ..\component\Os\Implementation\Os_Hal_Context.h	   537    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, *(uint32*)FirstPCXIAddr);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   538    *(uint32*)FirstPCXIAddr = Os_Hal_Mfcr(OS_HAL_FCX_OFFSET);                                                             /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_FIRST_PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   539    Os_Hal_Mtcr(OS_HAL_FCX_OFFSET, PCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   540    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   541  
; ..\component\Os\Implementation\Os_Hal_Context.h	   542    /* #40 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   543    Os_Hal_IntSetGlobalState(PreviousGlobalIntState);                                                                     /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   544  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   545  
; ..\component\Os\Implementation\Os_Hal_Context.h	   546  
; ..\component\Os\Implementation\Os_Hal_Context.h	   547  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   548  *  Os_Hal_ContextIntPrepareCSAContent()
; ..\component\Os\Implementation\Os_Hal_Context.h	   549  **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   550  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   551   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   552   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   553   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   554   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   555   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   556   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   557   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   558   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   559   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   561   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   562  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   563  Os_Hal_ContextIntPrepareCSAContent,
; ..\component\Os\Implementation\Os_Hal_Context.h	   564  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   565    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig,
; ..\component\Os\Implementation\Os_Hal_Context.h	   566    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   567  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   568  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   569    uint32 PCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   570    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   571  
; ..\component\Os\Implementation\Os_Hal_Context.h	   572    /* #10 Adapt the created CSA entry based on the thread configuration */
; ..\component\Os\Implementation\Os_Hal_Context.h	   573    PCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   574    PCXIAddr = Os_Hal_GetCsaAddress(PCXIRaw);
	insert	d15,d2,#0,#16,#16
	and	d1,d2
	sh	d0,d1,#12
.L249:
	sh	d15,#6
.L230:
	or	d0,d15
.L372:

; ..\component\Os\Implementation\Os_Hal_Context.h	   575  
; ..\component\Os\Implementation\Os_Hal_Context.h	   576    /* #20 Initialize the program status word with call depth 1 due to the reserved CSA frame */
; ..\component\Os\Implementation\Os_Hal_Context.h	   577    *(uint32*)(PCXIAddr + OS_HAL_CSA_PSW_OFFSET) = CurrentConfig->ProgramStatus | OS_HAL_PSW_CDC_1;                       /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d0,#4
.L373:
	mov.a	a2,d15
.L374:
	ld.w	d15,[a15]8
.L375:
	or	d15,#1
	st.w	[a2],d15
.L376:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	ld.w	d1,[a15]12
.L377:
	or	d15,d1
	st.w	[a2],d15
.L378:

; ..\component\Os\Implementation\Os_Hal_Context.h	   578  
; ..\component\Os\Implementation\Os_Hal_Context.h	   579    /* #25 Initialize the PPRS register */
; ..\component\Os\Implementation\Os_Hal_Context.h	   580    Os_Hal_ContextPreparePRS(PCXIAddr, CurrentConfig);                                                                    /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   581  
; ..\component\Os\Implementation\Os_Hal_Context.h	   582    /* #30 Initialize the stack pointer */
; ..\component\Os\Implementation\Os_Hal_Context.h	   583    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = CurrentConfig->StackEndAddr;                                            /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d0,#8
.L379:
	mov.a	a2,d15
.L380:
	ld.w	d15,[a15]
.L381:
	st.w	[a2],d15
.L382:

; ..\component\Os\Implementation\Os_Hal_Context.h	   584  
; ..\component\Os\Implementation\Os_Hal_Context.h	   585    /* #40 Initialize the return address */
; ..\component\Os\Implementation\Os_Hal_Context.h	   586    *(uint32*)(PCXIAddr + OS_HAL_CSA_RA_UPPER_OFFSET) = CurrentConfig->ReturnAddress;                                     /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
	add	d15,d0,#12
.L383:
	mov.a	a2,d15
.L384:
	ld.w	d15,[a15]20
.L385:
	st.w	[a2],d15
.L386:

; ..\component\Os\Implementation\Os_Hal_Context.h	   587  
; ..\component\Os\Implementation\Os_Hal_Context.h	   588    /* #50 Initialize the interrupt status */
; ..\component\Os\Implementation\Os_Hal_Context.h	   589    PCXIRaw &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);
	insert	d0,d2,#0,#21,#9
.L231:

; ..\component\Os\Implementation\Os_Hal_Context.h	   590    PCXIRaw |= OS_HAL_PCXI_UL_MASK | CurrentConfig->IntStatus;
	ld.w	d15,[a15]24
.L387:
	insert	d15,d15,#1,#20,#1
.L232:
	or	d0,d15
	fret
.L30:
	; End of function
	.calls	'Os_ThreadSuicide','Os_SchedulerInternalSchedule'
	.calls	'Os_ThreadSuicide','Os_ServiceCallForceRelease'
	.calls	'Os_ThreadSuicide','Os_ErrProtectionError'
	.calls	'Os_ThreadSuicide','__INDIRECT__'
	.calls	'Os_ThreadSuicide','Os_ErrKernelPanic'
	.calls	'Os_ThreadSuicide','Os_IsrEpilogue'
	.calls	'Os_ThreadSuicide','Os_HookReturn'
	.calls	'Os_ThreadSuicide','.cocofun_1'
	.calls	'Os_ThreadSuicide','',0
	.extern	Os_ErrKernelPanic
	.extern	Os_ErrProtectionError
	.extern	OsCfg_CorePhysicalRefs
	.extern	Os_SchedulerInternalSchedule
	.extern	Os_HookReturn
	.extern	Os_IsrEpilogue
	.extern	Os_ServiceCallForceRelease
	.extern	__INDIRECT__
	.calls	'.cocofun_1','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L18:
	.word	106401
	.half	3
	.word	.L19
	.byte	4
.L17:
	.byte	1
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L20
.L42:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Os_Hal_Mfa10',0,3,1,190,4,1
	.word	136
	.byte	1,1,4,0,3
	.byte	'Os_Hal_Mfa11',0,3,1,206,4,1
	.word	136
	.byte	1,1,4,0
.L40:
	.byte	3
	.byte	'Os_Hal_Mfa8',0,3,1,222,4,1
	.word	136
	.byte	1,1
.L41:
	.byte	4,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Os_ErrIsValueLo',0,3,2,202,18,1
	.word	237
	.byte	1,1,5
	.byte	'Id',0,2,202,18,1
	.word	136
	.byte	5
	.byte	'Compare',0,2,202,18,1
	.word	136
	.byte	4,0,3
	.byte	'Os_ErrExtendedCheck',0,3,2,216,18,1
	.word	237
	.byte	1,1,5
	.byte	'Value',0,2,216,18,1
	.word	237
	.byte	4,0,6
	.byte	'Os_Assert',0,3,2,140,19,1,1,1,5
	.byte	'Condition',0,2,140,19,1
	.word	237
	.byte	4,0,2
	.byte	'unsigned char',0,1,8,7,3,172,4,9,2,8
	.byte	'OS_STATUS_OK',0,0,8
	.byte	'OS_STATUS_CALLEVEL',0,2,8
	.byte	'OS_STATUS_LIMIT',0,4,8
	.byte	'OS_STATUS_RESOURCE',0,6,8
	.byte	'OS_STATUS_SERVICEID',0,9,8
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,8
	.byte	'OS_STATUS_MISSINGEND',0,11,8
	.byte	'OS_STATUS_DISABLEDINT',0,12,8
	.byte	'OS_STATUS_STACKFAULT',0,13,8
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,8
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,8
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,8
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,8
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,8
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,8
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,8
	.byte	'OS_STATUS_SPINLOCK',0,21,8
	.byte	'OS_STATUS_CORE',0,22,8
	.byte	'OS_STATUS_OVERFLOW',0,245,1,8
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,8
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,8
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,8
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,8
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,8
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,8
	.byte	'OS_STATUS_API_ERROR',0,252,1,8
	.byte	'OS_STATUS_ASSERTION',0,253,1,8
	.byte	'OS_STATUS_OVERLOAD',0,254,1,8
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,8
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,8
	.byte	'OS_STATUS_ID_1',0,131,2,8
	.byte	'OS_STATUS_UNLOCKED',0,133,2,8
	.byte	'OS_STATUS_STATE_1',0,135,2,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,8
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,8
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,8
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,8
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,8
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,8
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,8
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,8
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,8
	.byte	'OS_STATUS_ID_2',0,131,4,8
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,8
	.byte	'OS_STATUS_STATE_2',0,135,4,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,8
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,8
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,8
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,8
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,8
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,8
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,8
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,8
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,8
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,8
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,8
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,8
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,8
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,8
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,8
	.byte	'OS_STATUS_STOPPED_1',0,133,10,8
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,8
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,8
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,8
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,8
	.byte	'OS_STATUS_NEXTED_1',0,133,14,8
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,8
	.byte	'OS_STATUS_LOCKED',0,129,16,8
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,8
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,8
	.byte	'OS_STATUS_PRIORITY',0,129,18,8
	.byte	'OS_STATUS_ORDER',0,133,18,8
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,8
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,8
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,8
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,3
	.byte	'Os_ErrOsStatus2UserStatus',0,3,2,185,19,1
	.word	400
	.byte	1,1,5
	.byte	'OsStatus',0,2,185,19,1
	.word	417
	.byte	4,0,3
	.byte	'Os_ErrIsPropagationRequired',0,3,2,203,19,1
	.word	237
	.byte	1,1,5
	.byte	'OsStatus',0,2,203,19,1
	.word	417
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableGlobal',0,3,4,92,1,1,1,4,0,6
	.byte	'Os_Hal_IntDisableGlobal',0,3,4,108,1,1,1,4,0,3
	.byte	'Os_Hal_IntDisableAndReturnGlobalState',0,3,4,125,1
	.word	136
	.byte	1,1,4,0,9
	.word	136
	.byte	10
	.word	3158
.L104:
	.byte	6
	.byte	'Os_Hal_IntSetGlobalState',0,3,4,148,1,1,1,1
.L106:
	.byte	5
	.byte	'State',0,4,148,1,1
	.word	3163
.L108:
	.byte	4,0,10
	.word	136
	.byte	6
	.byte	'Os_Hal_IntGetLevel',0,3,4,173,1,1,1,1,5
	.byte	'Level',0,4,173,1,1
	.word	3218
	.byte	4,0,9
	.word	136
	.byte	10
	.word	3267
	.byte	6
	.byte	'Os_Hal_IntSetLevel',0,3,4,194,1,1,1,1,5
	.byte	'Level',0,4,194,1,1
	.word	3272
	.byte	11,4,4,0,0,10
	.word	136
	.byte	6
	.byte	'Os_Hal_IntGetGlobalEnable',0,3,4,223,1,1,1,1,5
	.byte	'State',0,4,223,1,1
	.word	3324
	.byte	4,0,6
	.byte	'Os_Hal_IntGetCat2LockLevel',0,3,4,242,1,1,1,1,5
	.byte	'Level',0,4,242,1,1
	.word	3218
	.byte	4,0,6
	.byte	'Os_Hal_IntGetTaskLevel',0,3,4,171,2,1,1,1,5
	.byte	'Level',0,4,171,2,1
	.word	3218
	.byte	4,0,10
	.word	136
	.byte	6
	.byte	'Os_Hal_IntGetInterruptState',0,3,4,190,2,1,1,1,5
	.byte	'InterruptState',0,4,190,2,1
	.word	3480
	.byte	4,0,12
	.byte	'Os_Hal_IntIsrConfigType_Tag',0,5,118,8,12,13
	.byte	'Level',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Source',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'CoreAssignment',0
	.word	400
	.byte	1,2,35,8,0,9
	.word	3547
	.byte	10
	.word	3636
	.byte	6
	.byte	'Os_Hal_IntDisableSource',0,3,4,212,2,1,1,1,5
	.byte	'IsrConfig',0,4,212,2,1
	.word	3641
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableSource',0,3,4,246,2,1,1,1,5
	.byte	'IsrConfig',0,4,246,2,1
	.word	3641
	.byte	4,0,6
	.byte	'Os_Hal_IntClearPending',0,3,4,162,3,1,1,1,5
	.byte	'IsrConfig',0,4,162,3,1
	.word	3641
	.byte	4,0,3
	.byte	'Os_Hal_IntIsrLevelIsLe',0,3,4,179,4,1
	.word	237
	.byte	1,1,5
	.byte	'IsrConfig',0,4,179,4,1
	.word	3641
	.byte	5
	.byte	'Level',0,4,179,4,1
	.word	3272
	.byte	4,0,3
	.byte	'Os_Hal_IntLevelIsGt',0,3,4,199,4,1
	.word	237
	.byte	1,1,5
	.byte	'LevelX',0,4,199,4,1
	.word	3272
	.byte	5
	.byte	'LevelY',0,4,199,4,1
	.word	3272
	.byte	4,0,6
	.byte	'Os_Hal_IntInterruptSourceInit',0,3,4,141,5,1,1,1,5
	.byte	'InterruptSource',0,4,141,5,1
	.word	3641
	.byte	4,0
.L99:
	.byte	6
	.byte	'Os_Hal_IntGetGlobalState',0,3,4,221,5,1,1,1
.L101:
	.byte	5
	.byte	'State',0,4,221,5,1
	.word	3324
.L103:
	.byte	4,0,9
	.word	136
	.byte	10
	.word	4055
	.byte	6
	.byte	'Os_Hal_InitializeAccessDPRE',0,3,6,109,1,1,1,5
	.byte	'Value',0,6,109,1
	.word	4060
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessDPWE',0,3,6,127,1,1,1,5
	.byte	'Value',0,6,127,1
	.word	4060
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessCPXE',0,3,6,145,1,1,1,1,5
	.byte	'Value',0,6,145,1,1
	.word	4060
	.byte	4,0,9
	.word	400
	.byte	9
	.word	136
	.byte	9
	.word	136
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPRE',0,3,6,163,1,1,1,1,5
	.byte	'ProtectionSet',0,6,163,1,1
	.word	4220
	.byte	5
	.byte	'Mask',0,6,163,1,1
	.word	4225
	.byte	5
	.byte	'Value',0,6,163,1,1
	.word	4230
	.byte	4,0,9
	.word	400
	.byte	9
	.word	136
	.byte	9
	.word	136
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPWE',0,3,6,200,1,1,1,1,5
	.byte	'ProtectionSet',0,6,200,1,1
	.word	4325
	.byte	5
	.byte	'Mask',0,6,200,1,1
	.word	4330
	.byte	5
	.byte	'Value',0,6,200,1,1
	.word	4335
	.byte	4,0,9
	.word	400
	.byte	9
	.word	136
	.byte	9
	.word	136
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessCPXE',0,3,6,237,1,1,1,1,5
	.byte	'ProtectionSet',0,6,237,1,1
	.word	4430
	.byte	5
	.byte	'Mask',0,6,237,1,1
	.word	4435
	.byte	5
	.byte	'Value',0,6,237,1,1
	.word	4440
	.byte	4,0,9
	.word	136
	.byte	12
	.byte	'Os_Hal_ContextConfigType_Tag',0,7,153,1,8,28,13
	.byte	'StackEndAddr',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'StackStartAddr',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'ProgramStatus',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'ProtectionSet',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'Entry',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'ReturnAddress',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'IntStatus',0
	.word	136
	.byte	4,2,35,24,0,9
	.word	4540
	.byte	10
	.word	4725
.L177:
	.byte	6
	.byte	'Os_Hal_ContextPreparePRS',0,3,6,145,2,1,1,1
.L180:
	.byte	5
	.byte	'PcxiAddr',0,6,145,2,1
	.word	4535
.L182:
	.byte	5
	.byte	'CurrentConfig',0,6,145,2,1
	.word	4730
.L184:
	.byte	4,0
.L84:
	.byte	3
	.byte	'Os_Hal_CoreGetId',0,3,6,158,2,1
	.word	136
	.byte	1,1
.L86:
	.byte	4,0,12
	.byte	'Os_Hal_ContextType_Tag',0,7,115,8,28,13
	.byte	'Lr',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'PreviousContextInfo',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'InitPCXI',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'RunningPCXI',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'MpuRegionForStackLow',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'MpuRegionForStackUpper',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'A4',0
	.word	136
	.byte	4,2,35,24,0,10
	.word	4842
	.byte	10
	.word	136
	.byte	12
	.byte	'Os_StackConfigType_Tag',0,11,104,8,8,13
	.byte	'LowAddress',0
	.word	5030
	.byte	4,2,35,0,13
	.byte	'HighAddress',0
	.word	5030
	.byte	4,2,35,4,0,9
	.word	5035
	.byte	10
	.word	5105
	.byte	12
	.byte	'Os_LockType_Tag',0,12,82,8,4,13
	.byte	'Next',0
	.word	.L254-.L18
	.byte	4,2,35,0,0,10
	.word	5115
	.byte	7,12,73,9,1,8
	.byte	'OS_LOCKTYPE_RESOURCE_STANDARD',0,0,8
	.byte	'OS_LOCKTYPE_RESOURCE_INTERRUPT',0,1,8
	.byte	'OS_LOCKTYPE_SPINLOCK',0,2,0,12
	.byte	'Os_LockConfigType_Tag',0,12,92,8,12,13
	.byte	'Dyn',0
	.word	5151
	.byte	4,2,35,0,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'Type',0
	.word	5156
	.byte	1,2,35,8,0,9
	.word	5250
.L254:
	.byte	10
	.word	5336
	.byte	14
	.byte	'Os_LockListType',0,13,65,55
	.word	5341
	.byte	7,14,135,1,9,1,8
	.byte	'OS_SPINLOCKMETHOD_ALL_INT',0,0,8
	.byte	'OS_SPINLOCKMETHOD_CAT2',0,1,8
	.byte	'OS_SPINLOCKMETHOD_SCHEDULER',0,2,8
	.byte	'OS_SPINLOCKMETHOD_NOTHING',0,3,0,2
	.byte	'unsigned short int',0,2,7,7,14,149,1,9,1,8
	.byte	'OS_SPINLOCKMODE_USER',0,0,8
	.byte	'OS_SPINLOCKMODE_SUPERVISOR',0,1,0,7,14,160,1,9,1,8
	.byte	'OS_SPINLOCKTRACE_DISABLED',0,0,8
	.byte	'OS_SPINLOCKTRACE_ENABLED',0,1,0,7,14,173,1,9,1,8
	.byte	'OS_SPINLOCKCHECK_DISABLED',0,0,8
	.byte	'OS_SPINLOCKCHECK_ENABLED',0,1,0,7,16,227,1,9,1,8
	.byte	'OS_TRACE_NUMBER_OF_ALL_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_NUMBER_OF_CONFIGURED_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_INVALID_SPINLOCK',0,1,0,12
	.byte	'Os_TraceSpinlockConfigType_Tag',0,15,148,4,8,1,13
	.byte	'SpinlockId',0
	.word	5693
	.byte	1,2,35,0,0,9
	.word	5805
	.byte	10
	.word	5863
	.byte	12
	.byte	'Os_SpinlockConfigType_Tag',0,14,214,1,8,24,13
	.byte	'Lock',0
	.word	5250
	.byte	12,2,35,0,13
	.byte	'Method',0
	.word	5370
	.byte	1,2,35,12,13
	.byte	'CeilingPriority',0
	.word	5488
	.byte	2,2,35,14,13
	.byte	'Mode',0
	.word	5510
	.byte	1,2,35,16,13
	.byte	'Trace',0
	.word	5569
	.byte	1,2,35,17,13
	.byte	'Checks',0
	.word	5631
	.byte	1,2,35,18,13
	.byte	'Order',0
	.word	400
	.byte	1,2,35,19,13
	.byte	'TimingHookTrace',0
	.word	5868
	.byte	4,2,35,20,0,9
	.word	5873
	.byte	10
	.word	6046
	.byte	14
	.byte	'Os_SpinlockListType',0,17,62,59
	.word	6051
	.byte	7,3,128,3,9,1,8
	.byte	'APPLICATION_TERMINATED',0,0,8
	.byte	'APPLICATION_RESTARTING',0,1,8
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,15,18,118,9,1,13
	.byte	'State',0
	.word	6084
	.byte	1,2,35,0,0,10
	.word	6166
	.byte	7,19,223,1,9,1,8
	.byte	'OS_CORESTATE_INACTIVE',0,0,8
	.byte	'OS_CORESTATE_ACTIVATED_ASR',0,1,8
	.byte	'OS_CORESTATE_ACTIVATED_NONASR',0,2,0,16,1
	.word	6192
	.byte	17,0,0,12
	.byte	'Os_CoreStatusType_Tag',0,19,251,1,8,2,13
	.byte	'ActivationState',0
	.word	6192
	.byte	1,2,35,0,13
	.byte	'CoreStartRequests',0
	.word	6284
	.byte	1,2,35,1,0,18
	.word	6293
	.byte	10
	.word	6374
	.byte	12
	.byte	'Os_Hal_CoreConfigType_Tag',0,9,99,8,24,13
	.byte	'CoreId',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ProgramCounterRegister',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'StartLabelAddress',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'DBGSRRegister',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'SYSCON_CORECON_Register',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'BOOTCONRegister',0
	.word	136
	.byte	4,2,35,20,0,9
	.word	6384
	.byte	10
	.word	6572
	.byte	12
	.byte	'Os_Hal_IntIsrMapConfigType_Tag',0,5,132,1,8,4,13
	.byte	'dummy',0
	.word	136
	.byte	4,2,35,0,0,9
	.word	6582
	.byte	10
	.word	6635
	.byte	12
	.byte	'Os_IsrHwConfigType_Tag',0,20,154,1,8,12,13
	.byte	'HwConfig',0
	.word	3641
	.byte	4,2,35,0,13
	.byte	'MapConfig',0
	.word	6640
	.byte	4,2,35,4,13
	.byte	'IsMapped',0
	.word	400
	.byte	1,2,35,8,13
	.byte	'IsPostActionRequired',0
	.word	400
	.byte	1,2,35,9,0,9
	.word	6645
	.byte	10
	.word	6760
	.byte	14
	.byte	'Os_InterruptSourceConfigRefType',0,19,172,2,56
	.word	6765
	.byte	9
	.word	6770
	.byte	10
	.word	6811
	.byte	7,21,86,9,1,8
	.byte	'OS_CORE_ID_0',0,0,8
	.byte	'OS_CORE_ID_MASTER',0,0,8
	.byte	'OS_COREID_COUNT',0,1,0,7,15,204,2,9,1,8
	.byte	'OS_TRACE_TASK_ACTIVATION',0,1,8
	.byte	'OS_TRACE_ISR_START',0,2,8
	.byte	'OS_TRACE_TASK_SETEVENT',0,4,8
	.byte	'OS_TRACE_TASK_GOTSEMA',0,8,8
	.byte	'OS_TRACE_THREAD_RESUME',0,16,8
	.byte	'OS_TRACE_THREAD_CLEANUP',0,32,8
	.byte	'OS_TRACE_THREAD_MISC',0,33,0,12
	.byte	'Os_TraceThreadType_Tag',0,15,244,3,8,1,13
	.byte	'NextRunReason',0
	.word	6880
	.byte	1,2,35,0,0,10
	.word	7058
	.byte	7,16,220,1,9,1,8
	.byte	'OS_TRACE_THREADID_COUNT',0,0,8
	.byte	'OS_TRACE_INVALID_THREAD',0,1,0,7,15,228,3,9,1,8
	.byte	'OS_TRACE_THREAD_TYPE_TASK',0,0,8
	.byte	'OS_TRACE_THREAD_TYPE_ISR',0,1,8
	.byte	'OS_TRACE_THREAD_TYPE_MISC',0,2,0,12
	.byte	'Os_TraceThreadConfigType_Tag',0,15,254,3,8,8,13
	.byte	'Dyn',0
	.word	7111
	.byte	4,2,35,0,13
	.byte	'Id',0
	.word	7116
	.byte	1,2,35,4,13
	.byte	'Type',0
	.word	7175
	.byte	1,2,35,5,0,9
	.word	7265
	.byte	10
	.word	7340
	.byte	12
	.byte	'Os_TraceCoreType_Tag',0,15,137,4,8,12,13
	.byte	'CurrentTask',0
	.word	7345
	.byte	4,2,35,0,13
	.byte	'CurrentIsr',0
	.word	7345
	.byte	4,2,35,4,13
	.byte	'OrtiCurrentServiceId',0
	.word	400
	.byte	1,2,35,8,0,10
	.word	7350
	.byte	12
	.byte	'Os_CoreConfigType_Tag',0,19,176,2,8,24,13
	.byte	'Status',0
	.word	6379
	.byte	4,2,35,0,13
	.byte	'HwConfig',0
	.word	6577
	.byte	4,2,35,4,13
	.byte	'InterruptSourceRefs',0
	.word	6816
	.byte	4,2,35,8,13
	.byte	'InterruptSourceCount',0
	.word	5488
	.byte	2,2,35,12,13
	.byte	'Id',0
	.word	6821
	.byte	1,2,35,14,13
	.byte	'Trace',0
	.word	7449
	.byte	4,2,35,16,13
	.byte	'IsAsrCore',0
	.word	400
	.byte	1,2,35,20,13
	.byte	'IsAutostart',0
	.word	400
	.byte	1,2,35,21,13
	.byte	'IsMasterStartAllowed',0
	.word	400
	.byte	1,2,35,22,13
	.byte	'IsHardwareInitCore',0
	.word	400
	.byte	1,2,35,23,0,15,23,67,9,8,13
	.byte	'Global',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Level',0
	.word	136
	.byte	4,2,35,4,0,15,22,81,9,6,19
	.byte	'InDisableAll',0,1
	.word	400
	.byte	1,7,2,35,0,13
	.byte	'SuspendAllCounter',0
	.word	5488
	.byte	2,2,35,2,13
	.byte	'SuspendOsCounter',0
	.word	5488
	.byte	2,2,35,4,0,12
	.byte	'Os_IntApiStateType_Tag',0,22,89,8,28,13
	.byte	'SuspendAllPrevState',0
	.word	7701
	.byte	8,2,35,0,13
	.byte	'SuspendOsPrevState',0
	.word	7701
	.byte	8,2,35,8,13
	.byte	'Os_IntLockingState',0
	.word	7738
	.byte	6,2,35,16,13
	.byte	'SuspendAllSnapshot',0
	.word	5488
	.byte	2,2,35,22,13
	.byte	'SuspendOsSnapshot',0
	.word	5488
	.byte	2,2,35,24,0,2
	.byte	'short int',0,2,5,14
	.byte	'Os_CoreInterruptedThreadsType',0,19,164,2,57
	.word	.L255-.L18
	.byte	16,40
	.word	8003
	.byte	17,9,0,7,3,177,3,9,1,8
	.byte	'OSServiceId_GetApplicationID',0,0,8
	.byte	'OSServiceId_GetISRID',0,1,8
	.byte	'OSServiceId_CallTrustedFunction',0,2,8
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,8
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,8
	.byte	'OSServiceId_CheckObjectAccess',0,5,8
	.byte	'OSServiceId_CheckObjectOwnership',0,6,8
	.byte	'OSServiceId_StartScheduleTableRel',0,7,8
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,8
	.byte	'OSServiceId_StopScheduleTable',0,9,8
	.byte	'OSServiceId_NextScheduleTable',0,10,8
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,8
	.byte	'OSServiceId_SyncScheduleTable',0,12,8
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,8
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,8
	.byte	'OSServiceId_IncrementCounter',0,15,8
	.byte	'OSServiceId_GetCounterValue',0,16,8
	.byte	'OSServiceId_GetElapsedValue',0,17,8
	.byte	'OSServiceId_TerminateApplication',0,18,8
	.byte	'OSServiceId_AllowAccess',0,19,8
	.byte	'OSServiceId_GetApplicationState',0,20,8
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,8
	.byte	'OSServiceId_GetCoreID',0,22,8
	.byte	'OSServiceId_StartCore',0,23,8
	.byte	'OSServiceId_StartNonAutosarCore',0,24,8
	.byte	'OSServiceId_GetSpinlock',0,25,8
	.byte	'OSServiceId_ReleaseSpinlock',0,26,8
	.byte	'OSServiceId_TryToGetSpinlock',0,27,8
	.byte	'OSServiceId_ShutdownAllCores',0,28,8
	.byte	'OSServiceId_ControlIdle',0,29,8
	.byte	'OSServiceId_IocSend',0,30,8
	.byte	'OSServiceId_IocWrite',0,31,8
	.byte	'OSServiceId_IocSendGroup',0,32,8
	.byte	'OSServiceId_IocWriteGroup',0,33,8
	.byte	'OSServiceId_IocReceive',0,34,8
	.byte	'OSServiceId_IocRead',0,35,8
	.byte	'OSServiceId_IocReceiveGroup',0,36,8
	.byte	'OSServiceId_IocReadGroup',0,37,8
	.byte	'OSServiceId_IocEmptyQueue',0,38,8
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,8
	.byte	'OSServiceId_GetExceptionContext',0,160,1,8
	.byte	'OSServiceId_SetExceptionContext',0,161,1,8
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,8
	.byte	'OSServiceId_AppKill',0,163,1,8
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,8
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,8
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,8
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,8
	.byte	'OSServiceId_TimerIsr',0,168,1,8
	.byte	'OSServiceId_IsrWrapper',0,169,1,8
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,8
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,8
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,8
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,8
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,8
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,8
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,8
	.byte	'OSServiceId_GetSemaphore',0,177,1,8
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,8
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,8
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,8
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,8
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,8
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,8
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,8
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,8
	.byte	'OSServiceId_HookCallCallback',0,186,1,8
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,8
	.byte	'OSServiceId_IsInterruptPending',0,188,1,8
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,8
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,8
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,8
	.byte	'OSServiceId_GetCoreStartState',0,192,1,8
	.byte	'OSServiceId_StartOS',0,208,1,8
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,8
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,8
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,8
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,8
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,8
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,8
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,8
	.byte	'OSServiceId_ActivateTask',0,217,1,8
	.byte	'OSServiceId_TerminateTask',0,218,1,8
	.byte	'OSServiceId_ChainTask',0,219,1,8
	.byte	'OSServiceId_GetTaskID',0,220,1,8
	.byte	'OSServiceId_GetTaskState',0,221,1,8
	.byte	'OSServiceId_Schedule',0,222,1,8
	.byte	'OSServiceId_SetEvent',0,223,1,8
	.byte	'OSServiceId_ClearEvent',0,224,1,8
	.byte	'OSServiceId_GetEvent',0,225,1,8
	.byte	'OSServiceId_WaitEvent',0,226,1,8
	.byte	'OSServiceId_GetAlarmBase',0,227,1,8
	.byte	'OSServiceId_GetAlarm',0,228,1,8
	.byte	'OSServiceId_SetRelAlarm',0,229,1,8
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,8
	.byte	'OSServiceId_CancelAlarm',0,231,1,8
	.byte	'OSServiceId_GetResource',0,232,1,8
	.byte	'OSServiceId_ReleaseResource',0,233,1,8
	.byte	'OSSERVICEID_COUNT',0,255,1,0,15,3,133,6,9,4,13
	.byte	'Service',0
	.word	8051
	.byte	1,2,35,0,13
	.byte	'Error',0
	.word	400
	.byte	1,2,35,1,13
	.byte	'DetailedError',0
	.word	417
	.byte	2,2,35,2,0,15,3,220,2,9,12,13
	.byte	'maxallowedvalue',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	136
	.byte	4,2,35,8,0,10
	.word	11258
	.byte	14
	.byte	'AlarmBaseRefType',0,3,231,2,61
	.word	11330
	.byte	7,16,170,1,9,1,8
	.byte	'Rte_Al_TE2_bsw_task_0_10ms',0,0,8
	.byte	'Rte_Al_TE2_bsw_task_0_20ms',0,1,8
	.byte	'Rte_Al_TE_swc_test_swc_test_10ms',0,2,8
	.byte	'Rte_Al_TE_swc_test_swc_test_500ms',0,3,8
	.byte	'OS_ALARMID_COUNT',0,4,0,10
	.word	6084
	.byte	14
	.byte	'ApplicationStateRefType',0,3,163,3,68
	.word	11516
	.byte	7,16,121,9,1,8
	.byte	'OsApplication_OsCore0',0,0,8
	.byte	'SystemApplication_OsCore0',0,1,8
	.byte	'INVALID_OSAPPLICATION',0,2,8
	.byte	'OS_APPID_COUNT',0,2,0,10
	.word	400
	.byte	7,16,180,1,9,1,8
	.byte	'OsCounterCAN0',0,0,8
	.byte	'SystemTimer',0,1,8
	.byte	'OS_COUNTERID_COUNT',0,2,0,2
	.byte	'unsigned long long int',0,8,7,10
	.word	11716
	.byte	7,16,161,1,9,1,8
	.byte	'CanIsr_0',0,0,8
	.byte	'CounterIsr_SystemTimer',0,1,8
	.byte	'INVALID_ISR',0,2,8
	.byte	'OS_ISRID_COUNT',0,2,0,7,3,230,1,9,1,8
	.byte	'IDLE_NO_HALT',0,0,8
	.byte	'OS_IDLEMODE_COUNT',0,1,0,20
	.byte	'void',0,9
	.word	11863
	.byte	10
	.word	11869
	.byte	14
	.byte	'MemoryStartAddressType',0,3,203,6,49
	.word	11874
	.byte	7,16,194,1,9,1,8
	.byte	'OsResource',0,0,8
	.byte	'OS_RESOURCEID_COUNT',0,1,0,7,3,244,2,9,1,8
	.byte	'RESTART',0,0,8
	.byte	'NO_RESTART',0,1,8
	.byte	'OS_RESTARTTYPE_COUNT',0,2,0,7,3,175,6,9,1,8
	.byte	'SCHEDULETABLE_STOPPED',0,0,8
	.byte	'SCHEDULETABLE_NEXT',0,1,8
	.byte	'SCHEDULETABLE_WAITING',0,2,8
	.byte	'SCHEDULETABLE_RUNNING',0,3,8
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,10
	.word	12006
	.byte	14
	.byte	'ScheduleTableStatusRefType',0,3,195,6,34
	.word	12146
	.byte	7,16,188,1,9,1,8
	.byte	'OS_SCHTID_COUNT',0,0,0,7,16,201,1,9,1,8
	.byte	'INVALID_SPINLOCK',0,0,8
	.byte	'OS_SPINLOCKID_COUNT',0,0,0,10
	.word	400
	.byte	15,26,134,1,9,8,13
	.byte	'vendorID',0
	.word	5488
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	5488
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	400
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	400
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	400
	.byte	1,2,35,6,0,10
	.word	12265
	.byte	7,16,148,1,9,1,8
	.byte	'Default_Init_Task',0,0,8
	.byte	'Default_Init_Task_Trusted',0,1,8
	.byte	'IdleTask_OsCore0',0,2,8
	.byte	'bsw_task',0,3,8
	.byte	'swc_init',0,4,8
	.byte	'swc_task',0,5,8
	.byte	'INVALID_TASK',0,6,8
	.byte	'OS_TASKID_COUNT',0,6,0,10
	.word	12391
	.byte	14
	.byte	'TaskRefType',0,3,152,2,56
	.word	12531
	.byte	7,3,161,2,9,1,8
	.byte	'RUNNING',0,0,8
	.byte	'READY',0,1,8
	.byte	'WAITING',0,2,8
	.byte	'SUSPENDED',0,3,0,10
	.word	12557
	.byte	14
	.byte	'TaskStateRefType',0,3,178,2,61
	.word	12604
	.byte	10
	.word	136
	.byte	14
	.byte	'TickRefType',0,3,210,2,56
	.word	12635
	.byte	7,16,130,1,9,1,8
	.byte	'OS_TRUSTEDFUNCTIONID_COUNT',0,0,0,10
	.word	11863
	.byte	14
	.byte	'TrustedFunctionParameterRefType',0,3,204,1,44
	.word	12697
	.byte	7,3,138,2,9,1,8
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,8
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,10
	.word	12743
	.byte	9
	.word	12743
	.byte	10
	.word	12811
	.byte	7,3,138,3,9,1,8
	.byte	'OBJECT_TASK',0,0,8
	.byte	'OBJECT_ISR',0,1,8
	.byte	'OBJECT_ALARM',0,2,8
	.byte	'OBJECT_RESOURCE',0,3,8
	.byte	'OBJECT_COUNTER',0,4,8
	.byte	'OBJECT_SCHEDULETABLE',0,5,8
	.byte	'OBJECT_SPINLOCK',0,6,0,7,16,136,1,9,1,8
	.byte	'OS_NONTRUSTEDFUNCTIONID_COUNT',0,0,0,14
	.byte	'Os_NonTrustedFunctionParameterRefType',0,3,207,1,44
	.word	12697
	.byte	7,16,142,1,9,1,8
	.byte	'OS_FASTTRUSTEDFUNCTIONID_COUNT',0,0,0,14
	.byte	'Os_FastTrustedFunctionParameterRefType',0,3,210,1,44
	.word	12697
	.byte	10
	.word	136
	.byte	14
	.byte	'Os_ExceptionSourceIdRefType',0,3,250,1,61
	.word	13120
	.byte	10
	.word	136
	.byte	14
	.byte	'Os_InterruptSourceIdRefType',0,3,242,1,61
	.word	13162
	.byte	7,16,208,1,9,1,8
	.byte	'OS_PERIPHERALID_COUNT',0,0,0,10
	.word	11196
	.byte	14
	.byte	'Os_ErrorInformationRefType',0,3,147,6,64
	.word	13235
	.byte	7,16,214,1,9,1,8
	.byte	'OS_BARRIERID_COUNT',0,0,0,16,64
	.word	136
	.byte	17,15,0,12
	.byte	'Os_ExceptionContextType_Tag',0,27,71,8,160,1,13
	.byte	'AddressRegisters',0
	.word	13304
	.byte	64,2,35,0,13
	.byte	'DataRegisters',0
	.word	13304
	.byte	64,2,35,64,13
	.byte	'Ra',0
	.word	136
	.byte	4,3,35,128,1,13
	.byte	'Psw',0
	.word	136
	.byte	4,3,35,132,1,13
	.byte	'ExceptionSource',0
	.word	136
	.byte	4,3,35,136,1,13
	.byte	'Pcpn',0
	.word	136
	.byte	4,3,35,140,1,13
	.byte	'Pie',0
	.word	136
	.byte	4,3,35,144,1,13
	.byte	'MpuRegionForStackLow',0
	.word	136
	.byte	4,3,35,148,1,13
	.byte	'MpuRegionForStackUpper',0
	.word	136
	.byte	4,3,35,152,1,13
	.byte	'RawPCXI',0
	.word	136
	.byte	4,3,35,156,1,0,10
	.word	13313
	.byte	14
	.byte	'Os_ExceptionContextRefType',0,3,254,1,60
	.word	13561
	.byte	7,3,250,6,9,1,8
	.byte	'OS_CORESTARTSTATE_START_UNREQUESTED',0,0,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_ASR',0,1,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_NONASR',0,2,8
	.byte	'OS_CORESTARTSTATE_STARTED_ASR',0,3,8
	.byte	'OS_CORESTARTSTATE_STARTED_NONASR',0,4,0,10
	.word	13602
	.byte	21
	.byte	'Os_ParamType_Tag',0,25,88,7,8,13
	.byte	'ParamAlarmBaseRefType',0
	.word	11335
	.byte	4,2,35,0,13
	.byte	'ParamAlarmType',0
	.word	11361
	.byte	1,2,35,0,13
	.byte	'ParamAppModeType',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ParamApplicationStateRefType',0
	.word	11521
	.byte	4,2,35,0,13
	.byte	'ParamApplicationStateType',0
	.word	6084
	.byte	1,2,35,0,13
	.byte	'ParamApplicationType',0
	.word	11554
	.byte	1,2,35,0,13
	.byte	'Paramboolean',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ParambooleanRefType',0
	.word	11653
	.byte	4,2,35,0,13
	.byte	'ParamCoreIdType',0
	.word	6821
	.byte	1,2,35,0,13
	.byte	'ParamCounterType',0
	.word	11658
	.byte	1,2,35,0,13
	.byte	'ParamEventMaskType',0
	.word	11716
	.byte	8,2,35,0,13
	.byte	'ParamEventMaskRefType',0
	.word	11742
	.byte	4,2,35,0,13
	.byte	'ParamISRType',0
	.word	11747
	.byte	1,2,35,0,13
	.byte	'ParamIdleModeType',0
	.word	11821
	.byte	1,2,35,0,13
	.byte	'ParamMemorySizeType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamMemoryStartAddressType',0
	.word	11879
	.byte	4,2,35,0,13
	.byte	'ParamResourceType',0
	.word	11911
	.byte	1,2,35,0,13
	.byte	'ParamRestartType',0
	.word	11953
	.byte	1,2,35,0,13
	.byte	'ParamScheduleTableStatusRefType',0
	.word	12151
	.byte	4,2,35,0,13
	.byte	'ParamScheduleTableStatusType',0
	.word	12006
	.byte	1,2,35,0,13
	.byte	'ParamScheduleTableType',0
	.word	12187
	.byte	1,2,35,0,13
	.byte	'ParamSpinlockIdType',0
	.word	12212
	.byte	1,2,35,0,13
	.byte	'ParamStatusType',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ParamStatusRefType',0
	.word	12260
	.byte	4,2,35,0,13
	.byte	'ParamStd_VersionInfoRefType',0
	.word	12386
	.byte	4,2,35,0,13
	.byte	'ParamTaskRefType',0
	.word	12536
	.byte	4,2,35,0,13
	.byte	'ParamTaskStateRefType',0
	.word	12609
	.byte	4,2,35,0,13
	.byte	'ParamTaskStateType',0
	.word	12557
	.byte	1,2,35,0,13
	.byte	'ParamTaskType',0
	.word	12391
	.byte	1,2,35,0,13
	.byte	'ParamTickRefType',0
	.word	12640
	.byte	4,2,35,0,13
	.byte	'ParamTickType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamTrustedFunctionIndexType',0
	.word	12661
	.byte	1,2,35,0,13
	.byte	'ParamTrustedFunctionParameterRefType',0
	.word	12702
	.byte	4,2,35,0,13
	.byte	'ParamTryToGetSpinlockRefType',0
	.word	12806
	.byte	4,2,35,0,13
	.byte	'ParamTryToGetSpinlockConstRefType',0
	.word	12816
	.byte	4,2,35,0,13
	.byte	'Paramuint32',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamVoidRefType',0
	.word	11874
	.byte	4,2,35,0,13
	.byte	'ParamObjectTypeType',0
	.word	12821
	.byte	1,2,35,0,13
	.byte	'ParamOs_NonTrustedFunctionIndexType',0
	.word	12946
	.byte	1,2,35,0,13
	.byte	'ParamOs_NonTrustedFunctionParameterRefType',0
	.word	12985
	.byte	4,2,35,0,13
	.byte	'ParamOs_FastTrustedFunctionIndexType',0
	.word	13032
	.byte	1,2,35,0,13
	.byte	'ParamOs_FastTrustedFunctionParameterRefType',0
	.word	13072
	.byte	4,2,35,0,13
	.byte	'ParamExceptionSourceIdType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamInterruptSourceIdType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamExceptionSourceIdRefType',0
	.word	13125
	.byte	4,2,35,0,13
	.byte	'ParamInterruptSourceIdRefType',0
	.word	13167
	.byte	4,2,35,0,13
	.byte	'ParamObjectIdType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamPeripheralIdType',0
	.word	13204
	.byte	1,2,35,0,13
	.byte	'ParamErrorInformationRefType',0
	.word	13240
	.byte	4,2,35,0,13
	.byte	'ParamHookIdType',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamBarrierIdType',0
	.word	13276
	.byte	1,2,35,0,13
	.byte	'ParamExceptionContextRefType',0
	.word	13566
	.byte	4,2,35,0,13
	.byte	'ParamCoreStartStateRefType',0
	.word	13797
	.byte	4,2,35,0,0,16,24
	.word	13802
	.byte	17,2,0,12
	.byte	'Os_ErrorParamsType_Tag',0,24,171,1,8,24,13
	.byte	'Parameter',0
	.word	15536
	.byte	24,2,35,0,0,14
	.byte	'Os_AddressOfConstType',0,3,241,6,43
	.word	11874
	.byte	12
	.byte	'Os_ErrorType_Tag',0,24,177,1,8,32,13
	.byte	'ErrorDetails',0
	.word	11196
	.byte	4,2,35,0,13
	.byte	'Parameters',0
	.word	15545
	.byte	24,2,35,4,13
	.byte	'ExceptionInstructionAddress',0
	.word	15594
	.byte	4,2,35,28,0,7,28,97,9,1,8
	.byte	'OS_UNHANDLEDEVENTREPORT_NOTAVAILABLE',0,0,8
	.byte	'OS_UNHANDLEDEVENTREPORT_AVAILABLE',0,1,0,15,29,123,9,4,13
	.byte	'InHookFlags',0
	.word	136
	.byte	4,2,35,0,0,14
	.byte	'Os_StackConfigRefType',0,19,156,2,56
	.word	5110
	.byte	12
	.byte	'Os_CoreAsrType_Tag',0,19,213,2,8,124,13
	.byte	'IntApiState',0
	.word	7821
	.byte	28,2,35,0,13
	.byte	'InterruptedThreadsCounter',0
	.word	7990
	.byte	2,2,35,28,13
	.byte	'InterruptedThreads',0
	.word	8042
	.byte	40,2,35,32,13
	.byte	'LastError',0
	.word	15625
	.byte	32,2,35,72,13
	.byte	'LastUnhandledIrq',0
	.word	136
	.byte	4,2,35,104,13
	.byte	'UnhandledIrqReported',0
	.word	15728
	.byte	1,2,35,108,13
	.byte	'LastUnhandledExc',0
	.word	136
	.byte	4,2,35,110,13
	.byte	'UnhandledExcReported',0
	.word	15728
	.byte	1,2,35,114,13
	.byte	'IdleMode',0
	.word	11821
	.byte	1,2,35,115,13
	.byte	'HookInfo',0
	.word	15809
	.byte	4,2,35,116,13
	.byte	'CurrentStack',0
	.word	15836
	.byte	4,2,35,120,0,10
	.word	15867
	.byte	15,31,114,9,4,13
	.byte	'AllocationMask',0
	.word	136
	.byte	4,2,35,0,0,10
	.word	16171
	.byte	10
	.word	136
	.byte	15,31,123,9,12,13
	.byte	'Dyn',0
	.word	16201
	.byte	4,2,35,0,13
	.byte	'Data',0
	.word	16206
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	5488
	.byte	2,2,35,8,13
	.byte	'BitLength',0
	.word	5488
	.byte	2,2,35,10,0,7,32,105,9,1,8
	.byte	'OS_TASKSCHEDULE_ALLOWED',0,0,8
	.byte	'OS_TASKSCHEDULE_PROHIBITED',0,1,0,12
	.byte	'Os_TaskConfigType_Tag',0,32,143,1,8,80,13
	.byte	'Thread',0
	.word	.L256-.L18
	.byte	60,2,35,0,13
	.byte	'HomePriority',0
	.word	5488
	.byte	2,2,35,60,13
	.byte	'TaskId',0
	.word	12391
	.byte	1,2,35,62,13
	.byte	'RunningPriority',0
	.word	5488
	.byte	2,2,35,64,13
	.byte	'MaxActivations',0
	.word	400
	.byte	1,2,35,66,13
	.byte	'AutostartModes',0
	.word	400
	.byte	1,2,35,67,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,68,13
	.byte	'NumScheduleEventsRoundRobin',0
	.word	136
	.byte	4,2,35,72,13
	.byte	'RoundRobinEnabled',0
	.word	400
	.byte	1,2,35,76,13
	.byte	'IsExtended',0
	.word	400
	.byte	1,2,35,77,13
	.byte	'Reschedule',0
	.word	16277
	.byte	1,2,35,78,0,9
	.word	16338
.L57:
	.byte	10
	.word	16629
	.byte	12
	.byte	'Os_SchedulerType_Tag',0,30,181,1,8,16,13
	.byte	'NextPriority',0
	.word	5488
	.byte	2,2,35,0,13
	.byte	'NextTask',0
	.word	16634
	.byte	4,2,35,4,13
	.byte	'CurrentPriority',0
	.word	5488
	.byte	2,2,35,8,13
	.byte	'CurrentTask',0
	.word	16634
	.byte	4,2,35,12,0,10
	.word	16639
	.byte	15,33,75,9,8,13
	.byte	'ReadIdx',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'WriteIdx',0
	.word	136
	.byte	4,2,35,4,0,10
	.word	16758
	.byte	15,33,85,9,4,13
	.byte	'Value',0
	.word	16634
	.byte	4,2,35,0,0,10
	.word	16804
	.byte	15,33,92,9,12,13
	.byte	'Dyn',0
	.word	16799
	.byte	4,2,35,0,13
	.byte	'Buffer',0
	.word	16825
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	136
	.byte	4,2,35,8,0,9
	.word	16830
	.byte	10
	.word	16879
	.byte	12
	.byte	'Os_SchedulerConfigType_Tag',0,30,196,1,8,24,13
	.byte	'BitArray',0
	.word	16211
	.byte	12,2,35,0,13
	.byte	'Dyn',0
	.word	16753
	.byte	4,2,35,12,13
	.byte	'TaskQueues',0
	.word	16884
	.byte	4,2,35,16,13
	.byte	'NumberOfPriorities',0
	.word	5488
	.byte	2,2,35,20,0,9
	.word	16889
	.byte	10
	.word	17002
	.byte	7,34,97,9,1,8
	.byte	'Os_HookTaskReturn_ToCallerTask',0,0,8
	.byte	'Os_HookTaskReturn_WithSchedule',0,1,8
	.byte	'Os_HookTaskReturn_BeginScheduling',0,2,0,12
	.byte	'Os_HookConfigType_Tag',0,34,162,1,8,76,13
	.byte	'Thread',0
	.word	.L256-.L18
	.byte	60,2,35,0,13
	.byte	'HookTypeFlag',0
	.word	136
	.byte	4,2,35,60,13
	.byte	'NestingMask',0
	.word	136
	.byte	4,2,35,64,13
	.byte	'Id',0
	.word	136
	.byte	4,2,35,68,13
	.byte	'TaskReturn',0
	.word	17012
	.byte	1,2,35,72,0,22,1,1,10
	.word	17240
	.byte	14
	.byte	'Os_HookVoidHookCbkType',0,34,112,9
	.word	17243
	.byte	12
	.byte	'Os_HookCallbackConfigType_Tag',0,34,195,1,8,80,13
	.byte	'Hook',0
	.word	17120
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17248
	.byte	4,2,35,76,0,9
	.word	17279
	.byte	10
	.word	17348
	.byte	23,1,1,24
	.word	400
	.byte	0,10
	.word	17358
	.byte	14
	.byte	'Os_HookStatusHookCbkType',0,34,109,9
	.word	17367
	.byte	12
	.byte	'Os_HookStatusHookConfigType_Tag',0,34,183,1,8,80,13
	.byte	'Hook',0
	.word	17120
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17372
	.byte	4,2,35,76,0,9
	.word	17405
	.byte	10
	.word	17476
	.byte	7,3,237,5,9,1,8
	.byte	'PRO_IGNORE',0,0,8
	.byte	'PRO_IGNORE_EXCEPTION',0,1,8
	.byte	'PRO_TERMINATETASKISR',0,2,8
	.byte	'PRO_TERMINATEAPPL',0,3,8
	.byte	'PRO_TERMINATEAPPL_RESTART',0,4,8
	.byte	'PRO_SHUTDOWN',0,5,8
	.byte	'OS_PROTECTIONREACTION_COUNT',0,6,0,25
	.word	17486
	.byte	1,1,24
	.word	400
	.byte	0,10
	.word	17645
	.byte	14
	.byte	'Os_HookProtectionHookCbkType',0,34,115,9
	.word	17658
	.byte	12
	.byte	'Os_HookProtectionHookConfigType_Tag',0,34,207,1,8,80,13
	.byte	'Hook',0
	.word	17120
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17663
	.byte	4,2,35,76,0,9
	.word	17700
	.byte	10
	.word	17775
	.byte	14
	.byte	'Os_HookInitHookCbkType',0,34,118,9
	.word	17367
	.byte	12
	.byte	'Os_HookInitHookConfigType_Tag',0,34,218,1,8,80,13
	.byte	'Hook',0
	.word	17120
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17785
	.byte	4,2,35,76,0,9
	.word	17816
	.byte	10
	.word	17885
	.byte	9
	.word	17120
	.byte	10
	.word	17895
	.byte	14
	.byte	'Os_HookConfigRefType',0,29,133,1,55
	.word	17900
	.byte	9
	.word	17905
	.byte	10
	.word	17935
	.byte	14
	.byte	'Os_AppConfigRefType',0,19,128,3,54
	.word	.L257-.L18
	.byte	9
	.word	17945
	.byte	10
	.word	17974
	.byte	12
	.byte	'Os_ResourceConfigType_Tag',0,35,171,1,8,20,13
	.byte	'Lock',0
	.word	5250
	.byte	12,2,35,0,13
	.byte	'Core',0
	.word	.L258-.L18
	.byte	4,2,35,12,13
	.byte	'ResourceId',0
	.word	11911
	.byte	1,2,35,16,13
	.byte	'CeilingPriority',0
	.word	5488
	.byte	2,2,35,18,0,9
	.word	17984
	.byte	10
	.word	18090
	.byte	14
	.byte	'Os_ResourceConfigRefType',0,19,252,2,59
	.word	18095
	.byte	9
	.word	18100
	.byte	10
	.word	18134
	.byte	12
	.byte	'Os_Hal_CoreAsrConfigType_Tag',0,9,127,8,4,13
	.byte	'CoreId',0
	.word	136
	.byte	4,2,35,0,0,9
	.word	18144
	.byte	10
	.word	18195
	.byte	15,37,68,9,8,13
	.byte	'StartAddress',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'EndAddress',0
	.word	136
	.byte	4,2,35,4,0,9
	.word	18205
	.byte	10
	.word	18253
	.byte	16,24
	.word	136
	.byte	17,5,0,12
	.byte	'Os_Hal_MpCoreConfigType_Tag',0,37,93,8,88,13
	.byte	'MpuDataRegionStartSlot',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionCount',0
	.word	400
	.byte	1,2,35,1,13
	.byte	'MpuDataRegions',0
	.word	18258
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionReadEnable',0
	.word	18263
	.byte	24,2,35,8,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	18263
	.byte	24,2,35,32,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	400
	.byte	1,2,35,56,13
	.byte	'MpuCodeRegionCount',0
	.word	400
	.byte	1,2,35,57,13
	.byte	'MpuCodeRegions',0
	.word	18258
	.byte	4,2,35,60,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	18263
	.byte	24,2,35,64,0,9
	.word	18272
	.byte	10
	.word	18579
	.byte	12
	.byte	'Os_MpCoreConfigType_Tag',0,36,124,8,4,13
	.byte	'HwConfig',0
	.word	18584
	.byte	4,2,35,0,0,9
	.word	18589
	.byte	10
	.word	18637
	.byte	12
	.byte	'Os_CounterCharacteristicsConfigType_Tag',0,40,164,1,8,20,13
	.byte	'MaxAllowedValue',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'MaxCountingValue',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'MaxDifferentialValue',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'MinCycle',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'TicksPerBase',0
	.word	136
	.byte	4,2,35,16,0,12
	.byte	'Os_JobType_Tag',0,42,78,8,4,13
	.byte	'ExpirationTimestamp',0
	.word	136
	.byte	4,2,35,0,0,10
	.word	18815
	.byte	9
	.word	.L259-.L18
	.byte	10
	.word	18870
	.byte	9
	.word	.L260-.L18
	.byte	10
	.word	18880
	.byte	23,1,1,24
	.word	18885
	.byte	0,10
	.word	18890
	.byte	14
	.byte	'Os_JobCallbackType',0,42,94,9
	.word	18899
.L260:
	.byte	12
	.byte	'Os_JobConfigType_Tag',0,42,98,8,12,13
	.byte	'Dyn',0
	.word	18865
	.byte	4,2,35,0,13
	.byte	'Counter',0
	.word	18875
	.byte	4,2,35,4,13
	.byte	'Callback',0
	.word	18904
	.byte	4,2,35,8,0,9
	.word	18931
	.byte	10
	.word	19006
	.byte	15,41,77,9,4,13
	.byte	'Data',0
	.word	19011
	.byte	4,2,35,0,0,10
	.word	19016
	.byte	15,41,84,9,2,13
	.byte	'QueueUsage',0
	.word	5488
	.byte	2,2,35,0,0,10
	.word	19041
	.byte	15,41,91,9,12,13
	.byte	'Queue',0
	.word	19036
	.byte	4,2,35,0,13
	.byte	'Dyn',0
	.word	19067
	.byte	4,2,35,4,13
	.byte	'QueueSize',0
	.word	5488
	.byte	2,2,35,8,0,7,43,63,9,1,8
	.byte	'OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER',0,20,8
	.byte	'OS_TIMERTYPE_PERIODIC_TICK',0,39,8
	.byte	'OS_TIMERTYPE_SOFTWARE',0,195,0,8
	.byte	'OS_TIMERTYPE_HIGH_RESOLUTION',0,203,0,0
.L259:
	.byte	12
	.byte	'Os_CounterConfigType_Tag',0,40,209,1,8,48,13
	.byte	'Characteristics',0
	.word	18647
	.byte	20,2,35,0,13
	.byte	'JobQueue',0
	.word	19072
	.byte	12,2,35,20,13
	.byte	'DriverType',0
	.word	19125
	.byte	1,2,35,32,13
	.byte	'Core',0
	.word	.L258-.L18
	.byte	4,2,35,36,13
	.byte	'OwnerApplication',0
	.word	.L257-.L18
	.byte	4,2,35,40,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,44,0,15,39,131,2,9,20,13
	.byte	'Value',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Compare',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'ValueMask',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'HwLastCounterValue',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'HwTimeAtLogicalZero',0
	.word	136
	.byte	4,2,35,16,0,10
	.word	19426
	.byte	12
	.byte	'Os_Hal_TimerFrtConfigType_Tag',0,44,106,8,40,13
	.byte	'CounterRegisterAddress',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'CompareRegisterAddress',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'CMCONRegisterAddress',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'CMCONMask',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'CMCONValue',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'InterruptSRCRegisterAddress',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'ICRRegisterAddress',0
	.word	136
	.byte	4,2,35,24,13
	.byte	'ICRMask',0
	.word	136
	.byte	4,2,35,28,13
	.byte	'ICRValue',0
	.word	136
	.byte	4,2,35,32,13
	.byte	'ReloadValue',0
	.word	136
	.byte	4,2,35,36,0,9
	.word	19546
	.byte	10
	.word	19836
	.byte	12
	.byte	'Os_TimerHrtConfigType_Tag',0,39,158,2,8,56,13
	.byte	'Counter',0
	.word	19260
	.byte	48,2,35,0,13
	.byte	'Dyn',0
	.word	19541
	.byte	4,2,35,48,13
	.byte	'HwConfig',0
	.word	19841
	.byte	4,2,35,52,0,9
	.word	19846
	.byte	10
	.word	19927
	.byte	12
	.byte	'Os_TpType_Tag',0,38,241,2,8,16,13
	.byte	'Snapshot',0
	.word	11716
	.byte	8,2,35,0,13
	.byte	'LastCounterValue',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'MonitoredThread',0
	.word	.L255-.L18
	.byte	4,2,35,12,0,10
	.word	19937
	.byte	12
	.byte	'Os_TpConfigType_Tag',0,38,128,3,8,8,13
	.byte	'Timer',0
	.word	19932
	.byte	4,2,35,0,13
	.byte	'Dyn',0
	.word	20027
	.byte	4,2,35,4,0,9
	.word	20032
	.byte	10
	.word	20087
	.byte	9
	.word	15836
	.byte	10
	.word	20097
	.byte	7,45,86,9,1,8
	.byte	'OS_COREASRCOREIDX_0',0,0,8
	.byte	'OS_COREASRCOREIDX_COUNT',0,1,0,15,47,191,1,9,4,13
	.byte	'SendIdx',0
	.word	5488
	.byte	2,2,35,0,13
	.byte	'ResultIdx',0
	.word	5488
	.byte	2,2,35,2,0,18
	.word	20161
	.byte	10
	.word	20204
	.byte	15,47,211,1,9,2,13
	.byte	'ReceiveIdx',0
	.word	5488
	.byte	2,2,35,0,0,18
	.word	20214
	.byte	9
	.word	20241
	.byte	10
	.word	20246
	.byte	7,48,77,9,1,8
	.byte	'OS_XSIGFUNCTIONIDX_USEDCOUNT',0,0,8
	.byte	'XSigFunctionIdx_ActivateTask',0,0,8
	.byte	'XSigFunctionIdx_CancelAlarm',0,1,8
	.byte	'XSigFunctionIdx_ControlIdle',0,2,8
	.byte	'XSigFunctionIdx_GetAlarm',0,3,8
	.byte	'XSigFunctionIdx_GetApplicationState',0,4,8
	.byte	'XSigFunctionIdx_GetCounterValue',0,5,8
	.byte	'XSigFunctionIdx_GetErrorHookStackUsage',0,6,8
	.byte	'XSigFunctionIdx_GetEvent',0,7,8
	.byte	'XSigFunctionIdx_GetISRStackUsage',0,8,8
	.byte	'XSigFunctionIdx_GetKernelStackUsage',0,9,8
	.byte	'XSigFunctionIdx_GetProtectionHookStackUsage',0,10,8
	.byte	'XSigFunctionIdx_GetScheduleTableStatus',0,11,8
	.byte	'XSigFunctionIdx_GetShutdownHookStackUsage',0,12,8
	.byte	'XSigFunctionIdx_GetStartupHookStackUsage',0,13,8
	.byte	'XSigFunctionIdx_GetTaskStackUsage',0,14,8
	.byte	'XSigFunctionIdx_GetTaskState',0,15,8
	.byte	'XSigFunctionIdx_HookCallCallback',0,16,8
	.byte	'XSigFunctionIdx_NextScheduleTable',0,17,8
	.byte	'XSigFunctionIdx_SetAbsAlarm',0,18,8
	.byte	'XSigFunctionIdx_SetEvent',0,19,8
	.byte	'XSigFunctionIdx_SetRelAlarm',0,20,8
	.byte	'XSigFunctionIdx_ShutdownAllCores',0,21,8
	.byte	'XSigFunctionIdx_StartScheduleTableAbs',0,22,8
	.byte	'XSigFunctionIdx_StartScheduleTableRel',0,23,8
	.byte	'XSigFunctionIdx_StopScheduleTable',0,24,8
	.byte	'XSigFunctionIdx_TerminateApplication',0,25,8
	.byte	'OS_XSIGFUNCTIONIDX_COUNT',0,26,0,16,32
	.word	13802
	.byte	17,3,0,15,47,119,9,32,13
	.byte	'ParameterData',0
	.word	21240
	.byte	32,2,35,0,0,7,47,94,9,1,8
	.byte	'OS_XSIGSTATE_ASYNC_NACK',0,0,8
	.byte	'OS_XSIGSTATE_SYNC_NACK',0,1,8
	.byte	'OS_XSIGSTATE_SYNC_PENDING',0,2,8
	.byte	'OS_XSIGSTATE_ACK',0,3,0,12
	.byte	'Os_XSigSendDataType_Tag',0,47,151,1,8,48,13
	.byte	'FunctionIdx',0
	.word	20256
	.byte	1,2,35,0,13
	.byte	'ParameterData',0
	.word	21249
	.byte	32,2,35,4,13
	.byte	'Sender',0
	.word	.L255-.L18
	.byte	4,2,35,36,13
	.byte	'SenderApp',0
	.word	.L257-.L18
	.byte	4,2,35,40,13
	.byte	'Acknowledge',0
	.word	21278
	.byte	1,2,35,44,0,18
	.word	21382
	.byte	10
	.word	21513
	.byte	15,47,129,1,9,8,13
	.byte	'ParameterData',0
	.word	13802
	.byte	8,2,35,0,0,15,47,140,1,9,12,13
	.byte	'Status',0
	.word	417
	.byte	2,2,35,0,13
	.byte	'OutputParameter',0
	.word	21523
	.byte	8,2,35,4,0,12
	.byte	'Os_XSigRecvDataType_Tag',0,47,175,1,8,12,13
	.byte	'ReturnData',0
	.word	21553
	.byte	12,2,35,0,0,18
	.word	21601
	.byte	10
	.word	21652
	.byte	15,47,104,9,12,13
	.byte	'SendData',0
	.word	21518
	.byte	4,2,35,0,13
	.byte	'RecvData',0
	.word	21657
	.byte	4,2,35,4,13
	.byte	'Idx',0
	.word	5488
	.byte	2,2,35,8,0,9
	.word	21662
	.byte	10
	.word	21717
	.byte	15,47,221,1,9,16,13
	.byte	'Dyn',0
	.word	20209
	.byte	4,2,35,0,13
	.byte	'Receive',0
	.word	20251
	.byte	4,2,35,4,13
	.byte	'Buffer',0
	.word	21722
	.byte	4,2,35,8,13
	.byte	'BufferSize',0
	.word	5488
	.byte	2,2,35,12,0,12
	.byte	'Os_IsrConfigType_Tag',0,20,189,1,8,68,13
	.byte	'Thread',0
	.word	.L256-.L18
	.byte	60,2,35,0,13
	.byte	'SourceConfig',0
	.word	6765
	.byte	4,2,35,60,13
	.byte	'Id',0
	.word	11747
	.byte	1,2,35,64,13
	.byte	'IsEnabledOnInitialization',0
	.word	400
	.byte	1,2,35,65,0,9
	.word	.L261-.L18
	.byte	10
	.word	21913
	.byte	9
	.word	21249
	.byte	10
	.word	21923
	.byte	10
	.word	21523
	.byte	25
	.word	417
	.byte	1,1,24
	.word	21918
	.byte	24
	.word	21928
	.byte	24
	.word	21933
	.byte	0,10
	.word	21938
	.byte	14
	.byte	'Os_XSigFunctionType',0,46,177,1,9
	.word	21961
	.byte	15,46,186,1,9,4,13
	.byte	'FunctionRef',0
	.word	21966
	.byte	4,2,35,0,0,16,4
	.word	21995
	.byte	17,0,0,12
	.byte	'Os_XSigFunctionTableConfigType_Tag',0,46,194,1,8,4,13
	.byte	'FunctionDescription',0
	.word	22023
	.byte	4,2,35,0,0,9
	.word	22032
	.byte	10
	.word	22103
	.byte	18
	.word	20214
	.byte	10
	.word	22113
	.byte	18
	.word	20161
	.byte	9
	.word	22123
	.byte	10
	.word	22128
	.byte	15,47,238,1,9,16,13
	.byte	'Dyn',0
	.word	22118
	.byte	4,2,35,0,13
	.byte	'Send',0
	.word	22133
	.byte	4,2,35,4,13
	.byte	'Buffer',0
	.word	21722
	.byte	4,2,35,8,13
	.byte	'BufferSize',0
	.word	5488
	.byte	2,2,35,12,0,12
	.byte	'Os_XSigRecvPortConfigType_Tag',0,46,202,1,8,20,13
	.byte	'RecvChannel',0
	.word	22138
	.byte	16,2,35,0,13
	.byte	'SendPort',0
	.word	.L262-.L18
	.byte	4,2,35,16,0,9
	.word	22208
	.byte	10
	.word	22284
	.byte	14
	.byte	'Os_XSigRecvPortConfigRefType',0,49,81,65
	.word	22289
	.byte	9
	.word	22294
	.byte	10
	.word	22331
	.byte	12
	.byte	'Os_Hal_XSigInterruptConfigType_Tag',0,9,149,1,8,4,13
	.byte	'ConfigData',0
	.word	3641
	.byte	4,2,35,0,0,9
	.word	22341
	.byte	10
	.word	22403
	.byte	12
	.byte	'Os_XSigIsrConfigType_Tag',0,46,232,1,8,84,13
	.byte	'IsrCfg',0
	.word	21800
	.byte	68,2,35,0,13
	.byte	'FunctionTable',0
	.word	22108
	.byte	4,2,35,68,13
	.byte	'RecvPortRefs',0
	.word	22336
	.byte	4,2,35,72,13
	.byte	'RecvPortCount',0
	.word	5488
	.byte	2,2,35,76,13
	.byte	'HwConfig',0
	.word	22408
	.byte	4,2,35,80,0,9
	.word	22413
	.byte	10
	.word	22547
	.byte	12
	.byte	'Os_XSigSendPortConfigType_Tag',0,46,213,1,8,28,13
	.byte	'SendChannel',0
	.word	21727
	.byte	16,2,35,0,13
	.byte	'XSigIsr',0
	.word	22552
	.byte	4,2,35,16,13
	.byte	'RecvPort',0
	.word	22289
	.byte	4,2,35,20,13
	.byte	'SendCore',0
	.word	.L258-.L18
	.byte	4,2,35,24,0,9
	.word	22557
.L262:
	.byte	10
	.word	22668
	.byte	16,4
	.word	22673
	.byte	17,0,0,14
	.byte	'Os_XSigIsrConfigRefType',0,49,68,60
	.word	22552
	.byte	9
	.word	22687
	.byte	10
	.word	22719
	.byte	12
	.byte	'Os_XSigConfigType_Tag',0,46,135,2,8,12,13
	.byte	'SendPorts',0
	.word	22678
	.byte	4,2,35,0,13
	.byte	'RecvIsrRefs',0
	.word	22724
	.byte	4,2,35,4,13
	.byte	'RecvIsrCount',0
	.word	5488
	.byte	2,2,35,8,0,9
	.word	22729
	.byte	10
	.word	22820
	.byte	7,51,53,9,1,8
	.byte	'OS_IOCLOCKMODE_NONE',0,0,8
	.byte	'OS_IOCLOCKMODE_INTERRUPTS',0,1,8
	.byte	'OS_IOCLOCKMODE_SPINLOCKS',0,2,8
	.byte	'OS_IOCLOCKMODE_ALL',0,3,0,7,51,67,9,1,8
	.byte	'OS_IOCCHANNELSTATE_DISABLED',0,0,8
	.byte	'OS_IOCCHANNELSTATE_ENABLED',0,1,0,12
	.byte	'Os_IocType_Tag',0,50,146,3,8,1,13
	.byte	'State',0
	.word	22934
	.byte	1,2,35,0,0,18
	.word	22999
	.byte	10
	.word	23036
	.byte	7,50,154,3,9,1,8
	.byte	'Ioc08Receive',0,0,8
	.byte	'Ioc08MultiReceive',0,1,8
	.byte	'Ioc08Send',0,2,8
	.byte	'Ioc16Receive',0,3,8
	.byte	'Ioc16MultiReceive',0,4,8
	.byte	'Ioc16Send',0,5,8
	.byte	'Ioc32Receive',0,6,8
	.byte	'Ioc32MultiReceive',0,7,8
	.byte	'Ioc32Send',0,8,8
	.byte	'IocRefReceive',0,9,8
	.byte	'IocRefMultiReceive',0,10,8
	.byte	'IocRefSend',0,11,8
	.byte	'IocRead',0,12,8
	.byte	'IocWrite',0,13,0,12
	.byte	'Os_IocConfigType_Tag',0,50,174,3,8,20,13
	.byte	'Spinlock',0
	.word	6051
	.byte	4,2,35,0,13
	.byte	'LockMode',0
	.word	22830
	.byte	1,2,35,4,13
	.byte	'Dyn',0
	.word	23041
	.byte	4,2,35,8,13
	.byte	'SubClass',0
	.word	23046
	.byte	1,2,35,12,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,14,0,9
	.word	23265
	.byte	10
	.word	23391
	.byte	14
	.byte	'Os_IocConfigRefType',0,19,160,2,54
	.word	23396
	.byte	9
	.word	23401
	.byte	10
	.word	23430
	.byte	7,52,117,9,1,8
	.byte	'OS_BARRIERATTENDEESTATE_DETACHED',0,0,8
	.byte	'OS_BARRIERATTENDEESTATE_ATTACHED',0,1,0,12
	.byte	'Os_BarrierBaseType_Tag',0,52,131,1,8,2,13
	.byte	'AttendeeState',0
	.word	23440
	.byte	1,2,35,0,13
	.byte	'Counter',0
	.word	400
	.byte	1,2,35,1,0,18
	.word	23516
	.byte	10
	.word	23586
	.byte	14
	.byte	'Os_BarrierAttendeeRefType',0,52,115,69
	.word	.L263-.L18
	.byte	9
	.word	23596
	.byte	10
	.word	23630
	.byte	12
	.byte	'Os_BarrierBaseConfigType_Tag',0,52,142,1,8,16,13
	.byte	'Dyn',0
	.word	23591
	.byte	4,2,35,0,13
	.byte	'AttendeeRefs',0
	.word	23635
	.byte	4,2,35,4,13
	.byte	'AttendeeCount',0
	.word	400
	.byte	1,2,35,8,13
	.byte	'TaskPtr',0
	.word	16634
	.byte	4,2,35,12,0,9
	.word	23640
.L263:
	.byte	10
	.word	23751
	.byte	14
	.byte	'Os_BarrierBaseConfigRefType',0,53,62,62
	.word	23756
	.byte	9
	.word	23761
	.byte	10
	.word	23797
	.byte	12
	.byte	'Os_Hal_ContextFpuContextType_Tag',0,7,200,1,9,4,13
	.byte	'DummyFpuFlagRegister',0
	.word	136
	.byte	4,2,35,0,0,12
	.byte	'Os_ThreadClassType_Tag',0,10,109,8,4,13
	.byte	'InitialFpuContext',0
	.word	23807
	.byte	4,2,35,0,0,10
	.word	23877
	.byte	9
	.word	21800
	.byte	10
	.word	23938
	.byte	14
	.byte	'Os_IsrConfigRefType',0,54,66,54
	.word	23943
	.byte	9
	.word	23948
	.byte	10
	.word	23976
	.byte	12
	.byte	'Os_CoreAsrConfigType_Tag',0,19,133,3,8,148,1,13
	.byte	'Core',0
	.word	7454
	.byte	24,2,35,0,13
	.byte	'Dyn',0
	.word	16166
	.byte	4,2,35,24,13
	.byte	'Scheduler',0
	.word	17007
	.byte	4,2,35,28,13
	.byte	'IdleTask',0
	.word	16634
	.byte	4,2,35,32,13
	.byte	'KernelApp',0
	.word	.L257-.L18
	.byte	4,2,35,36,13
	.byte	'KernelStack',0
	.word	5110
	.byte	4,2,35,40,13
	.byte	'PreStartTask',0
	.word	16634
	.byte	4,2,35,44,13
	.byte	'StartupHookRef',0
	.word	17353
	.byte	4,2,35,48,13
	.byte	'ShutdownHookRef',0
	.word	17481
	.byte	4,2,35,52,13
	.byte	'ErrorHookRef',0
	.word	17481
	.byte	4,2,35,56,13
	.byte	'ProtectionHookRef',0
	.word	17780
	.byte	4,2,35,60,13
	.byte	'InitHookRef',0
	.word	17890
	.byte	4,2,35,64,13
	.byte	'HookRefs',0
	.word	17940
	.byte	4,2,35,68,13
	.byte	'HookCount',0
	.word	5488
	.byte	2,2,35,72,13
	.byte	'AppRefs',0
	.word	17979
	.byte	4,2,35,76,13
	.byte	'AppCount',0
	.word	5488
	.byte	2,2,35,80,13
	.byte	'ResourceRefs',0
	.word	18139
	.byte	4,2,35,84,13
	.byte	'ResourceCount',0
	.word	5488
	.byte	2,2,35,88,13
	.byte	'HwConfig',0
	.word	18200
	.byte	4,2,35,92,13
	.byte	'MemoryProtection',0
	.word	18642
	.byte	4,2,35,96,13
	.byte	'TimingProtection',0
	.word	20092
	.byte	4,2,35,100,13
	.byte	'StackRefs',0
	.word	20102
	.byte	4,2,35,104,13
	.byte	'StackCount',0
	.word	5488
	.byte	2,2,35,108,13
	.byte	'CoreIdx',0
	.word	20107
	.byte	1,2,35,110,13
	.byte	'XSignal',0
	.word	22825
	.byte	4,2,35,112,13
	.byte	'IocRefs',0
	.word	23435
	.byte	4,2,35,116,13
	.byte	'IocCount',0
	.word	5488
	.byte	2,2,35,120,13
	.byte	'Barrier',0
	.word	23756
	.byte	4,2,35,124,13
	.byte	'BarrierRefs',0
	.word	23802
	.byte	4,3,35,128,1,13
	.byte	'BarrierCount',0
	.word	5488
	.byte	2,3,35,132,1,13
	.byte	'ThreadClass',0
	.word	23933
	.byte	4,3,35,136,1,13
	.byte	'IsrRefs',0
	.word	23981
	.byte	4,3,35,140,1,13
	.byte	'IsrCount',0
	.word	5488
	.byte	2,3,35,144,1,0,9
	.word	23986
.L258:
	.byte	10
	.word	24680
	.byte	14
	.byte	'Os_TaskConfigRefType',0,18,100,55
	.word	16634
	.byte	9
	.word	24690
	.byte	10
	.word	24719
	.byte	12
	.byte	'Os_IsrCat1ConfigType_Tag',0,20,207,1,8,4,13
	.byte	'SourceConfig',0
	.word	6765
	.byte	4,2,35,0,0,9
	.word	24729
	.byte	10
	.word	24783
	.byte	14
	.byte	'Os_IsrCat1ConfigRefType',0,54,69,58
	.word	24788
	.byte	9
	.word	24793
	.byte	10
	.word	24825
	.byte	14
	.byte	'Os_CounterConfigRefType',0,18,103,58
	.word	18875
	.byte	9
	.word	24835
	.byte	10
	.word	24867
	.byte	7,55,107,9,1,8
	.byte	'OS_ALARMMODE_ABSOLUTE',0,0,8
	.byte	'OS_ALARMMODE_RELATIVE',0,1,0,15,55,127,9,12,13
	.byte	'AlarmTime',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Cycle',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'ApplicationModes',0
	.word	400
	.byte	1,2,35,8,13
	.byte	'AlarmMode',0
	.word	24877
	.byte	1,2,35,9,0,12
	.byte	'Os_AlarmConfigType_Tag',0,55,169,1,8,32,13
	.byte	'Job',0
	.word	18931
	.byte	12,2,35,0,13
	.byte	'Autostart',0
	.word	24931
	.byte	12,2,35,12,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,24,13
	.byte	'OwnerApplication',0
	.word	.L257-.L18
	.byte	4,2,35,28,0,9
	.word	25016
	.byte	10
	.word	25135
	.byte	14
	.byte	'Os_AlarmConfigRefType',0,18,106,56
	.word	25140
	.byte	9
	.word	25145
	.byte	10
	.word	25175
	.byte	7,56,135,2,9,1,8
	.byte	'OS_SCHT_AUTOSTART_NON',0,0,8
	.byte	'OS_SCHT_AUTOSTART_RELATIVE',0,1,8
	.byte	'OS_SCHT_AUTOSTART_SYNCHRON',0,2,8
	.byte	'OS_SCHT_AUTOSTART_ABSOLUTE',0,3,0,12
	.byte	'Os_SchTAutostartConfigType_Tag',0,56,145,2,8,6,13
	.byte	'StartTime',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'AutostartModes',0
	.word	25185
	.byte	1,2,35,4,13
	.byte	'ApplicationModes',0
	.word	400
	.byte	1,2,35,5,0,7,56,251,1,9,1,8
	.byte	'OS_SCHT_SYNC_KIND_NON',0,0,8
	.byte	'OS_SCHT_SYNC_KIND_IMPLICIT',0,1,8
	.byte	'OS_SCHT_SYNC_KIND_EXPLICIT',0,2,0,7,56,186,1,9,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE',0,0,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC',0,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC_ZERO',0,2,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_CYCLIC',0,3,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SINGLE_SHOT',0,4,0,12
	.byte	'Os_SchTExPoActionTaskConfigType_Tag',0,56,178,1,8,4,13
	.byte	'Task',0
	.word	16634
	.byte	4,2,35,0,0,9
	.word	25680
	.byte	10
	.word	25737
	.byte	12
	.byte	'Os_SchTExPoActionEventConfigType_Tag',0,56,166,1,8,12,13
	.byte	'Task',0
	.word	16634
	.byte	4,2,35,0,13
	.byte	'EventMask',0
	.word	11716
	.byte	8,2,35,4,0,9
	.word	25747
	.byte	10
	.word	25824
	.byte	12
	.byte	'Os_SchTExPoConfigType_Tag',0,56,202,1,8,28,13
	.byte	'Next',0
	.word	.L264-.L18
	.byte	4,2,35,0,13
	.byte	'Kind',0
	.word	25499
	.byte	1,2,35,4,13
	.byte	'Tasks',0
	.word	25742
	.byte	4,2,35,8,13
	.byte	'TaskCount',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'Events',0
	.word	25829
	.byte	4,2,35,16,13
	.byte	'EventCount',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'RelOffsetToNext',0
	.word	136
	.byte	4,2,35,24,0,9
	.word	25834
.L264:
	.byte	10
	.word	25990
	.byte	12
	.byte	'Os_SchTConfigType_Tag',0,56,156,2,8,36,13
	.byte	'Job',0
	.word	18931
	.byte	12,2,35,0,13
	.byte	'Autostart',0
	.word	25303
	.byte	6,2,35,12,13
	.byte	'SyncKind',0
	.word	25410
	.byte	1,2,35,18,13
	.byte	'AccessingApplications',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'OwnerApplication',0
	.word	.L257-.L18
	.byte	4,2,35,24,13
	.byte	'ExPoHead',0
	.word	25995
	.byte	4,2,35,28,13
	.byte	'InitialNext',0
	.word	.L265-.L18
	.byte	4,2,35,32,0,9
	.word	26000
.L265:
	.byte	10
	.word	26175
	.byte	14
	.byte	'Os_SchTConfigRefType',0,18,109,55
	.word	26180
	.byte	9
	.word	26185
	.byte	10
	.word	26214
	.byte	12
	.byte	'Os_Hal_MpAppConfigType_Tag',0,37,114,8,36,13
	.byte	'ProtectionSet',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionStartSlot',0
	.word	400
	.byte	1,2,35,1,13
	.byte	'MpuDataRegionCount',0
	.word	400
	.byte	1,2,35,2,13
	.byte	'MpuDataRegions',0
	.word	18258
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionEnableMask',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'MpuDataRegionReadEnable',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	400
	.byte	1,2,35,20,13
	.byte	'MpuCodeRegionCount',0
	.word	400
	.byte	1,2,35,21,13
	.byte	'MpuCodeRegions',0
	.word	18258
	.byte	4,2,35,24,13
	.byte	'MpuCodeRegionEnableMask',0
	.word	136
	.byte	4,2,35,28,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	136
	.byte	4,2,35,32,0,9
	.word	26224
	.byte	10
	.word	26619
	.byte	12
	.byte	'Os_Hal_MpThreadConfigType_Tag',0,37,139,1,8,36,13
	.byte	'ProtectionSet',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionStartSlot',0
	.word	400
	.byte	1,2,35,1,13
	.byte	'MpuDataRegionCount',0
	.word	400
	.byte	1,2,35,2,13
	.byte	'MpuDataRegions',0
	.word	18258
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionEnableMask',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'MpuDataRegionReadEnable',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	400
	.byte	1,2,35,20,13
	.byte	'MpuCodeRegionCount',0
	.word	400
	.byte	1,2,35,21,13
	.byte	'MpuCodeRegions',0
	.word	18258
	.byte	4,2,35,24,13
	.byte	'MpuCodeRegionEnableMask',0
	.word	136
	.byte	4,2,35,28,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	136
	.byte	4,2,35,32,0,9
	.word	26629
	.byte	10
	.word	27028
	.byte	12
	.byte	'Os_MpAccessRightsType_Tag',0,36,132,1,8,8,13
	.byte	'AppAccessRights',0
	.word	26624
	.byte	4,2,35,0,13
	.byte	'ThreadAccessRights',0
	.word	27033
	.byte	4,2,35,4,0,9
	.word	27038
	.byte	10
	.word	27124
	.byte	7,57,117,9,1,8
	.byte	'OS_SERVICE_TRUSTEDFUNCTION',0,0,8
	.byte	'OS_SERVICE_NONTRUSTEDFUNCTION',0,1,8
	.byte	'OS_SERVICE_FASTTRUSTEDFUNCTION',0,2,0,12
	.byte	'Os_ServiceConfigType_Tag',0,57,209,1,8,12,13
	.byte	'OwnerApplication',0
	.word	.L257-.L18
	.byte	4,2,35,0,13
	.byte	'MpAccessRights',0
	.word	27129
	.byte	4,2,35,4,13
	.byte	'ServiceType',0
	.word	27134
	.byte	1,2,35,8,0,9
	.word	27234
	.byte	10
	.word	27337
	.byte	14
	.byte	'Os_ServiceConfigRefType',0,18,112,58
	.word	27342
	.byte	9
	.word	27347
	.byte	10
	.word	27379
.L261:
	.byte	12
	.byte	'Os_AppConfigType_Tag',0,18,126,8,96,13
	.byte	'Dyn',0
	.word	6187
	.byte	4,2,35,0,13
	.byte	'Core',0
	.word	24685
	.byte	4,2,35,4,13
	.byte	'AccessRightId',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'TaskRefs',0
	.word	24724
	.byte	4,2,35,12,13
	.byte	'TaskCount',0
	.word	5488
	.byte	2,2,35,16,13
	.byte	'IsrCat2Refs',0
	.word	23981
	.byte	4,2,35,20,13
	.byte	'IsrCat2Count',0
	.word	5488
	.byte	2,2,35,24,13
	.byte	'IsrCat1Refs',0
	.word	24830
	.byte	4,2,35,28,13
	.byte	'IsrCat1Count',0
	.word	5488
	.byte	2,2,35,32,13
	.byte	'CounterRefs',0
	.word	24872
	.byte	4,2,35,36,13
	.byte	'CounterCount',0
	.word	5488
	.byte	2,2,35,40,13
	.byte	'AlarmRefs',0
	.word	25180
	.byte	4,2,35,44,13
	.byte	'AlarmCount',0
	.word	5488
	.byte	2,2,35,48,13
	.byte	'SchTRefs',0
	.word	26219
	.byte	4,2,35,52,13
	.byte	'SchTCount',0
	.word	5488
	.byte	2,2,35,56,13
	.byte	'ServiceFunctions',0
	.word	27384
	.byte	4,2,35,60,13
	.byte	'ServiceFunctionCount',0
	.word	5488
	.byte	2,2,35,64,13
	.byte	'StartupHookRef',0
	.word	17353
	.byte	4,2,35,68,13
	.byte	'ShutdownHookRef',0
	.word	17481
	.byte	4,2,35,72,13
	.byte	'ErrorHookRef',0
	.word	17481
	.byte	4,2,35,76,13
	.byte	'HookRefs',0
	.word	17940
	.byte	4,2,35,80,13
	.byte	'HookCount',0
	.word	5488
	.byte	2,2,35,84,13
	.byte	'RestartTask',0
	.word	16634
	.byte	4,2,35,88,13
	.byte	'IsTrusted',0
	.word	400
	.byte	1,2,35,92,13
	.byte	'IsPrivileged',0
	.word	400
	.byte	1,2,35,93,13
	.byte	'HasTimingProtectionDelay',0
	.word	400
	.byte	1,2,35,94,13
	.byte	'Id',0
	.word	11554
	.byte	1,2,35,95,0,9
	.word	27389
.L257:
	.byte	10
	.word	27980
	.byte	15,57,126,9,8,13
	.byte	'FunctionIndex',0
	.word	12661
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	12702
	.byte	4,2,35,4,0,15,57,136,1,9,8,13
	.byte	'FunctionIndex',0
	.word	12946
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	12985
	.byte	4,2,35,4,0,15,57,146,1,9,8,13
	.byte	'FunctionIndex',0
	.word	13032
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	13072
	.byte	4,2,35,4,0,26,57,157,1,9,8,13
	.byte	'TrustedFunctionParameters',0
	.word	27990
	.byte	8,2,35,0,13
	.byte	'NonTrustedFunctionParameters',0
	.word	28043
	.byte	8,2,35,0,13
	.byte	'FastTrustedFunctionParameters',0
	.word	28097
	.byte	8,2,35,0,0,12
	.byte	'Os_ServiceCallType_Tag',0,57,167,1,8,56,13
	.byte	'PrevApplication',0
	.word	27985
	.byte	4,2,35,0,13
	.byte	'PrevMpAccessRights',0
	.word	27129
	.byte	4,2,35,4,13
	.byte	'PrevServiceCalls',0
	.word	.L266-.L18
	.byte	4,2,35,8,13
	.byte	'CallerContext',0
	.word	4842
	.byte	28,2,35,12,13
	.byte	'ServiceCallContext',0
	.word	5025
	.byte	4,2,35,40,13
	.byte	'Service',0
	.word	27342
	.byte	4,2,35,44,13
	.byte	'Parameters',0
	.word	28151
	.byte	8,2,35,48,0
.L266:
	.byte	10
	.word	28270
	.byte	12
	.byte	'Os_ThreadType_Tag',0,10,117,8,24,13
	.byte	'Locks',0
	.word	5346
	.byte	4,2,35,0,13
	.byte	'Spinlocks',0
	.word	6056
	.byte	4,2,35,4,13
	.byte	'Application',0
	.word	27985
	.byte	4,2,35,8,13
	.byte	'MpAccessRights',0
	.word	27129
	.byte	4,2,35,12,13
	.byte	'ServiceCalls',0
	.word	28467
	.byte	4,2,35,16,13
	.byte	'CallContext',0
	.word	5488
	.byte	2,2,35,20,0,10
	.word	28472
	.byte	10
	.word	7821
	.byte	7,38,146,2,9,1,8
	.byte	'OS_TPTHREADKIND_OWNER',0,0,8
	.byte	'OS_TPTHREADKIND_HEIR',0,1,8
	.byte	'OS_TPTHREADKIND_TPISR',0,2,0,12
	.byte	'Os_TpThreadConfigType_Tag',0,38,202,2,8,1,13
	.byte	'ThreadKind',0
	.word	28628
	.byte	1,2,35,0,0,9
	.word	28706
	.byte	10
	.word	28759
	.byte	7,3,211,6,9,1,8
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,8
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,8
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,8
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,8
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,8
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,8
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,8
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,8
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,8
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,8
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,8
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,15,58,90,9,12,13
	.byte	'AddressStart',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'AddressEnd',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'AccessRights',0
	.word	28769
	.byte	1,2,35,8,0,9
	.word	29272
	.byte	10
	.word	29342
	.byte	12
	.byte	'Os_AccessCheckConfigType_Tag',0,58,99,8,8,13
	.byte	'Regions',0
	.word	29347
	.byte	4,2,35,0,13
	.byte	'RegionCount',0
	.word	400
	.byte	1,2,35,4,0,9
	.word	29352
	.byte	10
	.word	29425
	.byte	10
	.word	23807
	.byte	14
	.byte	'Os_PreThreadHookCbkType',0,59,196,3,9
	.word	17243
.L256:
	.byte	12
	.byte	'Os_ThreadConfigType_Tag',0,10,141,1,8,60,13
	.byte	'ContextConfig',0
	.word	4730
	.byte	4,2,35,0,13
	.byte	'Context',0
	.word	5025
	.byte	4,2,35,4,13
	.byte	'Stack',0
	.word	5110
	.byte	4,2,35,8,13
	.byte	'Dyn',0
	.word	28618
	.byte	4,2,35,12,13
	.byte	'OwnerApplication',0
	.word	27985
	.byte	4,2,35,16,13
	.byte	'Core',0
	.word	24685
	.byte	4,2,35,20,13
	.byte	'IntApiState',0
	.word	28623
	.byte	4,2,35,24,13
	.byte	'TimeProtConfig',0
	.word	28764
	.byte	4,2,35,28,13
	.byte	'MpAccessRightsInitial',0
	.word	27129
	.byte	4,2,35,32,13
	.byte	'AccessRights',0
	.word	29430
	.byte	4,2,35,36,13
	.byte	'Trace',0
	.word	7345
	.byte	4,2,35,40,13
	.byte	'FpuContext',0
	.word	29435
	.byte	4,2,35,44,13
	.byte	'InitialCallContext',0
	.word	5488
	.byte	2,2,35,48,13
	.byte	'PreThreadHook',0
	.word	29440
	.byte	4,2,35,52,13
	.byte	'InitDuringStartUp',0
	.word	400
	.byte	1,2,35,56,13
	.byte	'UsesFpu',0
	.word	400
	.byte	1,2,35,57,0,9
	.word	29473
.L255:
	.byte	10
	.word	29840
	.byte	12
	.byte	'Os_Hal_Core2ThreadType_Tag',0,9,135,1,8,4,13
	.byte	'Thread',0
	.word	29845
	.byte	4,2,35,0,0,10
	.word	29850
	.byte	16,4
	.word	29900
	.byte	17,0,0,12
	.byte	'Os_Hal_Core2ThreadConfigType_Tag',0,9,143,1,8,4,13
	.byte	'Core2Thread',0
	.word	29905
	.byte	4,2,35,0,0,9
	.word	29914
	.byte	10
	.word	29975
.L92:
	.byte	6
	.byte	'Os_Hal_CoreSetThread',0,3,8,130,1,1,1,1
.L93:
	.byte	5
	.byte	'Core2Thread',0,8,130,1,1
	.word	29980
.L95:
	.byte	5
	.byte	'Thread',0,8,130,1,1
	.word	29845
.L97:
	.byte	11,4,4,0,0,9
	.word	5250
	.byte	10
	.word	30056
	.byte	9
	.word	5873
	.byte	10
	.word	30066
	.byte	9
	.word	6645
	.byte	10
	.word	30076
	.byte	9
	.word	29473
	.byte	10
	.word	30086
	.byte	10
	.word	11258
	.byte	10
	.word	6084
	.byte	9
	.word	11863
	.byte	10
	.word	30106
	.byte	10
	.word	12006
	.byte	10
	.word	12391
	.byte	10
	.word	12557
	.byte	10
	.word	136
	.byte	10
	.word	11863
	.byte	10
	.word	11863
	.byte	10
	.word	11863
	.byte	10
	.word	136
	.byte	10
	.word	136
	.byte	10
	.word	11196
	.byte	10
	.word	13313
	.byte	9
	.word	11863
	.byte	10
	.word	30171
	.byte	9
	.word	5035
	.byte	10
	.word	30181
	.byte	10
	.word	17240
	.byte	10
	.word	17358
	.byte	10
	.word	17645
	.byte	10
	.word	17358
	.byte	9
	.word	17120
	.byte	10
	.word	30211
	.byte	9
	.word	27389
	.byte	10
	.word	30221
	.byte	9
	.word	17984
	.byte	10
	.word	30231
	.byte	10
	.word	18890
	.byte	10
	.word	21938
	.byte	9
	.word	22208
	.byte	10
	.word	30251
	.byte	9
	.word	22413
	.byte	10
	.word	30261
	.byte	9
	.word	23265
	.byte	10
	.word	30271
	.byte	9
	.word	23640
	.byte	10
	.word	30281
	.byte	9
	.word	23640
	.byte	10
	.word	30291
	.byte	9
	.word	21800
	.byte	10
	.word	30301
	.byte	9
	.word	16338
	.byte	10
	.word	30311
	.byte	9
	.word	24729
	.byte	10
	.word	30321
	.byte	9
	.word	19260
	.byte	10
	.word	30331
	.byte	9
	.word	25016
	.byte	10
	.word	30341
	.byte	9
	.word	26000
	.byte	10
	.word	30351
	.byte	9
	.word	27234
	.byte	10
	.word	30361
	.byte	10
	.word	17240
.L35:
	.byte	3
	.byte	'Os_Hal_CoreGetThread',0,3,8,169,1,1
	.word	29845
	.byte	1,1
.L37:
	.byte	5
	.byte	'Core2Thread',0,8,169,1,1
	.word	29980
.L39:
	.byte	11,4,0,0,3
	.byte	'Os_Hal_CountLeadingZeros',0,3,8,128,2,1
	.word	400
	.byte	1,1,5
	.byte	'BitField',0,8,128,2,1
	.word	136
	.byte	4,0,3
	.byte	'Os_Hal_StackEndGet',0,3,8,141,2,1
	.word	5030
	.byte	1,1,5
	.byte	'LowAddress',0,8,141,2,1
	.word	5030
	.byte	5
	.byte	'HighAddress',0,8,141,2,1
	.word	5030
	.byte	4,0,18
	.word	136
	.byte	10
	.word	30565
	.byte	6
	.byte	'Os_Hal_SpinInit',0,3,8,216,2,1,1,1,5
	.byte	'Spinlock',0,8,216,2,1
	.word	30570
	.byte	4,0,18
	.word	136
	.byte	9
	.word	30619
	.byte	10
	.word	30624
	.byte	3
	.byte	'Os_Hal_SpinIsLocked',0,3,8,231,2,1
	.word	237
	.byte	1,1,5
	.byte	'Spinlock',0,8,231,2,1
	.word	30629
	.byte	4,0,3
	.byte	'Os_Hal_SpinTryLock',0,3,8,245,2,1
	.word	136
	.byte	1,1,5
	.byte	'Spinlock',0,8,245,2,1
	.word	30570
	.byte	4,0,6
	.byte	'Os_Hal_SpinUnlock',0,3,8,133,3,1,1,1,5
	.byte	'Spinlock',0,8,133,3,1
	.word	30570
	.byte	4,0,6
	.byte	'Os_Hal_CoreNop',0,3,8,209,3,1,1,1,4,0
.L74:
	.byte	6
	.byte	'Os_StackOverflowCheck',0,3,60,138,1,1,1,1
.L76:
	.byte	11
.L77:
	.byte	4,4,4,0,0,10
	.word	7701
	.byte	6
	.byte	'Os_IntSuspend',0,3,61,126,1,1,1,5
	.byte	'State',0,61,126,1
	.word	30844
	.byte	11,4,4,0,0,9
	.word	7701
	.byte	10
	.word	30889
	.byte	6
	.byte	'Os_IntResume',0,3,61,166,1,1,1,1,5
	.byte	'State',0,61,166,1,1
	.word	30894
	.byte	11,4,0,0,9
	.word	7821
	.byte	10
	.word	30939
	.byte	3
	.byte	'Os_InterruptCheckEnabled',0,3,61,211,1,1
	.word	237
	.byte	1,1,5
	.byte	'InterruptState',0,61,211,1,1
	.word	30944
	.byte	11,4,0,0,6
	.byte	'Os_InterruptCleanup',0,3,61,231,1,1,1,1,5
	.byte	'InterruptState',0,61,231,1,1
	.word	28623
	.byte	4,0,6
	.byte	'Os_InterruptTpLockAllStart',0,3,61,142,3,1,1,1,5
	.byte	'Thread',0,61,142,3,1
	.word	29845
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockAllStop',0,3,61,167,3,1,1,1,5
	.byte	'Thread',0,61,167,3,1
	.word	29845
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStart',0,3,61,192,3,1,1,1,5
	.byte	'Thread',0,61,192,3,1
	.word	29845
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStop',0,3,61,217,3,1,1,1,5
	.byte	'Thread',0,61,217,3,1
	.word	29845
	.byte	11,4,4,4,0,0,3
	.byte	'Os_Bit_CountLeadingZeros',0,3,62,123,1
	.word	400
	.byte	1,1,5
	.byte	'BitField',0,62,123,1
	.word	136
	.byte	11,4,4,0,0,9
	.word	16211
	.byte	10
	.word	31350
	.byte	3
	.byte	'Os_BitArrayIdxIsValid',0,3,63,79,1
	.word	5488
	.byte	1,1,5
	.byte	'BitArray',0,63,79,1
	.word	31355
	.byte	5
	.byte	'BitIdx',0,63,79,1
	.word	5488
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetAllocationIdx',0,3,63,108,1
	.word	5488
	.byte	1,1,5
	.byte	'BitArrayIdx',0,63,108,1
	.word	136
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetFieldIdx',0,3,63,127,1
	.word	5488
	.byte	1,1,5
	.byte	'BitArrayIdx',0,63,127,1
	.word	5488
	.byte	4,0,6
	.byte	'Os_BitArraySetBitInternal',0,3,63,181,1,1,1,1,5
	.byte	'BitArray',0,63,181,1,1
	.word	31355
	.byte	5
	.byte	'BitIdx',0,63,181,1,1
	.word	5488
	.byte	11,4,4,4,4,0,0
.L129:
	.byte	10
	.word	136
	.byte	9
	.word	136
	.byte	6
	.byte	'Os_DequeIdxDecrement',0,3,64,91,1,1,1,5
	.byte	'Index',0,64,91,1
	.word	31625
	.byte	5
	.byte	'Size',0,64,91,1
	.word	31630
	.byte	4,0,9
	.word	136
	.byte	6
	.byte	'Os_DequeIdxIncrement',0,3,64,116,1,1,1,5
	.byte	'Index',0,64,116,1
	.word	31625
	.byte	5
	.byte	'Size',0,64,116,1
	.word	31692
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigherOrEqual',0,3,65,115,1
	.word	237
	.byte	1,1,5
	.byte	'PrioX',0,65,115,1
	.word	5488
	.byte	5
	.byte	'PrioY',0,65,115,1
	.word	5488
	.byte	4,0,3
	.byte	'Os_SchedulerGetCurrentTask',0,3,65,143,1,1
	.word	16634
	.byte	1,1,5
	.byte	'Scheduler',0,65,143,1,1
	.word	17007
	.byte	4,0,3
	.byte	'Os_SchedulerTaskSwitchIsNeeded',0,3,65,156,1,1
	.word	237
	.byte	1,1,5
	.byte	'Scheduler',0,65,156,1,1
	.word	17007
	.byte	4,0,10
	.word	5346
	.byte	6
	.byte	'Os_LockListInit',0,3,66,90,1,1,1,5
	.byte	'LockList',0,66,90,1
	.word	31955
	.byte	4,0,9
	.word	5346
	.byte	10
	.word	32002
	.byte	3
	.byte	'Os_LockListNext',0,3,66,168,1,1
	.word	5341
	.byte	1,1,5
	.byte	'LockList',0,66,168,1,1
	.word	32007
	.byte	4,0,3
	.byte	'Os_LockListNextIterator',0,3,66,180,1,1
	.word	31955
	.byte	1,1,5
	.byte	'Iterator',0,66,180,1,1
	.word	32007
	.byte	4,0,3
	.byte	'Os_LockListIsEmpty',0,3,66,193,1,1
	.word	237
	.byte	1,1,5
	.byte	'LockList',0,66,193,1,1
	.word	32007
	.byte	4,0,3
	.byte	'Os_LockListIsTopRes',0,3,66,213,1,1
	.word	237
	.byte	1,1,5
	.byte	'LockList',0,66,213,1,1
	.word	32007
	.byte	11,4,4,0,0,3
	.byte	'Os_LockListIsTopSpinlock',0,3,66,131,2,1
	.word	237
	.byte	1,1,5
	.byte	'LockList',0,66,131,2,1
	.word	32007
	.byte	11,4,0,0,6
	.byte	'Os_LockInit',0,3,66,169,2,1,1,1,5
	.byte	'Lock',0,66,169,2,1
	.word	5341
	.byte	4,0,3
	.byte	'Os_LockIsResource',0,3,66,195,2,1
	.word	237
	.byte	1,1,5
	.byte	'Lock',0,66,195,2,1
	.word	5341
	.byte	4,0,3
	.byte	'Os_LockGetAccessingApplications',0,3,66,250,2,1
	.word	136
	.byte	1,1,5
	.byte	'Lock',0,66,250,2,1
	.word	5341
	.byte	4,0,3
	.byte	'Os_LockGetDyn',0,3,66,237,2,1
	.word	5151
	.byte	1,1,5
	.byte	'Lock',0,66,237,2,1
	.word	5341
	.byte	4,0,10
	.word	6056
	.byte	6
	.byte	'Os_SpinlockListInit',0,3,67,106,1,1,1,5
	.byte	'LockList',0,67,106,1
	.word	32465
	.byte	4,0,18
	.word	136
	.byte	12
	.byte	'Os_SpinlockType_Tag',0,14,189,1,8,20,13
	.byte	'Lock',0
	.word	5115
	.byte	4,2,35,0,13
	.byte	'OwnerThread',0
	.word	29845
	.byte	4,2,35,4,13
	.byte	'PreviousSpinlock',0
	.word	6051
	.byte	4,2,35,8,13
	.byte	'Spinlock',0
	.word	32516
	.byte	4,2,35,12,13
	.byte	'PreviousPriority',0
	.word	5488
	.byte	2,2,35,16,0,10
	.word	32521
	.byte	3
	.byte	'Os_SpinlockGetDyn',0,3,67,150,1,1
	.word	32653
	.byte	1,1,5
	.byte	'Spinlock',0,67,150,1,1
	.word	6051
	.byte	11,4,0,0,3
	.byte	'Os_SpinlockInternalTryGet',0,3,67,132,2,1
	.word	136
	.byte	1,1,5
	.byte	'Spinlock',0,67,132,2,1
	.word	6051
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_CoreAsrIsCoreLocal',0,3,68,126,1
	.word	237
	.byte	1,1,5
	.byte	'Core',0,68,126,1
	.word	24685
	.byte	11,4,0,0,9
	.word	7454
	.byte	10
	.word	32823
.L81:
	.byte	3
	.byte	'Os_CoreGetCurrentCore',0,3,68,245,1,1
	.word	32828
	.byte	1,1
.L83:
	.byte	11,4,0,0,3
	.byte	'Os_Core2AsrCore',0,3,68,204,1,1
	.word	24685
	.byte	1,1,5
	.byte	'Core',0,68,204,1,1
	.word	32828
	.byte	11,4,0,0,3
	.byte	'Os_CoreAsrGetDyn',0,3,68,153,1,1
	.word	16166
	.byte	1,1,5
	.byte	'Core',0,68,153,1,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreAsrGetTimingProtection',0,3,68,166,1,1
	.word	20092
	.byte	1,1,5
	.byte	'Core',0,68,166,1,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreIsAsrCore',0,3,68,154,2,1
	.word	237
	.byte	1,1,5
	.byte	'Core',0,68,154,2,1
	.word	32828
	.byte	4,0,3
	.byte	'Os_CoreIsStartedAsAsr',0,3,68,167,2,1
	.word	237
	.byte	1,1,5
	.byte	'Core',0,68,167,2,1
	.word	32828
	.byte	4,0,7,19,239,1,9,1,8
	.byte	'OS_COREOSSTATE_INITIALZE',0,0,8
	.byte	'OS_COREOSSTATE_PRESTARTTASK',0,1,8
	.byte	'OS_COREOSSTATE_STARTED',0,2,0,12
	.byte	'Os_CoreAsrStatusType_Tag',0,19,135,2,8,8,13
	.byte	'Core',0
	.word	6293
	.byte	2,2,35,0,13
	.byte	'OsState',0
	.word	33115
	.byte	1,2,35,2,13
	.byte	'ApplicationMode',0
	.word	400
	.byte	1,2,35,3,13
	.byte	'CriticalUserSection',0
	.word	136
	.byte	4,2,35,4,0,18
	.word	33204
	.byte	10
	.word	33321
	.byte	3
	.byte	'Os_CoreAsrGetAsrStatus',0,3,68,232,2,1
	.word	33326
	.byte	1,1,5
	.byte	'Core',0,68,232,2,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreGetIdleTask',0,3,68,246,3,1
	.word	16634
	.byte	1,1,5
	.byte	'Core',0,68,246,3,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreGetKernelApp',0,3,68,131,4,1
	.word	27985
	.byte	1,1,5
	.byte	'Core',0,68,131,4,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreGetScheduler',0,3,68,144,4,1
	.word	17007
	.byte	1,1,5
	.byte	'Core',0,68,144,4,1
	.word	24685
	.byte	4,0,3
	.byte	'Os_CoreInterruptedThreadsGetTopIdx',0,3,68,149,5,1
	.word	7990
	.byte	1,1,5
	.byte	'Core',0,68,149,5,1
	.word	24685
	.byte	11,4,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsGet',0,3,68,169,5,1
	.word	29845
	.byte	1,1,5
	.byte	'Core',0,68,169,5,1
	.word	24685
	.byte	5
	.byte	'Idx',0,68,169,5,1
	.word	7990
	.byte	11,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsMoveDown',0,3,68,209,5,1
	.word	7990
	.byte	1,1,5
	.byte	'Iterator',0,68,209,5,1
	.word	7990
	.byte	4,0
.L87:
	.byte	6
	.byte	'Os_CoreSetThread',0,3,68,224,5,1,1,1
.L89:
	.byte	5
	.byte	'Thread',0,68,224,5,1
	.word	29845
.L91:
	.byte	11,4,4,4,0,0
.L32:
	.byte	3
	.byte	'Os_CoreGetThread',0,3,68,238,5,1
	.word	29845
	.byte	1,1
.L34:
	.byte	11,4,4,4,0,0
.L116:
	.byte	6
	.byte	'Os_CoreSetCurrentStack',0,3,68,252,5,1,1,1
.L118:
	.byte	5
	.byte	'Stack',0,68,252,5,1
	.word	5110
.L120:
	.byte	5
	.byte	'Core',0,68,252,5,1
	.word	24685
.L122:
	.byte	11,4,0,0
.L78:
	.byte	3
	.byte	'Os_CoreGetCurrentStack',0,3,68,142,6,1
	.word	5110
	.byte	1,1
.L80:
	.byte	11,4,4,4,0,0,14
	.byte	'Os_SpinlockConfigRefType',0,19,152,2,59
	.word	6051
	.byte	9
	.word	33916
	.byte	10
	.word	33950
	.byte	9
	.word	136
	.byte	10
	.word	33960
	.byte	12
	.byte	'Os_Hal_MpSystemConfigType_Tag',0,37,83,8,4,13
	.byte	'SysMpuId',0
	.word	136
	.byte	4,2,35,0,0,9
	.word	33970
	.byte	10
	.word	34024
	.byte	12
	.byte	'Os_MpSystemConfigType_Tag',0,36,114,8,4,13
	.byte	'HwConfig',0
	.word	34029
	.byte	4,2,35,0,0,9
	.word	34034
	.byte	10
	.word	34084
	.byte	12
	.byte	'Os_SystemConfigType_Tag',0,19,238,3,8,40,13
	.byte	'VersionInfo',0
	.word	12265
	.byte	8,2,35,0,13
	.byte	'NumberOfAsrCores',0
	.word	20107
	.byte	1,2,35,8,13
	.byte	'SpinlockRefs',0
	.word	33955
	.byte	4,2,35,12,13
	.byte	'SpinlockCount',0
	.word	5488
	.byte	2,2,35,16,13
	.byte	'HwConfig',0
	.word	33965
	.byte	4,2,35,20,13
	.byte	'MemoryProtection',0
	.word	34089
	.byte	4,2,35,24,13
	.byte	'InterruptSourceRefs',0
	.word	6816
	.byte	4,2,35,28,13
	.byte	'InterruptSourceCount',0
	.word	5488
	.byte	2,2,35,32,13
	.byte	'Core2Thread',0
	.word	29980
	.byte	4,2,35,36,0,9
	.word	34094
	.byte	10
	.word	34341
	.byte	3
	.byte	'Os_SystemGet',0,3,68,160,6,1
	.word	34346
	.byte	1,1,4,0,9
	.word	5873
	.byte	10
	.word	34378
	.byte	3
	.byte	'Os_SystemGetCore2Thread',0,3,68,173,6,1
	.word	29980
	.byte	1,1,5
	.byte	'System',0,68,173,6,1
	.word	34346
	.byte	4,0,6
	.byte	'Os_Hal_ProgramDataRegions',0,3,69,174,2,1,1,1,5
	.byte	'StartSlot',0,69,174,2,1
	.word	400
	.byte	5
	.byte	'Count',0,69,174,2,1
	.word	400
	.byte	5
	.byte	'RegionsConfig',0,69,174,2,1
	.word	18258
	.byte	4,0,6
	.byte	'Os_Hal_ProgramCodeRegions',0,3,69,202,2,1,1,1,5
	.byte	'StartSlot',0,69,202,2,1
	.word	400
	.byte	5
	.byte	'Count',0,69,202,2,1
	.word	400
	.byte	5
	.byte	'RegionsConfig',0,69,202,2,1
	.word	18258
	.byte	4,0,6
	.byte	'Os_Hal_ContextInit',0,3,70,96,1,1,1,5
	.byte	'Config',0,70,96,1
	.word	4730
	.byte	5
	.byte	'Context',0,70,96,1
	.word	5025
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReset',0,3,70,147,1,1,1,1,5
	.byte	'Config',0,70,147,1,1
	.word	4730
	.byte	5
	.byte	'Context',0,70,147,1,1
	.word	5025
	.byte	11,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextSetParameter',0,3,70,194,1,1,1,1,5
	.byte	'Context',0,70,194,1,1
	.word	5025
	.byte	5
	.byte	'Parameter',0,70,194,1,1
	.word	11874
	.byte	4,0,12
	.byte	'Os_Hal_ContextStackConfigType_Tag',0,7,189,1,8,8,13
	.byte	'StackRegionStart',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'StackRegionEnd',0
	.word	136
	.byte	4,2,35,4,0,9
	.word	34835
	.byte	10
	.word	34926
	.byte	6
	.byte	'Os_Hal_ContextSetStack',0,3,70,213,1,1,1,1,5
	.byte	'Context',0,70,213,1,1
	.word	5025
	.byte	5
	.byte	'Stack',0,70,213,1,1
	.word	34931
	.byte	4,0,9
	.word	136
	.byte	10
	.word	35001
	.byte	6
	.byte	'Os_Hal_ContextSetInterruptState',0,3,70,250,1,1,1,1,5
	.byte	'Context',0,70,250,1,1
	.word	5025
	.byte	5
	.byte	'InterruptState',0,70,250,1,1
	.word	35006
	.byte	4,0
.L123:
	.byte	6
	.byte	'Os_Hal_ContextSetUserMsrBits',0,3,70,143,2,1,1,1
.L125:
	.byte	5
	.byte	'Context',0,70,143,2,1
	.word	5025
.L127:
	.byte	4,0,9
	.word	4842
	.byte	10
	.word	35150
	.byte	6
	.byte	'Os_Hal_ContextFirstResume',0,3,70,173,2,1,1,1,5
	.byte	'Next',0,70,173,2,1
	.word	35155
	.byte	11,4,4,4,0,0
.L131:
	.byte	6
	.byte	'Os_Hal_ContextResetAndResume',0,3,70,220,2,1,1,1
.L134:
	.byte	5
	.byte	'CurrentConfig',0,70,220,2,1
	.word	4730
.L136:
	.byte	5
	.byte	'Current',0,70,220,2,1
	.word	5025
.L138:
	.byte	5
	.byte	'Next',0,70,220,2,1
	.word	35155
.L140:
	.byte	11
.L152:
	.byte	4,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextAbort',0,3,70,145,3,1,1,1,5
	.byte	'Config',0,70,145,3,1
	.word	4730
	.byte	5
	.byte	'Context',0,70,145,3,1
	.word	5025
	.byte	11,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReturn',0,3,70,204,3,1,1,1,5
	.byte	'Current',0,70,204,3,1
	.word	35155
	.byte	5
	.byte	'Next',0,70,204,3,1
	.word	35155
	.byte	11,4,4,4,0,0
.L155:
	.byte	6
	.byte	'Os_Hal_ContextIntCleanupCSAs',0,3,70,133,4,1,1,1
.L157:
	.byte	5
	.byte	'Context',0,70,133,4,1
	.word	35155
.L159:
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,133,4,1
	.word	3163
.L161:
	.byte	11,4,0,0
.L141:
	.byte	6
	.byte	'Os_Hal_ContextIntPrepareCSAContent',0,3,70,178,4,1,1,1
.L144:
	.byte	5
	.byte	'CurrentConfig',0,70,178,4,1
	.word	4730
.L146:
	.byte	5
	.byte	'Context',0,70,178,4,1
	.word	5025
.L148:
	.byte	11,4,0,0
.L187:
	.byte	6
	.byte	'Os_Hal_ContextIntInitialize',0,3,70,235,4,1,1,1
.L188:
	.byte	5
	.byte	'CurrentConfig',0,70,235,4,1
	.word	4730
.L190:
	.byte	5
	.byte	'Context',0,70,235,4,1
	.word	5025
.L192:
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,235,4,1
	.word	3163
.L194:
	.byte	11,4,4,0,0
.L166:
	.byte	6
	.byte	'Os_Hal_ContextIntInitializeReserved',0,3,70,148,5,1,1,1
.L168:
	.byte	5
	.byte	'CurrentConfig',0,70,148,5,1
	.word	4730
.L170:
	.byte	5
	.byte	'Context',0,70,148,5,1
	.word	5025
.L172:
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,148,5,1
	.word	3163
.L174:
	.byte	11,4,4,0,0
.L200:
	.byte	6
	.byte	'Os_Hal_ContextIntRestore',0,3,70,243,5,1,1,1
.L201:
	.byte	5
	.byte	'Context',0,70,243,5,1
	.word	35155
.L203:
	.byte	4,0,14
	.byte	'Os_MpAccessRightsRefType',0,36,146,1,59
	.word	27129
	.byte	10
	.word	35913
	.byte	6
	.byte	'Os_MpThreadInit',0,3,71,130,1,1,1,1,5
	.byte	'Config',0,71,130,1,1
	.word	27129
	.byte	5
	.byte	'Settings',0,71,130,1,1
	.word	35947
	.byte	4,0,9
	.word	27038
	.byte	10
	.word	36012
	.byte	6
	.byte	'Os_MpSwitch',0,3,71,193,1,1,1,1,5
	.byte	'Current',0,71,193,1,1
	.word	27129
	.byte	5
	.byte	'Next',0,71,193,1,1
	.word	27129
	.byte	4,0,6
	.byte	'Os_MpSwitchTo',0,3,71,230,1,1,1,1,5
	.byte	'AccessRights',0,71,230,1,1
	.word	27129
	.byte	4,0,6
	.byte	'Os_TraceThreadInit',0,3,72,139,6,1,1,1,5
	.byte	'Thread',0,72,139,6,1
	.word	7345
	.byte	4,0,6
	.byte	'Os_TraceThreadInitAndStart',0,3,72,178,6,1,1,1,5
	.byte	'Task',0,72,178,6,1
	.word	7345
	.byte	11,4,0,0,6
	.byte	'Os_TraceThreadSwitch',0,3,72,229,6,1,1,1,5
	.byte	'CurrentTaskState',0,72,229,6,1
	.word	12557
	.byte	5
	.byte	'Current',0,72,229,6,1
	.word	7345
	.byte	5
	.byte	'Next',0,72,229,6,1
	.word	7345
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceThreadResetAndResume',0,3,72,170,7,1,1,1,5
	.byte	'Current',0,72,170,7,1
	.word	7345
	.byte	5
	.byte	'Next',0,72,170,7,1
	.word	7345
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceThreadCleanupAndResume',0,3,72,228,7,1,1,1,5
	.byte	'Current',0,72,228,7,1
	.word	7345
	.byte	5
	.byte	'Next',0,72,228,7,1
	.word	7345
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceSpinlockRequested',0,3,72,183,11,1,1,1,5
	.byte	'Spinlock',0,72,183,11,1
	.word	5868
	.byte	11,4,0,0,6
	.byte	'Os_TraceSpinlockTaken',0,3,72,239,11,1,1,1,5
	.byte	'Spinlock',0,72,239,11,1
	.word	5868
	.byte	11,4,0,0,6
	.byte	'Os_TraceSpinlockReleased',0,3,72,167,12,1,1,1,5
	.byte	'Spinlock',0,72,167,12,1
	.word	5868
	.byte	11,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalDisabled',0,3,72,221,12,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsLevelDisabled',0,3,72,128,13,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalEnabled',0,3,72,163,13,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsLevelEnabled',0,3,72,198,13,1,1,1,11,4,0,0,3
	.byte	'Os_ThreadGetSpinlocks',0,3,73,117,1
	.word	32465
	.byte	1,1,5
	.byte	'Thread',0,73,117,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetTrace',0,3,73,159,1,1
	.word	7345
	.byte	1,1,5
	.byte	'Thread',0,73,159,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetTpConfig',0,3,73,173,1,1
	.word	28764
	.byte	1,1,5
	.byte	'Thread',0,73,173,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetInterruptApiState',0,3,73,213,1,1
	.word	28623
	.byte	1,1,5
	.byte	'Thread',0,73,213,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetCore',0,3,73,227,1,1
	.word	24685
	.byte	1,1,5
	.byte	'Thread',0,73,227,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentType',0,3,73,241,1,1
	.word	5488
	.byte	1,1,5
	.byte	'Thread',0,73,241,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetInitialType',0,3,73,254,1,1
	.word	5488
	.byte	1,1,5
	.byte	'Thread',0,73,254,1,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadIsTask',0,3,73,158,2,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,158,2,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadIsIsr',0,3,73,185,2,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,185,2,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadIsAnyInitialContext',0,3,73,198,2,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,198,2,1
	.word	29845
	.byte	5
	.byte	'Context',0,73,198,2,1
	.word	5488
	.byte	4,0,3
	.byte	'Os_ThreadIsHook',0,3,73,225,2,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,225,2,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadGetOwnerApplication',0,3,73,138,3,1
	.word	27985
	.byte	1,1,5
	.byte	'Thread',0,73,138,3,1
	.word	29845
	.byte	4,0,3
	.byte	'Os_ThreadHasResourcesLocked',0,3,73,185,3,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,185,3,1
	.word	29845
	.byte	11,4,4,4,0,0,3
	.byte	'Os_ThreadHasSpinlockLocked',0,3,73,223,3,1
	.word	237
	.byte	1,1,5
	.byte	'Thread',0,73,223,3,1
	.word	29845
	.byte	11,4,4,4,0,0,6
	.byte	'Os_ThreadSpinlockForceRelease',0,3,73,167,4,1,1,1,5
	.byte	'Thread',0,73,167,4,1
	.word	29845
	.byte	4,0,6
	.byte	'Os_ThreadResourceForceRelease',0,3,73,180,4,1,1,1,5
	.byte	'Thread',0,73,180,4,1
	.word	29845
	.byte	4,0,6
	.byte	'Os_ThreadLocksForceRelease',0,3,73,199,4,1,1,1,5
	.byte	'Thread',0,73,199,4,1
	.word	29845
	.byte	11,4,4,4,0,0
.L62:
	.byte	6
	.byte	'Os_ThreadResetAndResume',0,3,73,223,5,1,1,1
.L63:
	.byte	5
	.byte	'Next',0,73,223,5,1
	.word	29845
.L65:
	.byte	5
	.byte	'CallPreThreadHook',0,73,223,5,1
	.word	400
.L67:
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadStartFirst',0,3,73,172,6,1,1,1,5
	.byte	'Next',0,73,172,6,1
	.word	29845
	.byte	5
	.byte	'CallPreThreadHook',0,73,172,6,1
	.word	400
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadCleanupAndResume',0,3,73,230,6,1,1,1,5
	.byte	'Next',0,73,230,6,1
	.word	29845
	.byte	5
	.byte	'CallPreThreadHook',0,73,230,6,1
	.word	400
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadSwitch',0,3,73,133,8,1,1,1,5
	.byte	'Current',0,73,133,8,1
	.word	29845
	.byte	5
	.byte	'Next',0,73,133,8,1
	.word	29845
	.byte	5
	.byte	'CallPreThreadHook',0,73,133,8,1
	.word	400
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_ThreadGetAccessRights',0,3,73,137,9,1
	.word	29430
	.byte	1,1,5
	.byte	'Thread',0,73,137,9,1
	.word	29845
	.byte	4,0,6
	.byte	'Os_ThreadSetInterruptState',0,3,73,180,9,1,1,1,5
	.byte	'Thread',0,73,180,9,1
	.word	29845
	.byte	5
	.byte	'InterruptState',0,73,180,9,1
	.word	35006
	.byte	11,4,0,0
.L110:
	.byte	6
	.byte	'Os_ThreadCallPreThreadHook',0,3,73,199,9,1,1,1
.L111:
	.byte	5
	.byte	'Thread',0,73,199,9,1
	.word	29845
.L113:
	.byte	5
	.byte	'CallPreThreadHook',0,73,199,9,1
	.word	400
.L115:
	.byte	4,0,6
	.byte	'Os_ThreadInitFpuContext',0,3,73,237,10,1,1,1,5
	.byte	'Thread',0,73,237,10,1
	.word	29845
	.byte	11,4,0,0,6
	.byte	'Os_ThreadInitFpu',0,3,73,136,11,1,1,1,5
	.byte	'Thread',0,73,136,11,1
	.word	29845
	.byte	11,4,0,0,6
	.byte	'Os_ThreadStoreFpuContext',0,3,73,163,11,1,1,1,5
	.byte	'Thread',0,73,163,11,1
	.word	29845
	.byte	4,0,6
	.byte	'Os_ThreadRestoreFpuContext',0,3,73,185,11,1,1,1,5
	.byte	'Thread',0,73,185,11,1
	.word	29845
	.byte	4,0
.L206:
	.byte	6
	.byte	'Os_HookSuicide',0,3,74,180,1,1,1,1
.L207:
	.byte	11,4,4,0,0
.L204:
	.byte	6
	.byte	'Os_IsrSuicide',0,3,75,189,1,1,1,1
.L205:
	.byte	4,0,6
	.byte	'Os_IsrDisableSource',0,3,75,231,1,1,1,1,5
	.byte	'Isr',0,75,231,1,1
	.word	6765
	.byte	11,4,0,0,3
	.byte	'Os_IsrGetThread',0,3,75,160,1,1
	.word	29845
	.byte	1,1,5
	.byte	'Isr',0,75,160,1,1
	.word	23943
	.byte	4,0,6
	.byte	'Os_IsrInitialEnable',0,3,75,160,2,1,1,1,5
	.byte	'Isr',0,75,160,2,1
	.word	23943
	.byte	5
	.byte	'ClearPending',0,75,160,2,1
	.word	400
	.byte	11,4,4,0,0,6
	.byte	'Os_IsrEnable',0,3,75,192,2,1,1,1,5
	.byte	'Isr',0,75,192,2,1
	.word	23943
	.byte	11,4,0,0,6
	.byte	'Os_IsrClearPending',0,3,75,220,2,1,1,1,5
	.byte	'Isr',0,75,220,2,1
	.word	6765
	.byte	11,4,0,0,18
	.word	5488
	.byte	10
	.word	38802
	.byte	6
	.byte	'Os_XSigChannelIdxIncrement',0,3,76,90,1,1,1,5
	.byte	'Index',0,76,90,1
	.word	38807
	.byte	5
	.byte	'Size',0,76,90,1
	.word	5488
	.byte	11,4,0,0,9
	.word	21727
	.byte	10
	.word	38877
	.byte	3
	.byte	'Os_XSigChannelIsResultAvailable',0,3,76,129,2,1
	.word	237
	.byte	1,1,5
	.byte	'Channel',0,76,129,2,1
	.word	38882
	.byte	4,0,9
	.word	21249
	.byte	10
	.word	38950
	.byte	3
	.byte	'Os_XSigSend',0,3,77,129,1,1
	.word	417
	.byte	1,1,5
	.byte	'RecvCore',0,77,129,1,1
	.word	24685
	.byte	5
	.byte	'SendThread',0,77,129,1,1
	.word	29845
	.byte	5
	.byte	'FunctionIdx',0,77,129,1,1
	.word	20256
	.byte	5
	.byte	'Parameters',0,77,129,1,1
	.word	38955
	.byte	11,4,0,0,3
	.byte	'Os_XSigSend_ActivateTaskAsync',0,3,77,191,1,1
	.word	417
	.byte	1,1,5
	.byte	'RecvCore',0,77,191,1,1
	.word	24685
	.byte	5
	.byte	'SendThread',0,77,191,1,1
	.word	29845
	.byte	5
	.byte	'TaskID',0,77,191,1,1
	.word	12391
	.byte	4,0,3
	.byte	'Os_TaskGetThread',0,3,78,111,1
	.word	29845
	.byte	1,1,5
	.byte	'Task',0,78,111,1
	.word	16634
	.byte	4,0,3
	.byte	'Os_TaskThread2Task',0,3,78,125,1
	.word	16634
	.byte	1,1,5
	.byte	'Thread',0,78,125,1
	.word	29845
	.byte	11,4,4,0,0,18
	.word	11716
	.byte	18
	.word	11716
	.byte	15,79,70,9,16,13
	.byte	'Waiting',0
	.word	39258
	.byte	8,2,35,0,13
	.byte	'Triggered',0
	.word	39263
	.byte	8,2,35,8,0,12
	.byte	'Os_TaskType_Tag',0,32,116,8,52,13
	.byte	'Thread',0
	.word	28472
	.byte	24,2,35,0,13
	.byte	'Events',0
	.word	39268
	.byte	16,2,35,24,13
	.byte	'State',0
	.word	12557
	.byte	1,2,35,40,13
	.byte	'Priority',0
	.word	5488
	.byte	2,2,35,42,13
	.byte	'ActivationsAllowed',0
	.word	400
	.byte	1,2,35,44,13
	.byte	'NumRemainScheduleEventsRoundRobin',0
	.word	136
	.byte	4,2,35,46,0,10
	.word	39310
	.byte	3
	.byte	'Os_TaskGetDyn',0,3,78,139,1,1
	.word	39468
	.byte	1,1,5
	.byte	'Task',0,78,139,1,1
	.word	16634
	.byte	11,4,0,0,6
	.byte	'Os_TaskSetState',0,3,78,152,1,1,1,1,5
	.byte	'Task',0,78,152,1,1
	.word	16634
	.byte	5
	.byte	'State',0,78,152,1,1
	.word	12557
	.byte	11,4,0,0,3
	.byte	'Os_TaskGetId',0,3,78,219,1,1
	.word	12391
	.byte	1,1,5
	.byte	'Task',0,78,219,1,1
	.word	16634
	.byte	4,0
.L48:
	.byte	3
	.byte	'Os_TaskGetScheduler',0,3,78,128,2,1
	.word	17007
	.byte	1,1
.L50:
	.byte	5
	.byte	'Task',0,78,128,2,1
	.word	16634
.L52:
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TaskGetCore',0,3,78,154,2,1
	.word	24685
	.byte	1,1,5
	.byte	'Task',0,78,154,2,1
	.word	16634
	.byte	11,4,4,0,0,3
	.byte	'Os_TaskIsCoreLocal',0,3,78,167,2,1
	.word	136
	.byte	1,1,5
	.byte	'Task',0,78,167,2,1
	.word	16634
	.byte	11,4,4,0,0,6
	.byte	'Os_TaskSwitch',0,3,78,252,2,1,1,1,5
	.byte	'Scheduler',0,78,252,2,1
	.word	17007
	.byte	5
	.byte	'CallerThread',0,78,252,2,1
	.word	29845
	.byte	11,4,4,4,4,4,4,4,4,0,0
.L53:
	.byte	6
	.byte	'Os_TaskResume',0,3,78,161,3,1,1,1
.L54:
	.byte	5
	.byte	'Scheduler',0,78,161,3,1
	.word	17007
.L56:
	.byte	11,4,4,4,4,4,4,4,0,0
.L44:
	.byte	6
	.byte	'Os_TaskSuicide',0,3,78,188,3,1,1,1
.L45:
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TaskCallPostTaskHook',0,3,78,232,5,1,1,1,11,4,0,0,3
	.byte	'Os_CounterGetCore',0,3,80,182,1,1
	.word	24685
	.byte	1,1,5
	.byte	'Counter',0,80,182,1,1
	.word	18875
	.byte	4,0,3
	.byte	'Os_CounterIsFutureValue',0,3,80,200,1,1
	.word	237
	.byte	1,1,5
	.byte	'Counter',0,80,200,1,1
	.word	18875
	.byte	5
	.byte	'Value',0,80,200,1,1
	.word	136
	.byte	5
	.byte	'ReferenceValue',0,80,200,1,1
	.word	136
	.byte	11,4,0,0,3
	.byte	'Os_CounterIsFutureValueInternal',0,3,80,225,1,1
	.word	237
	.byte	1,1,5
	.byte	'MaxCountingValue',0,80,225,1,1
	.word	136
	.byte	5
	.byte	'MaxDifferentialValue',0,80,225,1,1
	.word	136
	.byte	5
	.byte	'Value',0,80,225,1,1
	.word	136
	.byte	5
	.byte	'ReferenceValue',0,80,225,1,1
	.word	136
	.byte	11,4,4,0,0,3
	.byte	'Os_CounterCheckValueLeMaxAllowed',0,3,80,145,2,1
	.word	237
	.byte	1,1,5
	.byte	'Counter',0,80,145,2,1
	.word	18875
	.byte	5
	.byte	'Value',0,80,145,2,1
	.word	136
	.byte	11,4,0,0,3
	.byte	'Os_CounterCheckValueLeReducedMaxAllowed',0,3,80,159,2,1
	.word	237
	.byte	1,1,5
	.byte	'Counter',0,80,159,2,1
	.word	18875
	.byte	5
	.byte	'Reduce',0,80,159,2,1
	.word	136
	.byte	5
	.byte	'Value',0,80,159,2,1
	.word	136
	.byte	11,4,4,0,0,3
	.byte	'Os_CounterCheckValueGeMinCycleOrZero',0,3,80,175,2,1
	.word	237
	.byte	1,1,5
	.byte	'Counter',0,80,175,2,1
	.word	18875
	.byte	5
	.byte	'Cycle',0,80,175,2,1
	.word	136
	.byte	11,4,0,0,9
	.word	18647
	.byte	10
	.word	40514
	.byte	3
	.byte	'Os_CounterGetCharacteristics',0,3,80,189,2,1
	.word	40519
	.byte	1,1,5
	.byte	'Counter',0,80,189,2,1
	.word	18875
	.byte	4,0,3
	.byte	'Os_CounterGetMaxAllowedValue',0,3,80,203,2,1
	.word	136
	.byte	1,1,5
	.byte	'Counter',0,80,203,2,1
	.word	18875
	.byte	4,0,3
	.byte	'Os_CounterGetMaxCountingValue',0,3,80,217,2,1
	.word	136
	.byte	1,1,5
	.byte	'Counter',0,80,217,2,1
	.word	18875
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtInit',0,3,81,93,1,1,1,5
	.byte	'TimerConfig',0,81,93,1
	.word	19841
	.byte	4,0,3
	.byte	'Os_Hal_TimerFrtGetCounterValue',0,3,81,125,1
	.word	136
	.byte	1,1,5
	.byte	'TimerConfig',0,81,125,1
	.word	19841
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtSetCompareValue',0,3,81,139,1,1,1,1,5
	.byte	'TimerConfig',0,81,139,1,1
	.word	19841
	.byte	5
	.byte	'ExpirationTime',0,81,139,1,1
	.word	136
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtTriggerIrq',0,3,81,172,1,1,1,1,5
	.byte	'TimerConfig',0,81,172,1,1
	.word	19841
	.byte	4,0,12
	.byte	'Os_Hal_TimerPitConfigType_Tag',0,83,105,8,32,13
	.byte	'CounterRegisterAddress',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'CounterConfRegisterAddress',0
	.word	136
	.byte	4,2,35,4,13
	.byte	'CounterConfRegisterValue',0
	.word	136
	.byte	4,2,35,8,13
	.byte	'ReloadRegisterAddress',0
	.word	136
	.byte	4,2,35,12,13
	.byte	'ReloadConfRegisterAddress',0
	.word	136
	.byte	4,2,35,16,13
	.byte	'ReloadConfRegisterValue',0
	.word	136
	.byte	4,2,35,20,13
	.byte	'ReloadValue',0
	.word	5488
	.byte	2,2,35,24,13
	.byte	'InterruptSRCRegisterAddress',0
	.word	136
	.byte	4,2,35,26,0,9
	.word	40961
	.byte	10
	.word	41256
	.byte	6
	.byte	'Os_Hal_TimerPitInit',0,3,82,92,1,1,1,5
	.byte	'TimerConfig',0,82,92,1
	.word	41261
	.byte	4,0,15,39,219,1,9,8,13
	.byte	'Value',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Compare',0
	.word	136
	.byte	4,2,35,4,0,10
	.word	41315
	.byte	12
	.byte	'Os_TimerSwConfigType_Tag',0,39,232,1,8,52,13
	.byte	'Counter',0
	.word	19260
	.byte	48,2,35,0,13
	.byte	'Dyn',0
	.word	41354
	.byte	4,2,35,48,0,9
	.word	41359
	.byte	10
	.word	41421
	.byte	6
	.byte	'Os_TimerSwInit',0,3,84,84,1,1,1,5
	.byte	'Timer',0,84,84,1
	.word	41426
	.byte	11,4,4,0,0,3
	.byte	'Os_TimerSwGetValue',0,3,84,220,1,1
	.word	136
	.byte	1,1,5
	.byte	'Timer',0,84,220,1,1
	.word	41426
	.byte	4,0,6
	.byte	'Os_TimerSwSetCompareValue',0,3,84,233,1,1,1,1,5
	.byte	'Timer',0,84,233,1,1
	.word	41426
	.byte	5
	.byte	'ExpirationTime',0,84,233,1,1
	.word	136
	.byte	4,0,3
	.byte	'Os_TimerSwUserModulo',0,3,84,252,1,1
	.word	136
	.byte	1,1,5
	.byte	'Timer',0,84,252,1,1
	.word	41426
	.byte	5
	.byte	'Value',0,84,252,1,1
	.word	136
	.byte	11,4,0,0,3
	.byte	'Os_TimerHrtGetValue',0,3,84,211,4,1
	.word	136
	.byte	1,1,5
	.byte	'Timer',0,84,211,4,1
	.word	19932
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCounter',0,3,84,205,2,1
	.word	18875
	.byte	1,1,5
	.byte	'Timer',0,84,205,2,1
	.word	19932
	.byte	4,0,3
	.byte	'Os_TimerHrtComputeHardwareCompareValue',0,3,84,229,2,1
	.word	136
	.byte	1,1,5
	.byte	'Timer',0,84,229,2,1
	.word	19932
	.byte	5
	.byte	'ExpirationTime',0,84,229,2,1
	.word	136
	.byte	11,11,4,0,0,0,6
	.byte	'Os_TimerHrtSetCompareValue',0,3,84,157,3,1,1,1,5
	.byte	'Timer',0,84,157,3,1
	.word	19932
	.byte	5
	.byte	'ExpirationTime',0,84,157,3,1
	.word	136
	.byte	11,4,4,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCompareValue',0,3,84,247,3,1
	.word	136
	.byte	1,1,5
	.byte	'Timer',0,84,247,3,1
	.word	19932
	.byte	4,0,3
	.byte	'Os_TimerSwAbsCounter2AbsTimerValue',0,3,84,137,5,1
	.word	136
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,84,137,5,1
	.word	136
	.byte	5
	.byte	'Now',0,84,137,5,1
	.word	136
	.byte	5
	.byte	'CounterValue',0,84,137,5,1
	.word	136
	.byte	4,0,3
	.byte	'Os_TimerAdd',0,3,84,253,5,1
	.word	136
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,84,253,5,1
	.word	136
	.byte	5
	.byte	'MaxCountingValue',0,84,253,5,1
	.word	136
	.byte	5
	.byte	'Value',0,84,253,5,1
	.word	136
	.byte	5
	.byte	'Add',0,84,253,5,1
	.word	136
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TimerSub',0,3,84,173,6,1
	.word	136
	.byte	1,1,5
	.byte	'MaxCountingValue',0,84,173,6,1
	.word	136
	.byte	5
	.byte	'Value',0,84,173,6,1
	.word	136
	.byte	5
	.byte	'Sub',0,84,173,6,1
	.word	136
	.byte	11,4,4,4,0,0,6
	.byte	'Os_TimerFrtSetCompareValue',0,3,84,222,6,1,1,1,5
	.byte	'TimerConfig',0,84,222,6,1
	.word	19841
	.byte	5
	.byte	'CompareValue',0,84,222,6,1
	.word	136
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TimerFrtTickType2TickType',0,3,84,134,7,1
	.word	136
	.byte	1,1,5
	.byte	'Value',0,84,134,7,1
	.word	136
	.byte	4,0,3
	.byte	'Os_TimerTickType2FrtTickType',0,3,84,147,7,1
	.word	136
	.byte	1,1,5
	.byte	'Value',0,84,147,7,1
	.word	136
	.byte	4,0,9
	.word	.L267-.L18
	.byte	10
	.word	42505
	.byte	12
	.byte	'Os_TpBudgetType_Tag',0,38,157,2,8,8,13
	.byte	'Remaining',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'Previous',0
	.word	42510
	.byte	4,2,35,4,0,10
	.word	42515
	.byte	7,86,94,9,1,8
	.byte	'OS_TPMONITORINGTYPE_NONE',0,0,8
	.byte	'OS_TPMONITORINGTYPE_LOCK',0,1,8
	.byte	'OS_TPMONITORINGTYPE_EXECUTION',0,2,8
	.byte	'OS_TPMONITORINGTYPE_ARRIVAL',0,3,8
	.byte	'OS_TPMONITORINGTYPE_COUNT',0,4,0
.L267:
	.byte	12
	.byte	'Os_TpBudgetConfigType_Tag',0,38,168,2,8,12,13
	.byte	'Dyn',0
	.word	42579
	.byte	4,2,35,0,13
	.byte	'BudgetKind',0
	.word	42584
	.byte	1,2,35,4,13
	.byte	'Budget',0
	.word	136
	.byte	4,2,35,6,0,14
	.byte	'Os_TpBudgetConfigRefType',0,86,82,59
	.word	42510
	.byte	9
	.word	42816
	.byte	10
	.word	42849
	.byte	12
	.byte	'Os_TpOwnerThreadType_Tag',0,38,182,2,8,20,13
	.byte	'EarliestArrival',0
	.word	11716
	.byte	8,2,35,0,13
	.byte	'DelayLevel',0
	.word	400
	.byte	1,2,35,8,13
	.byte	'MonitoredBudgets',0
	.word	42510
	.byte	4,2,35,12,13
	.byte	'Violation',0
	.word	42584
	.byte	1,2,35,16,0,10
	.word	42859
	.byte	12
	.byte	'Os_TpOwnerThreadConfigType_Tag',0,38,213,2,8,56,13
	.byte	'Base',0
	.word	28706
	.byte	1,2,35,0,13
	.byte	'TimeFrame',0
	.word	11716
	.byte	8,2,35,4,13
	.byte	'ExecutionBudget',0
	.word	42734
	.byte	12,2,35,12,13
	.byte	'AllInterruptLockBudget',0
	.word	42734
	.byte	12,2,35,24,13
	.byte	'OsInterruptLockBudget',0
	.word	42734
	.byte	12,2,35,36,13
	.byte	'ResourceLockBudgets',0
	.word	42854
	.byte	4,2,35,48,13
	.byte	'Dyn',0
	.word	42981
	.byte	4,2,35,52,0,9
	.word	42986
	.byte	10
	.word	43187
	.byte	3
	.byte	'Os_TpThread2TpOwnerThread',0,3,85,94,1
	.word	43192
	.byte	1,1,5
	.byte	'TpThread',0,85,94,1
	.word	28764
	.byte	11,4,0,0,9
	.word	42734
	.byte	10
	.word	43255
	.byte	3
	.byte	'Os_TpGetCurrentTpOwnerThread',0,3,85,108,1
	.word	43192
	.byte	1,1,5
	.byte	'Config',0,85,108,1
	.word	20092
	.byte	11,4,4,0,0,6
	.byte	'Os_TpThreadInit',0,3,85,127,1,1,1,5
	.byte	'Config',0,85,127,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,127,1
	.word	28764
	.byte	11,4,4,0,0,6
	.byte	'Os_TpThreadKill',0,3,85,157,1,1,1,1,5
	.byte	'Thread',0,85,157,1,1
	.word	28764
	.byte	11,4,4,0,0,6
	.byte	'Os_TpResume',0,3,85,184,1,1,1,1,5
	.byte	'Config',0,85,184,1,1
	.word	20092
	.byte	5
	.byte	'Now',0,85,184,1,1
	.word	136
	.byte	5
	.byte	'RemainingTime',0,85,184,1,1
	.word	136
	.byte	11,4,4,0,0,6
	.byte	'Os_TpSuspend',0,3,85,209,1,1,1,1,5
	.byte	'Config',0,85,209,1,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,209,1,1
	.word	43192
	.byte	5
	.byte	'Now',0,85,209,1,1
	.word	136
	.byte	5
	.byte	'Deadline',0,85,209,1,1
	.word	136
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TpSub',0,3,85,239,1,1
	.word	136
	.byte	1,1,5
	.byte	'Config',0,85,239,1,1
	.word	20092
	.byte	5
	.byte	'Value',0,85,239,1,1
	.word	136
	.byte	5
	.byte	'Sub',0,85,239,1,1
	.word	136
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TpAdd',0,3,85,139,2,1
	.word	136
	.byte	1,1,5
	.byte	'Config',0,85,139,2,1
	.word	20092
	.byte	5
	.byte	'Value',0,85,139,2,1
	.word	136
	.byte	5
	.byte	'Add',0,85,139,2,1
	.word	136
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TpGetArrivalTimeStamp',0,3,85,171,2,1
	.word	11716
	.byte	1,1,5
	.byte	'Config',0,85,171,2,1
	.word	20092
	.byte	11,4,0,0,6
	.byte	'Os_TpSwitch',0,3,85,207,2,1,1,1,5
	.byte	'Config',0,85,207,2,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,207,2,1
	.word	28764
	.byte	5
	.byte	'Next',0,85,207,2,1
	.word	28764
	.byte	5
	.byte	'NextThread',0,85,207,2,1
	.word	29845
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAndResume',0,3,85,157,3,1,1,1,5
	.byte	'Config',0,85,157,3,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,157,3,1
	.word	28764
	.byte	5
	.byte	'Next',0,85,157,3,1
	.word	28764
	.byte	5
	.byte	'NextThread',0,85,157,3,1
	.word	29845
	.byte	11,11,4,0,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAfterWait',0,3,85,225,3,1,1,1,5
	.byte	'Config',0,85,225,3,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,225,3,1
	.word	28764
	.byte	11,11,4,0,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpCheckInterArrival',0,3,85,153,4,1
	.word	237
	.byte	1,1,5
	.byte	'Config',0,85,153,4,1
	.word	20092
	.byte	5
	.byte	'TpThread',0,85,153,4,1
	.word	28764
	.byte	11,11,4,0,4,4,4,4,4,0,0,3
	.byte	'Os_TpGetResourceBudget',0,3,85,128,5,1
	.word	42510
	.byte	1,1,5
	.byte	'Current',0,85,128,5,1
	.word	43192
	.byte	5
	.byte	'Resource',0,85,128,5,1
	.word	11911
	.byte	11,4,4,0,0,6
	.byte	'Os_TpStartAllInterrupt',0,3,85,176,6,1,1,1,5
	.byte	'Config',0,85,176,6,1
	.word	20092
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStopAllInterrupt',0,3,85,207,6,1,1,1,5
	.byte	'Config',0,85,207,6,1
	.word	20092
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStartOsInterrupt',0,3,85,239,6,1,1,1,5
	.byte	'Config',0,85,239,6,1
	.word	20092
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStopOsInterrupt',0,3,85,142,7,1,1,1,5
	.byte	'Config',0,85,142,7,1
	.word	20092
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStart',0,3,85,182,7,1,1,1,5
	.byte	'Config',0,85,182,7,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,182,7,1
	.word	43192
	.byte	5
	.byte	'Budget',0,85,182,7,1
	.word	42510
	.byte	11,11,4,0,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStop',0,3,85,131,8,1,1,1,5
	.byte	'Config',0,85,131,8,1
	.word	20092
	.byte	5
	.byte	'Current',0,85,131,8,1
	.word	43192
	.byte	5
	.byte	'Budget',0,85,131,8,1
	.word	42510
	.byte	11,11,4,0,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpIsEnabledByCoreTpConfig',0,3,85,213,8,1
	.word	237
	.byte	1,1,5
	.byte	'Config',0,85,213,8,1
	.word	20092
	.byte	4,0,3
	.byte	'Os_TpIsEnabledByThreadTpConfig',0,3,85,244,8,1
	.word	237
	.byte	1,1,5
	.byte	'Config',0,85,244,8,1
	.word	28764
	.byte	4,0,3
	.byte	'Os_JobGetCore',0,3,87,190,2,1
	.word	24685
	.byte	1,1,5
	.byte	'Job',0,87,190,2,1
	.word	19011
	.byte	11,4,0,0,3
	.byte	'Os_AppCheckIsAccessible',0,3,88,232,1,1
	.word	237
	.byte	1,1,5
	.byte	'App',0,88,232,1,1
	.word	27985
	.byte	4,0,3
	.byte	'Os_AppGetCore',0,3,88,144,2,1
	.word	24685
	.byte	1,1,5
	.byte	'App',0,88,144,2,1
	.word	27985
	.byte	4,0,14
	.byte	'Os_ServiceCallListType',0,90,66,59
	.word	28467
	.byte	10
	.word	44877
	.byte	6
	.byte	'Os_ServiceCallsInit',0,3,89,134,1,1,1,1,5
	.byte	'ServiceCalls',0,89,134,1,1
	.word	44908
	.byte	4,0,10
	.word	28270
	.byte	10
	.word	400
	.byte	6
	.byte	'Os_FifoIdxIncrement',0,3,91,88,1,1,1,5
	.byte	'Index',0,91,88,1
	.word	44970
	.byte	5
	.byte	'Size',0,91,88,1
	.word	400
	.byte	11,4,0,0,3
	.byte	'Os_FifoIsFull',0,3,91,118,1
	.word	237
	.byte	1,1,5
	.byte	'WriteIdx',0,91,118,1
	.word	400
	.byte	5
	.byte	'ReadIdx',0,91,118,1
	.word	400
	.byte	5
	.byte	'Size',0,91,118,1
	.word	400
	.byte	11,4,0,0,3
	.byte	'Os_FifoIsEmpty',0,3,91,142,1,1
	.word	237
	.byte	1,1,5
	.byte	'WriteIdx',0,91,142,1,1
	.word	400
	.byte	5
	.byte	'ReadIdx',0,91,142,1,1
	.word	400
	.byte	4,0,9
	.word	400
	.byte	10
	.word	45172
	.byte	6
	.byte	'Os_FifoEmptyQueue',0,3,91,158,1,1,1,1,5
	.byte	'WriteIdx',0,91,158,1,1
	.word	45177
	.byte	5
	.byte	'ReadIdx',0,91,158,1,1
	.word	44970
	.byte	4,0,3
	.byte	'Os_FifoIndicesInRange',0,3,91,178,1,1
	.word	237
	.byte	1,1,5
	.byte	'WriteIdx',0,91,178,1,1
	.word	400
	.byte	5
	.byte	'ReadIdx',0,91,178,1,1
	.word	400
	.byte	5
	.byte	'Size',0,91,178,1,1
	.word	400
	.byte	4,0,15,93,80,9,1,13
	.byte	'WriteIdx',0
	.word	400
	.byte	1,2,35,0,0,10
	.word	45330
	.byte	15,93,87,9,1,13
	.byte	'ReadIdx',0
	.word	400
	.byte	1,2,35,0,0,9
	.word	45359
	.byte	10
	.word	45382
	.byte	15,93,73,9,1,13
	.byte	'Value',0
	.word	400
	.byte	1,2,35,0,0,10
	.word	45392
	.byte	12
	.byte	'Os_Fifo08WriteConfigType_Tag',0,93,94,8,16,13
	.byte	'Dyn',0
	.word	45354
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	45387
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	45413
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	45418
	.byte	10
	.word	45508
	.byte	3
	.byte	'Os_Fifo08IsFull',0,3,92,169,1,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,92,169,1,1
	.word	45513
	.byte	11,4,0,0,10
	.word	45359
	.byte	9
	.word	45330
	.byte	10
	.word	45569
	.byte	9
	.word	45392
	.byte	10
	.word	45579
	.byte	12
	.byte	'Os_Fifo08ReadConfigType_Tag',0,93,104,8,16,13
	.byte	'Dyn',0
	.word	45564
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	45574
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	45584
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	45589
	.byte	10
	.word	45679
	.byte	3
	.byte	'Os_Fifo08IsEmpty',0,3,92,132,2,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,92,132,2,1
	.word	45684
	.byte	11,4,0,0,15,95,80,9,1,13
	.byte	'WriteIdx',0
	.word	400
	.byte	1,2,35,0,0,10
	.word	45736
	.byte	15,95,87,9,1,13
	.byte	'ReadIdx',0
	.word	400
	.byte	1,2,35,0,0,9
	.word	45765
	.byte	10
	.word	45788
	.byte	15,95,73,9,2,13
	.byte	'Value',0
	.word	5488
	.byte	2,2,35,0,0,10
	.word	45798
	.byte	12
	.byte	'Os_Fifo16WriteConfigType_Tag',0,95,94,8,16,13
	.byte	'Dyn',0
	.word	45760
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	45793
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	45819
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	45824
	.byte	10
	.word	45914
	.byte	3
	.byte	'Os_Fifo16IsFull',0,3,94,169,1,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,94,169,1,1
	.word	45919
	.byte	11,4,0,0,10
	.word	45765
	.byte	9
	.word	45736
	.byte	10
	.word	45975
	.byte	9
	.word	45798
	.byte	10
	.word	45985
	.byte	12
	.byte	'Os_Fifo16ReadConfigType_Tag',0,95,104,8,16,13
	.byte	'Dyn',0
	.word	45970
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	45980
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	45990
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	45995
	.byte	10
	.word	46085
	.byte	3
	.byte	'Os_Fifo16IsEmpty',0,3,94,133,2,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,94,133,2,1
	.word	46090
	.byte	11,4,0,0,15,97,80,9,1,13
	.byte	'WriteIdx',0
	.word	400
	.byte	1,2,35,0,0,10
	.word	46142
	.byte	15,97,87,9,1,13
	.byte	'ReadIdx',0
	.word	400
	.byte	1,2,35,0,0,9
	.word	46171
	.byte	10
	.word	46194
	.byte	15,97,73,9,4,13
	.byte	'Value',0
	.word	136
	.byte	4,2,35,0,0,10
	.word	46204
	.byte	12
	.byte	'Os_Fifo32WriteConfigType_Tag',0,97,94,8,16,13
	.byte	'Dyn',0
	.word	46166
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	46199
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	46225
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	46230
	.byte	10
	.word	46320
	.byte	3
	.byte	'Os_Fifo32IsFull',0,3,96,169,1,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,96,169,1,1
	.word	46325
	.byte	11,4,0,0,10
	.word	46171
	.byte	9
	.word	46142
	.byte	10
	.word	46381
	.byte	9
	.word	46204
	.byte	10
	.word	46391
	.byte	12
	.byte	'Os_Fifo32ReadConfigType_Tag',0,97,104,8,16,13
	.byte	'Dyn',0
	.word	46376
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	46386
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	46396
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,0,9
	.word	46401
	.byte	10
	.word	46491
	.byte	3
	.byte	'Os_Fifo32IsEmpty',0,3,96,131,2,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,96,131,2,1
	.word	46496
	.byte	11,4,0,0,15,99,101,9,1,13
	.byte	'WriteIdx',0
	.word	400
	.byte	1,2,35,0,0,10
	.word	46548
	.byte	15,99,108,9,1,13
	.byte	'ReadIdx',0
	.word	400
	.byte	1,2,35,0,0,9
	.word	46577
	.byte	10
	.word	46600
	.byte	23,1,1,24
	.word	12697
	.byte	24
	.word	400
	.byte	24
	.word	11874
	.byte	0,10
	.word	46610
	.byte	14
	.byte	'Os_FifoRefWriteCbk',0,99,92,9
	.word	46629
	.byte	12
	.byte	'Os_FifoRefWriteConfigType_Tag',0,99,115,8,20,13
	.byte	'Dyn',0
	.word	46572
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	46605
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	12697
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,13
	.byte	'WriteCbk',0
	.word	46634
	.byte	4,2,35,16,0,9
	.word	46661
	.byte	10
	.word	46770
	.byte	3
	.byte	'Os_FifoRefIsFull',0,3,98,167,1,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,98,167,1,1
	.word	46775
	.byte	11,4,0,0,10
	.word	46610
	.byte	10
	.word	46577
	.byte	9
	.word	46548
	.byte	10
	.word	46837
	.byte	23,1,1,24
	.word	11874
	.byte	24
	.word	400
	.byte	24
	.word	12697
	.byte	0,10
	.word	46847
	.byte	14
	.byte	'Os_FifoRefReadCbk',0,99,78,9
	.word	46866
	.byte	12
	.byte	'Os_FifoRefReadConfigType_Tag',0,99,126,8,20,13
	.byte	'Dyn',0
	.word	46832
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	46842
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	11874
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	400
	.byte	1,2,35,12,13
	.byte	'ReadCbk',0
	.word	46871
	.byte	4,2,35,16,0,9
	.word	46897
	.byte	10
	.word	47005
	.byte	3
	.byte	'Os_FifoRefIsEmpty',0,3,98,255,1,1
	.word	237
	.byte	1,1,5
	.byte	'Fifo',0,98,255,1,1
	.word	47010
	.byte	11,4,0,0,10
	.word	46847
	.byte	2
	.byte	'int',0,4,5,9
	.word	47068
	.byte	27
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,24
	.word	47075
	.byte	0,18
	.word	237
	.byte	10
	.word	237
	.byte	28
	.byte	'__cmpswapw',0
	.word	47117
	.byte	1,1,1,1,29
	.byte	'p',0
	.word	47122
	.byte	29
	.byte	'value',0
	.word	237
	.byte	29
	.byte	'compare',0
	.word	237
	.byte	0,18
	.word	47068
	.byte	28
	.byte	'__mfcr',0
	.word	47179
	.byte	1,1,1,1,24
	.word	47068
	.byte	0,30
	.byte	'__svlcx',0,1,1,1,1,30
	.byte	'__isync',0,1,1,1,1,30
	.byte	'__dsync',0,1,1,1,1,30
	.byte	'__disable',0,1,1,1,1,31
	.word	157
	.byte	4,0,31
	.word	184
	.byte	4,0,31
	.word	211
	.byte	4,0,32
	.byte	'Os_ErrKernelPanic',0,24,200,16,1,1,1,1,1,31
	.word	253
	.byte	33
	.word	281
	.byte	33
	.word	293
	.byte	4,0,31
	.word	312
	.byte	33
	.word	344
	.byte	4,0,31
	.word	361
	.byte	33
	.word	379
	.byte	4,0,31
	.word	2924
	.byte	33
	.word	2962
	.byte	4,0,31
	.word	2982
	.byte	33
	.word	3022
	.byte	4,0,34
	.byte	'Os_ErrProtectionError',0,24,215,19,21,1,1,1,1,5
	.byte	'Fatalerror',0,24,215,19,57
	.word	417
	.byte	0,31
	.word	3042
	.byte	4,0,31
	.word	3074
	.byte	4,0,31
	.word	3107
	.byte	4,0,31
	.word	3168
	.byte	33
	.word	3201
	.byte	4,0,31
	.word	3223
	.byte	33
	.word	3250
	.byte	4,0,31
	.word	3277
	.byte	33
	.word	3304
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,0,0,31
	.word	3329
	.byte	33
	.word	3363
	.byte	4,0,31
	.word	3380
	.byte	33
	.word	3415
	.byte	4,0,31
	.word	3432
	.byte	33
	.word	3463
	.byte	4,0,31
	.word	3485
	.byte	33
	.word	3521
	.byte	4,0,31
	.word	3646
	.byte	33
	.word	3678
	.byte	4,0,31
	.word	3699
	.byte	33
	.word	3730
	.byte	4,0,31
	.word	3751
	.byte	33
	.word	3782
	.byte	4,0,31
	.word	3803
	.byte	33
	.word	3838
	.byte	33
	.word	3857
	.byte	4,0,31
	.word	3874
	.byte	33
	.word	3906
	.byte	33
	.word	3922
	.byte	4,0,31
	.word	3940
	.byte	33
	.word	3978
	.byte	4,0,31
	.word	4005
	.byte	33
	.word	4038
	.byte	4,0,31
	.word	4065
	.byte	33
	.word	4100
	.byte	4,0,31
	.word	4116
	.byte	33
	.word	4151
	.byte	4,0,31
	.word	4167
	.byte	33
	.word	4203
	.byte	4,0,31
	.word	4235
	.byte	33
	.word	4271
	.byte	33
	.word	4294
	.byte	33
	.word	4308
	.byte	4,0,31
	.word	4340
	.byte	33
	.word	4376
	.byte	33
	.word	4399
	.byte	33
	.word	4413
	.byte	4,0,31
	.word	4445
	.byte	33
	.word	4481
	.byte	33
	.word	4504
	.byte	33
	.word	4518
	.byte	4,0,31
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	4,0,31
	.word	4811
	.byte	4,0,31
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,0,0,31
	.word	30376
	.byte	33
	.word	30409
	.byte	11,35
	.word	211
	.byte	36
	.word	235
	.byte	0,4,0,0,31
	.word	30434
	.byte	33
	.word	30471
	.byte	4,0,31
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	4,0,31
	.word	30575
	.byte	33
	.word	30599
	.byte	4,0,31
	.word	30634
	.byte	33
	.word	30666
	.byte	4,0,31
	.word	30686
	.byte	33
	.word	30717
	.byte	4,0,31
	.word	30737
	.byte	33
	.word	30763
	.byte	4,0,31
	.word	30783
	.byte	4,0,31
	.word	30808
	.byte	11,11,35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,4,4,0,0,31
	.word	30849
	.byte	33
	.word	30870
	.byte	11,4,35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,4,0,0,31
	.word	30899
	.byte	33
	.word	30920
	.byte	11,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,0,0,31
	.word	30949
	.byte	33
	.word	30986
	.byte	11,35
	.word	312
	.byte	33
	.word	344
	.byte	36
	.word	359
	.byte	0,4,0,0,31
	.word	31014
	.byte	33
	.word	31042
	.byte	4,0,31
	.word	31068
	.byte	33
	.word	31103
	.byte	11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,4,35
	.word	44236
	.byte	33
	.word	44267
	.byte	37
	.word	44283
	.byte	37
	.word	44284
	.byte	35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44448
	.byte	33
	.word	44473
	.byte	33
	.word	44489
	.byte	33
	.word	44506
	.byte	37
	.word	44522
	.byte	37
	.word	44523
	.byte	37
	.word	44524
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44526
	.byte	36
	.word	44527
	.byte	36
	.word	44528
	.byte	36
	.word	44529
	.byte	36
	.word	44530
	.byte	36
	.word	44531
	.byte	36
	.word	44532
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44285
	.byte	36
	.word	44286
	.byte	36
	.word	44287
	.byte	0,0,4,0,0,31
	.word	31125
	.byte	33
	.word	31159
	.byte	11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,4,35
	.word	44290
	.byte	33
	.word	44320
	.byte	37
	.word	44336
	.byte	37
	.word	44337
	.byte	35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44535
	.byte	33
	.word	44559
	.byte	33
	.word	44575
	.byte	33
	.word	44592
	.byte	37
	.word	44608
	.byte	37
	.word	44609
	.byte	37
	.word	44610
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44612
	.byte	36
	.word	44613
	.byte	36
	.word	44614
	.byte	36
	.word	44615
	.byte	36
	.word	44616
	.byte	36
	.word	44617
	.byte	36
	.word	44618
	.byte	36
	.word	44619
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44338
	.byte	36
	.word	44339
	.byte	36
	.word	44340
	.byte	0,0,4,0,0,31
	.word	31181
	.byte	33
	.word	31215
	.byte	11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,4,35
	.word	44343
	.byte	33
	.word	44373
	.byte	37
	.word	44389
	.byte	37
	.word	44390
	.byte	35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44448
	.byte	33
	.word	44473
	.byte	33
	.word	44489
	.byte	33
	.word	44506
	.byte	37
	.word	44522
	.byte	37
	.word	44523
	.byte	37
	.word	44524
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44526
	.byte	36
	.word	44527
	.byte	36
	.word	44528
	.byte	36
	.word	44529
	.byte	36
	.word	44530
	.byte	36
	.word	44531
	.byte	36
	.word	44532
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44391
	.byte	36
	.word	44392
	.byte	36
	.word	44393
	.byte	0,0,4,0,0,31
	.word	31237
	.byte	33
	.word	31270
	.byte	11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,4,35
	.word	44396
	.byte	33
	.word	44425
	.byte	37
	.word	44441
	.byte	37
	.word	44442
	.byte	35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44535
	.byte	33
	.word	44559
	.byte	33
	.word	44575
	.byte	33
	.word	44592
	.byte	37
	.word	44608
	.byte	37
	.word	44609
	.byte	37
	.word	44610
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44612
	.byte	36
	.word	44613
	.byte	36
	.word	44614
	.byte	36
	.word	44615
	.byte	36
	.word	44616
	.byte	36
	.word	44617
	.byte	36
	.word	44618
	.byte	36
	.word	44619
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44443
	.byte	36
	.word	44444
	.byte	36
	.word	44445
	.byte	0,0,4,0,0,31
	.word	31292
	.byte	33
	.word	31328
	.byte	11,4,35
	.word	30434
	.byte	33
	.word	30471
	.byte	36
	.word	30489
	.byte	0,4,0,0,31
	.word	31360
	.byte	33
	.word	31393
	.byte	33
	.word	31410
	.byte	4,0,31
	.word	31427
	.byte	33
	.word	31469
	.byte	4,0,31
	.word	31491
	.byte	33
	.word	31528
	.byte	4,0,31
	.word	31550
	.byte	33
	.word	31584
	.byte	33
	.word	31602
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	31427
	.byte	33
	.word	31469
	.byte	36
	.word	31489
	.byte	0,4,35
	.word	31491
	.byte	33
	.word	31528
	.byte	36
	.word	31548
	.byte	0,4,35
	.word	31360
	.byte	33
	.word	31393
	.byte	33
	.word	31410
	.byte	36
	.word	31425
	.byte	0,4,0,0,31
	.word	31635
	.byte	33
	.word	31663
	.byte	33
	.word	31677
	.byte	4,0,31
	.word	31697
	.byte	33
	.word	31725
	.byte	33
	.word	31739
	.byte	4,0,31
	.word	31754
	.byte	33
	.word	31801
	.byte	33
	.word	31815
	.byte	4,0,38
	.byte	'Os_SchedulerInternalSchedule',0,30,159,4,64
	.word	16634
	.byte	1,1,1,1,5
	.byte	'Scheduler',0,30,161,4,56
	.word	17007
	.byte	0,31
	.word	31831
	.byte	33
	.word	31870
	.byte	4,0,31
	.word	31891
	.byte	33
	.word	31934
	.byte	4,0,31
	.word	31960
	.byte	33
	.word	31983
	.byte	4,0,31
	.word	32012
	.byte	33
	.word	32040
	.byte	4,0,31
	.word	32060
	.byte	33
	.word	32096
	.byte	4,0,31
	.word	32116
	.byte	33
	.word	32147
	.byte	4,0,31
	.word	32167
	.byte	33
	.word	32199
	.byte	11,35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,4,35
	.word	32317
	.byte	33
	.word	32347
	.byte	36
	.word	32361
	.byte	0,4,0,0,31
	.word	32222
	.byte	33
	.word	32259
	.byte	11,35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,4,0,0,31
	.word	32281
	.byte	33
	.word	32301
	.byte	4,0,31
	.word	32317
	.byte	33
	.word	32347
	.byte	4,0,31
	.word	32363
	.byte	33
	.word	32407
	.byte	4,0,31
	.word	32423
	.byte	33
	.word	32449
	.byte	4,0,31
	.word	32470
	.byte	33
	.word	32497
	.byte	4,0,31
	.word	32658
	.byte	33
	.word	32688
	.byte	11,35
	.word	32423
	.byte	33
	.word	32449
	.byte	36
	.word	32463
	.byte	0,4,0,0,31
	.word	32710
	.byte	33
	.word	32748
	.byte	11,4,35
	.word	36514
	.byte	33
	.word	36544
	.byte	37
	.word	36562
	.byte	36
	.word	36563
	.byte	0,0,4,35
	.word	32658
	.byte	33
	.word	32688
	.byte	37
	.word	32706
	.byte	35
	.word	32423
	.byte	33
	.word	32449
	.byte	36
	.word	32463
	.byte	0,36
	.word	32707
	.byte	0,0,4,35
	.word	30686
	.byte	33
	.word	30717
	.byte	36
	.word	30735
	.byte	0,4,0,0,31
	.word	32773
	.byte	33
	.word	32806
	.byte	11,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,0,0,31
	.word	32833
	.byte	11,35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,4,0,0,31
	.word	32871
	.byte	33
	.word	32899
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	32917
	.byte	33
	.word	32946
	.byte	4,0,31
	.word	32962
	.byte	33
	.word	33004
	.byte	4,0,31
	.word	33020
	.byte	33
	.word	33049
	.byte	4,0,31
	.word	33065
	.byte	33
	.word	33099
	.byte	4,0,31
	.word	33331
	.byte	33
	.word	33366
	.byte	4,0,31
	.word	33382
	.byte	33
	.word	33413
	.byte	4,0,31
	.word	33429
	.byte	33
	.word	33461
	.byte	4,0,31
	.word	33477
	.byte	33
	.word	33509
	.byte	4,0,31
	.word	33525
	.byte	33
	.word	33572
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,4,0,0,31
	.word	33591
	.byte	33
	.word	33632
	.byte	33
	.word	33646
	.byte	11,35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,4,0,0,31
	.word	33663
	.byte	33
	.word	33709
	.byte	4,0,31
	.word	33729
	.byte	33
	.word	33754
	.byte	11,35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,4,35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,4,35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,4,0,0,31
	.word	33776
	.byte	11,35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,4,35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,4,35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,4,0,0,31
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	11,35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,4,0,0,31
	.word	33875
	.byte	11,35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,4,35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,4,35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,4,0,0,31
	.word	34351
	.byte	4,0,31
	.word	34388
	.byte	33
	.word	34424
	.byte	4,0,31
	.word	34442
	.byte	33
	.word	34476
	.byte	33
	.word	34495
	.byte	33
	.word	34510
	.byte	4,0,31
	.word	34535
	.byte	33
	.word	34569
	.byte	33
	.word	34588
	.byte	33
	.word	34603
	.byte	4,0,31
	.word	34628
	.byte	33
	.word	34654
	.byte	33
	.word	34669
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,4,0,0,31
	.word	34692
	.byte	33
	.word	34720
	.byte	33
	.word	34736
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,4,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,4,0,0,31
	.word	34762
	.byte	33
	.word	34797
	.byte	33
	.word	34814
	.byte	4,0,31
	.word	34936
	.byte	33
	.word	34967
	.byte	33
	.word	34984
	.byte	4,0,31
	.word	35011
	.byte	33
	.word	35051
	.byte	33
	.word	35068
	.byte	4,0,31
	.word	35094
	.byte	33
	.word	35131
	.byte	4,0,31
	.word	35160
	.byte	33
	.word	35194
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,4,0,0,31
	.word	35214
	.byte	33
	.word	35251
	.byte	33
	.word	35274
	.byte	33
	.word	35291
	.byte	11,11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,0,4,4,35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,4,4,4,35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,4,0,0,31
	.word	35315
	.byte	33
	.word	35343
	.byte	33
	.word	35359
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,4,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,4,0,0,31
	.word	35384
	.byte	33
	.word	35413
	.byte	33
	.word	35430
	.byte	11,35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,4,35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,4,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,4,0,0,31
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	11,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,0,0,31
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	11,35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,4,0,0,31
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	11,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,4,0,0,31
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	11,35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,4,35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,4,0,0,31
	.word	35861
	.byte	33
	.word	35894
	.byte	4,0,31
	.word	35952
	.byte	33
	.word	35976
	.byte	33
	.word	35992
	.byte	4,0,31
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	4,0,31
	.word	36075
	.byte	33
	.word	36097
	.byte	4,0,31
	.word	36121
	.byte	33
	.word	36148
	.byte	4,0,31
	.word	36166
	.byte	33
	.word	36201
	.byte	11,4,0,0,31
	.word	36219
	.byte	33
	.word	36248
	.byte	33
	.word	36274
	.byte	33
	.word	36291
	.byte	11,4,4,0,0,31
	.word	36310
	.byte	33
	.word	36347
	.byte	33
	.word	36364
	.byte	11,4,4,0,0,31
	.word	36383
	.byte	33
	.word	36422
	.byte	33
	.word	36439
	.byte	11,4,4,0,0,31
	.word	36458
	.byte	33
	.word	36492
	.byte	11,4,0,0,31
	.word	36514
	.byte	33
	.word	36544
	.byte	11,4,0,0,31
	.word	36566
	.byte	33
	.word	36599
	.byte	11,4,0,0,31
	.word	36621
	.byte	11,4,0,0,31
	.word	36666
	.byte	11,4,0,0,31
	.word	36710
	.byte	11,4,0,0,31
	.word	36754
	.byte	11,4,0,0,31
	.word	36797
	.byte	33
	.word	36830
	.byte	4,0,31
	.word	36847
	.byte	33
	.word	36877
	.byte	4,0,31
	.word	36895
	.byte	33
	.word	36928
	.byte	4,0,31
	.word	36946
	.byte	33
	.word	36988
	.byte	4,0,31
	.word	37006
	.byte	33
	.word	37035
	.byte	4,0,31
	.word	37053
	.byte	33
	.word	37089
	.byte	4,0,31
	.word	37107
	.byte	33
	.word	37143
	.byte	4,0,31
	.word	37161
	.byte	33
	.word	37189
	.byte	4,0,31
	.word	37207
	.byte	33
	.word	37234
	.byte	4,0,31
	.word	37252
	.byte	33
	.word	37293
	.byte	33
	.word	37309
	.byte	4,0,31
	.word	37328
	.byte	33
	.word	37356
	.byte	4,0,31
	.word	37374
	.byte	33
	.word	37415
	.byte	4,0,31
	.word	37433
	.byte	33
	.word	37473
	.byte	11,35
	.word	32012
	.byte	33
	.word	32040
	.byte	36
	.word	32058
	.byte	0,4,35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,4,35
	.word	32167
	.byte	33
	.word	32199
	.byte	37
	.word	32217
	.byte	35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,36
	.word	32218
	.byte	35
	.word	32317
	.byte	33
	.word	32347
	.byte	36
	.word	32361
	.byte	0,36
	.word	32219
	.byte	0,0,4,0,0,31
	.word	37495
	.byte	33
	.word	37534
	.byte	11,35
	.word	32012
	.byte	33
	.word	32040
	.byte	36
	.word	32058
	.byte	0,4,35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,4,35
	.word	32222
	.byte	33
	.word	32259
	.byte	37
	.word	32277
	.byte	35
	.word	32116
	.byte	33
	.word	32147
	.byte	36
	.word	32165
	.byte	0,36
	.word	32278
	.byte	0,0,4,0,0,31
	.word	37556
	.byte	33
	.word	37594
	.byte	4,0,31
	.word	37612
	.byte	33
	.word	37650
	.byte	4,0,31
	.word	37668
	.byte	33
	.word	37703
	.byte	11,35
	.word	31014
	.byte	33
	.word	31042
	.byte	36
	.word	31066
	.byte	0,4,35
	.word	37612
	.byte	33
	.word	37650
	.byte	36
	.word	37666
	.byte	0,4,35
	.word	37556
	.byte	33
	.word	37594
	.byte	36
	.word	37610
	.byte	0,4,0,0,31
	.word	37725
	.byte	33
	.word	37757
	.byte	33
	.word	37771
	.byte	11,11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	37
	.word	43993
	.byte	37
	.word	43994
	.byte	37
	.word	43995
	.byte	35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,36
	.word	43997
	.byte	36
	.word	43998
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43999
	.byte	36
	.word	44000
	.byte	36
	.word	44001
	.byte	36
	.word	44002
	.byte	36
	.word	44003
	.byte	36
	.word	44004
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	38311
	.byte	33
	.word	38343
	.byte	37
	.word	38359
	.byte	36
	.word	38360
	.byte	0,0,4,35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,4,35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,4,4,4,4,4,35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,4,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,4,35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,4,35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,4,35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,4,35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,4,35
	.word	35214
	.byte	33
	.word	35251
	.byte	33
	.word	35274
	.byte	33
	.word	35291
	.byte	37
	.word	35305
	.byte	37
	.word	35306
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,0,36
	.word	35307
	.byte	36
	.word	35308
	.byte	35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,36
	.word	35309
	.byte	36
	.word	35310
	.byte	36
	.word	35311
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35312
	.byte	0,0,4,4,0,0,31
	.word	37819
	.byte	33
	.word	37847
	.byte	33
	.word	37861
	.byte	11,35
	.word	36075
	.byte	33
	.word	36097
	.byte	36
	.word	36119
	.byte	0,4,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,4,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,4,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,4,35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,4,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,4,35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,4,35
	.word	35160
	.byte	33
	.word	35194
	.byte	37
	.word	35208
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	35209
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35210
	.byte	35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,36
	.word	35211
	.byte	0,0,4,35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,4,35
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	37
	.word	43993
	.byte	37
	.word	43994
	.byte	37
	.word	43995
	.byte	35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,36
	.word	43997
	.byte	36
	.word	43998
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43999
	.byte	36
	.word	44000
	.byte	36
	.word	44001
	.byte	36
	.word	44002
	.byte	36
	.word	44003
	.byte	36
	.word	44004
	.byte	0,0,4,0,0,31
	.word	37903
	.byte	33
	.word	37937
	.byte	33
	.word	37951
	.byte	11,11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	37
	.word	43993
	.byte	37
	.word	43994
	.byte	37
	.word	43995
	.byte	35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,36
	.word	43997
	.byte	36
	.word	43998
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43999
	.byte	36
	.word	44000
	.byte	36
	.word	44001
	.byte	36
	.word	44002
	.byte	36
	.word	44003
	.byte	36
	.word	44004
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,4,35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,4,4,4,4,4,35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,4,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,35
	.word	35384
	.byte	33
	.word	35413
	.byte	33
	.word	35430
	.byte	37
	.word	35444
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	35445
	.byte	35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,36
	.word	35446
	.byte	35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,36
	.word	35447
	.byte	0,0,4,35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,4,35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,4,35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,4,35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,4,35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,4,4,0,0,31
	.word	37998
	.byte	33
	.word	38022
	.byte	33
	.word	38039
	.byte	33
	.word	38053
	.byte	11,11,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43797
	.byte	33
	.word	43817
	.byte	33
	.word	43833
	.byte	33
	.word	43850
	.byte	33
	.word	43864
	.byte	37
	.word	43884
	.byte	37
	.word	43885
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43506
	.byte	33
	.word	43527
	.byte	33
	.word	43543
	.byte	33
	.word	43560
	.byte	33
	.word	43573
	.byte	37
	.word	43591
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43592
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	43593
	.byte	35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,36
	.word	43594
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,36
	.word	43886
	.byte	36
	.word	43887
	.byte	36
	.word	43888
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43889
	.byte	36
	.word	43890
	.byte	36
	.word	43891
	.byte	36
	.word	43892
	.byte	36
	.word	43893
	.byte	36
	.word	43894
	.byte	36
	.word	43895
	.byte	0,0,0,35
	.word	38408
	.byte	33
	.word	38441
	.byte	36
	.word	38457
	.byte	0,4,35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,4,35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,4,4,4,4,4,35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,4,35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,4,35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,4,35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,4,35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,4,4,0,0,31
	.word	38097
	.byte	33
	.word	38134
	.byte	4,0,31
	.word	38152
	.byte	33
	.word	38187
	.byte	33
	.word	38203
	.byte	11,35
	.word	35011
	.byte	33
	.word	35051
	.byte	33
	.word	35068
	.byte	36
	.word	35092
	.byte	0,4,0,0,31
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	4,0,31
	.word	38311
	.byte	33
	.word	38343
	.byte	11,4,0,0,31
	.word	38363
	.byte	33
	.word	38388
	.byte	11,4,0,0,31
	.word	38408
	.byte	33
	.word	38441
	.byte	4,0,31
	.word	38459
	.byte	33
	.word	38494
	.byte	4,0,31
	.word	38512
	.byte	11,35
	.word	37328
	.byte	33
	.word	37356
	.byte	36
	.word	37372
	.byte	0,4,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,0,0,32
	.byte	'Os_HookReturn',0,34,190,5,1,1,1,1,1,31
	.word	38540
	.byte	4,0,31
	.word	38564
	.byte	33
	.word	38592
	.byte	11,35
	.word	3646
	.byte	33
	.word	3678
	.byte	36
	.word	3697
	.byte	0,4,0,0,32
	.byte	'Os_IsrEpilogue',0,20,141,4,1,1,1,1,1,31
	.word	38609
	.byte	33
	.word	38637
	.byte	4,0,31
	.word	38652
	.byte	33
	.word	38680
	.byte	33
	.word	38693
	.byte	11,35
	.word	38758
	.byte	33
	.word	38785
	.byte	37
	.word	38798
	.byte	35
	.word	3751
	.byte	33
	.word	3782
	.byte	36
	.word	3801
	.byte	0,36
	.word	38799
	.byte	0,0,4,35
	.word	38720
	.byte	33
	.word	38741
	.byte	37
	.word	38754
	.byte	35
	.word	3699
	.byte	33
	.word	3730
	.byte	36
	.word	3749
	.byte	0,36
	.word	38755
	.byte	0,0,4,0,0,31
	.word	38720
	.byte	33
	.word	38741
	.byte	11,35
	.word	3699
	.byte	33
	.word	3730
	.byte	36
	.word	3749
	.byte	0,4,0,0,31
	.word	38758
	.byte	33
	.word	38785
	.byte	11,35
	.word	3751
	.byte	33
	.word	3782
	.byte	36
	.word	3801
	.byte	0,4,0,0,31
	.word	38812
	.byte	33
	.word	38846
	.byte	33
	.word	38860
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	38887
	.byte	33
	.word	38931
	.byte	4,0,31
	.word	38960
	.byte	33
	.word	38984
	.byte	33
	.word	39002
	.byte	33
	.word	39022
	.byte	33
	.word	39043
	.byte	11,4,0,0,31
	.word	39067
	.byte	33
	.word	39109
	.byte	33
	.word	39127
	.byte	33
	.word	39147
	.byte	4,0,31
	.word	39165
	.byte	33
	.word	39193
	.byte	4,0,31
	.word	39208
	.byte	33
	.word	39238
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,4,0,0,31
	.word	39473
	.byte	33
	.word	39499
	.byte	11,35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,4,0,0,31
	.word	39517
	.byte	33
	.word	39541
	.byte	33
	.word	39555
	.byte	11,35
	.word	39473
	.byte	33
	.word	39499
	.byte	37
	.word	39513
	.byte	35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,36
	.word	39514
	.byte	0,0,4,0,0,31
	.word	39574
	.byte	33
	.word	39599
	.byte	4,0,31
	.word	39615
	.byte	33
	.word	39647
	.byte	11,35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,4,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,35
	.word	33477
	.byte	33
	.word	33509
	.byte	36
	.word	33523
	.byte	0,4,0,0,31
	.word	39667
	.byte	33
	.word	39694
	.byte	11,35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,4,35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,4,0,0,31
	.word	39713
	.byte	33
	.word	39744
	.byte	11,35
	.word	32773
	.byte	33
	.word	32806
	.byte	37
	.word	32819
	.byte	35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,36
	.word	32820
	.byte	0,0,4,35
	.word	39667
	.byte	33
	.word	39694
	.byte	37
	.word	39708
	.byte	35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,36
	.word	39709
	.byte	35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,36
	.word	39710
	.byte	0,0,4,0,0,31
	.word	39763
	.byte	33
	.word	39785
	.byte	33
	.word	39804
	.byte	11,35
	.word	39918
	.byte	37
	.word	39950
	.byte	36
	.word	39951
	.byte	0,0,4,35
	.word	36219
	.byte	33
	.word	36248
	.byte	33
	.word	36274
	.byte	33
	.word	36291
	.byte	37
	.word	36305
	.byte	36
	.word	36306
	.byte	36
	.word	36307
	.byte	0,0,4,35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,4,35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,4,35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,4,35
	.word	39473
	.byte	33
	.word	39499
	.byte	37
	.word	39513
	.byte	35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,36
	.word	39514
	.byte	0,0,4,35
	.word	39208
	.byte	33
	.word	39238
	.byte	37
	.word	39253
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	39254
	.byte	35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,36
	.word	39255
	.byte	0,0,4,35
	.word	37998
	.byte	33
	.word	38022
	.byte	33
	.word	38039
	.byte	33
	.word	38053
	.byte	37
	.word	38080
	.byte	37
	.word	38081
	.byte	35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43797
	.byte	33
	.word	43817
	.byte	33
	.word	43833
	.byte	33
	.word	43850
	.byte	33
	.word	43864
	.byte	37
	.word	43884
	.byte	37
	.word	43885
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43506
	.byte	33
	.word	43527
	.byte	33
	.word	43543
	.byte	33
	.word	43560
	.byte	33
	.word	43573
	.byte	37
	.word	43591
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43592
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	43593
	.byte	35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,36
	.word	43594
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,36
	.word	43886
	.byte	36
	.word	43887
	.byte	36
	.word	43888
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43889
	.byte	36
	.word	43890
	.byte	36
	.word	43891
	.byte	36
	.word	43892
	.byte	36
	.word	43893
	.byte	36
	.word	43894
	.byte	36
	.word	43895
	.byte	0,0,0,35
	.word	38408
	.byte	33
	.word	38441
	.byte	36
	.word	38457
	.byte	0,36
	.word	38082
	.byte	35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,36
	.word	38083
	.byte	35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,36
	.word	38084
	.byte	36
	.word	38085
	.byte	36
	.word	38086
	.byte	36
	.word	38087
	.byte	36
	.word	38088
	.byte	35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,36
	.word	38089
	.byte	35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,36
	.word	38090
	.byte	35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,36
	.word	38091
	.byte	35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,36
	.word	38092
	.byte	35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,36
	.word	38093
	.byte	36
	.word	38094
	.byte	0,0,4,0,0,31
	.word	39837
	.byte	33
	.word	39859
	.byte	11,35
	.word	39918
	.byte	37
	.word	39950
	.byte	36
	.word	39951
	.byte	0,0,4,35
	.word	36310
	.byte	33
	.word	36347
	.byte	33
	.word	36364
	.byte	37
	.word	36378
	.byte	36
	.word	36379
	.byte	36
	.word	36380
	.byte	0,0,4,35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,4,35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,4,35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,4,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,35
	.word	37725
	.byte	33
	.word	37757
	.byte	33
	.word	37771
	.byte	37
	.word	37798
	.byte	37
	.word	37799
	.byte	35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	37
	.word	43993
	.byte	37
	.word	43994
	.byte	37
	.word	43995
	.byte	35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,36
	.word	43997
	.byte	36
	.word	43998
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43999
	.byte	36
	.word	44000
	.byte	36
	.word	44001
	.byte	36
	.word	44002
	.byte	36
	.word	44003
	.byte	36
	.word	44004
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	37800
	.byte	35
	.word	38311
	.byte	33
	.word	38343
	.byte	37
	.word	38359
	.byte	36
	.word	38360
	.byte	0,0,36
	.word	37801
	.byte	35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,36
	.word	37802
	.byte	35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,36
	.word	37803
	.byte	36
	.word	37804
	.byte	36
	.word	37805
	.byte	36
	.word	37806
	.byte	36
	.word	37807
	.byte	35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,36
	.word	37808
	.byte	35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,36
	.word	37809
	.byte	35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,36
	.word	37810
	.byte	35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,36
	.word	37811
	.byte	35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,36
	.word	37812
	.byte	35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,36
	.word	37813
	.byte	35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,36
	.word	37814
	.byte	35
	.word	35214
	.byte	33
	.word	35251
	.byte	33
	.word	35274
	.byte	33
	.word	35291
	.byte	37
	.word	35305
	.byte	37
	.word	35306
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,0,36
	.word	35307
	.byte	36
	.word	35308
	.byte	35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,36
	.word	35309
	.byte	36
	.word	35310
	.byte	36
	.word	35311
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35312
	.byte	0,0,36
	.word	37815
	.byte	36
	.word	37816
	.byte	0,0,4,0,0,31
	.word	39888
	.byte	11,35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,4,35
	.word	39208
	.byte	33
	.word	39238
	.byte	37
	.word	39253
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	39254
	.byte	35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,36
	.word	39255
	.byte	0,0,4,35
	.word	39615
	.byte	33
	.word	39647
	.byte	37
	.word	39661
	.byte	35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,36
	.word	39662
	.byte	35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,36
	.word	39663
	.byte	35
	.word	33477
	.byte	33
	.word	33509
	.byte	36
	.word	33523
	.byte	0,36
	.word	39664
	.byte	0,0,4,35
	.word	39837
	.byte	33
	.word	39859
	.byte	37
	.word	39878
	.byte	35
	.word	39918
	.byte	37
	.word	39950
	.byte	36
	.word	39951
	.byte	0,0,36
	.word	39879
	.byte	35
	.word	36310
	.byte	33
	.word	36347
	.byte	33
	.word	36364
	.byte	37
	.word	36378
	.byte	36
	.word	36379
	.byte	36
	.word	36380
	.byte	0,0,36
	.word	39880
	.byte	35
	.word	39165
	.byte	33
	.word	39193
	.byte	36
	.word	39206
	.byte	0,36
	.word	39881
	.byte	35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,36
	.word	39882
	.byte	35
	.word	36847
	.byte	33
	.word	36877
	.byte	36
	.word	36893
	.byte	0,36
	.word	39883
	.byte	35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,36
	.word	39884
	.byte	35
	.word	37725
	.byte	33
	.word	37757
	.byte	33
	.word	37771
	.byte	37
	.word	37798
	.byte	37
	.word	37799
	.byte	35
	.word	37006
	.byte	33
	.word	37035
	.byte	36
	.word	37051
	.byte	0,35
	.word	32962
	.byte	33
	.word	33004
	.byte	36
	.word	33018
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,35
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	37
	.word	43993
	.byte	37
	.word	43994
	.byte	37
	.word	43995
	.byte	35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,36
	.word	43997
	.byte	36
	.word	43998
	.byte	35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	43999
	.byte	36
	.word	44000
	.byte	36
	.word	44001
	.byte	36
	.word	44002
	.byte	36
	.word	44003
	.byte	36
	.word	44004
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	37800
	.byte	35
	.word	38311
	.byte	33
	.word	38343
	.byte	37
	.word	38359
	.byte	36
	.word	38360
	.byte	0,0,36
	.word	37801
	.byte	35
	.word	36022
	.byte	33
	.word	36042
	.byte	33
	.word	36059
	.byte	36
	.word	36073
	.byte	0,36
	.word	37802
	.byte	35
	.word	38459
	.byte	33
	.word	38494
	.byte	36
	.word	38510
	.byte	0,36
	.word	37803
	.byte	36
	.word	37804
	.byte	36
	.word	37805
	.byte	36
	.word	37806
	.byte	36
	.word	37807
	.byte	35
	.word	33811
	.byte	33
	.word	33842
	.byte	33
	.word	33857
	.byte	37
	.word	33871
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33872
	.byte	0,0,36
	.word	37808
	.byte	35
	.word	33776
	.byte	37
	.word	33805
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33806
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33807
	.byte	35
	.word	30376
	.byte	33
	.word	30409
	.byte	37
	.word	30430
	.byte	35
	.word	211
	.byte	36
	.word	235
	.byte	0,36
	.word	30431
	.byte	0,0,36
	.word	33808
	.byte	0,0,36
	.word	37809
	.byte	35
	.word	38231
	.byte	33
	.word	38266
	.byte	33
	.word	38282
	.byte	36
	.word	38309
	.byte	0,36
	.word	37810
	.byte	35
	.word	33729
	.byte	33
	.word	33754
	.byte	37
	.word	33770
	.byte	35
	.word	34351
	.byte	36
	.word	34376
	.byte	0,36
	.word	33771
	.byte	35
	.word	34388
	.byte	33
	.word	34424
	.byte	36
	.word	34440
	.byte	0,36
	.word	33772
	.byte	35
	.word	29985
	.byte	33
	.word	30014
	.byte	33
	.word	30035
	.byte	37
	.word	30051
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,36
	.word	30052
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30053
	.byte	0,0,36
	.word	33773
	.byte	0,0,36
	.word	37811
	.byte	35
	.word	37161
	.byte	33
	.word	37189
	.byte	36
	.word	37205
	.byte	0,36
	.word	37812
	.byte	35
	.word	30808
	.byte	37
	.word	30838
	.byte	37
	.word	30839
	.byte	35
	.word	30491
	.byte	33
	.word	30522
	.byte	33
	.word	30542
	.byte	36
	.word	30563
	.byte	0,35
	.word	33875
	.byte	37
	.word	33910
	.byte	35
	.word	32917
	.byte	33
	.word	32946
	.byte	36
	.word	32960
	.byte	0,36
	.word	33911
	.byte	35
	.word	32833
	.byte	37
	.word	32867
	.byte	35
	.word	4811
	.byte	36
	.word	4840
	.byte	0,36
	.word	32868
	.byte	0,0,36
	.word	33912
	.byte	35
	.word	32871
	.byte	33
	.word	32899
	.byte	37
	.word	32913
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	32914
	.byte	0,0,36
	.word	33913
	.byte	0,0,0,36
	.word	30840
	.byte	36
	.word	30841
	.byte	0,0,36
	.word	37813
	.byte	35
	.word	35094
	.byte	33
	.word	35131
	.byte	36
	.word	35148
	.byte	0,36
	.word	37814
	.byte	35
	.word	35214
	.byte	33
	.word	35251
	.byte	33
	.word	35274
	.byte	33
	.word	35291
	.byte	37
	.word	35305
	.byte	37
	.word	35306
	.byte	35
	.word	4005
	.byte	33
	.word	4038
	.byte	36
	.word	4053
	.byte	0,35
	.word	35627
	.byte	33
	.word	35663
	.byte	33
	.word	35686
	.byte	33
	.word	35703
	.byte	37
	.word	35735
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35736
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35737
	.byte	0,0,35
	.word	35450
	.byte	33
	.word	35487
	.byte	33
	.word	35504
	.byte	37
	.word	35536
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35537
	.byte	0,0,35
	.word	35740
	.byte	33
	.word	35784
	.byte	33
	.word	35807
	.byte	33
	.word	35824
	.byte	37
	.word	35856
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35857
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	35858
	.byte	0,0,0,36
	.word	35307
	.byte	36
	.word	35308
	.byte	35
	.word	35861
	.byte	33
	.word	35894
	.byte	36
	.word	35911
	.byte	0,36
	.word	35309
	.byte	36
	.word	35310
	.byte	36
	.word	35311
	.byte	35
	.word	35540
	.byte	33
	.word	35583
	.byte	33
	.word	35606
	.byte	37
	.word	35623
	.byte	35
	.word	4735
	.byte	33
	.word	4768
	.byte	33
	.word	4786
	.byte	36
	.word	4809
	.byte	0,36
	.word	35624
	.byte	0,0,36
	.word	35312
	.byte	0,0,36
	.word	37815
	.byte	36
	.word	37816
	.byte	0,0,36
	.word	39885
	.byte	0,0,4,0,0,31
	.word	39918
	.byte	11,4,0,0,31
	.word	39954
	.byte	33
	.word	39984
	.byte	4,0,31
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	11,35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,4,0,0,31
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	40243
	.byte	33
	.word	40288
	.byte	33
	.word	40305
	.byte	11,35
	.word	312
	.byte	33
	.word	344
	.byte	36
	.word	359
	.byte	0,4,0,0,31
	.word	40324
	.byte	33
	.word	40376
	.byte	33
	.word	40393
	.byte	33
	.word	40409
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	312
	.byte	33
	.word	344
	.byte	36
	.word	359
	.byte	0,4,0,0,31
	.word	40429
	.byte	33
	.word	40478
	.byte	33
	.word	40495
	.byte	11,35
	.word	312
	.byte	33
	.word	344
	.byte	36
	.word	359
	.byte	0,4,0,0,31
	.word	40524
	.byte	33
	.word	40565
	.byte	4,0,31
	.word	40584
	.byte	33
	.word	40625
	.byte	4,0,31
	.word	40644
	.byte	33
	.word	40686
	.byte	4,0,31
	.word	40705
	.byte	33
	.word	40732
	.byte	4,0,31
	.word	40754
	.byte	33
	.word	40796
	.byte	4,0,31
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	4,0,31
	.word	40904
	.byte	33
	.word	40938
	.byte	4,0,31
	.word	41266
	.byte	33
	.word	41293
	.byte	4,0,31
	.word	41431
	.byte	33
	.word	41453
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	41472
	.byte	33
	.word	41503
	.byte	4,0,31
	.word	41520
	.byte	33
	.word	41554
	.byte	33
	.word	41569
	.byte	4,0,31
	.word	41595
	.byte	33
	.word	41628
	.byte	33
	.word	41643
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	41662
	.byte	33
	.word	41694
	.byte	11,35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,4,35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,4,35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,4,35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,4,0,0,31
	.word	41716
	.byte	33
	.word	41750
	.byte	4,0,31
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	11,11,4,0,0,0,31
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	11,4,35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,4,35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,4,35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,4,35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,4,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,4,0,0,31
	.word	41946
	.byte	33
	.word	41985
	.byte	4,0,31
	.word	42002
	.byte	33
	.word	42049
	.byte	33
	.word	42074
	.byte	33
	.word	42087
	.byte	4,0,31
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	11,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	11,4,35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,4,35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,4,0,0,31
	.word	42389
	.byte	33
	.word	42430
	.byte	4,0,31
	.word	42447
	.byte	33
	.word	42488
	.byte	4,0,31
	.word	43197
	.byte	33
	.word	43234
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	43265
	.byte	33
	.word	43305
	.byte	11,35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,4,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,4,0,0,31
	.word	43325
	.byte	33
	.word	43348
	.byte	33
	.word	43363
	.byte	11,4,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,0,0,31
	.word	43384
	.byte	33
	.word	43408
	.byte	11,4,35
	.word	44681
	.byte	33
	.word	44724
	.byte	36
	.word	44740
	.byte	0,4,0,0,31
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	11,35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,4,35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,4,0,0,31
	.word	43506
	.byte	33
	.word	43527
	.byte	33
	.word	43543
	.byte	33
	.word	43560
	.byte	33
	.word	43573
	.byte	11,35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,4,35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,4,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,4,0,0,31
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	11,35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,4,35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,4,35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,4,0,0,31
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	11,35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,4,35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,4,35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,4,35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,4,0,0,31
	.word	43740
	.byte	33
	.word	43777
	.byte	11,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,4,0,0,31
	.word	43797
	.byte	33
	.word	43817
	.byte	33
	.word	43833
	.byte	33
	.word	43850
	.byte	33
	.word	43864
	.byte	11,11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43506
	.byte	33
	.word	43527
	.byte	33
	.word	43543
	.byte	33
	.word	43560
	.byte	33
	.word	43573
	.byte	37
	.word	43591
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43592
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	43593
	.byte	35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,36
	.word	43594
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,4,4,4,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	43898
	.byte	33
	.word	43926
	.byte	33
	.word	43942
	.byte	33
	.word	43959
	.byte	33
	.word	43973
	.byte	11,11,11,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,4,4,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,4,0,0,31
	.word	44007
	.byte	33
	.word	44035
	.byte	33
	.word	44051
	.byte	11,11,11,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,0,4,4,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,0,0,31
	.word	44081
	.byte	33
	.word	44116
	.byte	33
	.word	44132
	.byte	11,11,11,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43740
	.byte	33
	.word	43777
	.byte	37
	.word	43793
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	43794
	.byte	0,0,0,35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,0,0,31
	.word	44161
	.byte	33
	.word	44196
	.byte	33
	.word	44213
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,35
	.word	253
	.byte	33
	.word	281
	.byte	33
	.word	293
	.byte	36
	.word	310
	.byte	0,4,0,0,31
	.word	44236
	.byte	33
	.word	44267
	.byte	11,11,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44448
	.byte	33
	.word	44473
	.byte	33
	.word	44489
	.byte	33
	.word	44506
	.byte	37
	.word	44522
	.byte	37
	.word	44523
	.byte	37
	.word	44524
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44526
	.byte	36
	.word	44527
	.byte	36
	.word	44528
	.byte	36
	.word	44529
	.byte	36
	.word	44530
	.byte	36
	.word	44531
	.byte	36
	.word	44532
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,0,0,31
	.word	44290
	.byte	33
	.word	44320
	.byte	11,11,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44535
	.byte	33
	.word	44559
	.byte	33
	.word	44575
	.byte	33
	.word	44592
	.byte	37
	.word	44608
	.byte	37
	.word	44609
	.byte	37
	.word	44610
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44612
	.byte	36
	.word	44613
	.byte	36
	.word	44614
	.byte	36
	.word	44615
	.byte	36
	.word	44616
	.byte	36
	.word	44617
	.byte	36
	.word	44618
	.byte	36
	.word	44619
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,0,0,31
	.word	44343
	.byte	33
	.word	44373
	.byte	11,11,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44448
	.byte	33
	.word	44473
	.byte	33
	.word	44489
	.byte	33
	.word	44506
	.byte	37
	.word	44522
	.byte	37
	.word	44523
	.byte	37
	.word	44524
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44526
	.byte	36
	.word	44527
	.byte	36
	.word	44528
	.byte	36
	.word	44529
	.byte	36
	.word	44530
	.byte	36
	.word	44531
	.byte	36
	.word	44532
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,0,0,31
	.word	44396
	.byte	33
	.word	44425
	.byte	11,11,35
	.word	43265
	.byte	33
	.word	43305
	.byte	37
	.word	43320
	.byte	35
	.word	36895
	.byte	33
	.word	36928
	.byte	36
	.word	36944
	.byte	0,36
	.word	43321
	.byte	35
	.word	43197
	.byte	33
	.word	43234
	.byte	37
	.word	43251
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	43252
	.byte	0,0,36
	.word	43322
	.byte	0,0,35
	.word	44535
	.byte	33
	.word	44559
	.byte	33
	.word	44575
	.byte	33
	.word	44592
	.byte	37
	.word	44608
	.byte	37
	.word	44609
	.byte	37
	.word	44610
	.byte	35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,36
	.word	44612
	.byte	36
	.word	44613
	.byte	36
	.word	44614
	.byte	36
	.word	44615
	.byte	36
	.word	44616
	.byte	36
	.word	44617
	.byte	36
	.word	44618
	.byte	36
	.word	44619
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,0,0,31
	.word	44448
	.byte	33
	.word	44473
	.byte	33
	.word	44489
	.byte	33
	.word	44506
	.byte	11,11,11,35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	44535
	.byte	33
	.word	44559
	.byte	33
	.word	44575
	.byte	33
	.word	44592
	.byte	11,11,11,35
	.word	41946
	.byte	33
	.word	41985
	.byte	36
	.word	42000
	.byte	0,35
	.word	43429
	.byte	33
	.word	43449
	.byte	33
	.word	43465
	.byte	33
	.word	43478
	.byte	37
	.word	43501
	.byte	35
	.word	43668
	.byte	33
	.word	43689
	.byte	33
	.word	43705
	.byte	33
	.word	43720
	.byte	37
	.word	43733
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43734
	.byte	35
	.word	40584
	.byte	33
	.word	40625
	.byte	36
	.word	40642
	.byte	0,36
	.word	43735
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43736
	.byte	35
	.word	42111
	.byte	33
	.word	42135
	.byte	33
	.word	42160
	.byte	33
	.word	42186
	.byte	33
	.word	42201
	.byte	37
	.word	42214
	.byte	36
	.word	42215
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42216
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42217
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42218
	.byte	0,0,36
	.word	43737
	.byte	0,0,36
	.word	43502
	.byte	35
	.word	41863
	.byte	33
	.word	41898
	.byte	33
	.word	41913
	.byte	37
	.word	41937
	.byte	36
	.word	41938
	.byte	35
	.word	41767
	.byte	33
	.word	41818
	.byte	33
	.word	41833
	.byte	37
	.word	41857
	.byte	37
	.word	41858
	.byte	36
	.word	41859
	.byte	0,0,0,36
	.word	41939
	.byte	35
	.word	40904
	.byte	33
	.word	40938
	.byte	36
	.word	40959
	.byte	0,36
	.word	41940
	.byte	35
	.word	42305
	.byte	33
	.word	42340
	.byte	33
	.word	42361
	.byte	37
	.word	42383
	.byte	36
	.word	42384
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	42385
	.byte	35
	.word	40818
	.byte	33
	.word	40857
	.byte	33
	.word	40878
	.byte	36
	.word	40902
	.byte	0,36
	.word	42386
	.byte	0,0,36
	.word	41941
	.byte	35
	.word	40003
	.byte	33
	.word	40039
	.byte	33
	.word	40056
	.byte	33
	.word	40071
	.byte	37
	.word	40095
	.byte	35
	.word	40099
	.byte	33
	.word	40143
	.byte	33
	.word	40169
	.byte	33
	.word	40199
	.byte	33
	.word	40214
	.byte	37
	.word	40238
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40239
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	40240
	.byte	0,0,36
	.word	40096
	.byte	0,0,36
	.word	41942
	.byte	35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,36
	.word	41943
	.byte	0,0,36
	.word	43503
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	43597
	.byte	33
	.word	43618
	.byte	33
	.word	43634
	.byte	33
	.word	43649
	.byte	37
	.word	43662
	.byte	35
	.word	41716
	.byte	33
	.word	41750
	.byte	36
	.word	41765
	.byte	0,36
	.word	43663
	.byte	35
	.word	40644
	.byte	33
	.word	40686
	.byte	36
	.word	40703
	.byte	0,36
	.word	43664
	.byte	35
	.word	42221
	.byte	33
	.word	42245
	.byte	33
	.word	42271
	.byte	33
	.word	42286
	.byte	37
	.word	42299
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42300
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42301
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	42302
	.byte	0,0,36
	.word	43665
	.byte	0,0,35
	.word	41662
	.byte	33
	.word	41694
	.byte	37
	.word	41709
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41710
	.byte	35
	.word	42447
	.byte	33
	.word	42488
	.byte	36
	.word	42503
	.byte	0,36
	.word	41711
	.byte	35
	.word	42389
	.byte	33
	.word	42430
	.byte	36
	.word	42445
	.byte	0,36
	.word	41712
	.byte	35
	.word	40754
	.byte	33
	.word	40796
	.byte	36
	.word	40816
	.byte	0,36
	.word	41713
	.byte	0,0,0,35
	.word	30849
	.byte	33
	.word	30870
	.byte	37
	.word	30884
	.byte	36
	.word	30885
	.byte	35
	.word	3107
	.byte	36
	.word	3156
	.byte	0,36
	.word	30886
	.byte	0,0,35
	.word	30899
	.byte	33
	.word	30920
	.byte	37
	.word	30935
	.byte	35
	.word	3168
	.byte	33
	.word	3201
	.byte	36
	.word	3216
	.byte	0,36
	.word	30936
	.byte	0,0,0,35
	.word	44622
	.byte	33
	.word	44663
	.byte	36
	.word	44679
	.byte	0,4,4,4,4,4,4,4,4,0,0,31
	.word	44622
	.byte	33
	.word	44663
	.byte	4,0,31
	.word	44681
	.byte	33
	.word	44724
	.byte	4,0,31
	.word	44742
	.byte	33
	.word	44768
	.byte	11,35
	.word	39954
	.byte	33
	.word	39984
	.byte	36
	.word	40001
	.byte	0,4,0,0,31
	.word	44785
	.byte	33
	.word	44821
	.byte	4,0,31
	.word	44836
	.byte	33
	.word	44862
	.byte	4,0,31
	.word	44913
	.byte	33
	.word	44941
	.byte	4,0,34
	.byte	'Os_ServiceCallForceRelease',0,57,192,3,21,1,1,1,1,5
	.byte	'ServiceCalls',0,57,194,3,59
	.word	44908
	.byte	0,31
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	11,35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,4,0,0,31
	.word	45033
	.byte	33
	.word	45058
	.byte	33
	.word	45075
	.byte	33
	.word	45091
	.byte	11,35
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	37
	.word	45029
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	45030
	.byte	0,0,4,0,0,31
	.word	45108
	.byte	33
	.word	45135
	.byte	33
	.word	45153
	.byte	4,0,31
	.word	45182
	.byte	33
	.word	45208
	.byte	33
	.word	45226
	.byte	4,0,31
	.word	45245
	.byte	33
	.word	45279
	.byte	33
	.word	45297
	.byte	33
	.word	45314
	.byte	4,0,31
	.word	45518
	.byte	33
	.word	45546
	.byte	11,35
	.word	45033
	.byte	33
	.word	45058
	.byte	33
	.word	45075
	.byte	33
	.word	45091
	.byte	37
	.word	45104
	.byte	35
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	37
	.word	45029
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	45030
	.byte	0,0,36
	.word	45105
	.byte	0,0,4,0,0,31
	.word	45689
	.byte	33
	.word	45718
	.byte	11,35
	.word	45108
	.byte	33
	.word	45135
	.byte	33
	.word	45153
	.byte	36
	.word	45170
	.byte	0,4,0,0,31
	.word	45924
	.byte	33
	.word	45952
	.byte	11,35
	.word	45033
	.byte	33
	.word	45058
	.byte	33
	.word	45075
	.byte	33
	.word	45091
	.byte	37
	.word	45104
	.byte	35
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	37
	.word	45029
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	45030
	.byte	0,0,36
	.word	45105
	.byte	0,0,4,0,0,31
	.word	46095
	.byte	33
	.word	46124
	.byte	11,35
	.word	45108
	.byte	33
	.word	45135
	.byte	33
	.word	45153
	.byte	36
	.word	45170
	.byte	0,4,0,0,31
	.word	46330
	.byte	33
	.word	46358
	.byte	11,35
	.word	45033
	.byte	33
	.word	45058
	.byte	33
	.word	45075
	.byte	33
	.word	45091
	.byte	37
	.word	45104
	.byte	35
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	37
	.word	45029
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	45030
	.byte	0,0,36
	.word	45105
	.byte	0,0,4,0,0,31
	.word	46501
	.byte	33
	.word	46530
	.byte	11,35
	.word	45108
	.byte	33
	.word	45135
	.byte	33
	.word	45153
	.byte	36
	.word	45170
	.byte	0,4,0,0,31
	.word	46780
	.byte	33
	.word	46809
	.byte	11,35
	.word	45033
	.byte	33
	.word	45058
	.byte	33
	.word	45075
	.byte	33
	.word	45091
	.byte	37
	.word	45104
	.byte	35
	.word	44975
	.byte	33
	.word	45002
	.byte	33
	.word	45016
	.byte	37
	.word	45029
	.byte	35
	.word	361
	.byte	33
	.word	379
	.byte	36
	.word	398
	.byte	0,36
	.word	45030
	.byte	0,0,36
	.word	45105
	.byte	0,0,4,0,0,31
	.word	47015
	.byte	33
	.word	47045
	.byte	11,35
	.word	45108
	.byte	33
	.word	45135
	.byte	33
	.word	45153
	.byte	36
	.word	45170
	.byte	0,4,0,0,39
	.byte	'__INDIRECT__',0,100,1,1,1,1,1,40,1,10
	.word	86264
	.byte	14
	.byte	'__codeptr',0,100,1,1
	.word	86266
	.byte	14
	.byte	'boolean',0,101,101,31
	.word	400
	.byte	14
	.byte	'uint8',0,101,104,31
	.word	400
	.byte	14
	.byte	'sint16',0,101,105,31
	.word	7990
	.byte	14
	.byte	'uint16',0,101,106,31
	.word	5488
	.byte	2
	.byte	'long int',0,4,5,14
	.byte	'sint32',0,101,107,31
	.word	86349
	.byte	14
	.byte	'uint32',0,101,108,31
	.word	136
	.byte	14
	.byte	'uint8_least',0,101,111,31
	.word	400
	.byte	14
	.byte	'uint16_least',0,101,113,31
	.word	5488
	.byte	14
	.byte	'uint64',0,101,121,30
	.word	11716
	.byte	14
	.byte	'StatusType',0,26,127,23
	.word	400
	.byte	14
	.byte	'Std_ReturnType',0,26,132,1,15
	.word	400
	.byte	14
	.byte	'Std_VersionInfoType',0,26,141,1,3
	.word	12265
	.byte	14
	.byte	'Os_Hal_ContextType',0,102,66,39
	.word	4842
	.byte	14
	.byte	'Os_Hal_ContextConfigType',0,102,70,45
	.word	4540
	.byte	14
	.byte	'Os_Hal_ContextStackConfigType',0,102,74,50
	.word	34835
	.byte	14
	.byte	'Os_Hal_ContextFpuContextType',0,102,78,49
	.word	23807
	.byte	14
	.byte	'Os_ThreadClassType',0,59,183,3,39
	.word	23877
	.byte	14
	.byte	'Os_ThreadType',0,59,186,3,34
	.word	28472
	.byte	14
	.byte	'Os_ThreadConfigType',0,59,189,3,40
	.word	29473
	.byte	14
	.byte	'Os_CallContextType',0,59,193,3,23
	.word	5488
	.byte	14
	.byte	'Os_ThreadContextRefType',0,59,199,3,61
	.word	5025
	.byte	14
	.byte	'Os_StdReturnType',0,103,74,22
	.word	237
	.byte	14
	.byte	'Os_WordType',0,103,77,22
	.word	237
	.byte	14
	.byte	'Os_ObjIdxType',0,103,80,16
	.word	5488
	.byte	14
	.byte	'Os_ObjIdx_IteratorType',0,103,81,22
	.word	5488
	.byte	14
	.byte	'Os_ParamType',0,103,84,32
	.word	13802
	.byte	14
	.byte	'Os_AppAccessMaskType',0,16,118,17
	.word	136
	.byte	14
	.byte	'ApplicationType',0,16,127,3
	.word	11554
	.byte	14
	.byte	'TrustedFunctionIndexType',0,16,133,1,3
	.word	12661
	.byte	14
	.byte	'Os_NonTrustedFunctionIndexType',0,16,139,1,3
	.word	12946
	.byte	14
	.byte	'Os_FastTrustedFunctionIndexType',0,16,145,1,3
	.word	13032
	.byte	14
	.byte	'TaskType',0,16,158,1,3
	.word	12391
	.byte	14
	.byte	'ISRType',0,16,167,1,3
	.word	11747
	.byte	14
	.byte	'AlarmType',0,16,177,1,3
	.word	11361
	.byte	14
	.byte	'CounterType',0,16,185,1,3
	.word	11658
	.byte	14
	.byte	'ScheduleTableType',0,16,191,1,3
	.word	12187
	.byte	14
	.byte	'ResourceType',0,16,198,1,3
	.word	11911
	.byte	14
	.byte	'SpinlockIdType',0,16,205,1,3
	.word	12212
	.byte	14
	.byte	'Os_PeripheralIdType',0,16,211,1,3
	.word	13204
	.byte	14
	.byte	'Os_BarrierIdType',0,16,217,1,3
	.word	13276
	.byte	14
	.byte	'Os_TraceThreadIdType',0,16,224,1,3
	.word	7116
	.byte	14
	.byte	'Os_TraceSpinlockIdType',0,16,232,1,3
	.word	5693
	.byte	14
	.byte	'Os_Hal_AddressType',0,104,61,16
	.word	136
	.byte	14
	.byte	'Os_ExceptionContextType',0,104,66,44
	.word	13313
	.byte	14
	.byte	'AppModeType',0,3,216,1,16
	.word	400
	.byte	14
	.byte	'IdleModeType',0,3,234,1,3
	.word	11821
	.byte	14
	.byte	'Os_InterruptSourceIdType',0,3,238,1,16
	.word	136
	.byte	14
	.byte	'Os_ExceptionSourceIdType',0,3,246,1,16
	.word	136
	.byte	14
	.byte	'TryToGetSpinlockType',0,3,142,2,2
	.word	12743
	.byte	14
	.byte	'TaskStateType',0,3,175,2,3
	.word	12557
	.byte	14
	.byte	'EventMaskType',0,3,182,2,16
	.word	11716
	.byte	14
	.byte	'EventMaskRefType',0,3,185,2,56
	.word	11742
	.byte	14
	.byte	'Os_TickType',0,3,200,2,19
	.word	136
	.byte	14
	.byte	'TickType',0,3,206,2,21
	.word	136
	.byte	14
	.byte	'AlarmBaseType',0,3,228,2,2
	.word	11258
	.byte	7,3,235,2,9,1,8
	.byte	'NO_ACCESS',0,0,8
	.byte	'ACCESS',0,1,0,14
	.byte	'ObjectAccessType',0,3,239,2,3
	.word	87681
	.byte	14
	.byte	'RestartType',0,3,249,2,3
	.word	11953
	.byte	14
	.byte	'ApplicationStateType',0,3,133,3,3
	.word	6084
	.byte	14
	.byte	'ObjectTypeType',0,3,147,3,3
	.word	12821
	.byte	14
	.byte	'Os_ObjectIdType',0,3,151,3,16
	.word	136
	.byte	14
	.byte	'OSServiceIdType',0,3,156,4,3
	.word	8051
	.byte	14
	.byte	'Os_StatusType',0,3,232,5,3
	.word	417
	.byte	14
	.byte	'ProtectionReturnType',0,3,247,5,3
	.word	17486
	.byte	14
	.byte	'Os_ErrorInformationType',0,3,143,6,3
	.word	11196
	.byte	14
	.byte	'ScheduleTableStatusType',0,3,192,6,3
	.word	12006
	.byte	14
	.byte	'Os_AccessCheckAddress',0,3,199,6,29
	.word	136
	.byte	14
	.byte	'MemorySizeType',0,3,207,6,31
	.word	136
	.byte	14
	.byte	'Os_MemAccessType',0,3,233,6,3
	.word	28769
	.byte	14
	.byte	'AccessType',0,3,235,6,26
	.word	28769
	.byte	14
	.byte	'Os_CoreStartStateType',0,3,134,7,2
	.word	13602
	.byte	14
	.byte	'CoreIdType',0,21,91,3
	.word	6821
	.byte	14
	.byte	'Os_HookConfigType',0,29,106,38
	.word	17120
	.byte	14
	.byte	'Os_HookStatusHookConfigType',0,29,109,48
	.word	17405
	.byte	14
	.byte	'Os_HookCallbackConfigType',0,29,112,46
	.word	17279
	.byte	14
	.byte	'Os_HookProtectionHookConfigType',0,29,115,52
	.word	17700
	.byte	14
	.byte	'Os_HookInitHookConfigType',0,29,118,46
	.word	17816
	.byte	14
	.byte	'Os_HookFlagType',0,29,120,16
	.word	136
	.byte	14
	.byte	'Os_HookInfoType',0,29,127,3
	.word	15809
	.byte	14
	.byte	'Os_HookIdType',0,29,130,1,16
	.word	136
	.byte	14
	.byte	'Os_Hal_BitFieldType',0,105,99,16
	.word	136
	.byte	14
	.byte	'Os_Hal_StackType',0,105,104,16
	.word	136
	.byte	14
	.byte	'Os_Hal_SpinlockType',0,105,108,16
	.word	136
	.byte	14
	.byte	'Os_Hal_SpinlockResultType',0,105,111,29
	.word	136
	.byte	14
	.byte	'Os_Hal_CoreConfigType',0,105,115,42
	.word	6384
	.byte	14
	.byte	'Os_Hal_Core2ThreadType',0,105,118,43
	.word	29850
	.byte	14
	.byte	'Os_Hal_Core2ThreadConfigType',0,105,121,49
	.word	29914
	.byte	14
	.byte	'Os_Hal_CoreAsrConfigType',0,105,125,45
	.word	18144
	.byte	14
	.byte	'Os_Hal_SystemConfigType',0,105,127,16
	.word	136
	.byte	14
	.byte	'Os_Hal_XSigInterruptConfigType',0,105,131,1,51
	.word	22341
	.byte	14
	.byte	'Os_Hal_TimerFrtTickType',0,106,66,16
	.word	136
	.byte	14
	.byte	'Os_StackConfigType',0,107,140,1,39
	.word	5035
	.byte	14
	.byte	'Os_ErrorType',0,108,56,33
	.word	15625
	.byte	14
	.byte	'Os_ErrorParamsType',0,108,58,39
	.word	15545
	.byte	14
	.byte	'Os_TaskType',0,109,58,32
	.word	39310
	.byte	14
	.byte	'Os_TaskConfigType',0,109,61,38
	.word	16338
	.byte	14
	.byte	'Os_IsrHwConfigType',0,54,54,39
	.word	6645
	.byte	12
	.byte	'Os_IsrType_Tag',0,20,172,1,8,28,13
	.byte	'Thread',0
	.word	28472
	.byte	24,2,35,0,13
	.byte	'IsKilled',0
	.word	400
	.byte	1,2,35,24,0,14
	.byte	'Os_IsrType',0,54,57,31
	.word	88870
	.byte	14
	.byte	'Os_IsrConfigType',0,54,60,37
	.word	21800
	.byte	14
	.byte	'Os_IsrCat1ConfigType',0,54,63,41
	.word	24729
	.byte	14
	.byte	'Os_CoreStatusType',0,28,61,38
	.word	6293
	.byte	14
	.byte	'Os_CoreAsrStatusType',0,28,64,41
	.word	33204
	.byte	14
	.byte	'Os_CoreConfigType',0,28,67,38
	.word	7454
	.byte	14
	.byte	'Os_CoreAsrType',0,28,70,35
	.word	15867
	.byte	14
	.byte	'Os_CoreAsrConfigType',0,28,73,41
	.word	23986
	.byte	14
	.byte	'Os_SystemConfigType',0,28,76,40
	.word	34094
	.byte	14
	.byte	'Os_CorePhysicalIdType',0,28,82,16
	.word	136
	.byte	14
	.byte	'Os_CoreBootBarrierContentType',0,28,89,16
	.word	136
	.byte	14
	.byte	'Os_UnhandledEventReportType',0,28,104,3
	.word	15728
	.byte	14
	.byte	'Os_Hal_IntGlobalStateType',0,110,66,16
	.word	136
	.byte	14
	.byte	'Os_Hal_IntLevelType',0,110,73,16
	.word	136
	.byte	14
	.byte	'Os_Hal_IntTrapStateType',0,110,82,16
	.word	136
	.byte	14
	.byte	'Os_Hal_IntStateType',0,110,89,16
	.word	136
	.byte	14
	.byte	'Os_Hal_IntSourceType',0,110,95,16
	.word	136
	.byte	14
	.byte	'Os_Hal_IntIsrConfigType',0,110,99,44
	.word	3547
	.byte	14
	.byte	'Os_Hal_IntIsrMapConfigType',0,110,103,47
	.word	6582
	.byte	14
	.byte	'Os_IntApiStateType',0,23,64,39
	.word	7821
	.byte	14
	.byte	'Os_IntStateType',0,23,74,3
	.word	7701
	.byte	15,23,88,9,4,13
	.byte	'State',0
	.word	136
	.byte	4,2,35,0,0,14
	.byte	'Os_IntLevelType',0,23,92,3
	.word	89533
	.byte	14
	.byte	'Os_TpType',0,86,69,30
	.word	19937
	.byte	14
	.byte	'Os_TpConfigType',0,86,72,36
	.word	20032
	.byte	14
	.byte	'Os_TpThreadConfigType',0,86,75,42
	.word	28706
	.byte	14
	.byte	'Os_TpBudgetType',0,86,78,36
	.word	42515
	.byte	14
	.byte	'Os_TpBudgetConfigType',0,86,81,42
	.word	42734
	.byte	14
	.byte	'Os_TpOwnerThreadConfigType',0,86,85,47
	.word	42986
	.byte	14
	.byte	'Os_TpOwnerThreadType',0,86,88,41
	.word	42859
	.byte	14
	.byte	'Os_InterArrivalTimeType',0,86,91,16
	.word	11716
	.byte	14
	.byte	'Os_TpMonitoringType',0,86,101,3
	.word	42584
	.byte	14
	.byte	'Os_IntApiCntType',0,22,78,16
	.word	5488
	.byte	14
	.byte	'Os_IntLockingStateType',0,22,86,3
	.word	7738
	.byte	14
	.byte	'Os_CoreAsrCoreIdx',0,45,90,3
	.word	20107
	.byte	16,8
	.word	32828
	.byte	17,1,0,9
	.word	89910
	.byte	41
	.byte	'OsCfg_CorePhysicalRefs',0,45,108,60
	.word	89919
	.byte	1,1,14
	.byte	'Os_TaskPrioType',0,111,76,16
	.word	5488
	.byte	14
	.byte	'Os_SchedulerType',0,111,83,37
	.word	16639
	.byte	14
	.byte	'Os_SchedulerConfigType',0,111,86,43
	.word	16889
	.byte	14
	.byte	'Os_LockType',0,13,58,32
	.word	5115
	.byte	14
	.byte	'Os_LockConfigType',0,13,61,38
	.word	5250
	.byte	12
	.byte	'Os_ResourceType_Tag',0,35,159,1,8,8,13
	.byte	'Lock',0
	.word	5115
	.byte	4,2,35,0,13
	.byte	'PreviousPriority',0
	.word	5488
	.byte	2,2,35,4,0,14
	.byte	'Os_ResourceType',0,112,60,36
	.word	90083
	.byte	14
	.byte	'Os_ResourceConfigType',0,112,64,42
	.word	17984
	.byte	14
	.byte	'Os_AppMaskType',0,113,85,16
	.word	136
	.byte	14
	.byte	'Os_AppConfigType',0,113,88,37
	.word	27389
	.byte	14
	.byte	'Os_ServiceCallType',0,90,63,39
	.word	28270
	.byte	14
	.byte	'Os_ServiceConfigType',0,90,71,41
	.word	27234
	.byte	16,2
	.word	400
	.byte	17,1,0,12
	.byte	'Os_ServiceStackPoolType_Tag',0,57,162,2,8,2,13
	.byte	'AccessCounter',0
	.word	90308
	.byte	2,2,35,0,0,10
	.word	90317
	.byte	12
	.byte	'Os_ServiceStackConfigType_Tag',0,57,148,2,9,12,13
	.byte	'Stack',0
	.word	5110
	.byte	4,2,35,0,13
	.byte	'HwConfig',0
	.word	34931
	.byte	4,2,35,4,13
	.byte	'PoolIndex',0
	.word	400
	.byte	1,2,35,8,0,9
	.word	90380
	.byte	10
	.word	90469
	.byte	12
	.byte	'Os_ServiceStackPoolConfigType_Tag',0,57,170,2,8,24,13
	.byte	'Dyn',0
	.word	90375
	.byte	4,2,35,0,13
	.byte	'AvailabilityMap',0
	.word	16211
	.byte	12,2,35,4,13
	.byte	'Stacks',0
	.word	90474
	.byte	4,2,35,16,13
	.byte	'StackCount',0
	.word	400
	.byte	1,2,35,20,13
	.byte	'AccessCounter',0
	.word	90308
	.byte	2,2,35,21,0,14
	.byte	'Os_ServiceStackPoolConfigType',0,90,88,50
	.word	90479
	.byte	14
	.byte	'Os_ServiceStackPoolType',0,90,91,44
	.word	90317
	.byte	14
	.byte	'Os_ServiceStackConfigType',0,90,94,48
	.word	90380
	.byte	14
	.byte	'Os_XSigBufferIdxType',0,49,60,23
	.word	5488
	.byte	14
	.byte	'Os_XSigConfigType',0,49,64,38
	.word	22729
	.byte	14
	.byte	'Os_XSigIsrConfigType',0,49,67,41
	.word	22413
	.byte	14
	.byte	'Os_XSigSendDataType',0,49,71,40
	.word	21382
	.byte	14
	.byte	'Os_XSigRecvDataType',0,49,74,40
	.word	21601
	.byte	14
	.byte	'Os_XSigSendPortConfigType',0,49,77,46
	.word	22557
	.byte	14
	.byte	'Os_XSigRecvPortConfigType',0,49,80,46
	.word	22208
	.byte	14
	.byte	'Os_XSigFunctionTableConfigType',0,49,84,51
	.word	22032
	.byte	14
	.byte	'Os_IocLockModeType',0,51,63,2
	.word	22830
	.byte	14
	.byte	'Os_IocChannelStateType',0,51,73,2
	.word	22934
	.byte	14
	.byte	'Os_IocCallbackConfigRefType',0,50,132,3,65
	.word	17353
	.byte	9
	.word	91026
	.byte	10
	.word	91063
	.byte	12
	.byte	'Os_IocCallbacksConfigType_Tag',0,50,135,3,8,8,13
	.byte	'CallbackRefs',0
	.word	91068
	.byte	4,2,35,0,13
	.byte	'CallbackCount',0
	.word	136
	.byte	4,2,35,4,0,14
	.byte	'Os_IocCallbacksConfigType',0,51,77,46
	.word	91073
	.byte	9
	.word	17279
	.byte	10
	.word	91189
	.byte	14
	.byte	'Os_IocLostCounterType',0,51,81,15
	.word	400
	.byte	14
	.byte	'Os_IocConfigType',0,51,83,37
	.word	23265
	.byte	14
	.byte	'Os_IocType',0,51,84,31
	.word	22999
	.byte	9
	.word	.L268-.L18
	.byte	10
	.word	91273
	.byte	12
	.byte	'Os_IocSendConfigType_Tag',0,50,237,3,8,32,13
	.byte	'Base',0
	.word	23265
	.byte	20,2,35,0,13
	.byte	'Callbacks',0
	.word	91073
	.byte	8,2,35,20,13
	.byte	'Receive',0
	.word	91278
	.byte	4,2,35,28,0,9
	.word	91283
	.byte	10
	.word	91365
.L268:
	.byte	12
	.byte	'Os_IocReceiveConfigType_Tag',0,50,211,3,8,24,13
	.byte	'Base',0
	.word	23265
	.byte	20,2,35,0,13
	.byte	'Send',0
	.word	91370
	.byte	4,2,35,20,0,14
	.byte	'Os_IocReceiveConfigType',0,51,86,44
	.word	91375
	.byte	14
	.byte	'Os_IocSendConfigType',0,51,87,41
	.word	91283
	.byte	12
	.byte	'Os_IocSendType_Tag',0,50,224,3,8,2,13
	.byte	'Base',0
	.word	22999
	.byte	1,2,35,0,13
	.byte	'LostCounter',0
	.word	400
	.byte	1,2,35,1,0,14
	.byte	'Os_IocSendType',0,51,88,35
	.word	91499
	.byte	12
	.byte	'Os_IocReceiveType_Tag',0,50,197,3,8,2,13
	.byte	'Base',0
	.word	22999
	.byte	1,2,35,0,13
	.byte	'LostCounterSnapshot',0
	.word	400
	.byte	1,2,35,1,0,14
	.byte	'Os_IocReceiveType',0,51,89,38
	.word	91583
	.byte	12
	.byte	'Os_IocMultiReceiveConfigType_Tag',0,50,140,4,8,24,13
	.byte	'Base',0
	.word	23265
	.byte	20,2,35,0,13
	.byte	'ReceiveChannelCount',0
	.word	5488
	.byte	2,2,35,20,0,14
	.byte	'Os_IocMultiReceiveConfigType',0,51,92,49
	.word	91681
	.byte	12
	.byte	'Os_Ioc08ReceiveConfigType_Tag',0,50,169,4,8,40,13
	.byte	'Ioc',0
	.word	91375
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	45589
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc08ReceiveConfigType',0,51,94,46
	.word	91801
	.byte	12
	.byte	'Os_Ioc08SendConfigType_Tag',0,50,209,4,8,48,13
	.byte	'Ioc',0
	.word	91283
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	45418
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc08SendConfigType',0,51,95,43
	.word	91903
	.byte	9
	.word	91801
	.byte	10
	.word	92000
	.byte	12
	.byte	'Os_Ioc08MultiReceiveConfigType_Tag',0,50,183,4,8,28,13
	.byte	'Ioc',0
	.word	91681
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	92005
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc08MultiReceiveConfigType',0,51,96,51
	.word	92010
	.byte	12
	.byte	'Os_Ioc16ReceiveConfigType_Tag',0,50,239,4,8,40,13
	.byte	'Ioc',0
	.word	91375
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	45995
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc16ReceiveConfigType',0,51,100,46
	.word	92123
	.byte	12
	.byte	'Os_Ioc16SendConfigType_Tag',0,50,151,5,8,48,13
	.byte	'Ioc',0
	.word	91283
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	45824
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc16SendConfigType',0,51,101,43
	.word	92225
	.byte	9
	.word	92123
	.byte	10
	.word	92322
	.byte	12
	.byte	'Os_Ioc16MultiReceiveConfigType_Tag',0,50,253,4,8,28,13
	.byte	'Ioc',0
	.word	91681
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	92327
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc16MultiReceiveConfigType',0,51,102,51
	.word	92332
	.byte	12
	.byte	'Os_Ioc32ReceiveConfigType_Tag',0,50,181,5,8,40,13
	.byte	'Ioc',0
	.word	91375
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	46401
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc32ReceiveConfigType',0,51,106,46
	.word	92445
	.byte	12
	.byte	'Os_Ioc32SendConfigType_Tag',0,50,221,5,8,48,13
	.byte	'Ioc',0
	.word	91283
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	46230
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc32SendConfigType',0,51,107,43
	.word	92547
	.byte	9
	.word	92445
	.byte	10
	.word	92644
	.byte	12
	.byte	'Os_Ioc32MultiReceiveConfigType_Tag',0,50,195,5,8,28,13
	.byte	'Ioc',0
	.word	91681
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	92649
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc32MultiReceiveConfigType',0,51,108,51
	.word	92654
	.byte	12
	.byte	'Os_IocRefReceiveConfigType_Tag',0,50,251,5,8,44,13
	.byte	'Ioc',0
	.word	91375
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	46897
	.byte	20,2,35,24,0,14
	.byte	'Os_IocRefReceiveConfigType',0,51,112,47
	.word	92767
	.byte	12
	.byte	'Os_IocRefSendConfigType_Tag',0,50,163,6,8,52,13
	.byte	'Ioc',0
	.word	91283
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	46661
	.byte	20,2,35,32,0,14
	.byte	'Os_IocRefSendConfigType',0,51,113,44
	.word	92871
	.byte	9
	.word	92767
	.byte	10
	.word	92970
	.byte	12
	.byte	'Os_IocRefMultiReceiveConfigType_Tag',0,50,137,6,8,28,13
	.byte	'Ioc',0
	.word	91681
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	92975
	.byte	4,2,35,24,0,14
	.byte	'Os_IocRefMultiReceiveConfigType',0,51,114,52
	.word	92980
	.byte	23,1,1,24
	.word	11874
	.byte	24
	.word	12697
	.byte	0,10
	.word	93095
	.byte	14
	.byte	'Os_IocCopyCbk',0,50,183,6,9
	.word	93109
	.byte	12
	.byte	'Os_IocReadConfigType_Tag',0,50,213,6,8,28,13
	.byte	'Ioc',0
	.word	23265
	.byte	20,2,35,0,13
	.byte	'Data',0
	.word	11874
	.byte	4,2,35,20,13
	.byte	'CopyCbk',0
	.word	93114
	.byte	4,2,35,24,0,14
	.byte	'Os_IocReadConfigType',0,51,119,41
	.word	93137
	.byte	10
	.word	93095
	.byte	23,1,1,24
	.word	12697
	.byte	0,10
	.word	93247
	.byte	14
	.byte	'Os_IocInitCbk',0,50,195,6,9
	.word	93256
	.byte	12
	.byte	'Os_IocWriteConfigType_Tag',0,50,239,6,8,40,13
	.byte	'Ioc',0
	.word	23265
	.byte	20,2,35,0,13
	.byte	'Data',0
	.word	12697
	.byte	4,2,35,20,13
	.byte	'Callbacks',0
	.word	91073
	.byte	8,2,35,24,13
	.byte	'CopyCbk',0
	.word	93114
	.byte	4,2,35,32,13
	.byte	'InitCbk',0
	.word	93261
	.byte	4,2,35,36,0,14
	.byte	'Os_IocWriteConfigType',0,51,120,42
	.word	93284
	.byte	10
	.word	93247
	.byte	14
	.byte	'Os_BitIndexType',0,114,80,15
	.word	400
	.byte	14
	.byte	'Os_BitFieldType',0,114,84,29
	.word	136
	.byte	14
	.byte	'Os_BitArrayIndexType',0,31,110,16
	.word	5488
	.byte	14
	.byte	'Os_BitArrayType',0,31,119,2
	.word	16171
	.byte	14
	.byte	'Os_BitArrayConfigType',0,31,133,1,2
	.word	16211
	.byte	14
	.byte	'Os_DequeType',0,33,82,2
	.word	16758
	.byte	14
	.byte	'Os_DequeNodeType',0,33,88,2
	.word	16804
	.byte	14
	.byte	'Os_DequeConfigType',0,33,104,2
	.word	16830
	.byte	14
	.byte	'Os_SpinlockType',0,17,54,36
	.word	32521
	.byte	14
	.byte	'Os_SpinlockConfigType',0,17,58,42
	.word	5873
	.byte	14
	.byte	'Os_LockTypeType',0,12,78,3
	.word	5156
	.byte	14
	.byte	'Os_TraceThreadConfigType',0,115,60,45
	.word	7265
	.byte	14
	.byte	'Os_TraceThreadType',0,115,63,39
	.word	7058
	.byte	14
	.byte	'Os_TraceCoreType',0,115,66,37
	.word	7350
	.byte	14
	.byte	'Os_TraceSpinlockConfigType',0,115,69,47
	.word	5805
	.byte	14
	.byte	'Os_SpinlockMethodType',0,14,145,1,2
	.word	5370
	.byte	14
	.byte	'Os_SpinlockModeType',0,14,156,1,2
	.word	5510
	.byte	14
	.byte	'Os_SpinlockTraceType',0,14,169,1,2
	.word	5569
	.byte	14
	.byte	'Os_SpinlockCheckType',0,14,180,1,2
	.word	5631
	.byte	14
	.byte	'Os_SpinlockOrderType',0,14,184,1,15
	.word	400
	.byte	14
	.byte	'Os_BarrierBaseType',0,53,58,39
	.word	23516
	.byte	14
	.byte	'Os_BarrierBaseConfigType',0,53,60,45
	.word	23640
	.byte	14
	.byte	'Os_BarrierAttendeeIdxType',0,52,110,15
	.word	400
	.byte	14
	.byte	'Os_BarrierCounterType',0,52,113,15
	.word	400
	.byte	14
	.byte	'Os_BarrierAttendeeStateType',0,52,124,2
	.word	23440
	.byte	14
	.byte	'Os_MpSystemConfigType',0,116,54,42
	.word	34034
	.byte	14
	.byte	'Os_MpCoreConfigType',0,116,57,40
	.word	18589
	.byte	14
	.byte	'Os_MpAccessRightsType',0,116,60,42
	.word	27038
	.byte	14
	.byte	'Os_CoreStateType',0,19,231,1,2
	.word	6192
	.byte	14
	.byte	'Os_CoreOsStateType',0,19,247,1,2
	.word	33115
	.byte	14
	.byte	'Os_CoreThreadIdx',0,19,168,2,16
	.word	7990
	.byte	14
	.byte	'Os_Hal_MpSystemConfigType',0,117,59,46
	.word	33970
	.byte	14
	.byte	'Os_Hal_MpCoreConfigType',0,117,63,44
	.word	18272
	.byte	14
	.byte	'Os_Hal_MpAppConfigType',0,117,67,43
	.word	26224
	.byte	14
	.byte	'Os_Hal_MpThreadConfigType',0,117,71,46
	.word	26629
	.byte	14
	.byte	'Os_Hal_MpuRegionRangeConfigType',0,37,75,3
	.word	18205
	.byte	14
	.byte	'Os_AccessCheckIdx',0,118,62,15
	.word	400
	.byte	14
	.byte	'Os_AccessCheckConfigType',0,118,66,45
	.word	29352
	.byte	14
	.byte	'Os_TraceThreadRunReason',0,15,220,2,2
	.word	6880
	.byte	7,15,245,2,9,1,8
	.byte	'OsOrtiApiIdGetApplicationID',0,2,8
	.byte	'OsOrtiApiIdGetISRID',0,4,8
	.byte	'OsOrtiApiIdCallTrustedFunction',0,6,8
	.byte	'OsOrtiApiIdCheckISRMemoryAccess',0,8,8
	.byte	'OsOrtiApiIdCheckTaskMemoryAccess',0,10,8
	.byte	'OsOrtiApiIdCheckObjectAccess',0,12,8
	.byte	'OsOrtiApiIdCheckObjectOwnership',0,14,8
	.byte	'OsOrtiApiIdStartScheduleTableRel',0,16,8
	.byte	'OsOrtiApiIdStartScheduleTableAbs',0,18,8
	.byte	'OsOrtiApiIdStopScheduleTable',0,20,8
	.byte	'OsOrtiApiIdNextScheduleTable',0,22,8
	.byte	'OsOrtiApiIdStartScheduleTableSynchron',0,24,8
	.byte	'OsOrtiApiIdSyncScheduleTable',0,26,8
	.byte	'OsOrtiApiIdSetScheduleTableAsync',0,28,8
	.byte	'OsOrtiApiIdGetScheduleTableStatus',0,30,8
	.byte	'OsOrtiApiIdIncrementCounter',0,32,8
	.byte	'OsOrtiApiIdGetCounterValue',0,34,8
	.byte	'OsOrtiApiIdGetElapsedValue',0,36,8
	.byte	'OsOrtiApiIdTerminateApplication',0,38,8
	.byte	'OsOrtiApiIdAllowAccess',0,40,8
	.byte	'OsOrtiApiIdGetApplicationState',0,42,8
	.byte	'OsOrtiApiIdGetNumberOfActivatedCores',0,44,8
	.byte	'OsOrtiApiIdGetCoreID',0,46,8
	.byte	'OsOrtiApiIdStartCore',0,48,8
	.byte	'OsOrtiApiIdStartNonAutosarCore',0,50,8
	.byte	'OsOrtiApiIdGetSpinlock',0,52,8
	.byte	'OsOrtiApiIdReleaseSpinlock',0,54,8
	.byte	'OsOrtiApiIdTryToGetSpinlock',0,56,8
	.byte	'OsOrtiApiIdShutdownAllCores',0,58,8
	.byte	'OsOrtiApiIdControlIdle',0,60,8
	.byte	'OsOrtiApiIdIocSend',0,62,8
	.byte	'OsOrtiApiIdIocWrite',0,192,0,8
	.byte	'OsOrtiApiIdIocSendGroup',0,194,0,8
	.byte	'OsOrtiApiIdIocWriteGroup',0,196,0,8
	.byte	'OsOrtiApiIdIocReceive',0,198,0,8
	.byte	'OsOrtiApiIdIocRead',0,200,0,8
	.byte	'OsOrtiApiIdIocReceiveGroup',0,202,0,8
	.byte	'OsOrtiApiIdIocReadGroup',0,204,0,8
	.byte	'OsOrtiApiIdIocEmptyQueue',0,206,0,8
	.byte	'OsOrtiApiIdGetCurrentApplicationID',0,208,0,8
	.byte	'OsOrtiApiIdCallNonTrustedFunction',0,210,0,8
	.byte	'OsOrtiApiIdGetTaskStackUsage',0,212,0,8
	.byte	'OsOrtiApiIdGetISRStackUsage',0,214,0,8
	.byte	'OsOrtiApiIdGetKernelStackUsage',0,216,0,8
	.byte	'OsOrtiApiIdGetStartupHookStackUsage',0,218,0,8
	.byte	'OsOrtiApiIdGetErrorHookStackUsage',0,220,0,8
	.byte	'OsOrtiApiIdGetShutdownHookStackUsage',0,222,0,8
	.byte	'OsOrtiApiIdGetProtectionHookStackUsage',0,224,0,8
	.byte	'OsOrtiApiIdGetSemaphore',0,226,0,8
	.byte	'OsOrtiApiIdReleaseSemaphore',0,228,0,8
	.byte	'OsOrtiApiIdStartOS',0,230,0,8
	.byte	'OsOrtiApiIdGetActiveApplicationMode',0,232,0,8
	.byte	'OsOrtiApiIdDisableAllInterrupts',0,234,0,8
	.byte	'OsOrtiApiIdEnableAllInterrupts',0,236,0,8
	.byte	'OsOrtiApiIdSuspendAllInterrupts',0,238,0,8
	.byte	'OsOrtiApiIdResumeAllInterrupts',0,240,0,8
	.byte	'OsOrtiApiIdSuspendOSInterrupts',0,242,0,8
	.byte	'OsOrtiApiIdResumeOSInterrupts',0,244,0,8
	.byte	'OsOrtiApiIdActivateTask',0,246,0,8
	.byte	'OsOrtiApiIdTerminateTask',0,248,0,8
	.byte	'OsOrtiApiIdChainTask',0,250,0,8
	.byte	'OsOrtiApiIdGetTaskID',0,252,0,8
	.byte	'OsOrtiApiIdGetTaskState',0,254,0,8
	.byte	'OsOrtiApiIdSchedule',0,128,1,8
	.byte	'OsOrtiApiIdSetEvent',0,130,1,8
	.byte	'OsOrtiApiIdClearEvent',0,132,1,8
	.byte	'OsOrtiApiIdGetEvent',0,134,1,8
	.byte	'OsOrtiApiIdWaitEvent',0,136,1,8
	.byte	'OsOrtiApiIdGetAlarmBase',0,138,1,8
	.byte	'OsOrtiApiIdGetAlarm',0,140,1,8
	.byte	'OsOrtiApiIdSetRelAlarm',0,142,1,8
	.byte	'OsOrtiApiIdSetAbsAlarm',0,144,1,8
	.byte	'OsOrtiApiIdCancelAlarm',0,146,1,8
	.byte	'OsOrtiApiIdGetResource',0,148,1,8
	.byte	'OsOrtiApiIdReleaseResource',0,150,1,8
	.byte	'OsOrtiApiIdGetVersionInfo',0,152,1,8
	.byte	'OsOrtiApiIdEnterPreStartTask',0,158,1,8
	.byte	'OsOrtiApiIdShutdownOS',0,160,1,8
	.byte	'OsOrtiApiIdGetUnhandledIrq',0,162,1,8
	.byte	'OsOrtiApiIdGetUnhandledExc',0,164,1,8
	.byte	'OsOrtiApiIdDisableOSInterrupts',0,166,1,8
	.byte	'OsOrtiApiIdEnableOSInterrupts',0,168,1,8
	.byte	'OsOrtiApiIdReadPeripheral8',0,170,1,8
	.byte	'OsOrtiApiIdReadPeripheral16',0,172,1,8
	.byte	'OsOrtiApiIdReadPeripheral32',0,174,1,8
	.byte	'OsOrtiApiIdWritePeripheral8',0,176,1,8
	.byte	'OsOrtiApiIdWritePeripheral16',0,178,1,8
	.byte	'OsOrtiApiIdWritePeripheral32',0,180,1,8
	.byte	'OsOrtiApiIdModifyPeripheral8',0,182,1,8
	.byte	'OsOrtiApiIdModifyPeripheral16',0,184,1,8
	.byte	'OsOrtiApiIdModifyPeripheral32',0,186,1,8
	.byte	'OsOrtiApiIdGetDetailedError',0,188,1,8
	.byte	'OsOrtiApiIdOSErrorGetServiceId',0,190,1,8
	.byte	'OsOrtiApiIdDisableInterruptSource',0,192,1,8
	.byte	'OsOrtiApiIdEnableInterruptSource',0,194,1,8
	.byte	'OsOrtiApiIdClearPendingInterrupt',0,196,1,8
	.byte	'OsOrtiApiIdIsInterruptSourceEnabled',0,198,1,8
	.byte	'OsOrtiApiIdIsInterruptPending',0,200,1,8
	.byte	'OsOrtiApiIdCallFastTrustedFunction',0,202,1,8
	.byte	'OsOrtiApiIdBarrierSynchronize',0,204,1,8
	.byte	'OsOrtiApiIdGetExceptionContext',0,206,1,8
	.byte	'OsOrtiApiIdSetExceptionContext',0,208,1,8
	.byte	'OsOrtiApiIdInitialEnableInterruptSources',0,210,1,8
	.byte	'OsOrtiApiIdGetCoreStartState',0,212,1,8
	.byte	'OsOrtiApiIdGetExceptionAddress',0,214,1,0,14
	.byte	'OsOrtiApiIdType',0,15,225,3,3
	.word	94576
	.byte	14
	.byte	'Os_TraceThreadTypeType',0,15,236,3,2
	.word	7175
	.byte	14
	.byte	'Os_HookTaskReturnType',0,34,105,2
	.word	17012
	.byte	26,34,121,9,1,13
	.byte	'Status',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'Mode',0
	.word	400
	.byte	1,2,35,0,0,14
	.byte	'Os_HookParameterType',0,34,125,2
	.word	97910
	.byte	26,34,128,1,9,1,13
	.byte	'ProtectionReaction',0
	.word	17486
	.byte	1,2,35,0,0,14
	.byte	'Os_HookReturnType',0,34,131,1,2
	.word	97975
	.byte	14
	.byte	'Os_EventStateType',0,79,77,3
	.word	39268
	.byte	14
	.byte	'Os_XSigFunctionIdx',0,48,109,3
	.word	20256
	.byte	14
	.byte	'Os_TimerTypeType',0,43,72,3
	.word	19125
	.byte	14
	.byte	'Os_CounterCharacteristicsConfigType',0,43,75,56
	.word	18647
	.byte	14
	.byte	'Os_CounterConfigType',0,43,78,41
	.word	19260
	.byte	14
	.byte	'Os_AlarmConfigType',0,119,54,39
	.word	25016
	.byte	14
	.byte	'Os_SchTConfigType',0,120,55,38
	.word	26000
	.byte	14
	.byte	'Os_SchTExPoConfigType',0,120,61,42
	.word	25834
	.byte	14
	.byte	'Os_SchTAutostartConfigType',0,120,67,47
	.word	25303
	.byte	7,56,139,1,9,1,8
	.byte	'OS_SCHTSTATUS_STOPPED',0,0,8
	.byte	'OS_SCHTSTATUS_NEXT',0,1,8
	.byte	'OS_SCHTSTATUS_WAITING',0,2,8
	.byte	'OS_SCHTSTATUS_RUNNING',0,3,0,12
	.byte	'Os_SchTType_Tag',0,56,210,2,8,20,13
	.byte	'Job',0
	.word	18815
	.byte	4,2,35,0,13
	.byte	'ExPo',0
	.word	25995
	.byte	4,2,35,4,13
	.byte	'State',0
	.word	98306
	.byte	1,2,35,8,13
	.byte	'Next',0
	.word	26180
	.byte	4,2,35,12,13
	.byte	'Previous',0
	.word	26180
	.byte	4,2,35,16,0,14
	.byte	'Os_SchTType',0,120,70,32
	.word	98406
	.byte	14
	.byte	'Os_SchTExPoActionEventConfigType',0,120,76,53
	.word	25747
	.byte	14
	.byte	'Os_SchTExPoActionTaskConfigType',0,120,79,52
	.word	25680
	.byte	14
	.byte	'Os_Hal_TimerFrtConfigType',0,121,61,46
	.word	19546
	.byte	14
	.byte	'Os_Hal_TimerPitConfigType',0,121,65,46
	.word	40961
	.byte	14
	.byte	'Os_TimerSwConfigType',0,122,59,41
	.word	41359
	.byte	12
	.byte	'Os_TimerPitConfigType_Tag',0,39,246,1,8,56,13
	.byte	'SwCounter',0
	.word	41359
	.byte	52,2,35,0,13
	.byte	'HwConfig',0
	.word	41261
	.byte	4,2,35,52,0,14
	.byte	'Os_TimerPitConfigType',0,122,62,42
	.word	98701
	.byte	14
	.byte	'Os_TimerHrtConfigType',0,122,65,42
	.word	19846
	.byte	12
	.byte	'Os_TimerPfrtConfigType_Tag',0,39,187,2,8,68,13
	.byte	'SwCounter',0
	.word	41359
	.byte	52,2,35,0,13
	.byte	'Period',0
	.word	136
	.byte	4,2,35,52,13
	.byte	'MaxDifferentialValue',0
	.word	136
	.byte	4,2,35,56,13
	.byte	'MaxCountingValue',0
	.word	136
	.byte	4,2,35,60,13
	.byte	'HwConfig',0
	.word	19841
	.byte	4,2,35,64,0,14
	.byte	'Os_TimerPfrtConfigType',0,122,68,43
	.word	98831
	.byte	14
	.byte	'Os_XSigState_Type',0,47,100,2
	.word	21278
	.byte	14
	.byte	'Os_XSigComDataConfigType',0,47,114,2
	.word	21662
	.byte	14
	.byte	'Os_XSigParamsType',0,47,123,2
	.word	21249
	.byte	14
	.byte	'Os_XSigOutputParamsType',0,47,133,1,2
	.word	21523
	.byte	14
	.byte	'Os_XSigResultType',0,47,147,1,2
	.word	21553
	.byte	14
	.byte	'Os_XSigChannelSendType',0,47,207,1,2
	.word	20161
	.byte	14
	.byte	'Os_XSigChannelRecvType',0,47,217,1,2
	.word	20214
	.byte	14
	.byte	'Os_XSigChannelSendConfigType',0,47,234,1,2
	.word	21727
	.byte	14
	.byte	'Os_XSigChannelRecvConfigType',0,47,251,1,2
	.word	22138
	.byte	14
	.byte	'Os_XSigFunctionDescritorConfigType',0,46,190,1,2
	.word	21995
	.byte	14
	.byte	'Os_ActivationCntType',0,32,102,15
	.word	400
	.byte	14
	.byte	'Os_TaskScheduleType',0,32,111,2
	.word	16277
	.byte	14
	.byte	'Os_JobConfigType',0,123,53,37
	.word	18931
	.byte	14
	.byte	'Os_JobType',0,123,56,31
	.word	18815
	.byte	14
	.byte	'Os_PriorityQueueNodeIdxType',0,41,72,16
	.word	5488
	.byte	14
	.byte	'Os_PriorityQueueNodeType',0,41,80,3
	.word	19016
	.byte	14
	.byte	'Os_PriorityQueueType',0,41,87,3
	.word	19041
	.byte	14
	.byte	'Os_PriorityQueueConfigType',0,41,96,3
	.word	19072
	.byte	14
	.byte	'Os_TimerSwType',0,39,226,1,3
	.word	41315
	.byte	14
	.byte	'Os_TimerHrtType',0,39,151,2,3
	.word	19426
	.byte	14
	.byte	'Os_TpMonitoringKindType',0,38,151,2,2
	.word	28628
	.byte	14
	.byte	'Os_TpDelayLevelType',0,38,154,2,15
	.word	400
	.byte	14
	.byte	'Os_AppType',0,18,122,3
	.word	6166
	.byte	14
	.byte	'Os_AccessCheckRegionConfigType',0,58,95,3
	.word	29272
	.byte	14
	.byte	'Os_AlarmModeType',0,55,113,2
	.word	24877
	.byte	7,55,117,9,1,8
	.byte	'OS_ALARMSTATE_CANCELED',0,0,8
	.byte	'OS_ALARMSTATE_SET',0,1,0,14
	.byte	'Os_AlarmStateType',0,55,123,2
	.word	99762
	.byte	14
	.byte	'Os_AlarmAutostartConfigType',0,55,143,1,2
	.word	24931
	.byte	14
	.byte	'Os_AlarmCallbackType',0,55,241,1,9
	.word	17243
	.byte	14
	.byte	'Os_SchTEventIdxType',0,56,130,1,16
	.word	136
	.byte	14
	.byte	'Os_SchTTaskIdxType',0,56,133,1,16
	.word	136
	.byte	14
	.byte	'Os_SchTStatusType',0,56,149,1,3
	.word	98306
	.byte	7,56,153,1,9,1,8
	.byte	'OS_SCHTSYNCSTATUS_NOT_PROVIDED',0,0,8
	.byte	'OS_SCHTSYNCSTATUS_SYNC',0,1,8
	.byte	'OS_SCHTSYNCSTATUS_ASYNC',0,2,0,14
	.byte	'Os_SchTSyncStatusType',0,56,161,1,3
	.word	99990
	.byte	14
	.byte	'Os_SchTExPoKindType',0,56,198,1,2
	.word	25499
	.byte	14
	.byte	'Os_SchTSyncKindType',0,56,131,2,2
	.word	25410
	.byte	14
	.byte	'Os_SchTAutostartModeType',0,56,141,2,2
	.word	25185
	.byte	14
	.byte	'Os_ServiceTypeType',0,57,122,3
	.word	27134
	.byte	14
	.byte	'Os_ServiceTrustedFunctionParamsType',0,57,133,1,3
	.word	27990
	.byte	14
	.byte	'Os_ServiceNonTrustedFunctionParamsType',0,57,143,1,3
	.word	28043
	.byte	14
	.byte	'Os_ServiceFastTrustedFunctionParamsType',0,57,153,1,3
	.word	28097
	.byte	14
	.byte	'Os_ServiceParamsType',0,57,162,1,3
	.word	28151
	.byte	23,1,1,24
	.word	12661
	.byte	24
	.word	12697
	.byte	0,10
	.word	100403
	.byte	14
	.byte	'Os_ServiceTfCbkType',0,57,223,1,9
	.word	100417
	.byte	23,1,1,24
	.word	12946
	.byte	24
	.word	12697
	.byte	0,10
	.word	100451
	.byte	14
	.byte	'Os_ServiceNtfCbkType',0,57,248,1,9
	.word	100465
	.byte	23,1,1,24
	.word	13032
	.byte	24
	.word	12697
	.byte	0,10
	.word	100500
	.byte	14
	.byte	'Os_ServiceFtfCbkType',0,57,191,2,9
	.word	100514
	.byte	14
	.byte	'Os_FifoIdxType',0,124,73,15
	.word	400
	.byte	7,124,76,9,1,8
	.byte	'OS_FIFOWRITERESULT_OK',0,0,8
	.byte	'OS_FIFOWRITERESULT_BUFFEROVERFLOW',0,1,0,14
	.byte	'Os_FifoWriteResultType',0,124,80,2
	.word	100572
	.byte	14
	.byte	'Os_Fifo08WriteConfigType',0,93,66,45
	.word	45418
	.byte	14
	.byte	'Os_Fifo08ReadConfigType',0,93,69,44
	.word	45589
	.byte	14
	.byte	'Os_Fifo08NodeType',0,93,76,2
	.word	45392
	.byte	14
	.byte	'Os_Fifo08WriteType',0,93,83,2
	.word	45330
	.byte	14
	.byte	'Os_Fifo08ReadType',0,93,90,2
	.word	45359
	.byte	14
	.byte	'Os_Fifo16WriteConfigType',0,95,66,45
	.word	45824
	.byte	14
	.byte	'Os_Fifo16ReadConfigType',0,95,69,44
	.word	45995
	.byte	14
	.byte	'Os_Fifo16NodeType',0,95,76,2
	.word	45798
	.byte	14
	.byte	'Os_Fifo16WriteType',0,95,83,2
	.word	45736
	.byte	14
	.byte	'Os_Fifo16ReadType',0,95,90,2
	.word	45765
	.byte	14
	.byte	'Os_Fifo32WriteConfigType',0,97,66,45
	.word	46230
	.byte	14
	.byte	'Os_Fifo32ReadConfigType',0,97,69,44
	.word	46401
	.byte	14
	.byte	'Os_Fifo32NodeType',0,97,76,2
	.word	46204
	.byte	14
	.byte	'Os_Fifo32WriteType',0,97,83,2
	.word	46142
	.byte	14
	.byte	'Os_Fifo32ReadType',0,97,90,2
	.word	46171
	.byte	14
	.byte	'Os_FifoRefWriteConfigType',0,99,66,46
	.word	46661
	.byte	14
	.byte	'Os_FifoRefReadConfigType',0,99,69,45
	.word	46897
	.byte	14
	.byte	'Os_FifoRefWriteType',0,99,104,2
	.word	46548
	.byte	14
	.byte	'Os_FifoRefReadType',0,99,111,2
	.word	46577
	.byte	14
	.byte	'Os_IocSubClassType',0,50,170,3,2
	.word	23046
	.byte	7,125,96,9,1,8
	.byte	'OS_TRAPID_GETCOREID',0,0,8
	.byte	'OS_TRAPID_GETACTIVEAPPLICATIONMODE',0,1,8
	.byte	'OS_TRAPID_SHUTDOWNOS',0,2,8
	.byte	'OS_TRAPID_SHUTDOWNALLCORES',0,3,8
	.byte	'OS_TRAPID_DISABLELEVEL',0,4,8
	.byte	'OS_TRAPID_ENABLELEVEL',0,5,8
	.byte	'OS_TRAPID_DISABLEGLOBAL',0,6,8
	.byte	'OS_TRAPID_ENABLEGLOBAL',0,7,8
	.byte	'OS_TRAPID_DISABLEALLINTERRUPTS',0,8,8
	.byte	'OS_TRAPID_ENABLEALLINTERRUPTS',0,9,8
	.byte	'OS_TRAPID_SUSPENDALLINTERRUPTS',0,10,8
	.byte	'OS_TRAPID_RESUMEALLINTERRUPTS',0,11,8
	.byte	'OS_TRAPID_SUSPENDOSINTERRUPTS',0,12,8
	.byte	'OS_TRAPID_RESUMEOSINTERRUPTS',0,13,8
	.byte	'OS_TRAPID_DISABLEINTERRUPTSOURCE',0,14,8
	.byte	'OS_TRAPID_ENABLEINTERRUPTSOURCE',0,15,8
	.byte	'OS_TRAPID_CLEARPENDINGINTERRUPT',0,16,8
	.byte	'OS_TRAPID_ISINTERRUPTSOURCEENABLED',0,17,8
	.byte	'OS_TRAPID_ISINTERRUPTPENDING',0,18,8
	.byte	'OS_TRAPID_ALLOWACCESS',0,19,8
	.byte	'OS_TRAPID_GETAPPLICATIONID',0,20,8
	.byte	'OS_TRAPID_GETCURRENTAPPLICATIONID',0,21,8
	.byte	'OS_TRAPID_GETAPPLICATIONSTATE',0,22,8
	.byte	'OS_TRAPID_CHECKOBJECTACCESS',0,23,8
	.byte	'OS_TRAPID_CHECKOBJECTOWNERSHIP',0,24,8
	.byte	'OS_TRAPID_TERMINATEAPPLICATION',0,25,8
	.byte	'OS_TRAPID_ACTIVATETASK',0,26,8
	.byte	'OS_TRAPID_TERMINATETASK',0,27,8
	.byte	'OS_TRAPID_CHAINTASK',0,28,8
	.byte	'OS_TRAPID_GETTASKSTATE',0,29,8
	.byte	'OS_TRAPID_GETTASKID',0,30,8
	.byte	'OS_TRAPID_GETISRID',0,31,8
	.byte	'OS_TRAPID_SCHEDULE',0,32,8
	.byte	'OS_TRAPID_INCREMENTCOUNTER',0,33,8
	.byte	'OS_TRAPID_GETCOUNTERVALUE',0,34,8
	.byte	'OS_TRAPID_GETELAPSEDVALUE',0,35,8
	.byte	'OS_TRAPID_GETALARM',0,36,8
	.byte	'OS_TRAPID_GETALARMBASE',0,37,8
	.byte	'OS_TRAPID_SETRELALARM',0,38,8
	.byte	'OS_TRAPID_SETABSALARM',0,39,8
	.byte	'OS_TRAPID_CANCELALARM',0,40,8
	.byte	'OS_TRAPID_GETRESOURCE',0,41,8
	.byte	'OS_TRAPID_RELEASERESOURCE',0,42,8
	.byte	'OS_TRAPID_SETEVENT',0,43,8
	.byte	'OS_TRAPID_CLEAREVENT',0,44,8
	.byte	'OS_TRAPID_WAITEVENT',0,45,8
	.byte	'OS_TRAPID_GETEVENT',0,46,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEREL',0,47,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEABS',0,48,8
	.byte	'OS_TRAPID_STOPSCHEDULETABLE',0,49,8
	.byte	'OS_TRAPID_NEXTSCHEDULETABLE',0,50,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLESYNCHRON',0,51,8
	.byte	'OS_TRAPID_SETSCHEDULETABLEASYNC',0,52,8
	.byte	'OS_TRAPID_SYNCSCHEDULETABLE',0,53,8
	.byte	'OS_TRAPID_GETSCHEDULETABLESTATUS',0,54,8
	.byte	'OS_TRAPID_SPINLOCKGET',0,55,8
	.byte	'OS_TRAPID_SPINLOCKRELEASE',0,56,8
	.byte	'OS_TRAPID_SPINLOCKTRYGET',0,57,8
	.byte	'OS_TRAPID_IOC08RECEIVE',0,58,8
	.byte	'OS_TRAPID_IOC08EMPTYQUEUE',0,59,8
	.byte	'OS_TRAPID_IOC08SEND',0,60,8
	.byte	'OS_TRAPID_IOC16RECEIVE',0,61,8
	.byte	'OS_TRAPID_IOC16EMPTYQUEUE',0,62,8
	.byte	'OS_TRAPID_IOC16SEND',0,63,8
	.byte	'OS_TRAPID_IOC32RECEIVE',0,192,0,8
	.byte	'OS_TRAPID_IOC32EMPTYQUEUE',0,193,0,8
	.byte	'OS_TRAPID_IOC32SEND',0,194,0,8
	.byte	'OS_TRAPID_IOCREFRECEIVE',0,195,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYQUEUE',0,196,0,8
	.byte	'OS_TRAPID_IOCREFSEND',0,197,0,8
	.byte	'OS_TRAPID_IOCREAD',0,198,0,8
	.byte	'OS_TRAPID_IOCWRITE',0,199,0,8
	.byte	'OS_TRAPID_IOC08MULTIRECEIVE',0,200,0,8
	.byte	'OS_TRAPID_IOC08EMPTYMULTIQUEUE',0,201,0,8
	.byte	'OS_TRAPID_IOC16MULTIRECEIVE',0,202,0,8
	.byte	'OS_TRAPID_IOC16EMPTYMULTIQUEUE',0,203,0,8
	.byte	'OS_TRAPID_IOC32MULTIRECEIVE',0,204,0,8
	.byte	'OS_TRAPID_IOC32EMPTYMULTIQUEUE',0,205,0,8
	.byte	'OS_TRAPID_IOCREFMULTIRECEIVE',0,206,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYMULTIQUEUE',0,207,0,8
	.byte	'OS_TRAPID_READPERIPHERAL8',0,208,0,8
	.byte	'OS_TRAPID_READPERIPHERAL16',0,209,0,8
	.byte	'OS_TRAPID_READPERIPHERAL32',0,210,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL8',0,211,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL16',0,212,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL32',0,213,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL8',0,214,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL16',0,215,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL32',0,216,0,8
	.byte	'OS_TRAPID_CALLTRUSTEDFUNCTION',0,217,0,8
	.byte	'OS_TRAPID_CALLNONTRUSTEDFUNCTION',0,218,0,8
	.byte	'OS_TRAPID_CALLFASTTRUSTEDFUNCTION',0,219,0,8
	.byte	'OS_TRAPID_ERRAPPLICATIONERROR',0,220,0,8
	.byte	'OS_TRAPID_TASKMISSINGTERMINATETASK',0,221,0,8
	.byte	'OS_TRAPID_ISREPILOGUE',0,222,0,8
	.byte	'OS_TRAPID_SERVICERETURN',0,223,0,8
	.byte	'OS_TRAPID_HOOKRETURN',0,224,0,8
	.byte	'OS_TRAPID_CONTROLIDLE',0,225,0,8
	.byte	'OS_TRAPID_GETTASKSTACKUSAGE',0,226,0,8
	.byte	'OS_TRAPID_GETISRSTACKUSAGE',0,227,0,8
	.byte	'OS_TRAPID_GETKERNELSTACKUSAGE',0,228,0,8
	.byte	'OS_TRAPID_GETSTARTUPHOOKSTACKUSAGE',0,229,0,8
	.byte	'OS_TRAPID_GETERRORHOOKSTACKUSAGE',0,230,0,8
	.byte	'OS_TRAPID_GETSHUTDOWNHOOKSTACKUSAGE',0,231,0,8
	.byte	'OS_TRAPID_GETPROTECTIONHOOKSTACKUSAGE',0,232,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDIRQ',0,233,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDEXC',0,234,0,8
	.byte	'OS_TRAPID_GETDETAILEDERROR',0,235,0,8
	.byte	'OS_TRAPID_GETSERVICEID',0,236,0,8
	.byte	'OS_TRAPID_COREGETTHREAD',0,237,0,8
	.byte	'OS_TRAPID_GETNUMBEROFACTIVATEDCORES',0,238,0,8
	.byte	'OS_TRAPID_CHECKTASKMEMORYACCESS',0,239,0,8
	.byte	'OS_TRAPID_CHECKISRMEMORYACCESS',0,240,0,8
	.byte	'OS_TRAPID_BARRIERSYNCHRONIZE',0,241,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONCONTEXT',0,242,0,8
	.byte	'OS_TRAPID_SETEXCEPTIONCONTEXT',0,243,0,8
	.byte	'OS_TRAPID_GETCORESTARTSTATE',0,244,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONADDRESS',0,245,0,8
	.byte	'OS_TRAPID_COUNT',0,246,0,0,14
	.byte	'Os_TrapIdType',0,125,217,1,3
	.word	101251
	.byte	9
	.word	91903
	.byte	10
	.word	104767
	.byte	10
	.word	400
	.byte	9
	.word	400
	.byte	10
	.word	104782
	.byte	9
	.word	92225
	.byte	10
	.word	104792
	.byte	10
	.word	5488
	.byte	9
	.word	5488
	.byte	10
	.word	104807
	.byte	9
	.word	92547
	.byte	10
	.word	104817
	.byte	9
	.word	92871
	.byte	10
	.word	104827
	.byte	9
	.word	93137
	.byte	10
	.word	104837
	.byte	9
	.word	93284
	.byte	10
	.word	104847
	.byte	9
	.word	92010
	.byte	10
	.word	104857
	.byte	9
	.word	92332
	.byte	10
	.word	104867
	.byte	9
	.word	92654
	.byte	10
	.word	104877
	.byte	9
	.word	92980
	.byte	10
	.word	104887
	.byte	10
	.word	15545
	.byte	26,125,232,1,9,8,13
	.byte	'ParamApiType',0
	.word	13802
	.byte	8,2,35,0,13
	.byte	'ParamSpinlockConfigRefType',0
	.word	6051
	.byte	4,2,35,0,13
	.byte	'ParamIoc08SendConfigRefType',0
	.word	104772
	.byte	4,2,35,0,13
	.byte	'ParamIoc08ReceiveConfigRefType',0
	.word	92005
	.byte	4,2,35,0,13
	.byte	'ParamUint8RefType',0
	.word	104777
	.byte	4,2,35,0,13
	.byte	'ParamConstUint8RefType',0
	.word	104787
	.byte	4,2,35,0,13
	.byte	'ParamUint8Type',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ParamIoc16SendConfigRefType',0
	.word	104797
	.byte	4,2,35,0,13
	.byte	'ParamIoc16ReceiveConfigRefType',0
	.word	92327
	.byte	4,2,35,0,13
	.byte	'ParamUint16RefType',0
	.word	104802
	.byte	4,2,35,0,13
	.byte	'ParamConstUint16RefType',0
	.word	104812
	.byte	4,2,35,0,13
	.byte	'ParamUint16Type',0
	.word	5488
	.byte	2,2,35,0,13
	.byte	'ParamIoc32SendConfigRefType',0
	.word	104822
	.byte	4,2,35,0,13
	.byte	'ParamIoc32ReceiveConfigRefType',0
	.word	92649
	.byte	4,2,35,0,13
	.byte	'ParamUint32RefType',0
	.word	31625
	.byte	4,2,35,0,13
	.byte	'ParamConstUint32RefType',0
	.word	4060
	.byte	4,2,35,0,13
	.byte	'ParamUint32Type',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ParamIocRefSendConfigRefType',0
	.word	104832
	.byte	4,2,35,0,13
	.byte	'ParamIocRefReceiveConfigRefType',0
	.word	92975
	.byte	4,2,35,0,13
	.byte	'ParamVoidRefType',0
	.word	12697
	.byte	4,2,35,0,13
	.byte	'ParamVoidConfigRefType',0
	.word	11874
	.byte	4,2,35,0,13
	.byte	'ParamIocReadConfigRefType',0
	.word	104842
	.byte	4,2,35,0,13
	.byte	'ParamIocWriteConfigRefType',0
	.word	104852
	.byte	4,2,35,0,13
	.byte	'ParamIoc08MultiReceiveConfigRefType',0
	.word	104862
	.byte	4,2,35,0,13
	.byte	'ParamIoc16MultiReceiveConfigRefType',0
	.word	104872
	.byte	4,2,35,0,13
	.byte	'ParamIoc32MultiReceiveConfigRefType',0
	.word	104882
	.byte	4,2,35,0,13
	.byte	'ParamIocRefMultiReceiveConfigRefType',0
	.word	104892
	.byte	4,2,35,0,13
	.byte	'ParamOSServiceIdType',0
	.word	8051
	.byte	1,2,35,0,13
	.byte	'ParamOs_StatusType',0
	.word	417
	.byte	2,2,35,0,13
	.byte	'ParamOs_ErrorParamsRefType',0
	.word	104897
	.byte	4,2,35,0,0,14
	.byte	'Os_TrapParameterType',0,125,136,2,3
	.word	104902
	.byte	26,125,140,2,9,4,13
	.byte	'ReturnOs_StatusType',0
	.word	417
	.byte	2,2,35,0,13
	.byte	'ReturnStd_ReturnType',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ReturnUint8Type',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ReturnUint16Type',0
	.word	5488
	.byte	2,2,35,0,13
	.byte	'ReturnUint32Type',0
	.word	136
	.byte	4,2,35,0,13
	.byte	'ReturnCoreIdType',0
	.word	6821
	.byte	1,2,35,0,13
	.byte	'ReturnAppModeType',0
	.word	400
	.byte	1,2,35,0,13
	.byte	'ReturnISRType',0
	.word	11747
	.byte	1,2,35,0,13
	.byte	'ReturnApplicationType',0
	.word	11554
	.byte	1,2,35,0,13
	.byte	'ReturnObjectAccessType',0
	.word	87681
	.byte	1,2,35,0,13
	.byte	'ReturnAccessType',0
	.word	28769
	.byte	1,2,35,0,13
	.byte	'ReturnOSServiceIdType',0
	.word	8051
	.byte	1,2,35,0,13
	.byte	'ReturnOs_AddressOfConstType',0
	.word	15594
	.byte	4,2,35,0,13
	.byte	'ReturnThreadConfigRefType',0
	.word	29845
	.byte	4,2,35,0,0,14
	.byte	'Os_TrapReturnType',0,125,156,2,3
	.word	105966
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,46,1,3,8,32,13,58,15,59
	.byte	15,57,15,54,15,39,12,0,0,7,4,1,58,15,59,15,57,15,11,15,0,0,8,40,0,3,8,28,13,0,0,9,38,0,73,19,0,0,10,15
	.byte	0,73,19,0,0,11,11,1,0,0,12,19,1,3,8,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,22
	.byte	0,3,8,58,15,59,15,57,15,73,19,0,0,15,19,1,58,15,59,15,57,15,11,15,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47
	.byte	15,0,0,18,53,0,73,19,0,0,19,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,59,0,3,8,0,0,21,23,1,3,8,58,15
	.byte	59,15,57,15,11,15,0,0,22,21,0,54,15,39,12,0,0,23,21,1,54,15,39,12,0,0,24,5,0,73,19,0,0,25,21,1,73,19,54
	.byte	15,39,12,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,46,1,3,8,54,15,39,12,63,12,60,12,0,0,28,46,1,3,8,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,29,5,0,3,8,73,19,0,0,30,46,0,3,8,54,15,39,12,63,12,60,12,0,0,31,46,1,49
	.byte	19,0,0,32,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,33,5,0,49,19,0,0,34,46,1,3,8,58,15,59
	.byte	15,57,15,54,15,39,12,63,12,60,12,0,0,35,29,1,49,19,0,0,36,11,0,49,19,0,0,37,11,1,49,19,0,0,38,46,1,3,8
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,39,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0
	.byte	0,40,21,0,54,15,0,0,41,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L20:
	.word	.L270-.L269
.L269:
	.half	3
	.word	.L272-.L271
.L271:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error.h',0,0,0,0
	.byte	'Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_ContextInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ThreadInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_StackInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_LockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SpinlockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TraceInt.h',0,0,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Spinlock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ApplicationInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IsrInt.h',0,0,0,0
	.byte	'Os_Hal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ErrorInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CommonInt.h',0,0,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_OsInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SchedulerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArrayInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TaskInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_DequeInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_HookInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ResourceInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CounterInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_PriorityQueue_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_JobInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STMInt.h',0,0,0,0
	.byte	'Os_Hal_Kernel_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannelInt.h',0,0,0,0
	.byte	'Os_XSignal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IocInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Ioc_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BarrierInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Barrier_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AlarmInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTableInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunctionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheckInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Bit.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArray.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Deque.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Spinlock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannel.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_EventInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPT.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPTInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRef.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRefInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Common_Types.h',0,0,0,0
	.byte	'Os_Hal_Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Derivative_TC39x_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheck_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Alarm_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTable_Types.h',0,0,0,0
	.byte	'Os_Hal_Timer_Types.h',0,1,0,0
	.byte	'Os_Timer_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TrapInt.h',0,0,0,0,0
.L272:
.L270:
	.sdecl	'.debug_info',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_info'
.L21:
	.word	2302
	.half	3
	.word	.L22
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L24,.L23
	.byte	2
	.word	.L17
	.byte	3
	.byte	'Os_ThreadSuicide',0,1,93,1,1,1,1
	.word	.L14,.L31,.L13
	.byte	4
	.word	.L14,.L31
	.byte	5
	.word	.L32,.L14,.L33
	.byte	6
	.word	.L34,.L14,.L33
	.byte	5
	.word	.L35,.L14,.L36
	.byte	7
	.word	.L37,.L38
	.byte	6
	.word	.L39,.L14,.L36
	.byte	5
	.word	.L40,.L14,.L36
	.byte	6
	.word	.L41,.L14,.L36
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L42,.L43
	.byte	0,0,0,0,0,0,5
	.word	.L44,.L2,.L3
	.byte	6
	.word	.L45,.L2,.L3
	.byte	5
	.word	.L32,.L2,.L46
	.byte	6
	.word	.L34,.L2,.L46
	.byte	5
	.word	.L35,.L2,.L46
	.byte	7
	.word	.L37,.L38
	.byte	6
	.word	.L39,.L2,.L46
	.byte	5
	.word	.L40,.L2,.L46
	.byte	6
	.word	.L41,.L2,.L46
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L42,.L47
	.byte	0,0,0,0,0,0,5
	.word	.L48,.L46,.L49
	.byte	7
	.word	.L50,.L51
	.byte	9
	.word	.L52,.L46,.L49
	.byte	0,5
	.word	.L53,.L49,.L3
	.byte	7
	.word	.L54,.L55
	.byte	6
	.word	.L56,.L49,.L3
	.byte	8
	.byte	'nextTask',0,3,167,3,51
	.word	.L57,.L58
	.byte	5
	.word	.L32,.L59,.L60
	.byte	6
	.word	.L34,.L59,.L60
	.byte	5
	.word	.L35,.L59,.L60
	.byte	7
	.word	.L37,.L38
	.byte	6
	.word	.L39,.L59,.L60
	.byte	5
	.word	.L40,.L59,.L60
	.byte	6
	.word	.L41,.L59,.L60
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L42,.L61
	.byte	0,0,0,0,0,0,5
	.word	.L62,.L60,.L3
	.byte	7
	.word	.L63,.L64
	.byte	7
	.word	.L65,.L66
	.byte	6
	.word	.L67,.L60,.L3
	.byte	5
	.word	.L32,.L60,.L68
	.byte	10
	.word	.L34,.L69
	.byte	5
	.word	.L35,.L60,.L72
	.byte	7
	.word	.L37,.L38
	.byte	6
	.word	.L39,.L60,.L72
	.byte	5
	.word	.L40,.L60,.L72
	.byte	6
	.word	.L41,.L60,.L72
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L42,.L73
	.byte	0,0,0,0,0,0,5
	.word	.L74,.L75,.L8
	.byte	6
	.word	.L76,.L75,.L8
	.byte	6
	.word	.L77,.L75,.L8
	.byte	5
	.word	.L78,.L75,.L79
	.byte	6
	.word	.L80,.L75,.L79
	.byte	5
	.word	.L81,.L75,.L82
	.byte	6
	.word	.L83,.L75,.L82
	.byte	5
	.word	.L84,.L75,.L85
	.byte	9
	.word	.L86,.L75,.L85
	.byte	0,0,0,0,0,0,0,0,5
	.word	.L87,.L8,.L88
	.byte	7
	.word	.L89,.L90
	.byte	6
	.word	.L91,.L8,.L88
	.byte	5
	.word	.L92,.L8,.L88
	.byte	7
	.word	.L93,.L94
	.byte	7
	.word	.L95,.L96
	.byte	6
	.word	.L97,.L8,.L88
	.byte	8
	.byte	'previousState',0,4,144,1,29
	.word	.L42,.L98
	.byte	5
	.word	.L99,.L8,.L100
	.byte	7
	.word	.L101,.L102
	.byte	9
	.word	.L103,.L8,.L100
	.byte	0,5
	.word	.L104,.L105,.L88
	.byte	7
	.word	.L106,.L107
	.byte	6
	.word	.L108,.L105,.L88
	.byte	8
	.byte	'icr',0,5,154,1,29
	.word	.L42,.L109
	.byte	0,0,0,0,0,0,5
	.word	.L110,.L88,.L9
	.byte	7
	.word	.L111,.L112
	.byte	7
	.word	.L113,.L114
	.byte	9
	.word	.L115,.L88,.L9
	.byte	0,5
	.word	.L116,.L9,.L117
	.byte	7
	.word	.L118,.L119
	.byte	7
	.word	.L120,.L121
	.byte	9
	.word	.L122,.L9,.L117
	.byte	0,5
	.word	.L123,.L124,.L70
	.byte	7
	.word	.L125,.L126
	.byte	6
	.word	.L127,.L124,.L70
	.byte	8
	.byte	'PCXIAddr',0,6,149,2,10
	.word	.L42,.L128
	.byte	8
	.byte	'ctxPsw',0,6,150,2,43
	.word	.L129,.L130
	.byte	0,0,11
	.word	.L32,.L70,.L71
	.byte	5
	.word	.L131,.L132,.L133
	.byte	7
	.word	.L134,.L135
	.byte	7
	.word	.L136,.L137
	.byte	7
	.word	.L138,.L139
	.byte	6
	.word	.L140,.L132,.L133
	.byte	5
	.word	.L141,.L142,.L143
	.byte	7
	.word	.L144,.L145
	.byte	7
	.word	.L146,.L147
	.byte	10
	.word	.L148,.L149
	.byte	8
	.byte	'PCXIRaw',0,6,185,4,10
	.word	.L42,.L150
	.byte	8
	.byte	'PCXIAddr',0,6,186,4,10
	.word	.L42,.L151
	.byte	0,0,6
	.word	.L152,.L10,.L11
	.byte	8
	.byte	'previousState',0,6,239,2,31
	.word	.L42,.L153
	.byte	5
	.word	.L99,.L10,.L154
	.byte	7
	.word	.L101,.L102
	.byte	9
	.word	.L103,.L10,.L154
	.byte	0,5
	.word	.L155,.L154,.L156
	.byte	7
	.word	.L157,.L158
	.byte	7
	.word	.L159,.L160
	.byte	6
	.word	.L161,.L154,.L156
	.byte	8
	.byte	'PCXIRaw',0,6,140,4,10
	.word	.L42,.L162
	.byte	8
	.byte	'FirstPCXIAddr',0,6,141,4,10
	.word	.L42,.L163
	.byte	5
	.word	.L104,.L164,.L156
	.byte	7
	.word	.L106,.L107
	.byte	6
	.word	.L108,.L164,.L156
	.byte	8
	.byte	'icr',0,5,154,1,29
	.word	.L42,.L165
	.byte	0,0,0,0,5
	.word	.L166,.L156,.L167
	.byte	7
	.word	.L168,.L169
	.byte	7
	.word	.L170,.L171
	.byte	7
	.word	.L172,.L173
	.byte	6
	.word	.L174,.L156,.L167
	.byte	8
	.byte	'PCXIRaw',0,6,156,5,10
	.word	.L42,.L175
	.byte	8
	.byte	'PCXIAddr',0,6,157,5,10
	.word	.L42,.L176
	.byte	5
	.word	.L177,.L178,.L179
	.byte	7
	.word	.L180,.L181
	.byte	7
	.word	.L182,.L183
	.byte	9
	.word	.L184,.L178,.L179
	.byte	0,5
	.word	.L104,.L185,.L167
	.byte	7
	.word	.L106,.L107
	.byte	6
	.word	.L108,.L185,.L167
	.byte	8
	.byte	'icr',0,5,154,1,29
	.word	.L42,.L186
	.byte	0,0,0,0,5
	.word	.L187,.L167,.L11
	.byte	7
	.word	.L188,.L189
	.byte	7
	.word	.L190,.L191
	.byte	7
	.word	.L192,.L193
	.byte	6
	.word	.L194,.L167,.L11
	.byte	5
	.word	.L141,.L195,.L196
	.byte	7
	.word	.L144,.L145
	.byte	7
	.word	.L146,.L147
	.byte	6
	.word	.L148,.L195,.L196
	.byte	8
	.byte	'PCXIRaw',0,6,185,4,10
	.word	.L42,.L197
	.byte	8
	.byte	'PCXIAddr',0,6,186,4,10
	.word	.L42,.L198
	.byte	0,0,5
	.word	.L104,.L196,.L11
	.byte	7
	.word	.L106,.L107
	.byte	6
	.word	.L108,.L196,.L11
	.byte	8
	.byte	'icr',0,5,154,1,29
	.word	.L42,.L199
	.byte	0,0,0,0,0,5
	.word	.L200,.L11,.L133
	.byte	7
	.word	.L201,.L202
	.byte	9
	.word	.L203,.L11,.L133
	.byte	0,0,0,0,0,0,0,0,0,5
	.word	.L204,.L3,.L4
	.byte	9
	.word	.L205,.L3,.L4
	.byte	0,5
	.word	.L206,.L4,.L7
	.byte	6
	.word	.L207,.L4,.L7
	.byte	5
	.word	.L32,.L4,.L208
	.byte	6
	.word	.L34,.L4,.L208
	.byte	5
	.word	.L35,.L4,.L209
	.byte	7
	.word	.L37,.L38
	.byte	6
	.word	.L39,.L4,.L209
	.byte	5
	.word	.L40,.L4,.L209
	.byte	6
	.word	.L41,.L4,.L209
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L42,.L210
	.byte	0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_abbrev'
.L22:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1
	.byte	49,16,85,6,0,0,11,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_line'
.L23:
	.word	.L274-.L273
.L273:
	.half	3
	.word	.L276-.L275
.L275:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook.h',0,0,0,0,0
.L276:
	.byte	4,2,5,3,7,0,5,2
	.word	.L14
	.byte	3,224,4,1,4,4,9
	.half	.L211-.L14
	.byte	3,212,124,1,4,7,5,16,9
	.half	.L36-.L211
	.byte	3,207,0,1,4,1,5,10,9
	.half	.L33-.L36
	.byte	3,223,126,1,7,9
	.half	.L277-.L33
	.byte	3,4,1,7,9
	.half	.L278-.L277
	.byte	3,4,1,7,9
	.half	.L279-.L278
	.byte	3,1,1,9
	.half	.L280-.L279
	.byte	3,1,1,4,2,5,3,9
	.half	.L2-.L280
	.byte	3,244,3,1,4,4,9
	.half	.L213-.L2
	.byte	3,212,124,1,4,7,5,16,9
	.half	.L46-.L213
	.byte	3,53,1,4,8,5,14,9
	.half	.L281-.L46
	.byte	3,173,2,1,4,3,5,36,9
	.half	.L49-.L281
	.byte	3,172,127,1,5,12,9
	.half	.L214-.L49
	.byte	3,107,1,4,2,5,3,9
	.half	.L59-.L214
	.byte	3,179,1,1,4,4,9
	.half	.L216-.L59
	.byte	3,212,124,1,4,7,5,39,9
	.half	.L72-.L216
	.byte	3,185,4,1,5,44,9
	.half	.L68-.L72
	.byte	1,4,9,5,33,9
	.half	.L75-.L68
	.byte	3,182,124,1,4,8,5,10,9
	.half	.L85-.L75
	.byte	3,87,1,5,32,9
	.half	.L282-.L85
	.byte	1,5,14,9
	.half	.L82-.L282
	.byte	3,164,127,1,5,68,9
	.half	.L283-.L82
	.byte	3,250,4,1,4,10,5,40,9
	.half	.L79-.L283
	.byte	3,251,122,1,5,8,9
	.half	.L284-.L79
	.byte	3,2,1,5,5,9
	.half	.L285-.L284
	.byte	1,5,17,7,9
	.half	.L286-.L285
	.byte	3,21,1,5,29,9
	.half	.L287-.L286
	.byte	3,2,1,4,5,5,73,9
	.half	.L8-.L287
	.byte	3,183,4,1,5,40,9
	.half	.L288-.L8
	.byte	1,5,71,9
	.half	.L217-.L288
	.byte	1,4,4,5,3,9
	.half	.L100-.L217
	.byte	3,178,123,1,9
	.half	.L289-.L100
	.byte	3,3,1,9
	.half	.L290-.L289
	.byte	3,1,1,4,3,5,32,9
	.half	.L291-.L290
	.byte	3,149,2,1,4,4,5,3,9
	.half	.L219-.L291
	.byte	3,238,125,1,4,5,9
	.half	.L105-.L219
	.byte	1,5,10,9
	.half	.L292-.L105
	.byte	3,1,1,5,41,9
	.half	.L220-.L292
	.byte	1,5,3,9
	.half	.L221-.L220
	.byte	3,2,1,9
	.half	.L293-.L221
	.byte	3,1,1,4,7,5,44,9
	.half	.L88-.L293
	.byte	3,175,8,1,5,60,9
	.half	.L294-.L88
	.byte	1,5,26,7,9
	.half	.L295-.L294
	.byte	3,2,1,5,43,9
	.half	.L9-.L295
	.byte	3,191,124,1,4,8,5,14,9
	.half	.L296-.L9
	.byte	3,142,123,1,4,7,5,30,9
	.half	.L297-.L296
	.byte	3,242,4,1,4,8,5,42,9
	.half	.L298-.L297
	.byte	3,117,1,4,7,5,36,9
	.half	.L117-.L298
	.byte	3,14,1,4,6,5,14,9
	.half	.L124-.L117
	.byte	3,132,124,1,5,63,9
	.half	.L225-.L124
	.byte	3,1,1,5,10,9
	.half	.L224-.L225
	.byte	1,5,15,9
	.half	.L227-.L224
	.byte	3,3,1,5,23,9
	.half	.L299-.L227
	.byte	1,5,14,9
	.half	.L300-.L299
	.byte	3,1,1,5,45,9
	.half	.L226-.L300
	.byte	1,5,58,9
	.half	.L301-.L226
	.byte	3,127,1,5,11,1,4,7,5,39,9
	.half	.L70-.L301
	.byte	3,251,3,1,5,63,9
	.half	.L228-.L70
	.byte	1,5,78,9
	.half	.L71-.L228
	.byte	1,4,6,5,6,9
	.half	.L132-.L71
	.byte	3,206,124,1,5,48,9
	.half	.L302-.L132
	.byte	1,5,3,9
	.half	.L303-.L302
	.byte	1,5,5,7,9
	.half	.L304-.L303
	.byte	3,3,1,5,13,9
	.half	.L142-.L304
	.byte	3,213,1,1,5,14,9
	.half	.L229-.L142
	.byte	3,1,1,5,3,9
	.half	.L215-.L229
	.byte	3,17,1,9
	.half	.L233-.L215
	.byte	3,1,1,5,34,9
	.half	.L305-.L233
	.byte	3,10,1,5,32,9
	.half	.L306-.L305
	.byte	1,5,26,9
	.half	.L307-.L306
	.byte	3,1,1,5,24,9
	.half	.L308-.L307
	.byte	1,5,30,9
	.half	.L309-.L308
	.byte	3,1,1,5,15,9
	.half	.L310-.L309
	.byte	1,5,21,9
	.half	.L143-.L310
	.byte	3,140,126,1,4,5,5,40,9
	.half	.L10-.L143
	.byte	3,252,2,1,5,71,9
	.half	.L250-.L10
	.byte	1,4,6,5,3,9
	.half	.L154-.L250
	.byte	3,172,126,1,9
	.half	.L311-.L154
	.byte	3,3,1,9
	.half	.L312-.L311
	.byte	3,1,1,5,13,9
	.half	.L313-.L312
	.byte	3,3,1,5,19,9
	.half	.L234-.L313
	.byte	3,1,1,5,3,9
	.half	.L314-.L234
	.byte	3,1,1,5,4,9
	.half	.L315-.L314
	.byte	3,1,1,5,29,9
	.half	.L316-.L315
	.byte	1,5,27,9
	.half	.L317-.L316
	.byte	1,5,3,9
	.half	.L318-.L317
	.byte	3,1,1,9
	.half	.L319-.L318
	.byte	3,1,1,4,5,9
	.half	.L164-.L319
	.byte	3,129,125,1,5,10,9
	.half	.L320-.L164
	.byte	3,1,1,5,41,9
	.half	.L321-.L320
	.byte	1,5,3,9
	.half	.L240-.L321
	.byte	3,2,1,9
	.half	.L322-.L240
	.byte	3,1,1,4,6,9
	.half	.L156-.L322
	.byte	3,255,3,1,9
	.half	.L323-.L156
	.byte	3,4,1,9
	.half	.L324-.L323
	.byte	3,1,1,9
	.half	.L325-.L324
	.byte	3,1,1,9
	.half	.L326-.L325
	.byte	3,1,1,5,13,9
	.half	.L327-.L326
	.byte	3,3,1,5,14,9
	.half	.L235-.L327
	.byte	3,1,1,5,23,9
	.half	.L328-.L235
	.byte	3,3,1,5,4,9
	.half	.L329-.L328
	.byte	1,5,63,9
	.half	.L239-.L329
	.byte	1,5,48,9
	.half	.L330-.L239
	.byte	1,4,9,5,64,9
	.half	.L178-.L330
	.byte	3,234,124,1,5,48,9
	.half	.L331-.L178
	.byte	1,4,6,5,23,9
	.half	.L179-.L331
	.byte	3,156,3,1,5,4,9
	.half	.L332-.L179
	.byte	1,5,62,9
	.half	.L333-.L332
	.byte	1,5,47,9
	.half	.L334-.L333
	.byte	1,5,23,9
	.half	.L335-.L334
	.byte	3,3,1,5,4,9
	.half	.L336-.L335
	.byte	1,5,55,9
	.half	.L337-.L336
	.byte	1,5,53,9
	.half	.L338-.L337
	.byte	1,5,11,9
	.half	.L339-.L338
	.byte	3,3,1,5,49,9
	.half	.L242-.L339
	.byte	3,1,1,5,34,9
	.half	.L340-.L242
	.byte	1,5,11,9
	.half	.L245-.L340
	.byte	1,5,3,9
	.half	.L341-.L245
	.byte	3,1,1,9
	.half	.L342-.L341
	.byte	3,1,1,5,23,9
	.half	.L343-.L342
	.byte	3,3,1,5,21,9
	.half	.L344-.L343
	.byte	1,4,5,5,3,9
	.half	.L185-.L344
	.byte	3,221,123,1,5,10,9
	.half	.L345-.L185
	.byte	3,1,1,5,41,9
	.half	.L346-.L345
	.byte	1,5,3,9
	.half	.L246-.L346
	.byte	3,2,1,9
	.half	.L347-.L246
	.byte	3,1,1,4,6,9
	.half	.L167-.L347
	.byte	3,211,3,1,9
	.half	.L348-.L167
	.byte	3,3,1,9
	.half	.L349-.L348
	.byte	3,1,1,5,13,9
	.half	.L195-.L349
	.byte	3,69,1,5,14,9
	.half	.L248-.L195
	.byte	3,1,1,5,3,9
	.half	.L244-.L248
	.byte	3,17,1,9
	.half	.L350-.L244
	.byte	3,1,1,5,34,9
	.half	.L351-.L350
	.byte	3,10,1,5,32,9
	.half	.L352-.L351
	.byte	1,5,26,9
	.half	.L353-.L352
	.byte	3,1,1,5,24,9
	.half	.L354-.L353
	.byte	1,5,30,9
	.half	.L355-.L354
	.byte	3,1,1,5,15,9
	.half	.L356-.L355
	.byte	1,4,5,5,3,9
	.half	.L196-.L356
	.byte	3,193,124,1,5,10,9
	.half	.L357-.L196
	.byte	3,1,1,5,41,9
	.half	.L358-.L357
	.byte	1,5,3,9
	.half	.L251-.L358
	.byte	3,2,1,9
	.half	.L359-.L251
	.byte	3,1,1,4,6,9
	.half	.L11-.L359
	.byte	3,217,4,1,9
	.half	.L360-.L11
	.byte	3,10,1,9
	.half	.L361-.L360
	.byte	3,3,1,9
	.half	.L362-.L361
	.byte	3,3,1,9
	.half	.L363-.L362
	.byte	3,1,1,9
	.half	.L364-.L363
	.byte	3,3,1,4,7,5,20,9
	.half	.L133-.L364
	.byte	3,12,1,4,11,5,17,9
	.half	.L3-.L133
	.byte	3,166,123,1,4,2,5,3,9
	.half	.L4-.L3
	.byte	3,161,3,1,4,4,9
	.half	.L253-.L4
	.byte	3,212,124,1,4,7,5,35,9
	.half	.L209-.L253
	.byte	3,178,1,1,5,58,9
	.half	.L208-.L209
	.byte	1,5,56,9
	.half	.L365-.L208
	.byte	1,4,12,5,3,9
	.half	.L366-.L365
	.byte	3,211,126,1,5,16,7,9
	.half	.L367-.L366
	.byte	3,7,1,4,1,5,20,9
	.half	.L7-.L367
	.byte	3,188,127,1,5,1,7,9
	.half	.L25-.L7
	.byte	3,1,0,1,1
.L274:
	.sdecl	'.debug_ranges',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_ranges'
.L24:
	.word	-1,.L14,0,.L25-.L14,0,0
.L69:
	.word	-1,.L14,.L60-.L14,.L68-.L14,.L70-.L14,.L71-.L14,0,0
.L149:
	.word	-1,.L14,.L142-.L14,.L143-.L14,-1,.L16,0,.L30-.L16,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L26:
	.word	170
	.half	3
	.word	.L27
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L29,.L28
	.byte	2
	.word	.L17
	.byte	3
	.byte	'.cocofun_1',0,1,93,1,1
	.word	.L16,.L30,.L15
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L27:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L28:
	.word	.L369-.L368
.L368:
	.half	3
	.word	.L371-.L370
.L370:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0,0
.L371:
	.byte	4,2,5,14,7,0,5,2
	.word	.L16
	.byte	3,189,4,1,5,23,9
	.half	.L372-.L16
	.byte	3,3,1,5,4,9
	.half	.L373-.L372
	.byte	1,5,63,9
	.half	.L374-.L373
	.byte	1,5,79,9
	.half	.L375-.L374
	.byte	1,5,48,1,4,3,5,64,9
	.half	.L376-.L375
	.byte	3,215,125,1,5,48,9
	.half	.L377-.L376
	.byte	1,4,2,5,23,9
	.half	.L378-.L377
	.byte	3,175,2,1,5,4,9
	.half	.L379-.L378
	.byte	1,5,62,9
	.half	.L380-.L379
	.byte	1,5,47,9
	.half	.L381-.L380
	.byte	1,5,23,9
	.half	.L382-.L381
	.byte	3,3,1,5,4,9
	.half	.L383-.L382
	.byte	1,5,68,9
	.half	.L384-.L383
	.byte	1,5,53,9
	.half	.L385-.L384
	.byte	1,5,11,9
	.half	.L386-.L385
	.byte	3,3,1,5,49,9
	.half	.L231-.L386
	.byte	3,1,1,5,34,9
	.half	.L387-.L231
	.byte	1,5,11,9
	.half	.L232-.L387
	.byte	1,9
	.half	.L30-.L232
	.byte	0,1,1,4,2,5,14,0,5,2
	.word	.L16
	.byte	3,189,4,1,5,23,9
	.half	.L372-.L16
	.byte	3,3,1,5,4,9
	.half	.L373-.L372
	.byte	1,5,63,9
	.half	.L374-.L373
	.byte	1,5,79,9
	.half	.L375-.L374
	.byte	1,5,48,1,4,3,5,64,9
	.half	.L376-.L375
	.byte	3,215,125,1,5,48,9
	.half	.L377-.L376
	.byte	1,4,2,5,23,9
	.half	.L378-.L377
	.byte	3,175,2,1,5,4,9
	.half	.L379-.L378
	.byte	1,5,62,9
	.half	.L380-.L379
	.byte	1,5,47,9
	.half	.L381-.L380
	.byte	1,5,23,9
	.half	.L382-.L381
	.byte	3,3,1,5,4,9
	.half	.L383-.L382
	.byte	1,5,68,9
	.half	.L384-.L383
	.byte	1,5,53,9
	.half	.L385-.L384
	.byte	1,5,11,9
	.half	.L386-.L385
	.byte	3,3,1,5,49,9
	.half	.L231-.L386
	.byte	3,1,1,5,34,9
	.half	.L387-.L231
	.byte	1,5,11,9
	.half	.L232-.L387
	.byte	1,9
	.half	.L30-.L232
	.byte	0,1,1
.L369:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L29:
	.word	-1,.L16,0,.L30-.L16,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L15:
	.word	-1,.L16,0,.L30-.L16
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_loc'
.L66:
	.word	0,0
.L114:
	.word	0,0
.L126:
	.word	0,0
.L158:
	.word	0,0
.L147:
	.word	0,0
.L191:
	.word	0,0
.L171:
	.word	0,0
.L202:
	.word	0,0
.L121:
	.word	0,0
.L94:
	.word	0,0
.L38:
	.word	0,0
.L137:
	.word	0,0
.L183:
	.word	0,0
.L135:
	.word	0,0
.L145:
	.word	0,0
.L189:
	.word	0,0
.L169:
	.word	0,0
.L163:
	.word	-1,.L14,.L236-.L14,.L237-.L14
	.half	1
	.byte	82
	.word	.L238-.L14,.L239-.L14
	.half	1
	.byte	98
	.word	0,0
.L139:
	.word	0,0
.L64:
	.word	0,0
.L13:
	.word	-1,.L14,0,.L31-.L14
	.half	2
	.byte	138,0
	.word	0,0
.L128:
	.word	-1,.L14,.L223-.L14,.L224-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L151:
	.word	-1,.L14,.L230-.L14,.L231-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L198:
	.word	-1,.L14,.L230-.L14,.L231-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L176:
	.word	-1,.L14,.L243-.L14,.L244-.L14
	.half	1
	.byte	82
	.word	0,0
.L162:
	.word	-1,.L14,.L234-.L14,.L235-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L150:
	.word	-1,.L14,.L229-.L14,.L215-.L14
	.half	1
	.byte	82
	.word	.L16-.L14,.L30-.L14
	.half	1
	.byte	82
	.word	.L232-.L14,.L30-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L233-.L14,.L10-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L197:
	.word	-1,.L14,.L248-.L14,.L244-.L14
	.half	1
	.byte	82
	.word	.L16-.L14,.L30-.L14
	.half	1
	.byte	82
	.word	.L232-.L14,.L30-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L244-.L14,.L11-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L175:
	.word	-1,.L14,.L235-.L14,.L242-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L245-.L14,.L244-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L16-.L14,.L249-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L181:
	.word	0,0
.L160:
	.word	0,0
.L193:
	.word	0,0
.L173:
	.word	0,0
.L43:
	.word	-1,.L14,.L211-.L14,.L212-.L14
	.half	1
	.byte	95
	.word	.L2-.L14,.L213-.L14
	.half	1
	.byte	95
	.word	0,0
.L47:
	.word	-1,.L14,.L213-.L14,.L60-.L14
	.half	1
	.byte	95
	.word	0,0
.L61:
	.word	-1,.L14,.L60-.L14,.L216-.L14
	.half	1
	.byte	95
	.word	0,0
.L73:
	.word	-1,.L14,.L216-.L14,.L85-.L14
	.half	1
	.byte	95
	.word	0,0
.L210:
	.word	-1,.L14,.L253-.L14,.L208-.L14
	.half	1
	.byte	95
	.word	0,0
.L55:
	.word	0,0
.L119:
	.word	0,0
.L107:
	.word	0,0
.L102:
	.word	0,0
.L51:
	.word	0,0
.L96:
	.word	0,0
.L90:
	.word	0,0
.L112:
	.word	0,0
.L130:
	.word	-1,.L14,.L225-.L14,.L226-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L227-.L14,.L228-.L14
	.half	1
	.byte	111
	.word	0,0
.L109:
	.word	-1,.L14,.L221-.L14,.L222-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L165:
	.word	-1,.L14,.L240-.L14,.L241-.L14
	.half	1
	.byte	95
	.word	0,0
.L186:
	.word	-1,.L14,.L246-.L14,.L247-.L14
	.half	1
	.byte	95
	.word	0,0
.L199:
	.word	-1,.L14,.L251-.L14,.L252-.L14
	.half	1
	.byte	95
	.word	0,0
.L58:
	.word	-1,.L14,.L214-.L14,.L68-.L14
	.half	1
	.byte	98
	.word	.L59-.L14,.L215-.L14
	.half	1
	.byte	108
	.word	.L219-.L14,.L220-.L14
	.half	5
	.byte	144,32,157,32,0
	.word	.L16-.L14,.L30-.L14
	.half	1
	.byte	108
	.word	.L233-.L14,.L3-.L14
	.half	1
	.byte	108
	.word	0,0
.L98:
	.word	-1,.L14,.L217-.L14,.L218-.L14
	.half	1
	.byte	95
	.word	0,0
.L153:
	.word	-1,.L14,.L16-.L14,.L30-.L14
	.half	1
	.byte	88
	.word	.L250-.L14,.L11-.L14
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L388:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_ThreadSuicide')
	.sect	'.debug_frame'
	.word	12
	.word	.L388,.L14,.L31-.L14
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L389:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L389,.L16,.L30-.L16
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\Os\Implementation\Os_Thread.c	   126  }
; ..\component\Os\Implementation\Os_Thread.c	   127  
; ..\component\Os\Implementation\Os_Thread.c	   128  
; ..\component\Os\Implementation\Os_Thread.c	   129  #define OS_STOP_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.c	   130  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.c	   131  
; ..\component\Os\Implementation\Os_Thread.c	   132  
; ..\component\Os\Implementation\Os_Thread.c	   133  /* module specific MISRA deviations:
; ..\component\Os\Implementation\Os_Thread.c	   134   */
; ..\component\Os\Implementation\Os_Thread.c	   135  
; ..\component\Os\Implementation\Os_Thread.c	   136  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\Os\Implementation\Os_Thread.c	   137  
; ..\component\Os\Implementation\Os_Thread.c	   138  \ID SBSW_OS_TRD_THREADGETCORE_001
; ..\component\Os\Implementation\Os_Thread.c	   139   \DESCRIPTION    Os_ThreadGetInitialType is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Thread.c	   140   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Thread.c	   141  
; ..\component\Os\Implementation\Os_Thread.c	   142  \ID SBSW_OS_TRD_THREADINITFPUCONTEXT_001
; ..\component\Os\Implementation\Os_Thread.c	   143   \DESCRIPTION    Os_ThreadInitFpuContext is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Thread.c	   144   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Thread.c	   145  
; ..\component\Os\Implementation\Os_Thread.c	   146  \ID SBSW_OS_TRD_THREADGETCORE_002
; ..\component\Os\Implementation\Os_Thread.c	   147   \DESCRIPTION    Os_ThreadGetCore is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Thread.c	   148   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Thread.c	   149  
; ..\component\Os\Implementation\Os_Thread.c	   150  \ID SBSW_OS_TRD_THREADGETDYN_001
; ..\component\Os\Implementation\Os_Thread.c	   151   \DESCRIPTION    Write access to the return value of Os_ThreadGetDyn. The Thread pointer is passed as argument to the
; ..\component\Os\Implementation\Os_Thread.c	   152                   caller function. Precondition ensures that the argument pointer is valid. The compliance of the
; ..\component\Os\Implementation\Os_Thread.c	   153                   precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   154   \COUNTERMEASURE \N [CM_OS_THREADGETDYN_N]
; ..\component\Os\Implementation\Os_Thread.c	   155  
; ..\component\Os\Implementation\Os_Thread.c	   156  \ID SBSW_OS_TRD_RESOURCEFORCIBLYRELEASELOCKS_001
; ..\component\Os\Implementation\Os_Thread.c	   157   \DESCRIPTION    Os_ResourceForciblyReleaseLocks is called with the return value of Os_ThreadGetLocks.
; ..\component\Os\Implementation\Os_Thread.c	   158   \COUNTERMEASURE \N [CM_OS_THREADGETLOCKS_N]
; ..\component\Os\Implementation\Os_Thread.c	   159  
; ..\component\Os\Implementation\Os_Thread.c	   160  \ID SBSW_OS_TRD_LOCKLISTINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   161   \DESCRIPTION    Os_LockListInit is called with the the Locks argument derived from the Dyn pointer of a Thread.
; ..\component\Os\Implementation\Os_Thread.c	   162                   The Thread is passed as argument to the caller.
; ..\component\Os\Implementation\Os_Thread.c	   163   \COUNTERMEASURE \N [CM_OS_THREADGETLOCKS_N]
; ..\component\Os\Implementation\Os_Thread.c	   164  
; ..\component\Os\Implementation\Os_Thread.c	   165  \ID SBSW_OS_TRD_SPINLOCKLISTINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   166   \DESCRIPTION    Os_SpinlockListInit is called with the return value of Os_ThreadGetSpinlocks.
; ..\component\Os\Implementation\Os_Thread.c	   167   \COUNTERMEASURE \N [CM_OS_THREADGETSPINLOCKS_N]
; ..\component\Os\Implementation\Os_Thread.c	   168  \ID SBSW_OS_TRD_LOCKLISTISEMPTY_001
; ..\component\Os\Implementation\Os_Thread.c	   169   \DESCRIPTION    Os_LockListIsEmpty is called with an iterator pointer which was initialized with a value passed
; ..\component\Os\Implementation\Os_Thread.c	   170                   the Locks value of a Thread. Thread is passed as argument to the caller. Precondition ensures
; ..\component\Os\Implementation\Os_Thread.c	   171                   that the argument pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   172   \COUNTERMEASURE \R [CM_LOCKLISTISEMPTY_R]
; ..\component\Os\Implementation\Os_Thread.c	   173  
; ..\component\Os\Implementation\Os_Thread.c	   174  \ID SBSW_OS_TRD_SERVICECALLSINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   175   \DESCRIPTION    Os_ServiceCallsInit is called with an the ServiceCalls member derived from a thread. Thread
; ..\component\Os\Implementation\Os_Thread.c	   176                   is passed as argument to the caller. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   177                   The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   178   \COUNTERMEASURE \T [CM_OS_THREADGETSERVICECALLS_01_02_T]
; ..\component\Os\Implementation\Os_Thread.c	   179                   \T [CM_OS_THREADGETSERVICECALLS_02_02_T]
; ..\component\Os\Implementation\Os_Thread.c	   180  
; ..\component\Os\Implementation\Os_Thread.c	   181  \ID SBSW_OS_TRD_LOCKLISTISTOPRES_001
; ..\component\Os\Implementation\Os_Thread.c	   182   \DESCRIPTION    Os_LockListIsTopRes is called with an iterator.
; ..\component\Os\Implementation\Os_Thread.c	   183   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   184  
; ..\component\Os\Implementation\Os_Thread.c	   185  \ID SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001
; ..\component\Os\Implementation\Os_Thread.c	   186   \DESCRIPTION    Os_LockListIsTopSpinlock is called with an iterator.
; ..\component\Os\Implementation\Os_Thread.c	   187   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   188  
; ..\component\Os\Implementation\Os_Thread.c	   189  \ID SBSW_OS_TRD_LOCKLISTNEXT_001
; ..\component\Os\Implementation\Os_Thread.c	   190   \DESCRIPTION    Os_LockListNext is called with an iterator.
; ..\component\Os\Implementation\Os_Thread.c	   191   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   192  
; ..\component\Os\Implementation\Os_Thread.c	   193  \ID SBSW_OS_TRD_INTERRUPTCLEANUP_001
; ..\component\Os\Implementation\Os_Thread.c	   194   \DESCRIPTION    Os_InterruptCleanup is called with the IntApiState of a Thread. Thread is passed as argument to the
; ..\component\Os\Implementation\Os_Thread.c	   195                   caller. Precondition ensures that the argument pointer is valid. The compliance of the precondition
; ..\component\Os\Implementation\Os_Thread.c	   196                   is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   197   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Thread.c	   198  
; ..\component\Os\Implementation\Os_Thread.c	   199  \ID SBSW_OS_TRD_INTERRUPTCHECKENABLED_001
; ..\component\Os\Implementation\Os_Thread.c	   200   \DESCRIPTION    Os_InterruptCheckEnabled is called with the IntApiState of a Thread. Thread is passed as argument to
; ..\component\Os\Implementation\Os_Thread.c	   201                   the caller. Precondition ensures that the argument pointer is valid. The compliance of the precondition
; ..\component\Os\Implementation\Os_Thread.c	   202                   is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   203   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Thread.c	   204  
; ..\component\Os\Implementation\Os_Thread.c	   205  \ID SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001
; ..\component\Os\Implementation\Os_Thread.c	   206   \DESCRIPTION    Os_CoreAsrGetTimingProtection is called with the return value of Os_ThreadGetCore.
; ..\component\Os\Implementation\Os_Thread.c	   207   \COUNTERMEASURE \M [CM_OS_THREADGETCORE_M]
; ..\component\Os\Implementation\Os_Thread.c	   208  
; ..\component\Os\Implementation\Os_Thread.c	   209  \ID SBSW_OS_TRD_TPTHREADINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   210   \DESCRIPTION    Os_TpThreadInit is called with the return values of Os_CoreAsrGetTimingProtection and
; ..\component\Os\Implementation\Os_Thread.c	   211                   Os_ThreadGetTpConfig.
; ..\component\Os\Implementation\Os_Thread.c	   212   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Thread.c	   213                   \M [CM_OS_THREADGETTPCONFIG1_M]
; ..\component\Os\Implementation\Os_Thread.c	   214  
; ..\component\Os\Implementation\Os_Thread.c	   215  \ID SBSW_OS_TRD_TPRESETANDRESUME_001
; ..\component\Os\Implementation\Os_Thread.c	   216   \DESCRIPTION    Os_TpResetAndResume is called with the return values of Os_CoreAsrGetTimingProtection and
; ..\component\Os\Implementation\Os_Thread.c	   217                   Os_ThreadGetTpConfig and an argument passed to the caller. Precondition ensures that the argument
; ..\component\Os\Implementation\Os_Thread.c	   218                   pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   219   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Thread.c	   220                   \M [CM_OS_THREADGETTPCONFIG1_M]
; ..\component\Os\Implementation\Os_Thread.c	   221  
; ..\component\Os\Implementation\Os_Thread.c	   222  \ID SBSW_OS_TRD_TPSWITCH_001
; ..\component\Os\Implementation\Os_Thread.c	   223   \DESCRIPTION    Os_TpSwitch is called with the return values of Os_CoreAsrGetTimingProtection and
; ..\component\Os\Implementation\Os_Thread.c	   224                   Os_ThreadGetTpConfig and an argument passed to the caller. Precondition ensures that the argument
; ..\component\Os\Implementation\Os_Thread.c	   225                   pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   226   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Thread.c	   227                   \M [CM_OS_THREADGETTPCONFIG1_M]
; ..\component\Os\Implementation\Os_Thread.c	   228  
; ..\component\Os\Implementation\Os_Thread.c	   229  \ID SBSW_OS_TRD_THREADISTASK_001
; ..\component\Os\Implementation\Os_Thread.c	   230   \DESCRIPTION    Os_ThreadIsTask is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Thread.c	   231   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Thread.c	   232  
; ..\component\Os\Implementation\Os_Thread.c	   233  \ID SBSW_OS_TRD_THREADGETTPCONFIG_001
; ..\component\Os\Implementation\Os_Thread.c	   234   \DESCRIPTION    Os_ThreadGetTpConfig is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Thread.c	   235   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Thread.c	   236  
; ..\component\Os\Implementation\Os_Thread.c	   237  \ID SBSW_OS_TRD_SERVICECALLFORCERELEASE_001
; ..\component\Os\Implementation\Os_Thread.c	   238   \DESCRIPTION    Os_ServiceCallForceRelease is called with ServiceCalls which is derived from the Dyn pointer of a
; ..\component\Os\Implementation\Os_Thread.c	   239                   thread. The thread is the return value of Os_CoreGetThread. Precondition ensures that the pointer
; ..\component\Os\Implementation\Os_Thread.c	   240                   returned by Os_CoreGetThread is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   241   \COUNTERMEASURE \T [CM_OS_THREADGETSERVICECALLS_01_02_T]
; ..\component\Os\Implementation\Os_Thread.c	   242                   \T [CM_OS_THREADGETSERVICECALLS_02_02_T]
; ..\component\Os\Implementation\Os_Thread.c	   243  
; ..\component\Os\Implementation\Os_Thread.c	   244  \ID SBSW_OS_TRD_MPTHREADINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   245   \DESCRIPTION    Os_MpThreadInit is called with the static and dynamic MpAccessRights data of a thread which
; ..\component\Os\Implementation\Os_Thread.c	   246                   is passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   247                   The compliance of the precondition is check during review. The dynamic MpAccessRights are derived
; ..\component\Os\Implementation\Os_Thread.c	   248                   from the Dyn data of the Thread. As each thread object of an abstract class is always part of a
; ..\component\Os\Implementation\Os_Thread.c	   249                   concrete class, the concrete class guarantees, that the Dyn pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   250   \COUNTERMEASURE \T [CM_OS_THREADGETMPACCESSRIGHTS_T]
; ..\component\Os\Implementation\Os_Thread.c	   251                   \M [CM_OS_THREADGETMPACCESSRIGHTSINITIAL_M]
; ..\component\Os\Implementation\Os_Thread.c	   252  
; ..\component\Os\Implementation\Os_Thread.c	   253  \ID SBSW_OS_TRD_MPSWITCH_001
; ..\component\Os\Implementation\Os_Thread.c	   254   \DESCRIPTION    Os_MpSwitch is called with the dynamic MpAccessRights data of two threads. The first thread is
; ..\component\Os\Implementation\Os_Thread.c	   255                   the return value of Os_CoreGetThread. Precondition ensures that the pointer
; ..\component\Os\Implementation\Os_Thread.c	   256                   returned by Os_CoreGetThread is valid. The second thread is passed as argument to the caller function.
; ..\component\Os\Implementation\Os_Thread.c	   257                   Precondition ensures that the argument pointer is valid. The compliance of the preconditions is check
; ..\component\Os\Implementation\Os_Thread.c	   258                   during review.
; ..\component\Os\Implementation\Os_Thread.c	   259   \COUNTERMEASURE \T [CM_OS_THREADGETMPACCESSRIGHTS_T]
; ..\component\Os\Implementation\Os_Thread.c	   260  
; ..\component\Os\Implementation\Os_Thread.c	   261  \ID SBSW_OS_TRD_MPSWITCH_002
; ..\component\Os\Implementation\Os_Thread.c	   262   \DESCRIPTION    Os_MpSwitch is called with the dynamic MpAccessRights data of two threads. Both are passed as
; ..\component\Os\Implementation\Os_Thread.c	   263                   arguments to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   264                   The compliance of the preconditions is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   265   \COUNTERMEASURE \T [CM_OS_THREADGETMPACCESSRIGHTS_T]
; ..\component\Os\Implementation\Os_Thread.c	   266  
; ..\component\Os\Implementation\Os_Thread.c	   267  \ID SBSW_OS_TRD_MPSWITCHTO_001
; ..\component\Os\Implementation\Os_Thread.c	   268   \DESCRIPTION    Os_MpSwitchTo is called with the dynamic MpAccessRights data of a thread. The thread is passed as
; ..\component\Os\Implementation\Os_Thread.c	   269                   argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   270                   The compliance of the preconditions is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   271   \COUNTERMEASURE \T [CM_OS_THREADGETMPACCESSRIGHTS_T]
; ..\component\Os\Implementation\Os_Thread.c	   272  
; ..\component\Os\Implementation\Os_Thread.c	   273  \ID SBSW_OS_TRD_HAL_CONTEXTINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   274   \DESCRIPTION    Os_Hal_ContextInit is called with ContextConfig and Context of a thread which
; ..\component\Os\Implementation\Os_Thread.c	   275                   is passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   276                   The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   277   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   278                   \M [CM_OS_THREADGETCONTEXTCONFIG_M]
; ..\component\Os\Implementation\Os_Thread.c	   279  
; ..\component\Os\Implementation\Os_Thread.c	   280  \ID SBSW_OS_TRD_HAL_CONTEXTINIT_002
; ..\component\Os\Implementation\Os_Thread.c	   281   \DESCRIPTION    Os_Hal_ContextInit is called with a pointer to a context config object passed as argument to the caller
; ..\component\Os\Implementation\Os_Thread.c	   282                   and a pointer to a local variable. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   283   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   284  
; ..\component\Os\Implementation\Os_Thread.c	   285  \ID SBSW_OS_TRD_HAL_CONTEXTRETURN_001
; ..\component\Os\Implementation\Os_Thread.c	   286   \DESCRIPTION    Os_Hal_ContextReturn is called with the Contexts of two threads which
; ..\component\Os\Implementation\Os_Thread.c	   287                   is passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   288                   The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   289   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   290  
; ..\component\Os\Implementation\Os_Thread.c	   291  \ID SBSW_OS_TRD_HAL_CONTEXTRESET_001
; ..\component\Os\Implementation\Os_Thread.c	   292   \DESCRIPTION    Os_Hal_ContextReset is called with ContextConfig and Context of a thread which
; ..\component\Os\Implementation\Os_Thread.c	   293                   is passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   294                   The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   295   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   296                   \M [CM_OS_THREADGETCONTEXTCONFIG_M]
; ..\component\Os\Implementation\Os_Thread.c	   297  
; ..\component\Os\Implementation\Os_Thread.c	   298  \ID SBSW_OS_TRD_HAL_CONTEXTABORT_001
; ..\component\Os\Implementation\Os_Thread.c	   299   \DESCRIPTION    Os_Hal_ContextAbort is called with ContextConfig and Context of a thread which
; ..\component\Os\Implementation\Os_Thread.c	   300                   is passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   301                   The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   302   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   303                   \M [CM_OS_THREADGETCONTEXTCONFIG_M]
; ..\component\Os\Implementation\Os_Thread.c	   304  
; ..\component\Os\Implementation\Os_Thread.c	   305  \ID SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001
; ..\component\Os\Implementation\Os_Thread.c	   306   \DESCRIPTION    Os_Hal_ContextSetInterruptState is called with the Context of a thread, which is passed as argument to
; ..\component\Os\Implementation\Os_Thread.c	   307                   the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   308                   The compliance of the precondition is assured during review.
; ..\component\Os\Implementation\Os_Thread.c	   309   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   310                   \M [CM_OS_THREADGETCONTEXTCONFIG_M]
; ..\component\Os\Implementation\Os_Thread.c	   311  
; ..\component\Os\Implementation\Os_Thread.c	   312  \ID SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001
; ..\component\Os\Implementation\Os_Thread.c	   313   \DESCRIPTION    Os_Hal_ContextFirstResume is called with the Context of a thread. The thread is passed as argument
; ..\component\Os\Implementation\Os_Thread.c	   314                   to the caller function. Precondition ensures that the argument pointer is valid. The compliance of
; ..\component\Os\Implementation\Os_Thread.c	   315                   the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   316   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   317  
; ..\component\Os\Implementation\Os_Thread.c	   318  \ID SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001
; ..\component\Os\Implementation\Os_Thread.c	   319   \DESCRIPTION    Os_Hal_ContextResetAndResume is called with ContextConfig and Context of two threads. The first
; ..\component\Os\Implementation\Os_Thread.c	   320                   thread is the return value of Os_CoreGetThread. Precondition ensures that the pointer
; ..\component\Os\Implementation\Os_Thread.c	   321                   returned by Os_CoreGetThread is valid. The second thread is passed as argument to the caller function.
; ..\component\Os\Implementation\Os_Thread.c	   322                   Precondition ensures that the argument pointer is valid. The compliance of the preconditions is check
; ..\component\Os\Implementation\Os_Thread.c	   323                   during review.
; ..\component\Os\Implementation\Os_Thread.c	   324   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   325                   \M [CM_OS_THREADGETCONTEXTCONFIG_M]
; ..\component\Os\Implementation\Os_Thread.c	   326  
; ..\component\Os\Implementation\Os_Thread.c	   327  \ID SBSW_OS_TRD_HAL_CONTEXTSWITCH_001
; ..\component\Os\Implementation\Os_Thread.c	   328   \DESCRIPTION    Os_Hal_ContextSwitch is called with the Contexts of two threads. Both threads are passed as arguments
; ..\component\Os\Implementation\Os_Thread.c	   329                   to the caller function. Precondition ensures that the argument pointer is valid. The compliance of
; ..\component\Os\Implementation\Os_Thread.c	   330                   the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   331   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   332  
; ..\component\Os\Implementation\Os_Thread.c	   333  \ID SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_001
; ..\component\Os\Implementation\Os_Thread.c	   334   \DESCRIPTION    Os_Hal_ContextSetParameter is called with the Context of a thread and the a thread. Thread is passed
; ..\component\Os\Implementation\Os_Thread.c	   335                   as argument to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Thread.c	   336                   compliance of the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   337   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   338  
; ..\component\Os\Implementation\Os_Thread.c	   339  \ID SBSW_OS_TRD_CORESETCURRENTSTACK_001
; ..\component\Os\Implementation\Os_Thread.c	   340   \DESCRIPTION    Os_CoreSetCurrentStack is called with a Stack and a Core which is derived from a thread passed to the
; ..\component\Os\Implementation\Os_Thread.c	   341                   calling function. Precondition ensures that the passed pointers are valid.
; ..\component\Os\Implementation\Os_Thread.c	   342                   The compliance of the precondition is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   343   \COUNTERMEASURE \M [CM_OS_THREADGETSTACK_M]
; ..\component\Os\Implementation\Os_Thread.c	   344  
; ..\component\Os\Implementation\Os_Thread.c	   345  \ID SBSW_OS_TRD_TPTHREADKILL_001
; ..\component\Os\Implementation\Os_Thread.c	   346   \DESCRIPTION    Os_TpThreadKill is called with the return value of Os_ThreadGetTpConfig.
; ..\component\Os\Implementation\Os_Thread.c	   347   \COUNTERMEASURE \M [CM_OS_THREADGETTPCONFIG1_M]
; ..\component\Os\Implementation\Os_Thread.c	   348  
; ..\component\Os\Implementation\Os_Thread.c	   349  \ID SBSW_OS_TRD_TRACETHREADINIT_001
; ..\component\Os\Implementation\Os_Thread.c	   350   \DESCRIPTION    Os_TraceThreadInit is called with the the Trace member of a thread. The thread is passed as argument
; ..\component\Os\Implementation\Os_Thread.c	   351                   to the caller function. Precondition ensures that the argument pointer is valid. The compliance of the
; ..\component\Os\Implementation\Os_Thread.c	   352                   preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   353   \COUNTERMEASURE \M [CM_OS_THREADGETTRACE_M]
; ..\component\Os\Implementation\Os_Thread.c	   354  
; ..\component\Os\Implementation\Os_Thread.c	   355  \ID SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_001
; ..\component\Os\Implementation\Os_Thread.c	   356   \DESCRIPTION    Os_Hal_ContextCallOnStack is called with the Contexts of two thread. The threads are passed as
; ..\component\Os\Implementation\Os_Thread.c	   357                   arguments to the caller function. Precondition ensures that the argument pointer is valid. The
; ..\component\Os\Implementation\Os_Thread.c	   358                   compliance of the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   359   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   360  
; ..\component\Os\Implementation\Os_Thread.c	   361  \ID SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_002
; ..\component\Os\Implementation\Os_Thread.c	   362   \DESCRIPTION    Os_Hal_ContextCallOnStack is called with a pointer which is passed as argument to the caller function
; ..\component\Os\Implementation\Os_Thread.c	   363                   and a pointer to a local variable. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   364   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   365  
; ..\component\Os\Implementation\Os_Thread.c	   366  \ID SBSW_OS_TRD_HAL_CONTEXTCALL_001
; ..\component\Os\Implementation\Os_Thread.c	   367   \DESCRIPTION    Os_Hal_ContextCall is called with a pointer which is passed as argument to the caller function
; ..\component\Os\Implementation\Os_Thread.c	   368                   and a pointer to a local variable. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   369   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   370  
; ..\component\Os\Implementation\Os_Thread.c	   371  \ID SBSW_OS_TRD_PRETHREAD_CALLBACK_001
; ..\component\Os\Implementation\Os_Thread.c	   372   \DESCRIPTION    The PreThreadHook is used as a function pointer will only be called if requested and not NULL.
; ..\component\Os\Implementation\Os_Thread.c	   373   \COUNTERMEASURE \M [CM_OS_THREADPRETHREAD_CALLBACK_M]
; ..\component\Os\Implementation\Os_Thread.c	   374                   \R [CM_OS_THREADPRETHREAD_R]
; ..\component\Os\Implementation\Os_Thread.c	   375  
; ..\component\Os\Implementation\Os_Thread.c	   376  \ID SBSW_OS_TRD_HAL_CONTEXTINITFPUCONTEXT_001
; ..\component\Os\Implementation\Os_Thread.c	   377   \DESCRIPTION    Os_Hal_ContextInitFpuContext is called with a value derived from the return of Os_CoreGetThreadClass
; ..\component\Os\Implementation\Os_Thread.c	   378                   and a pointer derived from an argument of the caller function. Precondition ensures that the argument
; ..\component\Os\Implementation\Os_Thread.c	   379                   pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   380   \COUNTERMEASURE \M [CM_OS_COREASR_THREADCLASS_M]
; ..\component\Os\Implementation\Os_Thread.c	   381                   \M [CM_OS_THREADGETFPUCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   382  
; ..\component\Os\Implementation\Os_Thread.c	   383  \ID SBSW_OS_TRD_HAL_CONTEXTINITFPU_001
; ..\component\Os\Implementation\Os_Thread.c	   384   \DESCRIPTION    Os_Hal_ContextInitFpu is called with a value derived from the return of Os_CoreGetThreadClass.
; ..\component\Os\Implementation\Os_Thread.c	   385   \COUNTERMEASURE \M [CM_OS_COREASR_THREADCLASS_M]
; ..\component\Os\Implementation\Os_Thread.c	   386                   \M [CM_OS_THREADGETFPUCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   387  
; ..\component\Os\Implementation\Os_Thread.c	   388  \ID SBSW_OS_TRD_HAL_CONTEXTSTOREFPUCONTEXT_001
; ..\component\Os\Implementation\Os_Thread.c	   389   \DESCRIPTION    Os_Hal_ContextStoreFpuContext is called with the FPU context of a thread. The thread is passed as
; ..\component\Os\Implementation\Os_Thread.c	   390                   an argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   391                   The compliance of the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   392   \COUNTERMEASURE \M [CM_OS_THREADGETFPUCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   393  
; ..\component\Os\Implementation\Os_Thread.c	   394  \ID SBSW_OS_TRD_HAL_CONTEXTRESTOREFPUCONTEXT_001
; ..\component\Os\Implementation\Os_Thread.c	   395   \DESCRIPTION    Os_Hal_ContextRestoreFpuContext is called with the FPU context of a thread. The thread is passed as
; ..\component\Os\Implementation\Os_Thread.c	   396                   an argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   397                   The compliance of the preconditions is checked during review.
; ..\component\Os\Implementation\Os_Thread.c	   398   \COUNTERMEASURE \M [CM_OS_THREADGETFPUCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   399  
; ..\component\Os\Implementation\Os_Thread.c	   400  \ID SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_002
; ..\component\Os\Implementation\Os_Thread.c	   401   \DESCRIPTION    Os_Hal_ContextSetParameter is called with a pointer to a local variable and a pointer which is passed
; ..\component\Os\Implementation\Os_Thread.c	   402                   as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   403   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   404  
; ..\component\Os\Implementation\Os_Thread.c	   405  \ID SBSW_OS_TRD_HAL_CONTEXTSETSTACK_001
; ..\component\Os\Implementation\Os_Thread.c	   406   \DESCRIPTION    Os_Hal_ContextSetStack is called with a pointer to a local variable and a pointer which is passed
; ..\component\Os\Implementation\Os_Thread.c	   407                   as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   408   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   409  
; ..\component\Os\Implementation\Os_Thread.c	   410  \ID SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_002
; ..\component\Os\Implementation\Os_Thread.c	   411   \DESCRIPTION    Os_Hal_ContextSetInterruptState is called with a pointer to a local variable and a pointer which is
; ..\component\Os\Implementation\Os_Thread.c	   412                   passed as argument to the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   413   \COUNTERMEASURE \N [CM_OS_PRECONDITION_N]
; ..\component\Os\Implementation\Os_Thread.c	   414  
; ..\component\Os\Implementation\Os_Thread.c	   415  \ID SBSW_OS_TRD_COREGETTHREADCLASS_001
; ..\component\Os\Implementation\Os_Thread.c	   416   \DESCRIPTION    Os_CoreGetThreadClass is called with a value derived from the return value of Os_ThreadGetCore.
; ..\component\Os\Implementation\Os_Thread.c	   417   \COUNTERMEASURE \M [CM_OS_THREADGETCORE_M]
; ..\component\Os\Implementation\Os_Thread.c	   418  
; ..\component\Os\Implementation\Os_Thread.c	   419  \ID SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001
; ..\component\Os\Implementation\Os_Thread.c	   420   \DESCRIPTION    Os_Hal_ContextSetUserMsrBits is called with the Context of a thread, which is passed as argument to
; ..\component\Os\Implementation\Os_Thread.c	   421                   the caller function. Precondition ensures that the argument pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   422                   The compliance of the precondition is assured during review.
; ..\component\Os\Implementation\Os_Thread.c	   423   \COUNTERMEASURE \M [CM_OS_THREADGETCONTEXT_M]
; ..\component\Os\Implementation\Os_Thread.c	   424  
; ..\component\Os\Implementation\Os_Thread.c	   425  SBSW_JUSTIFICATION_END */
; ..\component\Os\Implementation\Os_Thread.c	   426  
; ..\component\Os\Implementation\Os_Thread.c	   427  /*
; ..\component\Os\Implementation\Os_Thread.c	   428  \CM CM_OS_THREADGETLOCKS_N
; ..\component\Os\Implementation\Os_Thread.c	   429        Locks is derived from a thread Dyn pointer. As each object of an abstract class is always part of a concrete
; ..\component\Os\Implementation\Os_Thread.c	   430        class, the concrete class  guarantees, that the Dyn pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   431        Precondition ensures that the Locks pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   432  
; ..\component\Os\Implementation\Os_Thread.c	   433  \CM CM_OS_THREADGETSPINLOCKS_N
; ..\component\Os\Implementation\Os_Thread.c	   434        Precondition ensures that the pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Thread.c	   435  
; ..\component\Os\Implementation\Os_Thread.c	   436  \CM CM_OS_THREADGETSERVICECALLS_01_02_T
; ..\component\Os\Implementation\Os_Thread.c	   437        TCASE-345836 ensures that ServiceCalls is initialized during init phase.
; ..\component\Os\Implementation\Os_Thread.c	   438  
; ..\component\Os\Implementation\Os_Thread.c	   439  \CM CM_OS_THREADGETSERVICECALLS_02_02_T
; ..\component\Os\Implementation\Os_Thread.c	   440        Data modification of ServiceCalls occurs only in subcomponent ServiceFunction.
; ..\component\Os\Implementation\Os_Thread.c	   441        Consistency of objects is ensured by UnitTest TCASE-345832
; ..\component\Os\Implementation\Os_Thread.c	   442  
; ..\component\Os\Implementation\Os_Thread.c	   443  \CM CM_OS_THREADGETTRACE_M
; ..\component\Os\Implementation\Os_Thread.c	   444        Verify that the Trace reference in each thread instance is no NULL_PTR, if ORTI or TimingHook tracing is enabled.
; ..\component\Os\Implementation\Os_Thread.c	   445  
; ..\component\Os\Implementation\Os_Thread.c	   446  \CM CM_OS_THREADGETSTACK_M
; ..\component\Os\Implementation\Os_Thread.c	   447        Verify that the Stack reference of each thread is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   448  
; ..\component\Os\Implementation\Os_Thread.c	   449  \CM CM_OS_THREADGETINTERRUPTAPISTATE_M
; ..\component\Os\Implementation\Os_Thread.c	   450        Verify that the IntApiState reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   451  
; ..\component\Os\Implementation\Os_Thread.c	   452  \CM CM_OS_THREADGETCORE_M
; ..\component\Os\Implementation\Os_Thread.c	   453        Verify that the Core reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   454  
; ..\component\Os\Implementation\Os_Thread.c	   455  \CM CM_OS_THREADGETCONTEXT_M
; ..\component\Os\Implementation\Os_Thread.c	   456        Verify that the Context reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   457  
; ..\component\Os\Implementation\Os_Thread.c	   458  \CM CM_OS_THREADGETCONTEXTCONFIG_M
; ..\component\Os\Implementation\Os_Thread.c	   459        Verify that the ContextConfig reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   460  
; ..\component\Os\Implementation\Os_Thread.c	   461  \CM CM_OS_THREADGETOWNERAPPLICATION_M
; ..\component\Os\Implementation\Os_Thread.c	   462        Verify that the OwnerApplication reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   463  
; ..\component\Os\Implementation\Os_Thread.c	   464  \CM CM_OS_THREADGETCURRENTAPPLICATION_N
; ..\component\Os\Implementation\Os_Thread.c	   465        Thread is an abstract class. The validity of the Dyn pointer is ensured by checks of concrete classes.
; ..\component\Os\Implementation\Os_Thread.c	   466        Precondition ensures that the Application pointer is valid. The compliance of the  precondition is check during
; ..\component\Os\Implementation\Os_Thread.c	   467        review.
; ..\component\Os\Implementation\Os_Thread.c	   468  
; ..\component\Os\Implementation\Os_Thread.c	   469  \CM CM_OS_THREADGETMPACCESSRIGHTSINITIAL_M
; ..\component\Os\Implementation\Os_Thread.c	   470        Verify that the MpAccessRightsInitial reference in each thread instance is no NULL_PTR, if memory protection
; ..\component\Os\Implementation\Os_Thread.c	   471        is enabled.
; ..\component\Os\Implementation\Os_Thread.c	   472  
; ..\component\Os\Implementation\Os_Thread.c	   473  \CM CM_OS_THREADGETMPACCESSRIGHTS_T
; ..\component\Os\Implementation\Os_Thread.c	   474        TCASE-345836 ensures the MpAccessRights member of dyn object is always initialized correctly, if required.
; ..\component\Os\Implementation\Os_Thread.c	   475  
; ..\component\Os\Implementation\Os_Thread.c	   476  \CM CM_OS_THREADGETTPCONFIG1_M
; ..\component\Os\Implementation\Os_Thread.c	   477        Verify that the TimingProtection reference in each thread instance is a non-NULL_PTR if timing protection is
; ..\component\Os\Implementation\Os_Thread.c	   478        enabled for the owner core. As a result, the timing protection references in thread and owner core need
; ..\component\Os\Implementation\Os_Thread.c	   479        to be both NULL_PTR or both non-NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   480  
; ..\component\Os\Implementation\Os_Thread.c	   481  \CM CM_OS_THREADGETDYN_N
; ..\component\Os\Implementation\Os_Thread.c	   482        As each object of an abstract class is always part of a concrete class, the concrete class
; ..\component\Os\Implementation\Os_Thread.c	   483        guarantees, that the Dyn pointer is valid.
; ..\component\Os\Implementation\Os_Thread.c	   484  
; ..\component\Os\Implementation\Os_Thread.c	   485  \CM CM_OS_THREADGETACCESSRIGHTS_M
; ..\component\Os\Implementation\Os_Thread.c	   486        Verify that the AccessRights reference in each thread instance is no NULL_PTR.
; ..\component\Os\Implementation\Os_Thread.c	   487  
; ..\component\Os\Implementation\Os_Thread.c	   488  \CM CM_OS_THREADPRETHREAD_CALLBACK_M
; ..\component\Os\Implementation\Os_Thread.c	   489        Verify that the PreThreadHook is Os_TaskCallPreTaskHook for all Thread objects defined within Tasks and
; ..\component\Os\Implementation\Os_Thread.c	   490        NULL_PTR for all Thread objects defined in other types.
; ..\component\Os\Implementation\Os_Thread.c	   491  
; ..\component\Os\Implementation\Os_Thread.c	   492  \CM CM_OS_THREADPRETHREAD_R
; ..\component\Os\Implementation\Os_Thread.c	   493        Implementation ensures that the function pointer is not NULL_PTR before calling it.
; ..\component\Os\Implementation\Os_Thread.c	   494  
; ..\component\Os\Implementation\Os_Thread.c	   495  \CM CM_OS_THREADGETFPUCONTEXT_M
; ..\component\Os\Implementation\Os_Thread.c	   496        Verify that
; ..\component\Os\Implementation\Os_Thread.c	   497          - FpuContext is no NULL_PTR in case that Context saving is enabled for thread (UsesFpu).
; ..\component\Os\Implementation\Os_Thread.c	   498          - Context saving is enabled (UsesFpu) for all threads if OS_CFG_THREAD_FPU_CONTEXT_ALL_THREADS_ENABLED
; ..\component\Os\Implementation\Os_Thread.c	   499            equals STD_ON.
; ..\component\Os\Implementation\Os_Thread.c	   500  
; ..\component\Os\Implementation\Os_Thread.c	   501   */
; ..\component\Os\Implementation\Os_Thread.c	   502  
; ..\component\Os\Implementation\Os_Thread.c	   503  /*!
; ..\component\Os\Implementation\Os_Thread.c	   504   * \}
; ..\component\Os\Implementation\Os_Thread.c	   505   */
; ..\component\Os\Implementation\Os_Thread.c	   506  
; ..\component\Os\Implementation\Os_Thread.c	   507  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.c	   508   *  END OF FILE: Os_Thread.c
; ..\component\Os\Implementation\Os_Thread.c	   509   **********************************************************************************************************************/

	; Module end
