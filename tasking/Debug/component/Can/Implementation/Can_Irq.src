	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Can\\Implementation\\.Can_Irq.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Can\\Implementation\\Can_Irq.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Can\\Implementation\\Can_Irq.src ..\\component\\Can\\Implementation\\Can_Irq.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Can\\Implementation\\Can_Irq.c'

	
$TC162
	
	.sdecl	'.text.Can_Irq.Os_Isr_CanIsr_0',code,cluster('Os_Isr_CanIsr_0')
	.sect	'.text.Can_Irq.Os_Isr_CanIsr_0'
	.align	2
	
	.global	Os_Isr_CanIsr_0

; ..\component\Can\Implementation\Can_Irq.c	     1  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	     2  
; ..\component\Can\Implementation\Can_Irq.c	     3  /* STARTSINGLE_OF_MULTIPLE */
; ..\component\Can\Implementation\Can_Irq.c	     4  
; ..\component\Can\Implementation\Can_Irq.c	     5  /**********************************************************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	     6   *  COPYRIGHT
; ..\component\Can\Implementation\Can_Irq.c	     7   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Can\Implementation\Can_Irq.c	     8   *  \verbatim
; ..\component\Can\Implementation\Can_Irq.c	     9   *  Copyright (c) 2021 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Can\Implementation\Can_Irq.c	    10   *
; ..\component\Can\Implementation\Can_Irq.c	    11   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Can\Implementation\Can_Irq.c	    12   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Can\Implementation\Can_Irq.c	    13   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Can\Implementation\Can_Irq.c	    14   *  \endverbatim
; ..\component\Can\Implementation\Can_Irq.c	    15   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Can\Implementation\Can_Irq.c	    16   *  FILE DESCRIPTION
; ..\component\Can\Implementation\Can_Irq.c	    17   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Can\Implementation\Can_Irq.c	    18  /*  \file     Can.c / Can_Irq.c
; ..\component\Can\Implementation\Can_Irq.c	    19   *  \brief    Implementation of the CAN driver
; ..\component\Can\Implementation\Can_Irq.c	    20   *  \details  see functional description below
; ..\component\Can\Implementation\Can_Irq.c	    21   *
; ..\component\Can\Implementation\Can_Irq.c	    22   *********************************************************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	    23  /* ***************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	    24  |-----------------------------------------------------------------------------
; ..\component\Can\Implementation\Can_Irq.c	    25  |               R E V I S I O N   H I S T O R Y
; ..\component\Can\Implementation\Can_Irq.c	    26  |-----------------------------------------------------------------------------
; ..\component\Can\Implementation\Can_Irq.c	    27  | Date       Version Author Description
; ..\component\Can\Implementation\Can_Irq.c	    28  | ---------  ------- ------ --------------------------------------------------
; ..\component\Can\Implementation\Can_Irq.c	    29  | 2012-04-13 1.00.00  Her - Initial revision (alpha version)
; ..\component\Can\Implementation\Can_Irq.c	    30  | 2012-08-28 1.00.01  Her - Initial revision (beta version )
; ..\component\Can\Implementation\Can_Irq.c	    31  | 2013-02-01 1.01.00  Her - ESCAN00065098: Initial release version
; ..\component\Can\Implementation\Can_Irq.c	    32  | 2013-03-18 1.02.00  Her - ESCAN00065594: Additional (High End) features
; ..\component\Can\Implementation\Can_Irq.c	    33  | 2013-06-03 1.03.00  Her - ESCAN00068062: Rx Dedicated Buffers support
; ..\component\Can\Implementation\Can_Irq.c	    34  |                     Her - ESCAN00068305: Reduce RAM resource consumption by tailoring the configuration
; ..\component\Can\Implementation\Can_Irq.c	    35  |                     Her - ESCAN00068956: CAN messages to be transmitted are missing
; ..\component\Can\Implementation\Can_Irq.c	    36  | 2013-07-26 1.03.80  Her - ESCAN00069335: CAN-FD Bitrate Switching Prototype
; ..\component\Can\Implementation\Can_Irq.c	    37  | 2013-08-08 1.04.00  Her - ESCAN00069461: Further transmissions are not accepted but a memory violation is reported
; ..\component\Can\Implementation\Can_Irq.c	    38  |                     Her - ESCAN00069673: Conditional ECC initialization of the embedded CAN Message RAM
; ..\component\Can\Implementation\Can_Irq.c	    39  |                     Her - ESCAN00069937: GHS support
; ..\component\Can\Implementation\Can_Irq.c	    40  | 2013-09-27 1.05.00  Her - ESCAN00070770: Use Overrun in Status
; ..\component\Can\Implementation\Can_Irq.c	    41  |                     Her - ESCAN00070771: Compiler error: "finishRxFullCan" undefined
; ..\component\Can\Implementation\Can_Irq.c	    42  | 2013-10-17 1.06.00  Her - ESCAN00070952: Support customer specific post initialization
; ..\component\Can\Implementation\Can_Irq.c	    43  |                     Her - ESCAN00071166: AR4-328: Predefined Runtime Measurement Points
; ..\component\Can\Implementation\Can_Irq.c	    44  |                     Her - ESCAN00071326: Delayed overrun notification
; ..\component\Can\Implementation\Can_Irq.c	    45  |                     Her - ESCAN00071493: Message processed in wrong (interrupt or task ) context 
; ..\component\Can\Implementation\Can_Irq.c	    46  | 2013-11-20 1.07.00  Her - ESCAN00073084: Improvements on derivative handling
; ..\component\Can\Implementation\Can_Irq.c	    47  | 2014-02-12 1.08.00  Her - ESCAN00073939: Enhanced CAN-FD (Full) support
; ..\component\Can\Implementation\Can_Irq.c	    48  | 2014-03-17 1.09.00  Her - ESCAN00074327: Support embedded assembler for DiabData
; ..\component\Can\Implementation\Can_Irq.c	    49  | 2014-06-13 1.10.00  Her - ESCAN00076201: Support MPC5777C derivative
; ..\component\Can\Implementation\Can_Irq.c	    50  | 2014-10-30 2.00.00  Her - ESCAN00079193: AR4-R11 Update using ComStackLib
; ..\component\Can\Implementation\Can_Irq.c	    51  | 2015-01-30 2.01.00  Her - ESCAN00079800: Added CBD support (for Traveo derivative)
; ..\component\Can\Implementation\Can_Irq.c	    52  | 2015-02-20 2.02.00  Her - ESCAN00081372: AR4-R11 Update using ComStackLib (support Spc58xx)
; ..\component\Can\Implementation\Can_Irq.c	    53  | 2015-03-18 2.02.01  Her - ESCAN00081884: compile error
; ..\component\Can\Implementation\Can_Irq.c	    54  | 2015-04-02 2.02.02  Her - ESCAN00082190: Power Down (sleep mode) correction
; ..\component\Can\Implementation\Can_Irq.c	    55  |                     Her - ESCAN00082291: Memory access misalignment exception
; ..\component\Can\Implementation\Can_Irq.c	    56  | 2015-04-16 2.02.03  Her - ESCAN00082521: Extended Id Type not correct detected
; ..\component\Can\Implementation\Can_Irq.c	    57  |                     Her - ESCAN00082722: CANbedded only: Memory access misalignment exception
; ..\component\Can\Implementation\Can_Irq.c	    58  |                     Her - ESCAN00082724: Speed up TxCopyToCan
; ..\component\Can\Implementation\Can_Irq.c	    59  | 2015-07-06 2.02.04  Her - ESCAN00083815: Tx Confirmation gets lost
; ..\component\Can\Implementation\Can_Irq.c	    60  |                     Her - ESCAN00088481: Compiler error occurs
; ..\component\Can\Implementation\Can_Irq.c	    61  | 2015-07-30 2.03.00  Her - ESCAN00084313: Support MCAN Core release 3.1.0 ff.
; ..\component\Can\Implementation\Can_Irq.c	    62  |                     Her - ESCAN00084515: Use generated FullCAN masks
; ..\component\Can\Implementation\Can_Irq.c	    63  |                     Her - ESCAN00084650: Support ARM Cortex-Mx Data Memory Barrier
; ..\component\Can\Implementation\Can_Irq.c	    64  |                     Her - ESCAN00084814: Compiler error due to nested macro construction
; ..\component\Can\Implementation\Can_Irq.c	    65  | 2015-10-09 2.03.01  Her - ESCAN00085813: Endless loop during reception of messages
; ..\component\Can\Implementation\Can_Irq.c	    66  | 2015-11-11 2.04.00  Her - ESCAN00086128: Dynamic Rx FullCAN Message filtering failure
; ..\component\Can\Implementation\Can_Irq.c	    67  |                     Her - ESCAN00086359: Bosch Errata - support of workaround
; ..\component\Can\Implementation\Can_Irq.c	    68  | 2015-12-02 2.04.01  Her - ESCAN00086934: Support Keil compiler
; ..\component\Can\Implementation\Can_Irq.c	    69  |                     Her - ESCAN00087003: Missing pre-processor constants
; ..\component\Can\Implementation\Can_Irq.c	    70  |                     Her - ESCAN00087005: Re-Initialization fails
; ..\component\Can\Implementation\Can_Irq.c	    71  |                     Her - ESCAN00087056: Erroneous cancel notification
; ..\component\Can\Implementation\Can_Irq.c	    72  | 2015-12-03 2.05.00  Her - ESCAN00087255: Restructured due to AR4/R14
; ..\component\Can\Implementation\Can_Irq.c	    73  |                     Her - ESCAN00087256: Compile warning (erratum_013)
; ..\component\Can\Implementation\Can_Irq.c	    74  | 2016-01-21 2.05.01  Her - ESCAN00087586: Memory overwrite during RAM check
; ..\component\Can\Implementation\Can_Irq.c	    75  |                     Her - ESCAN00087612: Wrong mailbox checked
; ..\component\Can\Implementation\Can_Irq.c	    76  | 2016-02-19 2.06.00  Her - ESCAN00088392: Support 8 CAN channels (only Organi affected)
; ..\component\Can\Implementation\Can_Irq.c	    77  |                     Her - ESCAN00088519: Support more than 255 Dynamic Rx Objects
; ..\component\Can\Implementation\Can_Irq.c	    78  |                     Her - ESCAN00088756: Reserved bits may only be written with "0"
; ..\component\Can\Implementation\Can_Irq.c	    79  |                     Her - ESCAN00088813: Incorrect switching between Normal CAN and CAN-FD
; ..\component\Can\Implementation\Can_Irq.c	    80  |                     Her - ESCAN00089048: Support Mirror Mode (CBD)
; ..\component\Can\Implementation\Can_Irq.c	    81  |                     Her - ESCAN00089049: Assertion causes compile error
; ..\component\Can\Implementation\Can_Irq.c	    82  |                     Her - ESCAN00089131: Dynamic Rx objects compile error
; ..\component\Can\Implementation\Can_Irq.c	    83  | 2016-04-12 2.06.01  Her - ESCAN00089406: AR4/R14 adaptations to AR3
; ..\component\Can\Implementation\Can_Irq.c	    84  | 2016-04-22 2.06.02  Her - ESCAN00089587: Memory overwrite during RAM check
; ..\component\Can\Implementation\Can_Irq.c	    85  |                     Her - ESCAN00089610: CAN-ID Rx access macros
; ..\component\Can\Implementation\Can_Irq.c	    86  | 2016-04-28 2.07.00  Her - ESCAN00089867: MISRA improvements
; ..\component\Can\Implementation\Can_Irq.c	    87  |            2.08.xx  Her - ESCAN00092200: Will be used for Silent branch
; ..\component\Can\Implementation\Can_Irq.c	    88  | 2016-06-22 2.09.00  Her - ESCAN00090584: Function call with missing parameter
; ..\component\Can\Implementation\Can_Irq.c	    89  |                     Her - ESCAN00090761: Generated filter for dynamic Rx objects must be disabled by default
; ..\component\Can\Implementation\Can_Irq.c	    90  |                     Her - ESCAN00090825: Omit obsolete cancellation delay 
; ..\component\Can\Implementation\Can_Irq.c	    91  |                     Her - ESCAN00091096: Support AR4/R16
; ..\component\Can\Implementation\Can_Irq.c	    92  |                     Her - ESCAN00091328: Support Mirror Mode (ASR)
; ..\component\Can\Implementation\Can_Irq.c	    93  |                     Her - ESCAN00091329: CAN-FD Bit Rate Switch always active
; ..\component\Can\Implementation\Can_Irq.c	    94  | 2016-08-24 2.10.00  Her - ESCAN00091681: Support dynamic MCAN Revision adaptation
; ..\component\Can\Implementation\Can_Irq.c	    95  |                     Her - ESCAN00092569: Compiler error: identifier "pduInfo_var_id" is undefined
; ..\component\Can\Implementation\Can_Irq.c	    96  |                     Her - ESCAN00092315: Compiler warning: function "CanLL_WakeUpHandling" was declared but never referenced
; ..\component\Can\Implementation\Can_Irq.c	    97  |                     Her - ESCAN00092713: Preprocessor parse error
; ..\component\Can\Implementation\Can_Irq.c	    98  | 2016-10-28 2.11.00  Pl  - ESCAN00092591: Support Aurix Plus with AR4/R16
; ..\component\Can\Implementation\Can_Irq.c	    99  | 2016-11-24 2.12.00  Her - ESCAN00092995: CAN-FD message without BRS will not be received
; ..\component\Can\Implementation\Can_Irq.c	   100  |                     Her - ESCAN00093167: Compiler error "maybe misaligned memory access"
; ..\component\Can\Implementation\Can_Irq.c	   101  |                     Pl  - ESCAN00093244: CAN Interrupt lock work not correct (Aurix Plus only)
; ..\component\Can\Implementation\Can_Irq.c	   102  | 2017-01-25 2.13.00  Pl  - ESCAN00093483: CAN communication only possible with channels CAN0, CAN4, CAN8 (Aurix Plus only)
; ..\component\Can\Implementation\Can_Irq.c	   103  |                     Pl  - ESCAN00093726: Support C_ENABLE_USE_OS_INTERRUPT_CONTROL (Aurix Plus only)
; ..\component\Can\Implementation\Can_Irq.c	   104  | 2017-02-02 2.13.01  Her - ESCAN00093849: CAN data bytes containing wrong content 
; ..\component\Can\Implementation\Can_Irq.c	   105  |                     Her - ESCAN00093852: Support Extended ID Masking
; ..\component\Can\Implementation\Can_Irq.c	   106  | 2017-03-09 2.14.00  Rse - ESCAN00094323: Support TeleChips Tcc802x derivatives for CANbedded
; ..\component\Can\Implementation\Can_Irq.c	   107  | 2017-04-19 2.14.01  Pl  - ESCAN00094085: Implementation of workaround for MCMCAN_TC.003_EPN Corruption of transmitted CAN Frame
; ..\component\Can\Implementation\Can_Irq.c	   108  | 2017-05-10 2.15.00  Her - ESCAN00094883: Improper workaround for MCAN Erratum #10 
; ..\component\Can\Implementation\Can_Irq.c	   109  | 2017-05-11 2.16.00  Her - ESCAN00094518: MCAN SafeBSW Support
; ..\component\Can\Implementation\Can_Irq.c	   110  | 2017-08-10 2.16.01  Her - STORYC-2289  : FEAT-2738 (silent mode), FEAT-2888 (selective multiplexedTx)
; ..\component\Can\Implementation\Can_Irq.c	   111  | 2017-08-25 2.17.00  Pl  - STORYC-2250  : M-CAN: Support new platform Telemaco3P with ARM DS5 compiler with CFG5
; ..\component\Can\Implementation\Can_Irq.c	   112  |                     Her - STORYC-2289  : Support derivatives TCC8021, SAMCA1E for CANbedded
; ..\component\Can\Implementation\Can_Irq.c	   113  | 2017-09-12 2.20.00  Her - STORYC-2729  : Support derivatives SPC5777M with AR4/R19, MCAN SafeBSW Support
; ..\component\Can\Implementation\Can_Irq.c	   114  |                     Her - STORYC-2780  : Stop Mode transition behaviour improved
; ..\component\Can\Implementation\Can_Irq.c	   115  |                     Her - ESCAN00097246: Pending Tx requests block transition to stop mode
; ..\component\Can\Implementation\Can_Irq.c	   116  |                     Her - ESCAN00097151: Incomplete Mirror Data
; ..\component\Can\Implementation\Can_Irq.c	   117  | 2017-10-27 2.21.00  Her - STORYC-2729  : MCAN SafeBSW Support (continued and ExtRamCheck Beta)
; ..\component\Can\Implementation\Can_Irq.c	   118  | 2017-12-01 3.00.00  Pl  - STORYC-3153  : Add infixing to support multiple driver instanced
; ..\component\Can\Implementation\Can_Irq.c	   119  |                     Her - STORYC-3325  : AR3/GENy adaptation
; ..\component\Can\Implementation\Can_Irq.c	   120  |                     Huo - ESCAN00098069: Add external PIA
; ..\component\Can\Implementation\Can_Irq.c	   121  | 2018-01-25 3.01.00  Hum - STORYC-4102  : Support Extended Ram Check
; ..\component\Can\Implementation\Can_Irq.c	   122  |                     Her - ESCAN00097602: OS assertion "CAN interrupt lost"
; ..\component\Can\Implementation\Can_Irq.c	   123  |                     Hum - ESCAN00098469: TCF Init enabled regardless of CANCEL_IN_HW
; ..\component\Can\Implementation\Can_Irq.c	   124  |                     Hum - ESCAN00098470: TDCR write not performed correctly in correspondance with dynamic MCAN revision. CAN_BOSCH_ERRATUM_012
; ..\component\Can\Implementation\Can_Irq.c	   125  |                     Hum - ESCAN00098467: Missing ampersand in RAM check resulting in a DET error.
; ..\component\Can\Implementation\Can_Irq.c	   126  | 2018-03-07 3.02.00  Pl  - STORYC-4771  : Support TC38X for Tricore
; ..\component\Can\Implementation\Can_Irq.c	   127  |                     Her - ESCAN00098887: static variable "mirrorData" linker section issue, 
; ..\component\Can\Implementation\Can_Irq.c	   128  |                     Her - ESCAN00098890: use kCanLoopStop instead of kCanLoopSleep (AR3 issue)
; ..\component\Can\Implementation\Can_Irq.c	   129  | 2018-09-17 4.00.00  Her - STORYC-6298  : MCAN RI 2.0 adaptation
; ..\component\Can\Implementation\Can_Irq.c	   130  |                     Hum - STORYC-6490  : Support for Traveo2
; ..\component\Can\Implementation\Can_Irq.c	   131  | 2018-10-26 4.00.01  Yoe - ESCAN00101172: Compiler error: wrong number of arguments in call to CanReInit
; ..\component\Can\Implementation\Can_Irq.c	   132  | 2019-03-14 5.00.00  Her - STORYC-7220  : from CBD/RI2.0 to AR/R21,R22 adaptation
; ..\component\Can\Implementation\Can_Irq.c	   133  |                     Hum - STORYC-8107  : Adapations for TriCore R22
; ..\component\Can\Implementation\Can_Irq.c	   134  |                     Hum - STORYC-7923  : Merge version 3-03-00 - 3-09-01:
; ..\component\Can\Implementation\Can_Irq.c	   135  |                                          - STORYC-4711  : Support TDA3x additional registers
; ..\component\Can\Implementation\Can_Irq.c	   136  |                                          - STORYC-4584  : Infixing improvements
; ..\component\Can\Implementation\Can_Irq.c	   137  |                                          - STORYC-5038  : Support GNU Compiler for TC38X
; ..\component\Can\Implementation\Can_Irq.c	   138  |                                          - ESCAN00099574: Adaptation LL for CANBEDDED
; ..\component\Can\Implementation\Can_Irq.c	   139  |                                          - STORYC-5679  : Support for Visconti5
; ..\component\Can\Implementation\Can_Irq.c	   140  |                                          - STORYC-5763  : Support extended ram check for TDA3x
; ..\component\Can\Implementation\Can_Irq.c	   141  |                                          - STORYC-6686  : Support for Traveo2
; ..\component\Can\Implementation\Can_Irq.c	   142  |                                          - STORYC-6964  : Support SafeBSW for RH850
; ..\component\Can\Implementation\Can_Irq.c	   143  |                                          - STORYC-7393  : Support SafeBsw for Tricore TC3xx
; ..\component\Can\Implementation\Can_Irq.c	   144  |                                          - STORYC-7392  : Support Extended RAM check for Tricore TC3xx
; ..\component\Can\Implementation\Can_Irq.c	   145  |                                          - ESCAN00101336: Rx BasicCan not deactivated when hwMailbox is corrupted
; ..\component\Can\Implementation\Can_Irq.c	   146  |                                          - ESCAN00101842: Extended Ram Check does not validate all configured registers
; ..\component\Can\Implementation\Can_Irq.c	   147  |                                          - STORYC-7578  : Support for ATSAME51/54 derivatives (STORYC-7633 for CANBEDDED)
; ..\component\Can\Implementation\Can_Irq.c	   148  |                                          - ESCAN00102628: Can controller does not leave NISO mode
; ..\component\Can\Implementation\Can_Irq.c	   149  | 2019-04-12 5.01.00  Hum - ESCAN00102829: Can driver causes hardware exception
; ..\component\Can\Implementation\Can_Irq.c	   150  |                     Hum - ESCAN00102850: Hardware issue "MCMCAN_AI.H001_EPN"
; ..\component\Can\Implementation\Can_Irq.c	   151  |                     Hum - STORYC-8181  : Support Traveo2 HighEnd
; ..\component\Can\Implementation\Can_Irq.c	   152  | 2019-04-29 5.02.00  Hum - STORYC-8270  : Support Panasonic AS1
; ..\component\Can\Implementation\Can_Irq.c	   153  |                     Yoe - STORYC-8139  : Support ARM6 Compiler for STA1385
; ..\component\Can\Implementation\Can_Irq.c	   154  |                     Yoe - STORYC-8386  : Support MCAN revision 3.0.x and Infixing
; ..\component\Can\Implementation\Can_Irq.c	   155  |                     Yoe - STORYC-8385  : Support SafeBsw MSR4 R22 ARM32
; ..\component\Can\Implementation\Can_Irq.c	   156  |                     Yoe - ESCAN00103110: RAM check not executed in the MCAN  message RAM area
; ..\component\Can\Implementation\Can_Irq.c	   157  |                     Yoe - ESCAN00103135: Remove  support of STA1385_cut1
; ..\component\Can\Implementation\Can_Irq.c	   158  |                     Hum - ESCAN00103996: Compile error "CAN_E_GENDATA not defined"
; ..\component\Can\Implementation\Can_Irq.c	   159  | 2019-05-29 5.02.01  Hum - STORYC-8555  : Improve additional functionality handling in Jacinto6, Traveo2 and Visconti5
; ..\component\Can\Implementation\Can_Irq.c	   160  | 2019-06-17 5.02.02  Hum - ESCAN00103387: Transmit Confirmation function called for wrong mailbox
; ..\component\Can\Implementation\Can_Irq.c	   161  | 2019-08-21 5.03.00  Pl  - STORYC-8854  : Support for AWR1 RI 2.0 core 3.03.00
; ..\component\Can\Implementation\Can_Irq.c	   162  |                     Her - ESCAN00103377: Same peripheral region configuration for "CAN_PROTECTED_AREA_CHANNEL" and "CAN_PROTECTED_AREA_GLOBAL"
; ..\component\Can\Implementation\Can_Irq.c	   163  |                     Hum - ESCAN00104123: CAN driver sends incorrect receive BasicCan handle to CanIf
; ..\component\Can\Implementation\Can_Irq.c	   164  | 2019-11-10 5.04.00  Hum - CAN-605      : Driver Improvements
; ..\component\Can\Implementation\Can_Irq.c	   165  |                     Hum - CAN-606      : Message RAM Optimization
; ..\component\Can\Implementation\Can_Irq.c	   166  |                     Hum - CAN-601      : Support Tx Hw Fifo
; ..\component\Can\Implementation\Can_Irq.c	   167  |                     Hum - ESCAN00104276: Compile error when using "CanBtpReg()" with Init Post Processing
; ..\component\Can\Implementation\Can_Irq.c	   168  |                     Hum - ESCAN00104735: Interrupts are unconditionally re-enabled after Can_DisableControllerInterrupts()
; ..\component\Can\Implementation\Can_Irq.c	   169  |                     Naj - CAN-760      : MISRA Improvements
; ..\component\Can\Implementation\Can_Irq.c	   170  |                     Red - CAN-784      : Support STM32H742 for R23
; ..\component\Can\Implementation\Can_Irq.c	   171  | 2020-02-11 5.05.00  Hum - CAN-936      : Support for TriCore in CANbedded
; ..\component\Can\Implementation\Can_Irq.c	   172  | 2020-04-14 5.06.00  Hum - CAN-865      : TriCore 2G Hardware Message RAM Initialization Support
; ..\component\Can\Implementation\Can_Irq.c	   173  |                     Naj - CAN-1171     : Support TCC80XX
; ..\component\Can\Implementation\Can_Irq.c	   174  |                     Pl  - CAN-1279     : MISRA improvements
; ..\component\Can\Implementation\Can_Irq.c	   175  | 2020-06-03 5.07.00  Hum - CAN-1396     : Support for TDA4 (Jacinto7)
; ..\component\Can\Implementation\Can_Irq.c	   176  | 2020-09-15 5.08.00  Pl  - ESCAN00106662: Channel Independent TTCAN for CBD
; ..\component\Can\Implementation\Can_Irq.c	   177  |                     Pl  - CAN-1296     : TraveoII CBD Subsystem Table
; ..\component\Can\Implementation\Can_Irq.c	   178  |                     Hum - CAN-1678     : Support for TriCore TC3E7 with Diab Compiler
; ..\component\Can\Implementation\Can_Irq.c	   179  |                     Naj - CAN-1179     : Hardware Object Layout change
; ..\component\Can\Implementation\Can_Irq.c	   180  |                     Naj - ESCAN00106609: TCC803x CAN Configuration Write Protection
; ..\component\Can\Implementation\Can_Irq.c	   181  |                     Naj - ESCAN00107330: Verify channel parameter in Interrupt handling
; ..\component\Can\Implementation\Can_Irq.c	   182  |                     Naj - ESCAN00107331: Support for Tx Delayed FullCAN for Multichannel
; ..\component\Can\Implementation\Can_Irq.c	   183  |                     Naj - ESCAN00107332: Undesirable Basic CAN deactivation during RAM check
; ..\component\Can\Implementation\Can_Irq.c	   184  |                     Hum - ESCAN00107394: Wrong base addresses accessed for TDA3x
; ..\component\Can\Implementation\Can_Irq.c	   185  |                     Hum - ESCAN00107466: Size of generated message RAM table not checked during runtime
; ..\component\Can\Implementation\Can_Irq.c	   186  | 2020-10-14 5.08.01  Naj - CAN-1514     : Support TDA4 for CANbedded
; ..\component\Can\Implementation\Can_Irq.c	   187  | 2021-01-11 5.08.02  Meid- CAN-2154     : Reworks for TI platforms
; ..\component\Can\Implementation\Can_Irq.c	   188  |                     Naj - ESCAN00107521: Hw Loops used in wrong context
; ..\component\Can\Implementation\Can_Irq.c	   189  |                     Naj - ESCAN00108028: Unexpected CAN interrupt
; ..\component\Can\Implementation\Can_Irq.c	   190  |                     Hum - CAN-2320     : Remove call to TriCore Safety Endinit registers during initialization
; ..\component\Can\Implementation\Can_Irq.c	   191  |************************************************************************** */
; ..\component\Can\Implementation\Can_Irq.c	   192  
; ..\component\Can\Implementation\Can_Irq.c	   193  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   194  /* Include files                                                           */
; ..\component\Can\Implementation\Can_Irq.c	   195  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   196  /* ECO_IGNORE_BLOCK_BEGIN */
; ..\component\Can\Implementation\Can_Irq.c	   197  #define C_DRV_INTERNAL
; ..\component\Can\Implementation\Can_Irq.c	   198  #define CAN_IRQ_SOURCE     /* testability */
; ..\component\Can\Implementation\Can_Irq.c	   199  
; ..\component\Can\Implementation\Can_Irq.c	   200  #include "Can.h"
; ..\component\Can\Implementation\Can_Irq.c	   201  #if defined(V_OSTYPE_OSEK) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   202  # include "osek.h"
; ..\component\Can\Implementation\Can_Irq.c	   203  #endif
; ..\component\Can\Implementation\Can_Irq.c	   204  /* \trace SPEC-1408 */
; ..\component\Can\Implementation\Can_Irq.c	   205  #if defined(V_OSTYPE_AUTOSAR) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   206  # include "Os.h"
; ..\component\Can\Implementation\Can_Irq.c	   207  #endif
; ..\component\Can\Implementation\Can_Irq.c	   208  
; ..\component\Can\Implementation\Can_Irq.c	   209  
; ..\component\Can\Implementation\Can_Irq.c	   210  /* ECO_IGNORE_BLOCK_END */
; ..\component\Can\Implementation\Can_Irq.c	   211  
; ..\component\Can\Implementation\Can_Irq.c	   212  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   213  /* Version Check                                                           */
; ..\component\Can\Implementation\Can_Irq.c	   214  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   215  /* \trace SPEC-20329 */
; ..\component\Can\Implementation\Can_Irq.c	   216  /* not the SW version but all file versions that represent the SW version are checked */
; ..\component\Can\Implementation\Can_Irq.c	   217  #if (CAN_COREVERSION           != 0x0900u) /* \trace SPEC-1699, SPEC-3837 */
; ..\component\Can\Implementation\Can_Irq.c	   218  # error "Header file are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   219  #endif
; ..\component\Can\Implementation\Can_Irq.c	   220  #if (CAN_RELEASE_COREVERSION   != 0x01u)
; ..\component\Can\Implementation\Can_Irq.c	   221  # error "Header file are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   222  #endif
; ..\component\Can\Implementation\Can_Irq.c	   223  #if( DRVCAN_MPC5700MCANASR_VERSION != 0x0508)
; ..\component\Can\Implementation\Can_Irq.c	   224  # error "Source and Header file are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   225  #endif
; ..\component\Can\Implementation\Can_Irq.c	   226  
; ..\component\Can\Implementation\Can_Irq.c	   227  #if( DRVCAN_MPC5700MCANASR_RELEASE_VERSION != 0x02)
; ..\component\Can\Implementation\Can_Irq.c	   228  # error "Source and Header file are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   229  #endif
; ..\component\Can\Implementation\Can_Irq.c	   230  
; ..\component\Can\Implementation\Can_Irq.c	   231  #if defined(CAN_GEN_Mpc5700McanAsr_VERSION )  /* COV_CAN_VERSION_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   232  # if(CAN_GEN_Mpc5700McanAsr_VERSION != 0x0504)     /* CFG5 */
; ..\component\Can\Implementation\Can_Irq.c	   233  #  error "Generated Data are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   234  # endif
; ..\component\Can\Implementation\Can_Irq.c	   235  #else
; ..\component\Can\Implementation\Can_Irq.c	   236  # define CAN_GEN_Mpc5700McanAsr_VERSION         CAN_GEN_MPC5700MCANASR_VERSION
; ..\component\Can\Implementation\Can_Irq.c	   237  # if(CAN_GEN_MPC5700MCANASR_VERSION != 0x0100)
; ..\component\Can\Implementation\Can_Irq.c	   238  #  error "Generated Data are inconsistent!"
; ..\component\Can\Implementation\Can_Irq.c	   239  # endif
; ..\component\Can\Implementation\Can_Irq.c	   240  #endif
; ..\component\Can\Implementation\Can_Irq.c	   241  
; ..\component\Can\Implementation\Can_Irq.c	   242  #if defined(CAN_ENABLE_USE_INIT_ROOT_POINTER)
; ..\component\Can\Implementation\Can_Irq.c	   243  # define CAN_START_SEC_VAR_INIT_UNSPECIFIED  /*-----------------------------*/
; ..\component\Can\Implementation\Can_Irq.c	   244  # include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Can\Implementation\Can_Irq.c	   245  V_DEF_P2CONST (extern, Can_ConfigType, VAR_INIT, CONST_PBCFG) Can_ConfigDataPtr; /* PRQA S 3447,3451,3210 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   246  # define CAN_STOP_SEC_VAR_INIT_UNSPECIFIED  /*------------------------------*/
; ..\component\Can\Implementation\Can_Irq.c	   247  # include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Can\Implementation\Can_Irq.c	   248  #endif
; ..\component\Can\Implementation\Can_Irq.c	   249  
; ..\component\Can\Implementation\Can_Irq.c	   250  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   251  /* Interrupt Service Routine                                               */
; ..\component\Can\Implementation\Can_Irq.c	   252  /***************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   253  #define CAN_START_SEC_CODE  /*-----------------------------------------*/
; ..\component\Can\Implementation\Can_Irq.c	   254  #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Can\Implementation\Can_Irq.c	   255  
; ..\component\Can\Implementation\Can_Irq.c	   256  /* \trace SPEC-1579, SPEC-1395, SPEC-1567 */
; ..\component\Can\Implementation\Can_Irq.c	   257  /* PRQA S 3614 QAC_Can_3614 */ /* MD_Can_3614_LL */
; ..\component\Can\Implementation\Can_Irq.c	   258  #if defined( C_SINGLE_RECEIVE_CHANNEL )
; ..\component\Can\Implementation\Can_Irq.c	   259  # define CanPhysToLogChannel_0
; ..\component\Can\Implementation\Can_Irq.c	   260  # define CanPhysToLogChannelIndex_0
; ..\component\Can\Implementation\Can_Irq.c	   261  # define CanPhysToLogChannel_1
; ..\component\Can\Implementation\Can_Irq.c	   262  # define CanPhysToLogChannelIndex_1
; ..\component\Can\Implementation\Can_Irq.c	   263  # define CanPhysToLogChannel_2
; ..\component\Can\Implementation\Can_Irq.c	   264  # define CanPhysToLogChannelIndex_2
; ..\component\Can\Implementation\Can_Irq.c	   265  # define CanPhysToLogChannel_3
; ..\component\Can\Implementation\Can_Irq.c	   266  # define CanPhysToLogChannelIndex_3
; ..\component\Can\Implementation\Can_Irq.c	   267  # define CanPhysToLogChannel_4
; ..\component\Can\Implementation\Can_Irq.c	   268  # define CanPhysToLogChannelIndex_4
; ..\component\Can\Implementation\Can_Irq.c	   269  # define CanPhysToLogChannel_5
; ..\component\Can\Implementation\Can_Irq.c	   270  # define CanPhysToLogChannelIndex_5
; ..\component\Can\Implementation\Can_Irq.c	   271  # define CanPhysToLogChannel_6
; ..\component\Can\Implementation\Can_Irq.c	   272  # define CanPhysToLogChannelIndex_6
; ..\component\Can\Implementation\Can_Irq.c	   273  # define CanPhysToLogChannel_7
; ..\component\Can\Implementation\Can_Irq.c	   274  # define CanPhysToLogChannelIndex_7
; ..\component\Can\Implementation\Can_Irq.c	   275  # define CanPhysToLogChannel_8
; ..\component\Can\Implementation\Can_Irq.c	   276  # define CanPhysToLogChannelIndex_8
; ..\component\Can\Implementation\Can_Irq.c	   277  # define CanPhysToLogChannel_9
; ..\component\Can\Implementation\Can_Irq.c	   278  # define CanPhysToLogChannelIndex_9
; ..\component\Can\Implementation\Can_Irq.c	   279  # define CanPhysToLogChannel_10
; ..\component\Can\Implementation\Can_Irq.c	   280  # define CanPhysToLogChannelIndex_10
; ..\component\Can\Implementation\Can_Irq.c	   281  # define CanPhysToLogChannel_11
; ..\component\Can\Implementation\Can_Irq.c	   282  # define CanPhysToLogChannelIndex_11
; ..\component\Can\Implementation\Can_Irq.c	   283  # define CanPhysToLogChannel_12
; ..\component\Can\Implementation\Can_Irq.c	   284  # define CanPhysToLogChannelIndex_12
; ..\component\Can\Implementation\Can_Irq.c	   285  # define CanPhysToLogChannel_13
; ..\component\Can\Implementation\Can_Irq.c	   286  # define CanPhysToLogChannelIndex_13
; ..\component\Can\Implementation\Can_Irq.c	   287  # define CanPhysToLogChannel_14
; ..\component\Can\Implementation\Can_Irq.c	   288  # define CanPhysToLogChannelIndex_14
; ..\component\Can\Implementation\Can_Irq.c	   289  # define CanPhysToLogChannel_15
; ..\component\Can\Implementation\Can_Irq.c	   290  # define CanPhysToLogChannelIndex_15
; ..\component\Can\Implementation\Can_Irq.c	   291  # define CanPhysToLogChannel_16
; ..\component\Can\Implementation\Can_Irq.c	   292  # define CanPhysToLogChannelIndex_16
; ..\component\Can\Implementation\Can_Irq.c	   293  # define CanPhysToLogChannel_17
; ..\component\Can\Implementation\Can_Irq.c	   294  # define CanPhysToLogChannelIndex_17
; ..\component\Can\Implementation\Can_Irq.c	   295  # define CanPhysToLogChannel_18
; ..\component\Can\Implementation\Can_Irq.c	   296  # define CanPhysToLogChannelIndex_18
; ..\component\Can\Implementation\Can_Irq.c	   297  # define CanPhysToLogChannel_19
; ..\component\Can\Implementation\Can_Irq.c	   298  # define CanPhysToLogChannelIndex_19
; ..\component\Can\Implementation\Can_Irq.c	   299  #else
; ..\component\Can\Implementation\Can_Irq.c	   300  # define CanPhysToLogChannel_0       kCanPhysToLogChannelIndex_0
; ..\component\Can\Implementation\Can_Irq.c	   301  # define CanPhysToLogChannelIndex_0  kCanPhysToLogChannelIndex_0,
; ..\component\Can\Implementation\Can_Irq.c	   302  # define CanPhysToLogChannel_1       kCanPhysToLogChannelIndex_1
; ..\component\Can\Implementation\Can_Irq.c	   303  # define CanPhysToLogChannelIndex_1  kCanPhysToLogChannelIndex_1,
; ..\component\Can\Implementation\Can_Irq.c	   304  # define CanPhysToLogChannel_2       kCanPhysToLogChannelIndex_2
; ..\component\Can\Implementation\Can_Irq.c	   305  # define CanPhysToLogChannelIndex_2  kCanPhysToLogChannelIndex_2,
; ..\component\Can\Implementation\Can_Irq.c	   306  # define CanPhysToLogChannel_3       kCanPhysToLogChannelIndex_3
; ..\component\Can\Implementation\Can_Irq.c	   307  # define CanPhysToLogChannelIndex_3  kCanPhysToLogChannelIndex_3,
; ..\component\Can\Implementation\Can_Irq.c	   308  # define CanPhysToLogChannel_4       kCanPhysToLogChannelIndex_4
; ..\component\Can\Implementation\Can_Irq.c	   309  # define CanPhysToLogChannelIndex_4  kCanPhysToLogChannelIndex_4,
; ..\component\Can\Implementation\Can_Irq.c	   310  # define CanPhysToLogChannel_5       kCanPhysToLogChannelIndex_5
; ..\component\Can\Implementation\Can_Irq.c	   311  # define CanPhysToLogChannelIndex_5  kCanPhysToLogChannelIndex_5,
; ..\component\Can\Implementation\Can_Irq.c	   312  # define CanPhysToLogChannel_6       kCanPhysToLogChannelIndex_6
; ..\component\Can\Implementation\Can_Irq.c	   313  # define CanPhysToLogChannelIndex_6  kCanPhysToLogChannelIndex_6,
; ..\component\Can\Implementation\Can_Irq.c	   314  # define CanPhysToLogChannel_7       kCanPhysToLogChannelIndex_7
; ..\component\Can\Implementation\Can_Irq.c	   315  # define CanPhysToLogChannelIndex_7  kCanPhysToLogChannelIndex_7,
; ..\component\Can\Implementation\Can_Irq.c	   316  # define CanPhysToLogChannel_8       kCanPhysToLogChannelIndex_8
; ..\component\Can\Implementation\Can_Irq.c	   317  # define CanPhysToLogChannelIndex_8  kCanPhysToLogChannelIndex_8,
; ..\component\Can\Implementation\Can_Irq.c	   318  # define CanPhysToLogChannel_9       kCanPhysToLogChannelIndex_9
; ..\component\Can\Implementation\Can_Irq.c	   319  # define CanPhysToLogChannelIndex_9  kCanPhysToLogChannelIndex_9,
; ..\component\Can\Implementation\Can_Irq.c	   320  # define CanPhysToLogChannel_10       kCanPhysToLogChannelIndex_10
; ..\component\Can\Implementation\Can_Irq.c	   321  # define CanPhysToLogChannelIndex_10  kCanPhysToLogChannelIndex_10,
; ..\component\Can\Implementation\Can_Irq.c	   322  # define CanPhysToLogChannel_11       kCanPhysToLogChannelIndex_11
; ..\component\Can\Implementation\Can_Irq.c	   323  # define CanPhysToLogChannelIndex_11  kCanPhysToLogChannelIndex_11,
; ..\component\Can\Implementation\Can_Irq.c	   324  # define CanPhysToLogChannel_12       kCanPhysToLogChannelIndex_12
; ..\component\Can\Implementation\Can_Irq.c	   325  # define CanPhysToLogChannelIndex_12  kCanPhysToLogChannelIndex_12,
; ..\component\Can\Implementation\Can_Irq.c	   326  # define CanPhysToLogChannel_13       kCanPhysToLogChannelIndex_13
; ..\component\Can\Implementation\Can_Irq.c	   327  # define CanPhysToLogChannelIndex_13  kCanPhysToLogChannelIndex_13,
; ..\component\Can\Implementation\Can_Irq.c	   328  # define CanPhysToLogChannel_14       kCanPhysToLogChannelIndex_14
; ..\component\Can\Implementation\Can_Irq.c	   329  # define CanPhysToLogChannelIndex_14  kCanPhysToLogChannelIndex_14,
; ..\component\Can\Implementation\Can_Irq.c	   330  # define CanPhysToLogChannel_15       kCanPhysToLogChannelIndex_15
; ..\component\Can\Implementation\Can_Irq.c	   331  # define CanPhysToLogChannelIndex_15  kCanPhysToLogChannelIndex_15,
; ..\component\Can\Implementation\Can_Irq.c	   332  # define CanPhysToLogChannel_16       kCanPhysToLogChannelIndex_16
; ..\component\Can\Implementation\Can_Irq.c	   333  # define CanPhysToLogChannelIndex_16  kCanPhysToLogChannelIndex_16,
; ..\component\Can\Implementation\Can_Irq.c	   334  # define CanPhysToLogChannel_17       kCanPhysToLogChannelIndex_17
; ..\component\Can\Implementation\Can_Irq.c	   335  # define CanPhysToLogChannelIndex_17  kCanPhysToLogChannelIndex_17,
; ..\component\Can\Implementation\Can_Irq.c	   336  # define CanPhysToLogChannel_18       kCanPhysToLogChannelIndex_18
; ..\component\Can\Implementation\Can_Irq.c	   337  # define CanPhysToLogChannelIndex_18  kCanPhysToLogChannelIndex_18,
; ..\component\Can\Implementation\Can_Irq.c	   338  # define CanPhysToLogChannel_19       kCanPhysToLogChannelIndex_19
; ..\component\Can\Implementation\Can_Irq.c	   339  # define CanPhysToLogChannelIndex_19  kCanPhysToLogChannelIndex_19,
; ..\component\Can\Implementation\Can_Irq.c	   340  #endif
; ..\component\Can\Implementation\Can_Irq.c	   341  /* PRQA  L:QAC_Can_3614 */
; ..\component\Can\Implementation\Can_Irq.c	   342  
; ..\component\Can\Implementation\Can_Irq.c	   343  
; ..\component\Can\Implementation\Can_Irq.c	   344  
; ..\component\Can\Implementation\Can_Irq.c	   345  #if defined( C_ENABLE_ISR_MANDATORY )  /* ISR necessary; no pure polling configuration */
; ..\component\Can\Implementation\Can_Irq.c	   346  
; ..\component\Can\Implementation\Can_Irq.c	   347  
; ..\component\Can\Implementation\Can_Irq.c	   348  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   349  | NAME:             CanIsr_0
; ..\component\Can\Implementation\Can_Irq.c	   350  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   351  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   352  #  if defined( kCanPhysToLogChannelIndex_0 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   353  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   354  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   355  #    if defined (osdIsrCanIsr_0Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   356  #     if (osdIsrCanIsr_0Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   357  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   358  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   359  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   360  /*!
; ..\component\Can\Implementation\Can_Irq.c	   361   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   362   *
; ..\component\Can\Implementation\Can_Irq.c	   363   *
; ..\component\Can\Implementation\Can_Irq.c	   364   */
; ..\component\Can\Implementation\Can_Irq.c	   365  ISR( CanIsr_0 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; Function Os_Isr_CanIsr_0
.L3:
Os_Isr_CanIsr_0:	.type	func

; ..\component\Can\Implementation\Can_Irq.c	   366  #   else
; ..\component\Can\Implementation\Can_Irq.c	   367  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_0Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   368  #     if (osdIsrCanIsr_0Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   369  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   370  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   371  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   372  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   373  /*!
; ..\component\Can\Implementation\Can_Irq.c	   374   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   375   *
; ..\component\Can\Implementation\Can_Irq.c	   376   *
; ..\component\Can\Implementation\Can_Irq.c	   377   */
; ..\component\Can\Implementation\Can_Irq.c	   378  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_0( void )
; ..\component\Can\Implementation\Can_Irq.c	   379  #    else
; ..\component\Can\Implementation\Can_Irq.c	   380  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   381  /*!
; ..\component\Can\Implementation\Can_Irq.c	   382   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   383   *
; ..\component\Can\Implementation\Can_Irq.c	   384   *
; ..\component\Can\Implementation\Can_Irq.c	   385   */
; ..\component\Can\Implementation\Can_Irq.c	   386  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_0) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_0( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   387  #     else
; ..\component\Can\Implementation\Can_Irq.c	   388  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   389  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   390  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   391  /*!
; ..\component\Can\Implementation\Can_Irq.c	   392   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   393   *
; ..\component\Can\Implementation\Can_Irq.c	   394   *
; ..\component\Can\Implementation\Can_Irq.c	   395   */
; ..\component\Can\Implementation\Can_Irq.c	   396  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_0( void )
; ..\component\Can\Implementation\Can_Irq.c	   397  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   398  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   399  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   400  {
; ..\component\Can\Implementation\Can_Irq.c	   401  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   402  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   403      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   404  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   405      CanInterrupt(Can_GetPhysToLogChannel(0));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   406  #   else
; ..\component\Can\Implementation\Can_Irq.c	   407      CanInterrupt(kCanPhysToLogChannelIndex_0);                      /* call Interrupthandling with logical channel */
	j	CanInterrupt
.L13:
	
__Os_Isr_CanIsr_0_function_end:
	.size	Os_Isr_CanIsr_0,__Os_Isr_CanIsr_0_function_end-Os_Isr_CanIsr_0
.L12:
	; End of function
	
	.calls	'Os_Isr_CanIsr_0','CanInterrupt'
	.extern	CanInterrupt
	.calls	'Os_Isr_CanIsr_0','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L5:
	.word	17655
	.half	3
	.word	.L6
	.byte	4
.L4:
	.byte	1
	.byte	'..\\component\\Can\\Implementation\\Can_Irq.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L7
	.byte	2
	.byte	'int',0,4,5,3
	.word	135
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	142
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	184
	.byte	7
	.word	184
	.byte	8
	.byte	'__cmpswapw',0
	.word	200
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	205
	.byte	9
	.byte	'value',0
	.word	184
	.byte	9
	.byte	'compare',0
	.word	184
	.byte	0,10
	.byte	'CanInterrupt',0,1,244,17,32,1,1,1,1,11,1,7
	.word	284
	.byte	12
	.byte	'__codeptr',0,2,1,1
	.word	286
	.byte	2
	.byte	'unsigned char',0,1,8,12
	.byte	'boolean',0,3,101,31
	.word	309
	.byte	12
	.byte	'uint8',0,3,104,31
	.word	309
	.byte	2
	.byte	'short int',0,2,5,12
	.byte	'sint16',0,3,105,31
	.word	356
	.byte	2
	.byte	'unsigned short int',0,2,7,12
	.byte	'uint16',0,3,106,31
	.word	384
	.byte	2
	.byte	'long int',0,4,5,12
	.byte	'sint32',0,3,107,31
	.word	421
	.byte	2
	.byte	'unsigned long int',0,4,7,12
	.byte	'uint32',0,3,108,31
	.word	448
	.byte	12
	.byte	'uint8_least',0,3,111,31
	.word	309
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'uint64',0,3,121,30
	.word	504
	.byte	12
	.byte	'StatusType',0,4,127,23
	.word	309
	.byte	13,4,134,1,9,8,14
	.byte	'vendorID',0
	.word	384
	.byte	2,2,35,0,14
	.byte	'moduleID',0
	.word	384
	.byte	2,2,35,2,14
	.byte	'sw_major_version',0
	.word	309
	.byte	1,2,35,4,14
	.byte	'sw_minor_version',0
	.word	309
	.byte	1,2,35,5,14
	.byte	'sw_patch_version',0
	.word	309
	.byte	1,2,35,6,0,12
	.byte	'Std_VersionInfoType',0,4,141,1,3
	.word	564
	.byte	12
	.byte	'PduIdType',0,5,63,15
	.word	309
	.byte	12
	.byte	'PduLengthType',0,5,65,15
	.word	309
	.byte	7
	.word	309
	.byte	12
	.byte	'SduDataPtrType',0,6,196,1,54
	.word	754
	.byte	15,6,219,1,9,1,16
	.byte	'TP_DATACONF',0,0,16
	.byte	'TP_DATARETRY',0,1,16
	.byte	'TP_CONFPENDING',0,2,0,12
	.byte	'TpDataStateType',0,6,226,1,3
	.word	783
	.byte	12
	.byte	'Can_IdType',0,7,52,30
	.word	384
	.byte	12
	.byte	'Can_HwHandleType',0,7,55,29
	.word	309
	.byte	12
	.byte	'Can_SduPtrType',0,7,58,45
	.word	754
	.byte	17
	.byte	'Can_PduTypeTag',0,7,61,16,12,14
	.byte	'id',0
	.word	384
	.byte	2,2,35,0,14
	.byte	'length',0
	.word	309
	.byte	1,2,35,2,14
	.byte	'sdu',0
	.word	905
	.byte	4,2,35,4,14
	.byte	'swPduHandle',0
	.word	309
	.byte	1,2,35,8,0,12
	.byte	'Can_PduType',0,7,67,3
	.word	928
	.byte	7
	.word	309
	.byte	15,7,77,9,1,16
	.byte	'CAN_CS_UNINIT',0,0,16
	.byte	'CAN_CS_STARTED',0,1,16
	.byte	'CAN_CS_STOPPED',0,2,16
	.byte	'CAN_CS_SLEEP',0,3,0,12
	.byte	'Can_ControllerStateType',0,7,82,3
	.word	1036
	.byte	15,7,84,9,1,16
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,16
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,16
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,12
	.byte	'Can_ErrorStateType',0,7,88,3
	.word	1139
	.byte	15,8,147,1,9,1,16
	.byte	'Default_Init_Task',0,0,16
	.byte	'Default_Init_Task_Trusted',0,1,16
	.byte	'IdleTask_OsCore0',0,2,16
	.byte	'bsw_task',0,3,16
	.byte	'swc_init',0,4,16
	.byte	'swc_task',0,5,16
	.byte	'INVALID_TASK',0,6,16
	.byte	'OS_TASKID_COUNT',0,6,0,12
	.byte	'TaskType',0,8,157,1,3
	.word	1245
	.byte	15,8,160,1,9,1,16
	.byte	'CanIsr_0',0,0,16
	.byte	'CounterIsr_SystemTimer',0,1,16
	.byte	'INVALID_ISR',0,2,16
	.byte	'OS_ISRID_COUNT',0,2,0,12
	.byte	'ISRType',0,8,166,1,3
	.word	1403
	.byte	12
	.byte	'Os_Hal_AddressType',0,9,61,16
	.word	448
	.byte	18,64
	.word	448
	.byte	19,15,0,17
	.byte	'Os_ExceptionContextType_Tag',0,10,71,8,160,1,14
	.byte	'AddressRegisters',0
	.word	1521
	.byte	64,2,35,0,14
	.byte	'DataRegisters',0
	.word	1521
	.byte	64,2,35,64,14
	.byte	'Ra',0
	.word	448
	.byte	4,3,35,128,1,14
	.byte	'Psw',0
	.word	448
	.byte	4,3,35,132,1,14
	.byte	'ExceptionSource',0
	.word	448
	.byte	4,3,35,136,1,14
	.byte	'Pcpn',0
	.word	448
	.byte	4,3,35,140,1,14
	.byte	'Pie',0
	.word	448
	.byte	4,3,35,144,1,14
	.byte	'MpuRegionForStackLow',0
	.word	448
	.byte	4,3,35,148,1,14
	.byte	'MpuRegionForStackUpper',0
	.word	448
	.byte	4,3,35,152,1,14
	.byte	'RawPCXI',0
	.word	448
	.byte	4,3,35,156,1,0,12
	.byte	'Os_ExceptionContextType',0,9,66,44
	.word	1530
	.byte	12
	.byte	'Os_InterruptSourceIdType',0,11,238,1,16
	.word	448
	.byte	12
	.byte	'Os_ExceptionSourceIdType',0,11,246,1,16
	.word	448
	.byte	15,11,161,2,9,1,16
	.byte	'RUNNING',0,0,16
	.byte	'READY',0,1,16
	.byte	'WAITING',0,2,16
	.byte	'SUSPENDED',0,3,0,12
	.byte	'TaskStateType',0,11,175,2,3
	.word	1878
	.byte	12
	.byte	'EventMaskType',0,11,182,2,16
	.word	504
	.byte	12
	.byte	'Os_TickType',0,11,200,2,19
	.word	448
	.byte	12
	.byte	'TickType',0,11,206,2,21
	.word	448
	.byte	13,11,220,2,9,12,14
	.byte	'maxallowedvalue',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'ticksperbase',0
	.word	448
	.byte	4,2,35,4,14
	.byte	'mincycle',0
	.word	448
	.byte	4,2,35,8,0,12
	.byte	'AlarmBaseType',0,11,228,2,2
	.word	2010
	.byte	15,11,128,3,9,1,16
	.byte	'APPLICATION_TERMINATED',0,0,16
	.byte	'APPLICATION_RESTARTING',0,1,16
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,12
	.byte	'ApplicationStateType',0,11,133,3,3
	.word	2105
	.byte	15,11,177,3,9,1,16
	.byte	'OSServiceId_GetApplicationID',0,0,16
	.byte	'OSServiceId_GetISRID',0,1,16
	.byte	'OSServiceId_CallTrustedFunction',0,2,16
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,16
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,16
	.byte	'OSServiceId_CheckObjectAccess',0,5,16
	.byte	'OSServiceId_CheckObjectOwnership',0,6,16
	.byte	'OSServiceId_StartScheduleTableRel',0,7,16
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,16
	.byte	'OSServiceId_StopScheduleTable',0,9,16
	.byte	'OSServiceId_NextScheduleTable',0,10,16
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,16
	.byte	'OSServiceId_SyncScheduleTable',0,12,16
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,16
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,16
	.byte	'OSServiceId_IncrementCounter',0,15,16
	.byte	'OSServiceId_GetCounterValue',0,16,16
	.byte	'OSServiceId_GetElapsedValue',0,17,16
	.byte	'OSServiceId_TerminateApplication',0,18,16
	.byte	'OSServiceId_AllowAccess',0,19,16
	.byte	'OSServiceId_GetApplicationState',0,20,16
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,16
	.byte	'OSServiceId_GetCoreID',0,22,16
	.byte	'OSServiceId_StartCore',0,23,16
	.byte	'OSServiceId_StartNonAutosarCore',0,24,16
	.byte	'OSServiceId_GetSpinlock',0,25,16
	.byte	'OSServiceId_ReleaseSpinlock',0,26,16
	.byte	'OSServiceId_TryToGetSpinlock',0,27,16
	.byte	'OSServiceId_ShutdownAllCores',0,28,16
	.byte	'OSServiceId_ControlIdle',0,29,16
	.byte	'OSServiceId_IocSend',0,30,16
	.byte	'OSServiceId_IocWrite',0,31,16
	.byte	'OSServiceId_IocSendGroup',0,32,16
	.byte	'OSServiceId_IocWriteGroup',0,33,16
	.byte	'OSServiceId_IocReceive',0,34,16
	.byte	'OSServiceId_IocRead',0,35,16
	.byte	'OSServiceId_IocReceiveGroup',0,36,16
	.byte	'OSServiceId_IocReadGroup',0,37,16
	.byte	'OSServiceId_IocEmptyQueue',0,38,16
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,16
	.byte	'OSServiceId_GetExceptionContext',0,160,1,16
	.byte	'OSServiceId_SetExceptionContext',0,161,1,16
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,16
	.byte	'OSServiceId_AppKill',0,163,1,16
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,16
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,16
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,16
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,16
	.byte	'OSServiceId_TimerIsr',0,168,1,16
	.byte	'OSServiceId_IsrWrapper',0,169,1,16
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,16
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,16
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,16
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,16
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,16
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,16
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,16
	.byte	'OSServiceId_GetSemaphore',0,177,1,16
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,16
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,16
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,16
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,16
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,16
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,16
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,16
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,16
	.byte	'OSServiceId_HookCallCallback',0,186,1,16
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,16
	.byte	'OSServiceId_IsInterruptPending',0,188,1,16
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,16
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,16
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,16
	.byte	'OSServiceId_GetCoreStartState',0,192,1,16
	.byte	'OSServiceId_StartOS',0,208,1,16
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,16
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,16
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,16
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,16
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,16
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,16
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,16
	.byte	'OSServiceId_ActivateTask',0,217,1,16
	.byte	'OSServiceId_TerminateTask',0,218,1,16
	.byte	'OSServiceId_ChainTask',0,219,1,16
	.byte	'OSServiceId_GetTaskID',0,220,1,16
	.byte	'OSServiceId_GetTaskState',0,221,1,16
	.byte	'OSServiceId_Schedule',0,222,1,16
	.byte	'OSServiceId_SetEvent',0,223,1,16
	.byte	'OSServiceId_ClearEvent',0,224,1,16
	.byte	'OSServiceId_GetEvent',0,225,1,16
	.byte	'OSServiceId_WaitEvent',0,226,1,16
	.byte	'OSServiceId_GetAlarmBase',0,227,1,16
	.byte	'OSServiceId_GetAlarm',0,228,1,16
	.byte	'OSServiceId_SetRelAlarm',0,229,1,16
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,16
	.byte	'OSServiceId_CancelAlarm',0,231,1,16
	.byte	'OSServiceId_GetResource',0,232,1,16
	.byte	'OSServiceId_ReleaseResource',0,233,1,16
	.byte	'OSSERVICEID_COUNT',0,255,1,0,12
	.byte	'OSServiceIdType',0,11,156,4,3
	.word	2217
	.byte	15,11,172,4,9,2,16
	.byte	'OS_STATUS_OK',0,0,16
	.byte	'OS_STATUS_CALLEVEL',0,2,16
	.byte	'OS_STATUS_LIMIT',0,4,16
	.byte	'OS_STATUS_RESOURCE',0,6,16
	.byte	'OS_STATUS_SERVICEID',0,9,16
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,16
	.byte	'OS_STATUS_MISSINGEND',0,11,16
	.byte	'OS_STATUS_DISABLEDINT',0,12,16
	.byte	'OS_STATUS_STACKFAULT',0,13,16
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,16
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,16
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,16
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,16
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,16
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,16
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,16
	.byte	'OS_STATUS_SPINLOCK',0,21,16
	.byte	'OS_STATUS_CORE',0,22,16
	.byte	'OS_STATUS_OVERFLOW',0,245,1,16
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,16
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,16
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,16
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,16
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,16
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,16
	.byte	'OS_STATUS_API_ERROR',0,252,1,16
	.byte	'OS_STATUS_ASSERTION',0,253,1,16
	.byte	'OS_STATUS_OVERLOAD',0,254,1,16
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,16
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,16
	.byte	'OS_STATUS_ID_1',0,131,2,16
	.byte	'OS_STATUS_UNLOCKED',0,133,2,16
	.byte	'OS_STATUS_STATE_1',0,135,2,16
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,16
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,16
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,16
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,16
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,16
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,16
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,16
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,16
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,16
	.byte	'OS_STATUS_ID_2',0,131,4,16
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,16
	.byte	'OS_STATUS_STATE_2',0,135,4,16
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,16
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,16
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,16
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,16
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,16
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,16
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,16
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,16
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,16
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,16
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,16
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,16
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,16
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,16
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,16
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,16
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,16
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,16
	.byte	'OS_STATUS_STOPPED_1',0,133,10,16
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,16
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,16
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,16
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,16
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,16
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,16
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,16
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,16
	.byte	'OS_STATUS_NEXTED_1',0,133,14,16
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,16
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,16
	.byte	'OS_STATUS_LOCKED',0,129,16,16
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,16
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,16
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,16
	.byte	'OS_STATUS_PRIORITY',0,129,18,16
	.byte	'OS_STATUS_ORDER',0,133,18,16
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,16
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,16
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,16
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,16
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,16
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,12
	.byte	'Os_StatusType',0,11,232,5,3
	.word	5387
	.byte	13,11,133,6,9,4,14
	.byte	'Service',0
	.word	2217
	.byte	1,2,35,0,14
	.byte	'Error',0
	.word	309
	.byte	1,2,35,1,14
	.byte	'DetailedError',0
	.word	5387
	.byte	2,2,35,2,0,12
	.byte	'Os_ErrorInformationType',0,11,143,6,3
	.word	7917
	.byte	15,11,175,6,9,1,16
	.byte	'SCHEDULETABLE_STOPPED',0,0,16
	.byte	'SCHEDULETABLE_NEXT',0,1,16
	.byte	'SCHEDULETABLE_WAITING',0,2,16
	.byte	'SCHEDULETABLE_RUNNING',0,3,16
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,12
	.byte	'ScheduleTableStatusType',0,11,192,6,3
	.word	8012
	.byte	12
	.byte	'Os_AccessCheckAddress',0,11,199,6,29
	.word	448
	.byte	15,11,211,6,9,1,16
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,16
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,16
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,16
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,16
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,16
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,16
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,16
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,16
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,16
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,16
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,16
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,16
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,16
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,16
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,16
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,16
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,16
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,16
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,16
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,12
	.byte	'Os_MemAccessType',0,11,233,6,3
	.word	8216
	.byte	12
	.byte	'tCanLLCanIntOld',0,12,161,3,37
	.word	448
	.byte	12
	.byte	'Can_OsIsrType',0,12,165,3,17
	.word	1403
	.byte	12
	.byte	'Can_ExternalTickType',0,12,178,3,18
	.word	448
	.byte	18,32
	.word	448
	.byte	19,7,0,12
	.byte	'Can_LoopTimeout_dim_type',0,12,183,3,44
	.word	8823
	.byte	12
	.byte	'Can_ControllerConfigIterType',0,12,192,13,21
	.word	309
	.byte	12
	.byte	'Can_PduOfActiveSendObjectType',0,12,148,14,19
	.word	309
	.byte	12
	.byte	'Can_StateOfActiveSendObjectType',0,12,151,14,16
	.word	384
	.byte	12
	.byte	'Can_BTPType',0,12,154,14,16
	.word	448
	.byte	12
	.byte	'Can_RXBCOfBufferConfigType',0,12,160,14,15
	.word	309
	.byte	12
	.byte	'Can_RXF0COfBufferConfigType',0,12,163,14,16
	.word	448
	.byte	12
	.byte	'Can_RXF1COfBufferConfigType',0,12,166,14,15
	.word	309
	.byte	12
	.byte	'Can_TXBCOfBufferConfigType',0,12,169,14,16
	.word	448
	.byte	12
	.byte	'Can_TXEFCOfBufferConfigType',0,12,172,14,15
	.word	309
	.byte	12
	.byte	'Can_CanIfChannelIdType',0,12,190,14,15
	.word	309
	.byte	12
	.byte	'Can_CanSubSystemBaseAdrType',0,12,193,14,16
	.word	448
	.byte	12
	.byte	'Can_BasisAdrOfControllerConfigType',0,12,196,14,16
	.word	448
	.byte	12
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,12,199,14,15
	.word	309
	.byte	12
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,12,202,14,16
	.word	384
	.byte	12
	.byte	'Can_IsTTCanOfControllerConfigType',0,12,205,14,17
	.word	309
	.byte	12
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,12,208,14,15
	.word	309
	.byte	12
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,12,211,14,15
	.word	309
	.byte	12
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,12,214,14,15
	.word	309
	.byte	12
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,12,220,14,15
	.word	309
	.byte	12
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,12,223,14,15
	.word	309
	.byte	12
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,12,226,14,15
	.word	309
	.byte	12
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,12,232,14,15
	.word	309
	.byte	12
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,12,235,14,15
	.word	309
	.byte	12
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,12,238,14,15
	.word	309
	.byte	12
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,12,241,14,15
	.word	309
	.byte	12
	.byte	'Can_RxSelectionOfControllerConfigType',0,12,244,14,15
	.word	309
	.byte	12
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,12,247,14,15
	.word	309
	.byte	12
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,12,250,14,15
	.word	309
	.byte	12
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,12,253,14,15
	.word	309
	.byte	12
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,12,128,15,15
	.word	309
	.byte	12
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,12,131,15,15
	.word	309
	.byte	12
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,12,134,15,15
	.word	309
	.byte	12
	.byte	'Can_BusOffNotificationOfControllerDataType',0,12,137,15,15
	.word	309
	.byte	12
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,12,140,15,15
	.word	309
	.byte	12
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,12,143,15,15
	.word	309
	.byte	12
	.byte	'Can_IntEnableOfControllerDataType',0,12,146,15,16
	.word	448
	.byte	12
	.byte	'Can_IsBusOffOfControllerDataType',0,12,149,15,17
	.word	309
	.byte	12
	.byte	'Can_LastInitObjectOfControllerDataType',0,12,152,15,15
	.word	309
	.byte	12
	.byte	'Can_LastStateOfControllerDataType',0,12,155,15,15
	.word	309
	.byte	12
	.byte	'Can_LogStatusOfControllerDataType',0,12,158,15,15
	.word	309
	.byte	12
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,12,161,15,15
	.word	309
	.byte	12
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,12,164,15,16
	.word	448
	.byte	12
	.byte	'Can_PrevModeOfControllerDataType',0,12,167,15,15
	.word	309
	.byte	12
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,12,170,15,15
	.word	309
	.byte	12
	.byte	'Can_TXBCROfControllerDataType',0,12,173,15,16
	.word	448
	.byte	12
	.byte	'Can_TXBRPOfControllerDataType',0,12,176,15,16
	.word	448
	.byte	12
	.byte	'Can_FBTPType',0,12,179,15,16
	.word	448
	.byte	12
	.byte	'Can_GFCType',0,12,182,15,15
	.word	309
	.byte	12
	.byte	'Can_INT_PriorityType',0,12,185,15,15
	.word	309
	.byte	12
	.byte	'Can_INT_RoutingGroupType',0,12,188,15,15
	.word	309
	.byte	12
	.byte	'Can_InitObjectBaudrateType',0,12,191,15,16
	.word	384
	.byte	12
	.byte	'Can_InitObjectFdBrsConfigType',0,12,194,15,15
	.word	309
	.byte	12
	.byte	'Can_InitObjectStartIndexType',0,12,197,15,15
	.word	309
	.byte	12
	.byte	'Can_ActiveSendObjectOfMailboxType',0,12,200,15,15
	.word	309
	.byte	12
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,12,203,15,15
	.word	309
	.byte	12
	.byte	'Can_FdPaddingOfMailboxType',0,12,206,15,15
	.word	309
	.byte	12
	.byte	'Can_HwHandleOfMailboxType',0,12,209,15,15
	.word	309
	.byte	12
	.byte	'Can_IDValueOfMailboxType',0,12,212,15,15
	.word	309
	.byte	12
	.byte	'Can_MailboxSizeOfMailboxType',0,12,215,15,15
	.word	309
	.byte	12
	.byte	'Can_MailboxTypeOfMailboxType',0,12,218,15,15
	.word	309
	.byte	12
	.byte	'Can_MaxDataLenOfMailboxType',0,12,221,15,15
	.word	309
	.byte	12
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,12,224,15,15
	.word	309
	.byte	12
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,12,227,15,15
	.word	309
	.byte	12
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,12,230,15,15
	.word	309
	.byte	12
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,12,233,15,15
	.word	309
	.byte	12
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,12,236,15,15
	.word	309
	.byte	12
	.byte	'Can_FLSSAOfSIDFCType',0,12,242,15,15
	.word	309
	.byte	12
	.byte	'Can_LSSOfSIDFCType',0,12,245,15,15
	.word	309
	.byte	12
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,12,248,15,15
	.word	309
	.byte	12
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,12,251,15,15
	.word	309
	.byte	12
	.byte	'Can_SIDFEType',0,12,129,16,16
	.word	448
	.byte	12
	.byte	'Can_SRN_AddressType',0,12,132,16,16
	.word	448
	.byte	12
	.byte	'Can_RXBAOfShmAdrType',0,12,135,16,16
	.word	448
	.byte	12
	.byte	'Can_RXF0AOfShmAdrType',0,12,138,16,16
	.word	448
	.byte	12
	.byte	'Can_RXF1AOfShmAdrType',0,12,141,16,16
	.word	448
	.byte	12
	.byte	'Can_SIDFAOfShmAdrType',0,12,144,16,16
	.word	448
	.byte	12
	.byte	'Can_StartAdrOfShmAdrType',0,12,147,16,16
	.word	448
	.byte	12
	.byte	'Can_StopAdrOfShmAdrType',0,12,150,16,16
	.word	448
	.byte	12
	.byte	'Can_TXBAOfShmAdrType',0,12,153,16,16
	.word	448
	.byte	12
	.byte	'Can_TXEFAOfShmAdrType',0,12,156,16,16
	.word	448
	.byte	12
	.byte	'Can_XIDFAOfShmAdrType',0,12,159,16,16
	.word	448
	.byte	12
	.byte	'Can_F0DSOfShmElementSizeType',0,12,162,16,15
	.word	309
	.byte	12
	.byte	'Can_F1DSOfShmElementSizeType',0,12,165,16,15
	.word	309
	.byte	12
	.byte	'Can_RBDSOfShmElementSizeType',0,12,168,16,15
	.word	309
	.byte	12
	.byte	'Can_TBDSOfShmElementSizeType',0,12,171,16,15
	.word	309
	.byte	12
	.byte	'Can_TEFBDSOfShmElementSizeType',0,12,174,16,15
	.word	309
	.byte	12
	.byte	'Can_TDCRType',0,12,130,17,15
	.word	309
	.byte	12
	.byte	'Can_XIDAMType',0,12,133,17,16
	.word	448
	.byte	12
	.byte	'Can_FLESAOfXIDFCType',0,12,136,17,15
	.word	309
	.byte	12
	.byte	'Can_LSEOfXIDFCType',0,12,139,17,15
	.word	309
	.byte	12
	.byte	'Can_EIDFE_0OfXIDFEType',0,12,142,17,15
	.word	309
	.byte	12
	.byte	'Can_EIDFE_1OfXIDFEType',0,12,145,17,15
	.word	309
	.byte	17
	.byte	'sCan_ActiveSendObjectType',0,12,161,17,16,4,14
	.byte	'StateOfActiveSendObject',0
	.word	384
	.byte	2,2,35,0,14
	.byte	'PduOfActiveSendObject',0
	.word	309
	.byte	1,2,35,2,0,12
	.byte	'Can_ActiveSendObjectType',0,12,165,17,3
	.word	12631
	.byte	17
	.byte	'sCan_BufferConfigType',0,12,168,17,16,12,14
	.byte	'RXF0COfBufferConfig',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'TXBCOfBufferConfig',0
	.word	448
	.byte	4,2,35,4,14
	.byte	'RXBCOfBufferConfig',0
	.word	309
	.byte	1,2,35,8,14
	.byte	'RXF1COfBufferConfig',0
	.word	309
	.byte	1,2,35,9,14
	.byte	'TXEFCOfBufferConfig',0
	.word	309
	.byte	1,2,35,10,0,12
	.byte	'Can_BufferConfigType',0,12,175,17,3
	.word	12762
	.byte	17
	.byte	'sCan_ControllerConfigType',0,12,178,17,16,28,14
	.byte	'BasisAdrOfControllerConfig',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	384
	.byte	2,2,35,4,14
	.byte	'IsTTCanOfControllerConfig',0
	.word	309
	.byte	1,2,35,6,14
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	309
	.byte	1,2,35,7,14
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	309
	.byte	1,2,35,8,14
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	309
	.byte	1,2,35,9,14
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	309
	.byte	1,2,35,10,14
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	309
	.byte	1,2,35,11,14
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	309
	.byte	1,2,35,12,14
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	309
	.byte	1,2,35,13,14
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	309
	.byte	1,2,35,14,14
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	309
	.byte	1,2,35,15,14
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	309
	.byte	1,2,35,16,14
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	309
	.byte	1,2,35,17,14
	.byte	'RxSelectionOfControllerConfig',0
	.word	309
	.byte	1,2,35,18,14
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	309
	.byte	1,2,35,19,14
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	309
	.byte	1,2,35,20,14
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	309
	.byte	1,2,35,21,14
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	309
	.byte	1,2,35,22,14
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	309
	.byte	1,2,35,23,14
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	309
	.byte	1,2,35,24,0,12
	.byte	'Can_ControllerConfigType',0,12,201,17,3
	.word	12964
	.byte	17
	.byte	'sCan_ControllerDataType',0,12,204,17,16,64,14
	.byte	'IntEnableOfControllerData',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	448
	.byte	4,2,35,4,14
	.byte	'TXBCROfControllerData',0
	.word	448
	.byte	4,2,35,8,14
	.byte	'TXBRPOfControllerData',0
	.word	448
	.byte	4,2,35,12,14
	.byte	'BusOffNotificationOfControllerData',0
	.word	309
	.byte	1,2,35,16,14
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	309
	.byte	1,2,35,17,14
	.byte	'CanInterruptCounterOfControllerData',0
	.word	309
	.byte	1,2,35,18,14
	.byte	'IsBusOffOfControllerData',0
	.word	309
	.byte	1,2,35,19,14
	.byte	'LastInitObjectOfControllerData',0
	.word	309
	.byte	1,2,35,20,14
	.byte	'LastStateOfControllerData',0
	.word	309
	.byte	1,2,35,21,14
	.byte	'LogStatusOfControllerData',0
	.word	309
	.byte	1,2,35,22,14
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	309
	.byte	1,2,35,23,14
	.byte	'PrevModeOfControllerData',0
	.word	309
	.byte	1,2,35,24,14
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	309
	.byte	1,2,35,25,14
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	448
	.byte	4,2,35,26,14
	.byte	'LoopTimeoutOfControllerData',0
	.word	8832
	.byte	32,2,35,30,0,12
	.byte	'Can_ControllerDataType',0,12,222,17,3
	.word	13957
	.byte	18,32
	.word	448
	.byte	19,7,0,17
	.byte	'sCan_MailboxType',0,12,225,17,16,12,14
	.byte	'ActiveSendObjectOfMailbox',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	309
	.byte	1,2,35,1,14
	.byte	'FdPaddingOfMailbox',0
	.word	309
	.byte	1,2,35,2,14
	.byte	'HwHandleOfMailbox',0
	.word	309
	.byte	1,2,35,3,14
	.byte	'IDValueOfMailbox',0
	.word	309
	.byte	1,2,35,4,14
	.byte	'MailboxSizeOfMailbox',0
	.word	309
	.byte	1,2,35,5,14
	.byte	'MailboxTypeOfMailbox',0
	.word	309
	.byte	1,2,35,6,14
	.byte	'MaxDataLenOfMailbox',0
	.word	309
	.byte	1,2,35,7,14
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	309
	.byte	1,2,35,8,0,12
	.byte	'Can_MailboxType',0,12,236,17,3
	.word	14673
	.byte	17
	.byte	'sCan_MemorySectionInfoType',0,12,239,17,16,1,14
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	309
	.byte	1,2,35,0,0,12
	.byte	'Can_MemorySectionInfoType',0,12,242,17,3
	.word	15003
	.byte	17
	.byte	'sCan_MemorySectionObjectsType',0,12,245,17,16,4,14
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	309
	.byte	1,2,35,1,14
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	309
	.byte	1,2,35,2,0,12
	.byte	'Can_MemorySectionObjectsType',0,12,250,17,3
	.word	15119
	.byte	17
	.byte	'sCan_SIDFCType',0,12,253,17,16,4,14
	.byte	'FLSSAOfSIDFC',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'LSSOfSIDFC',0
	.word	309
	.byte	1,2,35,1,14
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	309
	.byte	1,2,35,2,14
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	309
	.byte	1,2,35,3,0,12
	.byte	'Can_SIDFCType',0,12,131,18,3
	.word	15325
	.byte	17
	.byte	'sCan_ShmAdrType',0,12,134,18,16,36,14
	.byte	'RXBAOfShmAdr',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'RXF0AOfShmAdr',0
	.word	448
	.byte	4,2,35,4,14
	.byte	'RXF1AOfShmAdr',0
	.word	448
	.byte	4,2,35,8,14
	.byte	'SIDFAOfShmAdr',0
	.word	448
	.byte	4,2,35,12,14
	.byte	'StartAdrOfShmAdr',0
	.word	448
	.byte	4,2,35,16,14
	.byte	'StopAdrOfShmAdr',0
	.word	448
	.byte	4,2,35,20,14
	.byte	'TXBAOfShmAdr',0
	.word	448
	.byte	4,2,35,24,14
	.byte	'TXEFAOfShmAdr',0
	.word	448
	.byte	4,2,35,28,14
	.byte	'XIDFAOfShmAdr',0
	.word	448
	.byte	4,2,35,32,0,12
	.byte	'Can_ShmAdrType',0,12,145,18,3
	.word	15470
	.byte	17
	.byte	'sCan_ShmElementSizeType',0,12,148,18,16,6,14
	.byte	'F0DSOfShmElementSize',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'F1DSOfShmElementSize',0
	.word	309
	.byte	1,2,35,1,14
	.byte	'RBDSOfShmElementSize',0
	.word	309
	.byte	1,2,35,2,14
	.byte	'TBDSOfShmElementSize',0
	.word	309
	.byte	1,2,35,3,14
	.byte	'TEFBDSOfShmElementSize',0
	.word	309
	.byte	1,2,35,4,0,12
	.byte	'Can_ShmElementSizeType',0,12,155,18,3
	.word	15727
	.byte	17
	.byte	'sCan_XIDFCType',0,12,158,18,16,2,14
	.byte	'FLESAOfXIDFC',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'LSEOfXIDFC',0
	.word	309
	.byte	1,2,35,1,0,12
	.byte	'Can_XIDFCType',0,12,162,18,3
	.word	15942
	.byte	17
	.byte	'sCan_XIDFEType',0,12,165,18,16,2,14
	.byte	'EIDFE_0OfXIDFE',0
	.word	309
	.byte	1,2,35,0,14
	.byte	'EIDFE_1OfXIDFE',0
	.word	309
	.byte	1,2,35,1,0,12
	.byte	'Can_XIDFEType',0,12,169,18,3
	.word	16029
	.byte	17
	.byte	'sCan_PCConfigType',0,12,143,19,16,1,14
	.byte	'Can_PCConfigNeverUsed',0
	.word	309
	.byte	1,2,35,0,0,12
	.byte	'Can_PCConfigType',0,12,146,19,3
	.word	16122
	.byte	12
	.byte	'Can_ConfigType',0,12,148,19,26
	.word	16122
	.byte	6
	.word	448
	.byte	6
	.word	448
	.byte	6
	.word	1521
	.byte	17
	.byte	'tElmTypeTag',0,1,145,9,25,72,14
	.byte	'E0',0
	.word	16228
	.byte	4,2,35,0,14
	.byte	'E1',0
	.word	16233
	.byte	4,2,35,4,14
	.byte	'data',0
	.word	16238
	.byte	64,2,35,8,0,6
	.word	16243
	.byte	12
	.byte	'tElmType',0,1,162,9,3
	.word	16300
	.byte	6
	.word	448
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	13,1,224,9,5,4,20
	.byte	'ID',0,4
	.word	16323
	.byte	29,3,2,35,0,20
	.byte	'RTR',0,1
	.word	16328
	.byte	1,2,2,35,3,20
	.byte	'XTD',0,1
	.word	16333
	.byte	1,1,2,35,3,20
	.byte	'ESI',0,1
	.word	16338
	.byte	1,0,2,35,3,0,6
	.word	448
	.byte	21,1,222,9,3,4,14
	.byte	'b0',0
	.word	16343
	.byte	4,2,35,0,14
	.byte	'B0',0
	.word	16409
	.byte	4,2,35,0,0,6
	.word	384
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	13,1,235,9,5,4,20
	.byte	'RXTS',0,2
	.word	16445
	.byte	16,0,2,35,0,20
	.byte	'DLC',0,1
	.word	16450
	.byte	4,4,2,35,2,20
	.byte	'BRS',0,1
	.word	16455
	.byte	1,3,2,35,2,20
	.byte	'FDF',0,1
	.word	16460
	.byte	1,2,2,35,2,20
	.byte	'r0',0,1
	.word	16465
	.byte	2,0,2,35,2,20
	.byte	'FIDX',0,1
	.word	16470
	.byte	7,1,2,35,3,20
	.byte	'ANMF',0,1
	.word	16475
	.byte	1,0,2,35,3,0,6
	.word	384
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	6
	.word	309
	.byte	13,1,245,9,5,4,20
	.byte	'r1',0,2
	.word	16594
	.byte	16,0,2,35,0,20
	.byte	'DLC',0,1
	.word	16599
	.byte	4,4,2,35,2,20
	.byte	'BRS',0,1
	.word	16604
	.byte	1,3,2,35,2,20
	.byte	'FDF',0,1
	.word	16609
	.byte	1,2,2,35,2,20
	.byte	'r0',0,1
	.word	16614
	.byte	1,1,2,35,2,20
	.byte	'EFC',0,1
	.word	16619
	.byte	1,0,2,35,2,20
	.byte	'MM',0,1
	.word	16624
	.byte	8,0,2,35,3,0,21,1,233,9,3,4,14
	.byte	'rb1',0
	.word	16480
	.byte	4,2,35,0,14
	.byte	'tb1',0
	.word	16629
	.byte	4,2,35,0,14
	.byte	'B1',0
	.word	448
	.byte	4,2,35,0,0,6
	.word	1521
	.byte	17
	.byte	'tCanChipMsgPtrTag',0,1,220,9,25,72,14
	.byte	'uB0',0
	.word	16414
	.byte	4,2,35,0,14
	.byte	'uB1',0
	.word	16738
	.byte	4,2,35,4,14
	.byte	'data',0
	.word	16783
	.byte	64,2,35,8,0,6
	.word	16788
	.byte	12
	.byte	'tCanChipMsgPtr',0,1,134,10,3
	.word	16853
	.byte	13,1,141,10,3,4,20
	.byte	'FnFL',0,1
	.word	309
	.byte	7,1,2,35,0,20
	.byte	'r2',0,1
	.word	309
	.byte	1,0,2,35,0,20
	.byte	'FnGI',0,1
	.word	309
	.byte	6,2,2,35,1,20
	.byte	'r1',0,4
	.word	448
	.byte	10,8,2,35,0,20
	.byte	'FnF',0,1
	.word	309
	.byte	1,7,2,35,3,20
	.byte	'RFnL',0,1
	.word	309
	.byte	1,6,2,35,3,20
	.byte	'r0',0,1
	.word	309
	.byte	6,0,2,35,3,0,22
	.byte	'tRXFnSTag',0,1,138,10,15,4,14
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16882
	.byte	4,2,35,0,0,12
	.byte	'tRXFnS',0,1,151,10,3
	.word	16994
	.byte	13,1,156,10,3,4,23,1
	.word	309
	.byte	2,6,2,35,0,20
	.byte	'FOSA',0,2
	.word	384
	.byte	14,0,2,35,0,20
	.byte	'F0S',0,1
	.word	309
	.byte	7,1,2,35,2,23,1
	.word	309
	.byte	1,0,2,35,2,20
	.byte	'F0WM',0,1
	.word	309
	.byte	7,1,2,35,3,23,1
	.word	309
	.byte	1,0,2,35,3,0,22
	.byte	'tRXFnCTag',0,1,153,10,15,4,14
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17049
	.byte	4,2,35,0,0,12
	.byte	'tRXFnC',0,1,165,10,3
	.word	17136
	.byte	13,1,171,10,3,4,20
	.byte	'F0DS',0,1
	.word	309
	.byte	3,5,2,35,0,23,1
	.word	309
	.byte	1,4,2,35,0,20
	.byte	'F1DS',0,1
	.word	309
	.byte	3,1,2,35,0,23,1
	.word	309
	.byte	1,0,2,35,0,20
	.byte	'RBDS',0,1
	.word	309
	.byte	3,5,2,35,1,23,4
	.word	448
	.byte	21,0,2,35,0,0,22
	.byte	'tRXESCTag',0,1,168,10,15,4,14
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17191
	.byte	4,2,35,0,0,12
	.byte	'tRXESC',0,1,180,10,3
	.word	17279
	.byte	13,1,185,10,3,4,20
	.byte	'TFFL',0,1
	.word	309
	.byte	6,2,2,35,0,23,1
	.word	309
	.byte	2,0,2,35,0,20
	.byte	'TFGI',0,1
	.word	309
	.byte	5,3,2,35,1,23,1
	.word	309
	.byte	3,0,2,35,1,20
	.byte	'TFQPI',0,1
	.word	309
	.byte	5,3,2,35,2,20
	.byte	'TFQF',0,1
	.word	309
	.byte	1,2,2,35,2,23,2
	.word	384
	.byte	10,0,2,35,2,0,22
	.byte	'tTXFQSTag',0,1,182,10,15,4,14
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17334
	.byte	4,2,35,0,0,12
	.byte	'tTXFQS',0,1,195,10,3
	.word	17439
	.byte	13,1,200,10,3,4,20
	.byte	'EFFL',0,1
	.word	309
	.byte	6,2,2,35,0,20
	.byte	'r1',0,1
	.word	309
	.byte	2,0,2,35,0,20
	.byte	'EFGI',0,1
	.word	309
	.byte	5,3,2,35,1,23,4
	.word	448
	.byte	11,8,2,35,0,20
	.byte	'EFF',0,1
	.word	309
	.byte	1,7,2,35,3,20
	.byte	'TEFL',0,1
	.word	309
	.byte	1,6,2,35,3,20
	.byte	'r0',0,1
	.word	309
	.byte	6,0,2,35,3,0,22
	.byte	'tTXEFSTag',0,1,197,10,15,4,14
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17494
	.byte	4,2,35,0,0,12
	.byte	'tTXEFS',0,1,210,10,3
	.word	17603
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L6:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,11,21,0
	.byte	54,15,0,0,12,22,0,3,8,58,15,59,15,57,15,73,19,0,0,13,19,1,58,15,59,15,57,15,11,15,0,0,14,13,0,3,8,73,19
	.byte	11,15,56,9,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0,17,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,21,23
	.byte	1,58,15,59,15,57,15,11,15,0,0,22,23,1,3,8,58,15,59,15,57,15,11,15,0,0,23,13,0,11,15,73,19,13,15,12,15
	.byte	56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L7:
	.word	.L15-.L14
.L14:
	.half	3
	.word	.L17-.L16
.L16:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0,0
	.byte	'..\\component\\Can\\Implementation\\Can.h',0,0,0,0
	.byte	'..\\component\\Can\\Implementation\\Can_Irq.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,1,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,3,0,0
	.byte	'Os_Hal_OsInt.h',0,3,0,0
	.byte	'Os_Types.h',0,3,0,0
	.byte	'Can_Cfg.h',0,2,0,0,0
.L17:
.L15:
	.sdecl	'.debug_info',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_info'
.L8:
	.word	187
	.half	3
	.word	.L9
	.byte	4,1
	.byte	'..\\component\\Can\\Implementation\\Can_Irq.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L11,.L10
	.byte	2
	.word	.L4
	.byte	3
	.byte	'Os_Isr_CanIsr_0',0,1,237,2,1,1,1,1
	.word	.L3,.L13,.L2
	.byte	4
	.word	.L3,.L13
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_abbrev'
.L9:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_line'
.L10:
	.word	.L19-.L18
.L18:
	.half	3
	.word	.L21-.L20
.L20:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Can\\Implementation\\Can_Irq.c',0,0,0,0,0
.L21:
	.byte	5,17,7,0,5,2
	.word	.L3
	.byte	3,150,3,1,5,1,7,9
	.half	.L12-.L3
	.byte	3,5,0,1,1
.L19:
	.sdecl	'.debug_ranges',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_ranges'
.L11:
	.word	-1,.L3,0,.L12-.L3,0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_loc'
.L2:
	.word	-1,.L3,0,.L13-.L3
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L22:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_Isr_CanIsr_0')
	.sect	'.debug_frame'
	.word	12
	.word	.L22,.L3,.L13-.L3

; ..\component\Can\Implementation\Can_Irq.c	   408  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   409  
; ..\component\Can\Implementation\Can_Irq.c	   410  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   411  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   412  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   413  #  endif /* (kCanPhysToLogChannelIndex_0) */
; ..\component\Can\Implementation\Can_Irq.c	   414  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   415  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   416  | NAME:             CanIsr_1
; ..\component\Can\Implementation\Can_Irq.c	   417  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   418  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   419  #  if defined( kCanPhysToLogChannelIndex_1 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   420  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   421  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   422  #    if defined (osdIsrCanIsr_1Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   423  #     if (osdIsrCanIsr_1Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   424  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   425  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   426  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   427  /*!
; ..\component\Can\Implementation\Can_Irq.c	   428   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   429   *
; ..\component\Can\Implementation\Can_Irq.c	   430   *
; ..\component\Can\Implementation\Can_Irq.c	   431   */
; ..\component\Can\Implementation\Can_Irq.c	   432  ISR( CanIsr_1 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   433  #   else
; ..\component\Can\Implementation\Can_Irq.c	   434  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_1Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   435  #     if (osdIsrCanIsr_1Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   436  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   437  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   438  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   439  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   440  /*!
; ..\component\Can\Implementation\Can_Irq.c	   441   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   442   *
; ..\component\Can\Implementation\Can_Irq.c	   443   *
; ..\component\Can\Implementation\Can_Irq.c	   444   */
; ..\component\Can\Implementation\Can_Irq.c	   445  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_1( void )
; ..\component\Can\Implementation\Can_Irq.c	   446  #    else
; ..\component\Can\Implementation\Can_Irq.c	   447  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   448  /*!
; ..\component\Can\Implementation\Can_Irq.c	   449   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   450   *
; ..\component\Can\Implementation\Can_Irq.c	   451   *
; ..\component\Can\Implementation\Can_Irq.c	   452   */
; ..\component\Can\Implementation\Can_Irq.c	   453  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_1) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_1( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   454  #     else
; ..\component\Can\Implementation\Can_Irq.c	   455  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   456  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   457  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   458  /*!
; ..\component\Can\Implementation\Can_Irq.c	   459   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   460   *
; ..\component\Can\Implementation\Can_Irq.c	   461   *
; ..\component\Can\Implementation\Can_Irq.c	   462   */
; ..\component\Can\Implementation\Can_Irq.c	   463  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_1( void )
; ..\component\Can\Implementation\Can_Irq.c	   464  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   465  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   466  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   467  {
; ..\component\Can\Implementation\Can_Irq.c	   468  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   469  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   470      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   471  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   472      CanInterrupt(Can_GetPhysToLogChannel(1));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   473  #   else
; ..\component\Can\Implementation\Can_Irq.c	   474      CanInterrupt(kCanPhysToLogChannelIndex_1);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   475  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   476  
; ..\component\Can\Implementation\Can_Irq.c	   477  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   478  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   479  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   480  #  endif /* (kCanPhysToLogChannelIndex_1) */
; ..\component\Can\Implementation\Can_Irq.c	   481  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   482  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   483  | NAME:             CanIsr_2
; ..\component\Can\Implementation\Can_Irq.c	   484  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   485  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   486  #  if defined( kCanPhysToLogChannelIndex_2 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   487  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   488  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   489  #    if defined (osdIsrCanIsr_2Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   490  #     if (osdIsrCanIsr_2Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   491  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   492  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   493  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   494  /*!
; ..\component\Can\Implementation\Can_Irq.c	   495   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   496   *
; ..\component\Can\Implementation\Can_Irq.c	   497   *
; ..\component\Can\Implementation\Can_Irq.c	   498   */
; ..\component\Can\Implementation\Can_Irq.c	   499  ISR( CanIsr_2 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   500  #   else
; ..\component\Can\Implementation\Can_Irq.c	   501  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_2Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   502  #     if (osdIsrCanIsr_2Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   503  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   504  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   505  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   506  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   507  /*!
; ..\component\Can\Implementation\Can_Irq.c	   508   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   509   *
; ..\component\Can\Implementation\Can_Irq.c	   510   *
; ..\component\Can\Implementation\Can_Irq.c	   511   */
; ..\component\Can\Implementation\Can_Irq.c	   512  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_2( void )
; ..\component\Can\Implementation\Can_Irq.c	   513  #    else
; ..\component\Can\Implementation\Can_Irq.c	   514  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   515  /*!
; ..\component\Can\Implementation\Can_Irq.c	   516   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   517   *
; ..\component\Can\Implementation\Can_Irq.c	   518   *
; ..\component\Can\Implementation\Can_Irq.c	   519   */
; ..\component\Can\Implementation\Can_Irq.c	   520  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_2) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_2( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   521  #     else
; ..\component\Can\Implementation\Can_Irq.c	   522  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   523  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   524  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   525  /*!
; ..\component\Can\Implementation\Can_Irq.c	   526   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   527   *
; ..\component\Can\Implementation\Can_Irq.c	   528   *
; ..\component\Can\Implementation\Can_Irq.c	   529   */
; ..\component\Can\Implementation\Can_Irq.c	   530  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_2( void )
; ..\component\Can\Implementation\Can_Irq.c	   531  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   532  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   533  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   534  {
; ..\component\Can\Implementation\Can_Irq.c	   535  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   536  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   537      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   538  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   539      CanInterrupt(Can_GetPhysToLogChannel(2));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   540  #   else
; ..\component\Can\Implementation\Can_Irq.c	   541      CanInterrupt(kCanPhysToLogChannelIndex_2);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   542  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   543  
; ..\component\Can\Implementation\Can_Irq.c	   544  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   545  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   546  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   547  #  endif /* (kCanPhysToLogChannelIndex_2) */
; ..\component\Can\Implementation\Can_Irq.c	   548  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   549  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   550  | NAME:             CanIsr_3
; ..\component\Can\Implementation\Can_Irq.c	   551  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   552  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   553  #  if defined( kCanPhysToLogChannelIndex_3 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   554  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   555  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   556  #    if defined (osdIsrCanIsr_3Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   557  #     if (osdIsrCanIsr_3Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   558  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   559  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   560  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   561  /*!
; ..\component\Can\Implementation\Can_Irq.c	   562   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   563   *
; ..\component\Can\Implementation\Can_Irq.c	   564   *
; ..\component\Can\Implementation\Can_Irq.c	   565   */
; ..\component\Can\Implementation\Can_Irq.c	   566  ISR( CanIsr_3 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   567  #   else
; ..\component\Can\Implementation\Can_Irq.c	   568  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_3Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   569  #     if (osdIsrCanIsr_3Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   570  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   571  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   572  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   573  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   574  /*!
; ..\component\Can\Implementation\Can_Irq.c	   575   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   576   *
; ..\component\Can\Implementation\Can_Irq.c	   577   *
; ..\component\Can\Implementation\Can_Irq.c	   578   */
; ..\component\Can\Implementation\Can_Irq.c	   579  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_3( void )
; ..\component\Can\Implementation\Can_Irq.c	   580  #    else
; ..\component\Can\Implementation\Can_Irq.c	   581  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   582  /*!
; ..\component\Can\Implementation\Can_Irq.c	   583   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   584   *
; ..\component\Can\Implementation\Can_Irq.c	   585   *
; ..\component\Can\Implementation\Can_Irq.c	   586   */
; ..\component\Can\Implementation\Can_Irq.c	   587  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_3) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_3( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   588  #     else
; ..\component\Can\Implementation\Can_Irq.c	   589  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   590  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   591  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   592  /*!
; ..\component\Can\Implementation\Can_Irq.c	   593   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   594   *
; ..\component\Can\Implementation\Can_Irq.c	   595   *
; ..\component\Can\Implementation\Can_Irq.c	   596   */
; ..\component\Can\Implementation\Can_Irq.c	   597  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_3( void )
; ..\component\Can\Implementation\Can_Irq.c	   598  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   599  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   600  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   601  {
; ..\component\Can\Implementation\Can_Irq.c	   602  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   603  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   604      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   605  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   606      CanInterrupt(Can_GetPhysToLogChannel(3));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   607  #   else
; ..\component\Can\Implementation\Can_Irq.c	   608      CanInterrupt(kCanPhysToLogChannelIndex_3);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   609  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   610  
; ..\component\Can\Implementation\Can_Irq.c	   611  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   612  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   613  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   614  #  endif /* (kCanPhysToLogChannelIndex_3) */
; ..\component\Can\Implementation\Can_Irq.c	   615  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   616  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   617  | NAME:             CanIsr_4
; ..\component\Can\Implementation\Can_Irq.c	   618  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   619  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   620  #  if defined( kCanPhysToLogChannelIndex_4 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   621  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   622  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   623  #    if defined (osdIsrCanIsr_4Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   624  #     if (osdIsrCanIsr_4Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   625  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   626  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   627  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   628  /*!
; ..\component\Can\Implementation\Can_Irq.c	   629   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   630   *
; ..\component\Can\Implementation\Can_Irq.c	   631   *
; ..\component\Can\Implementation\Can_Irq.c	   632   */
; ..\component\Can\Implementation\Can_Irq.c	   633  ISR( CanIsr_4 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   634  #   else
; ..\component\Can\Implementation\Can_Irq.c	   635  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_4Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   636  #     if (osdIsrCanIsr_4Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   637  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   638  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   639  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   640  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   641  /*!
; ..\component\Can\Implementation\Can_Irq.c	   642   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   643   *
; ..\component\Can\Implementation\Can_Irq.c	   644   *
; ..\component\Can\Implementation\Can_Irq.c	   645   */
; ..\component\Can\Implementation\Can_Irq.c	   646  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_4( void )
; ..\component\Can\Implementation\Can_Irq.c	   647  #    else
; ..\component\Can\Implementation\Can_Irq.c	   648  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   649  /*!
; ..\component\Can\Implementation\Can_Irq.c	   650   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   651   *
; ..\component\Can\Implementation\Can_Irq.c	   652   *
; ..\component\Can\Implementation\Can_Irq.c	   653   */
; ..\component\Can\Implementation\Can_Irq.c	   654  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_4) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_4( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   655  #     else
; ..\component\Can\Implementation\Can_Irq.c	   656  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   657  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   658  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   659  /*!
; ..\component\Can\Implementation\Can_Irq.c	   660   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   661   *
; ..\component\Can\Implementation\Can_Irq.c	   662   *
; ..\component\Can\Implementation\Can_Irq.c	   663   */
; ..\component\Can\Implementation\Can_Irq.c	   664  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_4( void )
; ..\component\Can\Implementation\Can_Irq.c	   665  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   666  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   667  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   668  {
; ..\component\Can\Implementation\Can_Irq.c	   669  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   670  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   671      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   672  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   673      CanInterrupt(Can_GetPhysToLogChannel(4));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   674  #   else
; ..\component\Can\Implementation\Can_Irq.c	   675      CanInterrupt(kCanPhysToLogChannelIndex_4);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   676  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   677  
; ..\component\Can\Implementation\Can_Irq.c	   678  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   679  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   680  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   681  #  endif /* (kCanPhysToLogChannelIndex_4) */
; ..\component\Can\Implementation\Can_Irq.c	   682  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   683  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   684  | NAME:             CanIsr_5
; ..\component\Can\Implementation\Can_Irq.c	   685  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   686  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   687  #  if defined( kCanPhysToLogChannelIndex_5 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   688  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   689  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   690  #    if defined (osdIsrCanIsr_5Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   691  #     if (osdIsrCanIsr_5Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   692  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   693  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   694  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   695  /*!
; ..\component\Can\Implementation\Can_Irq.c	   696   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   697   *
; ..\component\Can\Implementation\Can_Irq.c	   698   *
; ..\component\Can\Implementation\Can_Irq.c	   699   */
; ..\component\Can\Implementation\Can_Irq.c	   700  ISR( CanIsr_5 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   701  #   else
; ..\component\Can\Implementation\Can_Irq.c	   702  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_5Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   703  #     if (osdIsrCanIsr_5Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   704  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   705  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   706  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   707  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   708  /*!
; ..\component\Can\Implementation\Can_Irq.c	   709   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   710   *
; ..\component\Can\Implementation\Can_Irq.c	   711   *
; ..\component\Can\Implementation\Can_Irq.c	   712   */
; ..\component\Can\Implementation\Can_Irq.c	   713  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_5( void )
; ..\component\Can\Implementation\Can_Irq.c	   714  #    else
; ..\component\Can\Implementation\Can_Irq.c	   715  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   716  /*!
; ..\component\Can\Implementation\Can_Irq.c	   717   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   718   *
; ..\component\Can\Implementation\Can_Irq.c	   719   *
; ..\component\Can\Implementation\Can_Irq.c	   720   */
; ..\component\Can\Implementation\Can_Irq.c	   721  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_5) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_5( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   722  #     else
; ..\component\Can\Implementation\Can_Irq.c	   723  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   724  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   725  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   726  /*!
; ..\component\Can\Implementation\Can_Irq.c	   727   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   728   *
; ..\component\Can\Implementation\Can_Irq.c	   729   *
; ..\component\Can\Implementation\Can_Irq.c	   730   */
; ..\component\Can\Implementation\Can_Irq.c	   731  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_5( void )
; ..\component\Can\Implementation\Can_Irq.c	   732  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   733  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   734  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   735  {
; ..\component\Can\Implementation\Can_Irq.c	   736  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   737  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   738      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   739  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   740      CanInterrupt(Can_GetPhysToLogChannel(5));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   741  #   else
; ..\component\Can\Implementation\Can_Irq.c	   742      CanInterrupt(kCanPhysToLogChannelIndex_5);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   743  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   744  
; ..\component\Can\Implementation\Can_Irq.c	   745  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   746  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   747  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   748  #  endif /* (kCanPhysToLogChannelIndex_5) */
; ..\component\Can\Implementation\Can_Irq.c	   749  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   750  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   751  | NAME:             CanIsr_6
; ..\component\Can\Implementation\Can_Irq.c	   752  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   753  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   754  #  if defined( kCanPhysToLogChannelIndex_6 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   755  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   756  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   757  #    if defined (osdIsrCanIsr_6Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   758  #     if (osdIsrCanIsr_6Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   759  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   760  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   761  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   762  /*!
; ..\component\Can\Implementation\Can_Irq.c	   763   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   764   *
; ..\component\Can\Implementation\Can_Irq.c	   765   *
; ..\component\Can\Implementation\Can_Irq.c	   766   */
; ..\component\Can\Implementation\Can_Irq.c	   767  ISR( CanIsr_6 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   768  #   else
; ..\component\Can\Implementation\Can_Irq.c	   769  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_6Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   770  #     if (osdIsrCanIsr_6Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   771  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   772  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   773  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   774  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   775  /*!
; ..\component\Can\Implementation\Can_Irq.c	   776   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   777   *
; ..\component\Can\Implementation\Can_Irq.c	   778   *
; ..\component\Can\Implementation\Can_Irq.c	   779   */
; ..\component\Can\Implementation\Can_Irq.c	   780  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_6( void )
; ..\component\Can\Implementation\Can_Irq.c	   781  #    else
; ..\component\Can\Implementation\Can_Irq.c	   782  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   783  /*!
; ..\component\Can\Implementation\Can_Irq.c	   784   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   785   *
; ..\component\Can\Implementation\Can_Irq.c	   786   *
; ..\component\Can\Implementation\Can_Irq.c	   787   */
; ..\component\Can\Implementation\Can_Irq.c	   788  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_6) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_6( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   789  #     else
; ..\component\Can\Implementation\Can_Irq.c	   790  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   791  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   792  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   793  /*!
; ..\component\Can\Implementation\Can_Irq.c	   794   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   795   *
; ..\component\Can\Implementation\Can_Irq.c	   796   *
; ..\component\Can\Implementation\Can_Irq.c	   797   */
; ..\component\Can\Implementation\Can_Irq.c	   798  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_6( void )
; ..\component\Can\Implementation\Can_Irq.c	   799  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   800  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   801  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   802  {
; ..\component\Can\Implementation\Can_Irq.c	   803  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   804  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   805      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   806  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   807      CanInterrupt(Can_GetPhysToLogChannel(6));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   808  #   else
; ..\component\Can\Implementation\Can_Irq.c	   809      CanInterrupt(kCanPhysToLogChannelIndex_6);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   810  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   811  
; ..\component\Can\Implementation\Can_Irq.c	   812  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   813  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   814  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   815  #  endif /* (kCanPhysToLogChannelIndex_6) */
; ..\component\Can\Implementation\Can_Irq.c	   816  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   817  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   818  | NAME:             CanIsr_7
; ..\component\Can\Implementation\Can_Irq.c	   819  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   820  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   821  #  if defined( kCanPhysToLogChannelIndex_7 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   822  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   823  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   824  #    if defined (osdIsrCanIsr_7Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   825  #     if (osdIsrCanIsr_7Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   826  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   827  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   828  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   829  /*!
; ..\component\Can\Implementation\Can_Irq.c	   830   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   831   *
; ..\component\Can\Implementation\Can_Irq.c	   832   *
; ..\component\Can\Implementation\Can_Irq.c	   833   */
; ..\component\Can\Implementation\Can_Irq.c	   834  ISR( CanIsr_7 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   835  #   else
; ..\component\Can\Implementation\Can_Irq.c	   836  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_7Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   837  #     if (osdIsrCanIsr_7Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   838  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   839  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   840  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   841  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   842  /*!
; ..\component\Can\Implementation\Can_Irq.c	   843   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   844   *
; ..\component\Can\Implementation\Can_Irq.c	   845   *
; ..\component\Can\Implementation\Can_Irq.c	   846   */
; ..\component\Can\Implementation\Can_Irq.c	   847  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_7( void )
; ..\component\Can\Implementation\Can_Irq.c	   848  #    else
; ..\component\Can\Implementation\Can_Irq.c	   849  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   850  /*!
; ..\component\Can\Implementation\Can_Irq.c	   851   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   852   *
; ..\component\Can\Implementation\Can_Irq.c	   853   *
; ..\component\Can\Implementation\Can_Irq.c	   854   */
; ..\component\Can\Implementation\Can_Irq.c	   855  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_7) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_7( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   856  #     else
; ..\component\Can\Implementation\Can_Irq.c	   857  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   858  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   859  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   860  /*!
; ..\component\Can\Implementation\Can_Irq.c	   861   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   862   *
; ..\component\Can\Implementation\Can_Irq.c	   863   *
; ..\component\Can\Implementation\Can_Irq.c	   864   */
; ..\component\Can\Implementation\Can_Irq.c	   865  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_7( void )
; ..\component\Can\Implementation\Can_Irq.c	   866  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   867  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   868  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   869  {
; ..\component\Can\Implementation\Can_Irq.c	   870  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   871  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   872      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   873  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   874      CanInterrupt(Can_GetPhysToLogChannel(7));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   875  #   else
; ..\component\Can\Implementation\Can_Irq.c	   876      CanInterrupt(kCanPhysToLogChannelIndex_7);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   877  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   878  
; ..\component\Can\Implementation\Can_Irq.c	   879  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   880  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   881  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   882  #  endif /* (kCanPhysToLogChannelIndex_7) */
; ..\component\Can\Implementation\Can_Irq.c	   883  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   884  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   885  | NAME:             CanIsr_8
; ..\component\Can\Implementation\Can_Irq.c	   886  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   887  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   888  #  if defined( kCanPhysToLogChannelIndex_8 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   889  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   890  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   891  #    if defined (osdIsrCanIsr_8Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   892  #     if (osdIsrCanIsr_8Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   893  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   894  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   895  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   896  /*!
; ..\component\Can\Implementation\Can_Irq.c	   897   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   898   *
; ..\component\Can\Implementation\Can_Irq.c	   899   *
; ..\component\Can\Implementation\Can_Irq.c	   900   */
; ..\component\Can\Implementation\Can_Irq.c	   901  ISR( CanIsr_8 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   902  #   else
; ..\component\Can\Implementation\Can_Irq.c	   903  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_8Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   904  #     if (osdIsrCanIsr_8Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   905  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   906  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   907  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   908  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   909  /*!
; ..\component\Can\Implementation\Can_Irq.c	   910   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   911   *
; ..\component\Can\Implementation\Can_Irq.c	   912   *
; ..\component\Can\Implementation\Can_Irq.c	   913   */
; ..\component\Can\Implementation\Can_Irq.c	   914  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_8( void )
; ..\component\Can\Implementation\Can_Irq.c	   915  #    else
; ..\component\Can\Implementation\Can_Irq.c	   916  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   917  /*!
; ..\component\Can\Implementation\Can_Irq.c	   918   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   919   *
; ..\component\Can\Implementation\Can_Irq.c	   920   *
; ..\component\Can\Implementation\Can_Irq.c	   921   */
; ..\component\Can\Implementation\Can_Irq.c	   922  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_8) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_8( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   923  #     else
; ..\component\Can\Implementation\Can_Irq.c	   924  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   925  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   926  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   927  /*!
; ..\component\Can\Implementation\Can_Irq.c	   928   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   929   *
; ..\component\Can\Implementation\Can_Irq.c	   930   *
; ..\component\Can\Implementation\Can_Irq.c	   931   */
; ..\component\Can\Implementation\Can_Irq.c	   932  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_8( void )
; ..\component\Can\Implementation\Can_Irq.c	   933  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   934  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   935  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	   936  {
; ..\component\Can\Implementation\Can_Irq.c	   937  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   938  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   939      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	   940  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	   941      CanInterrupt(Can_GetPhysToLogChannel(8));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   942  #   else
; ..\component\Can\Implementation\Can_Irq.c	   943      CanInterrupt(kCanPhysToLogChannelIndex_8);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	   944  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   945  
; ..\component\Can\Implementation\Can_Irq.c	   946  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	   947  #   endif
; ..\component\Can\Implementation\Can_Irq.c	   948  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	   949  #  endif /* (kCanPhysToLogChannelIndex_8) */
; ..\component\Can\Implementation\Can_Irq.c	   950  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	   951  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	   952  | NAME:             CanIsr_9
; ..\component\Can\Implementation\Can_Irq.c	   953  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	   954  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   955  #  if defined( kCanPhysToLogChannelIndex_9 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	   956  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	   957  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	   958  #    if defined (osdIsrCanIsr_9Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   959  #     if (osdIsrCanIsr_9Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	   960  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   961  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   962  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   963  /*!
; ..\component\Can\Implementation\Can_Irq.c	   964   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   965   *
; ..\component\Can\Implementation\Can_Irq.c	   966   *
; ..\component\Can\Implementation\Can_Irq.c	   967   */
; ..\component\Can\Implementation\Can_Irq.c	   968  ISR( CanIsr_9 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	   969  #   else
; ..\component\Can\Implementation\Can_Irq.c	   970  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_9Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	   971  #     if (osdIsrCanIsr_9Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	   972  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	   973  #     endif
; ..\component\Can\Implementation\Can_Irq.c	   974  #    endif
; ..\component\Can\Implementation\Can_Irq.c	   975  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	   976  /*!
; ..\component\Can\Implementation\Can_Irq.c	   977   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   978   *
; ..\component\Can\Implementation\Can_Irq.c	   979   *
; ..\component\Can\Implementation\Can_Irq.c	   980   */
; ..\component\Can\Implementation\Can_Irq.c	   981  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_9( void )
; ..\component\Can\Implementation\Can_Irq.c	   982  #    else
; ..\component\Can\Implementation\Can_Irq.c	   983  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	   984  /*!
; ..\component\Can\Implementation\Can_Irq.c	   985   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   986   *
; ..\component\Can\Implementation\Can_Irq.c	   987   *
; ..\component\Can\Implementation\Can_Irq.c	   988   */
; ..\component\Can\Implementation\Can_Irq.c	   989  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_9) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_9( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	   990  #     else
; ..\component\Can\Implementation\Can_Irq.c	   991  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	   992  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	   993  #      endif
; ..\component\Can\Implementation\Can_Irq.c	   994  /*!
; ..\component\Can\Implementation\Can_Irq.c	   995   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	   996   *
; ..\component\Can\Implementation\Can_Irq.c	   997   *
; ..\component\Can\Implementation\Can_Irq.c	   998   */
; ..\component\Can\Implementation\Can_Irq.c	   999  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_9( void )
; ..\component\Can\Implementation\Can_Irq.c	  1000  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1001  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1002  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1003  {
; ..\component\Can\Implementation\Can_Irq.c	  1004  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1005  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1006      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1007  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1008      CanInterrupt(Can_GetPhysToLogChannel(9));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1009  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1010      CanInterrupt(kCanPhysToLogChannelIndex_9);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1011  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1012  
; ..\component\Can\Implementation\Can_Irq.c	  1013  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1014  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1015  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1016  #  endif /* (kCanPhysToLogChannelIndex_9) */
; ..\component\Can\Implementation\Can_Irq.c	  1017  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1018  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1019  | NAME:             CanIsr_10
; ..\component\Can\Implementation\Can_Irq.c	  1020  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1021  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1022  #  if defined( kCanPhysToLogChannelIndex_10 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1023  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1024  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1025  #    if defined (osdIsrCanIsr_10Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1026  #     if (osdIsrCanIsr_10Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1027  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1028  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1029  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1030  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1031   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1032   *
; ..\component\Can\Implementation\Can_Irq.c	  1033   *
; ..\component\Can\Implementation\Can_Irq.c	  1034   */
; ..\component\Can\Implementation\Can_Irq.c	  1035  ISR( CanIsr_10 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1036  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1037  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_10Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1038  #     if (osdIsrCanIsr_10Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1039  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1040  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1041  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1042  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1043  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1044   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1045   *
; ..\component\Can\Implementation\Can_Irq.c	  1046   *
; ..\component\Can\Implementation\Can_Irq.c	  1047   */
; ..\component\Can\Implementation\Can_Irq.c	  1048  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_10( void )
; ..\component\Can\Implementation\Can_Irq.c	  1049  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1050  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1051  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1052   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1053   *
; ..\component\Can\Implementation\Can_Irq.c	  1054   *
; ..\component\Can\Implementation\Can_Irq.c	  1055   */
; ..\component\Can\Implementation\Can_Irq.c	  1056  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_10) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_10( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1057  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1058  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1059  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1060  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1061  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1062   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1063   *
; ..\component\Can\Implementation\Can_Irq.c	  1064   *
; ..\component\Can\Implementation\Can_Irq.c	  1065   */
; ..\component\Can\Implementation\Can_Irq.c	  1066  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_10( void )
; ..\component\Can\Implementation\Can_Irq.c	  1067  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1068  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1069  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1070  {
; ..\component\Can\Implementation\Can_Irq.c	  1071  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1072  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1073      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1074  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1075      CanInterrupt(Can_GetPhysToLogChannel(10));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1076  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1077      CanInterrupt(kCanPhysToLogChannelIndex_10);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1078  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1079  
; ..\component\Can\Implementation\Can_Irq.c	  1080  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1081  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1082  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1083  #  endif /* (kCanPhysToLogChannelIndex_10) */
; ..\component\Can\Implementation\Can_Irq.c	  1084  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1085  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1086  | NAME:             CanIsr_11
; ..\component\Can\Implementation\Can_Irq.c	  1087  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1088  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1089  #  if defined( kCanPhysToLogChannelIndex_11 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1090  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1091  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1092  #    if defined (osdIsrCanIsr_11Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1093  #     if (osdIsrCanIsr_11Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1094  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1095  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1096  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1097  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1098   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1099   *
; ..\component\Can\Implementation\Can_Irq.c	  1100   *
; ..\component\Can\Implementation\Can_Irq.c	  1101   */
; ..\component\Can\Implementation\Can_Irq.c	  1102  ISR( CanIsr_11 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1103  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1104  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_11Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1105  #     if (osdIsrCanIsr_11Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1106  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1107  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1108  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1109  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1110  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1111   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1112   *
; ..\component\Can\Implementation\Can_Irq.c	  1113   *
; ..\component\Can\Implementation\Can_Irq.c	  1114   */
; ..\component\Can\Implementation\Can_Irq.c	  1115  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_11( void )
; ..\component\Can\Implementation\Can_Irq.c	  1116  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1117  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1118  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1119   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1120   *
; ..\component\Can\Implementation\Can_Irq.c	  1121   *
; ..\component\Can\Implementation\Can_Irq.c	  1122   */
; ..\component\Can\Implementation\Can_Irq.c	  1123  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_11) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_11( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1124  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1125  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1126  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1127  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1128  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1129   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1130   *
; ..\component\Can\Implementation\Can_Irq.c	  1131   *
; ..\component\Can\Implementation\Can_Irq.c	  1132   */
; ..\component\Can\Implementation\Can_Irq.c	  1133  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_11( void )
; ..\component\Can\Implementation\Can_Irq.c	  1134  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1135  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1136  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1137  {
; ..\component\Can\Implementation\Can_Irq.c	  1138  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1139  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1140      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1141  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1142      CanInterrupt(Can_GetPhysToLogChannel(11));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1143  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1144      CanInterrupt(kCanPhysToLogChannelIndex_11);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1145  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1146  
; ..\component\Can\Implementation\Can_Irq.c	  1147  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1148  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1149  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1150  #  endif /* (kCanPhysToLogChannelIndex_11) */
; ..\component\Can\Implementation\Can_Irq.c	  1151  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1152  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1153  | NAME:             CanIsr_12
; ..\component\Can\Implementation\Can_Irq.c	  1154  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1155  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1156  #  if defined( kCanPhysToLogChannelIndex_12 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1157  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1158  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1159  #    if defined (osdIsrCanIsr_12Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1160  #     if (osdIsrCanIsr_12Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1161  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1162  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1163  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1164  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1165   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1166   *
; ..\component\Can\Implementation\Can_Irq.c	  1167   *
; ..\component\Can\Implementation\Can_Irq.c	  1168   */
; ..\component\Can\Implementation\Can_Irq.c	  1169  ISR( CanIsr_12 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1170  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1171  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_12Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1172  #     if (osdIsrCanIsr_12Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1173  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1174  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1175  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1176  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1177  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1178   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1179   *
; ..\component\Can\Implementation\Can_Irq.c	  1180   *
; ..\component\Can\Implementation\Can_Irq.c	  1181   */
; ..\component\Can\Implementation\Can_Irq.c	  1182  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_12( void )
; ..\component\Can\Implementation\Can_Irq.c	  1183  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1184  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1185  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1186   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1187   *
; ..\component\Can\Implementation\Can_Irq.c	  1188   *
; ..\component\Can\Implementation\Can_Irq.c	  1189   */
; ..\component\Can\Implementation\Can_Irq.c	  1190  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_12) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_12( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1191  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1192  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1193  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1194  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1195  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1196   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1197   *
; ..\component\Can\Implementation\Can_Irq.c	  1198   *
; ..\component\Can\Implementation\Can_Irq.c	  1199   */
; ..\component\Can\Implementation\Can_Irq.c	  1200  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_12( void )
; ..\component\Can\Implementation\Can_Irq.c	  1201  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1202  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1203  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1204  {
; ..\component\Can\Implementation\Can_Irq.c	  1205  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1206  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1207      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1208  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1209      CanInterrupt(Can_GetPhysToLogChannel(12));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1210  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1211      CanInterrupt(kCanPhysToLogChannelIndex_12);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1212  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1213  
; ..\component\Can\Implementation\Can_Irq.c	  1214  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1215  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1216  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1217  #  endif /* (kCanPhysToLogChannelIndex_12) */
; ..\component\Can\Implementation\Can_Irq.c	  1218  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1219  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1220  | NAME:             CanIsr_13
; ..\component\Can\Implementation\Can_Irq.c	  1221  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1222  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1223  #  if defined( kCanPhysToLogChannelIndex_13 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1224  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1225  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1226  #    if defined (osdIsrCanIsr_13Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1227  #     if (osdIsrCanIsr_13Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1228  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1229  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1230  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1231  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1232   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1233   *
; ..\component\Can\Implementation\Can_Irq.c	  1234   *
; ..\component\Can\Implementation\Can_Irq.c	  1235   */
; ..\component\Can\Implementation\Can_Irq.c	  1236  ISR( CanIsr_13 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1237  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1238  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_13Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1239  #     if (osdIsrCanIsr_13Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1240  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1241  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1242  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1243  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1244  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1245   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1246   *
; ..\component\Can\Implementation\Can_Irq.c	  1247   *
; ..\component\Can\Implementation\Can_Irq.c	  1248   */
; ..\component\Can\Implementation\Can_Irq.c	  1249  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_13( void )
; ..\component\Can\Implementation\Can_Irq.c	  1250  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1251  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1252  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1253   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1254   *
; ..\component\Can\Implementation\Can_Irq.c	  1255   *
; ..\component\Can\Implementation\Can_Irq.c	  1256   */
; ..\component\Can\Implementation\Can_Irq.c	  1257  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_13) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_13( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1258  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1259  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1260  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1261  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1262  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1263   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1264   *
; ..\component\Can\Implementation\Can_Irq.c	  1265   *
; ..\component\Can\Implementation\Can_Irq.c	  1266   */
; ..\component\Can\Implementation\Can_Irq.c	  1267  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_13( void )
; ..\component\Can\Implementation\Can_Irq.c	  1268  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1269  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1270  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1271  {
; ..\component\Can\Implementation\Can_Irq.c	  1272  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1273  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1274      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1275  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1276      CanInterrupt(Can_GetPhysToLogChannel(13));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1277  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1278      CanInterrupt(kCanPhysToLogChannelIndex_13);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1279  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1280  
; ..\component\Can\Implementation\Can_Irq.c	  1281  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1282  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1283  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1284  #  endif /* (kCanPhysToLogChannelIndex_13) */
; ..\component\Can\Implementation\Can_Irq.c	  1285  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1286  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1287  | NAME:             CanIsr_14
; ..\component\Can\Implementation\Can_Irq.c	  1288  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1289  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1290  #  if defined( kCanPhysToLogChannelIndex_14 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1291  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1292  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1293  #    if defined (osdIsrCanIsr_14Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1294  #     if (osdIsrCanIsr_14Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1295  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1296  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1297  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1298  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1299   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1300   *
; ..\component\Can\Implementation\Can_Irq.c	  1301   *
; ..\component\Can\Implementation\Can_Irq.c	  1302   */
; ..\component\Can\Implementation\Can_Irq.c	  1303  ISR( CanIsr_14 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1304  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1305  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_14Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1306  #     if (osdIsrCanIsr_14Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1307  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1308  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1309  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1310  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1311  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1312   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1313   *
; ..\component\Can\Implementation\Can_Irq.c	  1314   *
; ..\component\Can\Implementation\Can_Irq.c	  1315   */
; ..\component\Can\Implementation\Can_Irq.c	  1316  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_14( void )
; ..\component\Can\Implementation\Can_Irq.c	  1317  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1318  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1319  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1320   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1321   *
; ..\component\Can\Implementation\Can_Irq.c	  1322   *
; ..\component\Can\Implementation\Can_Irq.c	  1323   */
; ..\component\Can\Implementation\Can_Irq.c	  1324  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_14) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_14( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1325  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1326  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1327  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1328  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1329  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1330   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1331   *
; ..\component\Can\Implementation\Can_Irq.c	  1332   *
; ..\component\Can\Implementation\Can_Irq.c	  1333   */
; ..\component\Can\Implementation\Can_Irq.c	  1334  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_14( void )
; ..\component\Can\Implementation\Can_Irq.c	  1335  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1336  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1337  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1338  {
; ..\component\Can\Implementation\Can_Irq.c	  1339  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1340  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1341      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1342  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1343      CanInterrupt(Can_GetPhysToLogChannel(14));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1344  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1345      CanInterrupt(kCanPhysToLogChannelIndex_14);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1346  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1347  
; ..\component\Can\Implementation\Can_Irq.c	  1348  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1349  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1350  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1351  #  endif /* (kCanPhysToLogChannelIndex_14) */
; ..\component\Can\Implementation\Can_Irq.c	  1352  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1353  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1354  | NAME:             CanIsr_15
; ..\component\Can\Implementation\Can_Irq.c	  1355  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1356  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1357  #  if defined( kCanPhysToLogChannelIndex_15 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1358  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1359  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1360  #    if defined (osdIsrCanIsr_15Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1361  #     if (osdIsrCanIsr_15Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1362  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1363  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1364  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1365  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1366   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1367   *
; ..\component\Can\Implementation\Can_Irq.c	  1368   *
; ..\component\Can\Implementation\Can_Irq.c	  1369   */
; ..\component\Can\Implementation\Can_Irq.c	  1370  ISR( CanIsr_15 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1371  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1372  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_15Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1373  #     if (osdIsrCanIsr_15Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1374  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1375  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1376  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1377  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1378  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1379   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1380   *
; ..\component\Can\Implementation\Can_Irq.c	  1381   *
; ..\component\Can\Implementation\Can_Irq.c	  1382   */
; ..\component\Can\Implementation\Can_Irq.c	  1383  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_15( void )
; ..\component\Can\Implementation\Can_Irq.c	  1384  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1385  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1386  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1387   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1388   *
; ..\component\Can\Implementation\Can_Irq.c	  1389   *
; ..\component\Can\Implementation\Can_Irq.c	  1390   */
; ..\component\Can\Implementation\Can_Irq.c	  1391  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_15) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_15( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1392  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1393  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1394  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1395  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1396  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1397   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1398   *
; ..\component\Can\Implementation\Can_Irq.c	  1399   *
; ..\component\Can\Implementation\Can_Irq.c	  1400   */
; ..\component\Can\Implementation\Can_Irq.c	  1401  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_15( void )
; ..\component\Can\Implementation\Can_Irq.c	  1402  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1403  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1404  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1405  {
; ..\component\Can\Implementation\Can_Irq.c	  1406  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1407  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1408      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1409  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1410      CanInterrupt(Can_GetPhysToLogChannel(15));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1411  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1412      CanInterrupt(kCanPhysToLogChannelIndex_15);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1413  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1414  
; ..\component\Can\Implementation\Can_Irq.c	  1415  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1416  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1417  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1418  #  endif /* (kCanPhysToLogChannelIndex_15) */
; ..\component\Can\Implementation\Can_Irq.c	  1419  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1420  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1421  | NAME:             CanIsr_16
; ..\component\Can\Implementation\Can_Irq.c	  1422  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1423  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1424  #  if defined( kCanPhysToLogChannelIndex_16 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1425  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1426  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1427  #    if defined (osdIsrCanIsr_16Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1428  #     if (osdIsrCanIsr_16Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1429  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1430  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1431  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1432  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1433   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1434   *
; ..\component\Can\Implementation\Can_Irq.c	  1435   *
; ..\component\Can\Implementation\Can_Irq.c	  1436   */
; ..\component\Can\Implementation\Can_Irq.c	  1437  ISR( CanIsr_16 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1438  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1439  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_16Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1440  #     if (osdIsrCanIsr_16Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1441  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1442  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1443  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1444  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1445  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1446   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1447   *
; ..\component\Can\Implementation\Can_Irq.c	  1448   *
; ..\component\Can\Implementation\Can_Irq.c	  1449   */
; ..\component\Can\Implementation\Can_Irq.c	  1450  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_16( void )
; ..\component\Can\Implementation\Can_Irq.c	  1451  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1452  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1453  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1454   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1455   *
; ..\component\Can\Implementation\Can_Irq.c	  1456   *
; ..\component\Can\Implementation\Can_Irq.c	  1457   */
; ..\component\Can\Implementation\Can_Irq.c	  1458  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_16) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_16( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1459  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1460  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1461  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1462  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1463  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1464   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1465   *
; ..\component\Can\Implementation\Can_Irq.c	  1466   *
; ..\component\Can\Implementation\Can_Irq.c	  1467   */
; ..\component\Can\Implementation\Can_Irq.c	  1468  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_16( void )
; ..\component\Can\Implementation\Can_Irq.c	  1469  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1470  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1471  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1472  {
; ..\component\Can\Implementation\Can_Irq.c	  1473  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1474  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1475      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1476  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1477      CanInterrupt(Can_GetPhysToLogChannel(16));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1478  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1479      CanInterrupt(kCanPhysToLogChannelIndex_16);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1480  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1481  
; ..\component\Can\Implementation\Can_Irq.c	  1482  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1483  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1484  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1485  #  endif /* (kCanPhysToLogChannelIndex_16) */
; ..\component\Can\Implementation\Can_Irq.c	  1486  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1487  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1488  | NAME:             CanIsr_17
; ..\component\Can\Implementation\Can_Irq.c	  1489  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1490  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1491  #  if defined( kCanPhysToLogChannelIndex_17 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1492  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1493  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1494  #    if defined (osdIsrCanIsr_17Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1495  #     if (osdIsrCanIsr_17Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1496  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1497  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1498  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1499  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1500   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1501   *
; ..\component\Can\Implementation\Can_Irq.c	  1502   *
; ..\component\Can\Implementation\Can_Irq.c	  1503   */
; ..\component\Can\Implementation\Can_Irq.c	  1504  ISR( CanIsr_17 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1505  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1506  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_17Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1507  #     if (osdIsrCanIsr_17Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1508  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1509  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1510  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1511  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1512  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1513   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1514   *
; ..\component\Can\Implementation\Can_Irq.c	  1515   *
; ..\component\Can\Implementation\Can_Irq.c	  1516   */
; ..\component\Can\Implementation\Can_Irq.c	  1517  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_17( void )
; ..\component\Can\Implementation\Can_Irq.c	  1518  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1519  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1520  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1521   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1522   *
; ..\component\Can\Implementation\Can_Irq.c	  1523   *
; ..\component\Can\Implementation\Can_Irq.c	  1524   */
; ..\component\Can\Implementation\Can_Irq.c	  1525  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_17) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_17( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1526  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1527  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1528  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1529  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1530  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1531   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1532   *
; ..\component\Can\Implementation\Can_Irq.c	  1533   *
; ..\component\Can\Implementation\Can_Irq.c	  1534   */
; ..\component\Can\Implementation\Can_Irq.c	  1535  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_17( void )
; ..\component\Can\Implementation\Can_Irq.c	  1536  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1537  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1538  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1539  {
; ..\component\Can\Implementation\Can_Irq.c	  1540  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1541  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1542      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1543  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1544      CanInterrupt(Can_GetPhysToLogChannel(17));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1545  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1546      CanInterrupt(kCanPhysToLogChannelIndex_17);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1547  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1548  
; ..\component\Can\Implementation\Can_Irq.c	  1549  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1550  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1551  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1552  #  endif /* (kCanPhysToLogChannelIndex_17) */
; ..\component\Can\Implementation\Can_Irq.c	  1553  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1554  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1555  | NAME:             CanIsr_18
; ..\component\Can\Implementation\Can_Irq.c	  1556  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1557  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1558  #  if defined( kCanPhysToLogChannelIndex_18 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1559  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1560  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1561  #    if defined (osdIsrCanIsr_18Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1562  #     if (osdIsrCanIsr_18Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1563  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1564  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1565  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1566  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1567   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1568   *
; ..\component\Can\Implementation\Can_Irq.c	  1569   *
; ..\component\Can\Implementation\Can_Irq.c	  1570   */
; ..\component\Can\Implementation\Can_Irq.c	  1571  ISR( CanIsr_18 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1572  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1573  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_18Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1574  #     if (osdIsrCanIsr_18Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1575  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1576  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1577  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1578  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1579  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1580   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1581   *
; ..\component\Can\Implementation\Can_Irq.c	  1582   *
; ..\component\Can\Implementation\Can_Irq.c	  1583   */
; ..\component\Can\Implementation\Can_Irq.c	  1584  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_18( void )
; ..\component\Can\Implementation\Can_Irq.c	  1585  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1586  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1587  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1588   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1589   *
; ..\component\Can\Implementation\Can_Irq.c	  1590   *
; ..\component\Can\Implementation\Can_Irq.c	  1591   */
; ..\component\Can\Implementation\Can_Irq.c	  1592  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_18) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_18( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1593  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1594  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1595  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1596  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1597  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1598   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1599   *
; ..\component\Can\Implementation\Can_Irq.c	  1600   *
; ..\component\Can\Implementation\Can_Irq.c	  1601   */
; ..\component\Can\Implementation\Can_Irq.c	  1602  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_18( void )
; ..\component\Can\Implementation\Can_Irq.c	  1603  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1604  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1605  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1606  {
; ..\component\Can\Implementation\Can_Irq.c	  1607  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1608  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1609      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1610  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1611      CanInterrupt(Can_GetPhysToLogChannel(18));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1612  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1613      CanInterrupt(kCanPhysToLogChannelIndex_18);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1614  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1615  
; ..\component\Can\Implementation\Can_Irq.c	  1616  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1617  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1618  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1619  #  endif /* (kCanPhysToLogChannelIndex_18) */
; ..\component\Can\Implementation\Can_Irq.c	  1620  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1621  /****************************************************************************
; ..\component\Can\Implementation\Can_Irq.c	  1622  | NAME:             CanIsr_19
; ..\component\Can\Implementation\Can_Irq.c	  1623  ****************************************************************************/
; ..\component\Can\Implementation\Can_Irq.c	  1624  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1625  #  if defined( kCanPhysToLogChannelIndex_19 ) /* COV_CAN_EQUAL_CHANNEL_LAYOUT */
; ..\component\Can\Implementation\Can_Irq.c	  1626  /* CODE CATEGORY 1 START */
; ..\component\Can\Implementation\Can_Irq.c	  1627  #   if defined( C_ENABLE_OSEK_OS ) && defined( C_ENABLE_OSEK_OS_INTCAT2 ) /* COV_CAN_OS_USAGE */
; ..\component\Can\Implementation\Can_Irq.c	  1628  #    if defined (osdIsrCanIsr_19Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1629  #     if (osdIsrCanIsr_19Cat != 2)
; ..\component\Can\Implementation\Can_Irq.c	  1630  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1631  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1632  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1633  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1634   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1635   *
; ..\component\Can\Implementation\Can_Irq.c	  1636   *
; ..\component\Can\Implementation\Can_Irq.c	  1637   */
; ..\component\Can\Implementation\Can_Irq.c	  1638  ISR( CanIsr_19 )    /* PRQA S 3408 */ /* ISR prototypes must be provided by OSEK header file */
; ..\component\Can\Implementation\Can_Irq.c	  1639  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1640  #    if defined( C_ENABLE_OSEK_OS ) && defined (osdIsrCanIsr_19Cat) /* COV_CAN_OSCAT_CONFIG_CHECK */
; ..\component\Can\Implementation\Can_Irq.c	  1641  #     if (osdIsrCanIsr_19Cat != 1)
; ..\component\Can\Implementation\Can_Irq.c	  1642  #      error "inconsistent configuration of Osek-OS interrupt category between GENy and OIL-configurator (CanIsr)"
; ..\component\Can\Implementation\Can_Irq.c	  1643  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1644  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1645  #    if defined ( C_ENABLE_ISRVOID )
; ..\component\Can\Implementation\Can_Irq.c	  1646  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1647   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1648   *
; ..\component\Can\Implementation\Can_Irq.c	  1649   *
; ..\component\Can\Implementation\Can_Irq.c	  1650   */
; ..\component\Can\Implementation\Can_Irq.c	  1651  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_19( void )
; ..\component\Can\Implementation\Can_Irq.c	  1652  #    else
; ..\component\Can\Implementation\Can_Irq.c	  1653  #     if defined( V_COMP_TASKING_TC3XX ) /* COV_CAN_HW_SPECIFIC */
; ..\component\Can\Implementation\Can_Irq.c	  1654  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1655   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1656   *
; ..\component\Can\Implementation\Can_Irq.c	  1657   *
; ..\component\Can\Implementation\Can_Irq.c	  1658   */
; ..\component\Can\Implementation\Can_Irq.c	  1659  V_DEF_FUNC(V_NONE, void __interrupt(kCanISRPrio_19) __vector_table(Can_GetkCanUsedCore()), CODE) CanIsr_19( void ) /* PRQA S 3408 */ /* MD_Can_ExternalScope */
; ..\component\Can\Implementation\Can_Irq.c	  1660  #     else
; ..\component\Can\Implementation\Can_Irq.c	  1661  #      if defined(V_COMP_GHS) && !defined(MISRA_CHECK) /* COV_CAN_COMPILER_SWITCH */
; ..\component\Can\Implementation\Can_Irq.c	  1662  #       pragma ghs interrupt
; ..\component\Can\Implementation\Can_Irq.c	  1663  #      endif
; ..\component\Can\Implementation\Can_Irq.c	  1664  /*!
; ..\component\Can\Implementation\Can_Irq.c	  1665   * Internal comment removed.
; ..\component\Can\Implementation\Can_Irq.c	  1666   *
; ..\component\Can\Implementation\Can_Irq.c	  1667   *
; ..\component\Can\Implementation\Can_Irq.c	  1668   */
; ..\component\Can\Implementation\Can_Irq.c	  1669  V_DEF_FUNC(V_NONE, void, CODE) CanIsr_19( void )
; ..\component\Can\Implementation\Can_Irq.c	  1670  #     endif
; ..\component\Can\Implementation\Can_Irq.c	  1671  #    endif
; ..\component\Can\Implementation\Can_Irq.c	  1672  #   endif /* C_ENABLE_OSEK_OS */
; ..\component\Can\Implementation\Can_Irq.c	  1673  {
; ..\component\Can\Implementation\Can_Irq.c	  1674  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1675  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1676      /* #10 call interrupt handler */
; ..\component\Can\Implementation\Can_Irq.c	  1677  #   if defined( CAN_USE_PHYSTOLOG_MAPPING )
; ..\component\Can\Implementation\Can_Irq.c	  1678      CanInterrupt(Can_GetPhysToLogChannel(19));    /* call Interrupthandling with identity dependend logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1679  #   else
; ..\component\Can\Implementation\Can_Irq.c	  1680      CanInterrupt(kCanPhysToLogChannelIndex_19);                      /* call Interrupthandling with logical channel */
; ..\component\Can\Implementation\Can_Irq.c	  1681  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1682  
; ..\component\Can\Implementation\Can_Irq.c	  1683  #   if !defined(MISRA_CHECK)  /* COV_CAN_MISRA */
; ..\component\Can\Implementation\Can_Irq.c	  1684  #   endif
; ..\component\Can\Implementation\Can_Irq.c	  1685  } /* END OF CanISR */
; ..\component\Can\Implementation\Can_Irq.c	  1686  #  endif /* (kCanPhysToLogChannelIndex_19) */
; ..\component\Can\Implementation\Can_Irq.c	  1687  /* CODE CATEGORY 1 END */
; ..\component\Can\Implementation\Can_Irq.c	  1688  
; ..\component\Can\Implementation\Can_Irq.c	  1689  #endif  /* Not a pure polling configuration */
; ..\component\Can\Implementation\Can_Irq.c	  1690  
; ..\component\Can\Implementation\Can_Irq.c	  1691  
; ..\component\Can\Implementation\Can_Irq.c	  1692  #define CAN_STOP_SEC_CODE  /*------------------------------------------*/
; ..\component\Can\Implementation\Can_Irq.c	  1693  #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Can\Implementation\Can_Irq.c	  1694  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1695  
; ..\component\Can\Implementation\Can_Irq.c	  1696  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1697  
; ..\component\Can\Implementation\Can_Irq.c	  1698  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1699  
; ..\component\Can\Implementation\Can_Irq.c	  1700  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1701  
; ..\component\Can\Implementation\Can_Irq.c	  1702  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1703  
; ..\component\Can\Implementation\Can_Irq.c	  1704  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1705  
; ..\component\Can\Implementation\Can_Irq.c	  1706  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1707  
; ..\component\Can\Implementation\Can_Irq.c	  1708  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1709  
; ..\component\Can\Implementation\Can_Irq.c	  1710  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1711  
; ..\component\Can\Implementation\Can_Irq.c	  1712  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1713  
; ..\component\Can\Implementation\Can_Irq.c	  1714  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1715  
; ..\component\Can\Implementation\Can_Irq.c	  1716  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1717  
; ..\component\Can\Implementation\Can_Irq.c	  1718  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1719  
; ..\component\Can\Implementation\Can_Irq.c	  1720  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1721  
; ..\component\Can\Implementation\Can_Irq.c	  1722  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1723  
; ..\component\Can\Implementation\Can_Irq.c	  1724  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1725  
; ..\component\Can\Implementation\Can_Irq.c	  1726  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1727  
; ..\component\Can\Implementation\Can_Irq.c	  1728  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1729  
; ..\component\Can\Implementation\Can_Irq.c	  1730  /* Kernbauer Version: 1.16 Konfiguration: DrvCan_TricoreMcanAsr Erzeugungsgangnummer: 701 */
; ..\component\Can\Implementation\Can_Irq.c	  1731  

	; Module end
