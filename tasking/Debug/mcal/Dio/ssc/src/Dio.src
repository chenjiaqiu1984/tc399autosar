	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=mcal\\Dio\\ssc\\src\\.Dio.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=mcal\\Dio\\ssc\\src\\Dio.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o mcal\\Dio\\ssc\\src\\Dio.src ..\\mcal\\Dio\\ssc\\src\\Dio.c"
	.compiler_name		"ctc"
	;source	'..\\mcal\\Dio\\ssc\\src\\Dio.c'

	
$TC162
	
	.sdecl	'.text.Dio.Dio_ReadChannel',code,cluster('Dio_ReadChannel')
	.sect	'.text.Dio.Dio_ReadChannel'
	.align	2
	
	.global	Dio_ReadChannel

; ..\mcal\Dio\ssc\src\Dio.c	     1  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	     2  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	     3  ** Copyright (C) Infineon Technologies (2023)                                 **
; ..\mcal\Dio\ssc\src\Dio.c	     4  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	     5  ** All rights reserved.                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	     6  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	     7  ** This document contains proprietary information belonging to Infineon       **
; ..\mcal\Dio\ssc\src\Dio.c	     8  ** Technologies. Passing on and copying of this document, and communication   **
; ..\mcal\Dio\ssc\src\Dio.c	     9  ** of its contents is not permitted without prior written authorization.      **
; ..\mcal\Dio\ssc\src\Dio.c	    10  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    11  ********************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	    12  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    13  **  FILENAME     : Dio.c                                                      **
; ..\mcal\Dio\ssc\src\Dio.c	    14  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    15  **  VERSION      : 28.0.0                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	    16  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    17  **  DATE         : 2023-07-05                                                 **
; ..\mcal\Dio\ssc\src\Dio.c	    18  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    19  **  VARIANT      : Variant LT                                                 **
; ..\mcal\Dio\ssc\src\Dio.c	    20  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    21  **  PLATFORM     : Infineon AURIX2G                                           **
; ..\mcal\Dio\ssc\src\Dio.c	    22  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    23  **  AUTHOR       : DL-AUTOSAR-Engineering                                     **
; ..\mcal\Dio\ssc\src\Dio.c	    24  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    25  **  VENDOR       : Infineon Technologies                                      **
; ..\mcal\Dio\ssc\src\Dio.c	    26  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    27  **  DESCRIPTION  : Dio Driver source file                                     **
; ..\mcal\Dio\ssc\src\Dio.c	    28  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    29  **  SPECIFICATION(S) : Specification of Dio Driver, AUTOSAR Release 4.2.2     **
; ..\mcal\Dio\ssc\src\Dio.c	    30  **                     and AUTOSAR Release 4.4.0                              **
; ..\mcal\Dio\ssc\src\Dio.c	    31  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    32  ** MAY BE CHANGED BY USER : no                                                **
; ..\mcal\Dio\ssc\src\Dio.c	    33  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	    34  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	    35  /* [cover parentID={F5CF0050-FA3F-4e14-8C3E-FD0E8CB08831}][/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	    36  /* [cover parentID={684B8436-0E72-4797-A3B4-2A4FBDD083F0},
; ..\mcal\Dio\ssc\src\Dio.c	    37                     {AC8683E3-C8D8-4704-B9CC-4620683FE9C3}] [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	    38  
; ..\mcal\Dio\ssc\src\Dio.c	    39  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	    40  **                      Include Section                                       **
; ..\mcal\Dio\ssc\src\Dio.c	    41  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	    42  
; ..\mcal\Dio\ssc\src\Dio.c	    43  /* Inclusion of Port Register structure header file */
; ..\mcal\Dio\ssc\src\Dio.c	    44  #include "IfxPort_reg.h"
; ..\mcal\Dio\ssc\src\Dio.c	    45  
; ..\mcal\Dio\ssc\src\Dio.c	    46  /* Own header file, this includes own configuration file also */
; ..\mcal\Dio\ssc\src\Dio.c	    47  #include "Dio.h"
; ..\mcal\Dio\ssc\src\Dio.c	    48  /* Include Mcal.h to import the library functions */
; ..\mcal\Dio\ssc\src\Dio.c	    49  #include "McalLib.h"
; ..\mcal\Dio\ssc\src\Dio.c	    50  /* Conditional Inclusion of Safety Error Tracer File */
; ..\mcal\Dio\ssc\src\Dio.c	    51  #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	    52  #include "Mcal_SafetyError.h"
; ..\mcal\Dio\ssc\src\Dio.c	    53  #endif /* (DIO_SAFETY_ENABLE == STD_ON) */
; ..\mcal\Dio\ssc\src\Dio.c	    54  /* Conditional Inclusion of Developement Error Tracer File */
; ..\mcal\Dio\ssc\src\Dio.c	    55  #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	    56  #include "Det.h"
; ..\mcal\Dio\ssc\src\Dio.c	    57  #endif /* ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON)) */
; ..\mcal\Dio\ssc\src\Dio.c	    58  
; ..\mcal\Dio\ssc\src\Dio.c	    59  
; ..\mcal\Dio\ssc\src\Dio.c	    60  
; ..\mcal\Dio\ssc\src\Dio.c	    61  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	    62  **                      Imported Compiler Switch Check                        **
; ..\mcal\Dio\ssc\src\Dio.c	    63  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	    64  
; ..\mcal\Dio\ssc\src\Dio.c	    65  /* Version checks */
; ..\mcal\Dio\ssc\src\Dio.c	    66  
; ..\mcal\Dio\ssc\src\Dio.c	    67  #ifndef DIO_SW_MAJOR_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	    68  #error "DIO_SW_MAJOR_VERSION is not defined. "
; ..\mcal\Dio\ssc\src\Dio.c	    69  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    70  
; ..\mcal\Dio\ssc\src\Dio.c	    71  #ifndef DIO_SW_MINOR_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	    72  #error "DIO_SW_MINOR_VERSION is not defined. "
; ..\mcal\Dio\ssc\src\Dio.c	    73  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    74  
; ..\mcal\Dio\ssc\src\Dio.c	    75  #ifndef DIO_SW_PATCH_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	    76  #error "DIO_SW_PATCH_VERSION is not defined. "
; ..\mcal\Dio\ssc\src\Dio.c	    77  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    78  /* Check for Correct inclusion of headers */
; ..\mcal\Dio\ssc\src\Dio.c	    79  #if ( DIO_SW_MAJOR_VERSION != 20U )
; ..\mcal\Dio\ssc\src\Dio.c	    80  #error "DIO_SW_MAJOR_VERSION does not match. "
; ..\mcal\Dio\ssc\src\Dio.c	    81  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    82  
; ..\mcal\Dio\ssc\src\Dio.c	    83  #if ( DIO_SW_MINOR_VERSION != 25U )
; ..\mcal\Dio\ssc\src\Dio.c	    84  #error "DIO_SW_MINOR_VERSION does not match. "
; ..\mcal\Dio\ssc\src\Dio.c	    85  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    86  
; ..\mcal\Dio\ssc\src\Dio.c	    87  #if ( DIO_SW_PATCH_VERSION != 0U )
; ..\mcal\Dio\ssc\src\Dio.c	    88  #error "DIO_SW_PATCH_VERSION does not match. "
; ..\mcal\Dio\ssc\src\Dio.c	    89  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    90  
; ..\mcal\Dio\ssc\src\Dio.c	    91  #ifndef DIO_AR_RELEASE_MAJOR_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	    92  #error "DIO_AR_RELEASE_MAJOR_VERSION is not defined."
; ..\mcal\Dio\ssc\src\Dio.c	    93  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    94  
; ..\mcal\Dio\ssc\src\Dio.c	    95  #ifndef DIO_AR_RELEASE_MINOR_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	    96  #error "DIO_AR_RELEASE_MINOR_VERSION is not defined. "
; ..\mcal\Dio\ssc\src\Dio.c	    97  #endif
; ..\mcal\Dio\ssc\src\Dio.c	    98  
; ..\mcal\Dio\ssc\src\Dio.c	    99  #ifndef DIO_AR_RELEASE_REVISION_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	   100  #error "DIO_AR_RELEASE_REVISION_VERSION is not defined. "
; ..\mcal\Dio\ssc\src\Dio.c	   101  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   102  
; ..\mcal\Dio\ssc\src\Dio.c	   103  /* [cover parentID={F7FBC1BE-361C-48d8-BE05-13B8C0CF8618}]
; ..\mcal\Dio\ssc\src\Dio.c	   104    [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   105  #if ( DIO_AR_RELEASE_MAJOR_VERSION != MCAL_AR_RELEASE_MAJOR_VERSION )
; ..\mcal\Dio\ssc\src\Dio.c	   106  #error "DIO_AR_RELEASE_MAJOR_VERSION does not match."
; ..\mcal\Dio\ssc\src\Dio.c	   107  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   108  
; ..\mcal\Dio\ssc\src\Dio.c	   109  #if (DIO_AR_RELEASE_MINOR_VERSION != MCAL_AR_RELEASE_MINOR_VERSION )
; ..\mcal\Dio\ssc\src\Dio.c	   110  #error "DIO_AR_RELEASE_MINOR_VERSION does not match. "
; ..\mcal\Dio\ssc\src\Dio.c	   111  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   112  
; ..\mcal\Dio\ssc\src\Dio.c	   113  #if ( DIO_AR_RELEASE_REVISION_VERSION != MCAL_AR_RELEASE_REVISION_VERSION )
; ..\mcal\Dio\ssc\src\Dio.c	   114  #error "DIO_AR_RELEASE_REVISION_VERSION does not match. "
; ..\mcal\Dio\ssc\src\Dio.c	   115  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   116  
; ..\mcal\Dio\ssc\src\Dio.c	   117  /* [cover parentID={905B21B2-76DD-4e4d-8BE1-81E809E398B0}]
; ..\mcal\Dio\ssc\src\Dio.c	   118    [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   119  #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	   120  
; ..\mcal\Dio\ssc\src\Dio.c	   121  #ifndef DET_AR_RELEASE_MAJOR_VERSION
; ..\mcal\Dio\ssc\src\Dio.c	   122  #error "DET_AR_RELEASE_MAJOR_VERSION is not defined."
; ..\mcal\Dio\ssc\src\Dio.c	   123  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   124  
; ..\mcal\Dio\ssc\src\Dio.c	   125  #if ( DET_AR_RELEASE_MAJOR_VERSION != 4U )
; ..\mcal\Dio\ssc\src\Dio.c	   126  #error "DET_AR_RELEASE_MAJOR_VERSION does not match."
; ..\mcal\Dio\ssc\src\Dio.c	   127  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   128  
; ..\mcal\Dio\ssc\src\Dio.c	   129  
; ..\mcal\Dio\ssc\src\Dio.c	   130  
; ..\mcal\Dio\ssc\src\Dio.c	   131  #endif /* End for DIO_DEV_ERROR_DETECT */
; ..\mcal\Dio\ssc\src\Dio.c	   132  
; ..\mcal\Dio\ssc\src\Dio.c	   133  
; ..\mcal\Dio\ssc\src\Dio.c	   134  
; ..\mcal\Dio\ssc\src\Dio.c	   135  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   136  **                      Private Object Like Macro Definitions                 **
; ..\mcal\Dio\ssc\src\Dio.c	   137  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   138  #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   139  
; ..\mcal\Dio\ssc\src\Dio.c	   140  /* 0th Bit Mask value */
; ..\mcal\Dio\ssc\src\Dio.c	   141  #define DIO_CHANNEL_BIT_MASK         (0x01U)
; ..\mcal\Dio\ssc\src\Dio.c	   142  
; ..\mcal\Dio\ssc\src\Dio.c	   143  /* Error status values */
; ..\mcal\Dio\ssc\src\Dio.c	   144  #define DIO_NO_ERROR                 (1U)
; ..\mcal\Dio\ssc\src\Dio.c	   145  #define DIO_ERROR                    (0U)
; ..\mcal\Dio\ssc\src\Dio.c	   146  
; ..\mcal\Dio\ssc\src\Dio.c	   147  /* Port numbers */
; ..\mcal\Dio\ssc\src\Dio.c	   148  #define DIO_NUMBER_31                (0x1FU)
; ..\mcal\Dio\ssc\src\Dio.c	   149  #define DIO_NUMBER_32                (0x20U)
; ..\mcal\Dio\ssc\src\Dio.c	   150  #endif /* DIO_DEV_ERROR_DETECT == STD_ON */
; ..\mcal\Dio\ssc\src\Dio.c	   151  
; ..\mcal\Dio\ssc\src\Dio.c	   152  #define DIO_NUMBER_0                 (0x0U)
; ..\mcal\Dio\ssc\src\Dio.c	   153  #define DIO_NUMBER_16                (0x10U)
; ..\mcal\Dio\ssc\src\Dio.c	   154  #define DIO_NUMBER_1                 (0x1U)
; ..\mcal\Dio\ssc\src\Dio.c	   155  
; ..\mcal\Dio\ssc\src\Dio.c	   156  /* lower 4 bit mask value */
; ..\mcal\Dio\ssc\src\Dio.c	   157  #define DIO_PIN_LOW4_MASK     (0x0FU)
; ..\mcal\Dio\ssc\src\Dio.c	   158  
; ..\mcal\Dio\ssc\src\Dio.c	   159  /* Bit 4 to 11 Mask value */
; ..\mcal\Dio\ssc\src\Dio.c	   160  #define DIO_4_TO_11_MASK      (0x0FF0U)
; ..\mcal\Dio\ssc\src\Dio.c	   161  
; ..\mcal\Dio\ssc\src\Dio.c	   162  /* This is the reset bit set for Pn_Omr register*/
; ..\mcal\Dio\ssc\src\Dio.c	   163  #define DIO_OMR_RESET_BIT            (0x1U)
; ..\mcal\Dio\ssc\src\Dio.c	   164  
; ..\mcal\Dio\ssc\src\Dio.c	   165  /* Port Number offset */
; ..\mcal\Dio\ssc\src\Dio.c	   166  #define DIO_PORT_NUM_OFFSET   (0x4U)
; ..\mcal\Dio\ssc\src\Dio.c	   167  
; ..\mcal\Dio\ssc\src\Dio.c	   168  #if (DIO_FLIP_CHANNEL_API == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	   169  /* IOCR0 register offset in Port_RegType */
; ..\mcal\Dio\ssc\src\Dio.c	   170  #define DIO_PORT_IOCR0_REG_OFFSET  (0x4U)
; ..\mcal\Dio\ssc\src\Dio.c	   171  
; ..\mcal\Dio\ssc\src\Dio.c	   172  /* Mask to get direction info from Pin control value */
; ..\mcal\Dio\ssc\src\Dio.c	   173  #define DIO_PORT_DIR_MSK             (0x80U)
; ..\mcal\Dio\ssc\src\Dio.c	   174  
; ..\mcal\Dio\ssc\src\Dio.c	   175  /*  Port pin input dirction value */
; ..\mcal\Dio\ssc\src\Dio.c	   176  #define DIO_PORT_PIN_IN              (0x00U)
; ..\mcal\Dio\ssc\src\Dio.c	   177  
; ..\mcal\Dio\ssc\src\Dio.c	   178  /* This is the mask to toggle bit set for Pn_Omr Register */
; ..\mcal\Dio\ssc\src\Dio.c	   179  #define DIO_OMR_MASK_BIT            ((uint32)0x00010001)
; ..\mcal\Dio\ssc\src\Dio.c	   180  
; ..\mcal\Dio\ssc\src\Dio.c	   181  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   182  
; ..\mcal\Dio\ssc\src\Dio.c	   183  #if(DIO_MASKED_WRITE_PORT_API == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	   184  #define OMR_BIT_UPDATE_SHIFT        (16U)
; ..\mcal\Dio\ssc\src\Dio.c	   185  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   186  
; ..\mcal\Dio\ssc\src\Dio.c	   187  #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   188  #define PORT_NO_GREATER_THAN_32  (32U)
; ..\mcal\Dio\ssc\src\Dio.c	   189  #define PORT_POPCNT_CALC         (31U)
; ..\mcal\Dio\ssc\src\Dio.c	   190  #define PORT_POPCNT_CALC_32_63   (PORT_POPCNT_CALC + PORT_NO_GREATER_THAN_32)
; ..\mcal\Dio\ssc\src\Dio.c	   191  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   192  
; ..\mcal\Dio\ssc\src\Dio.c	   193  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   194  **                         User Mode Macros                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   195  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   196  
; ..\mcal\Dio\ssc\src\Dio.c	   197  /*[cover parentID={89094628-24A7-41b5-B0E1-47A7736F20AE}]
; ..\mcal\Dio\ssc\src\Dio.c	   198  User Mode macros not required
; ..\mcal\Dio\ssc\src\Dio.c	   199  [/cover]*/
; ..\mcal\Dio\ssc\src\Dio.c	   200  
; ..\mcal\Dio\ssc\src\Dio.c	   201  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   202  **                   Function like macro definitions                          **
; ..\mcal\Dio\ssc\src\Dio.c	   203  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   204  
; ..\mcal\Dio\ssc\src\Dio.c	   205  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   206  **                      Private Type Definitions                              **
; ..\mcal\Dio\ssc\src\Dio.c	   207  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   208  
; ..\mcal\Dio\ssc\src\Dio.c	   209  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   210  **                      Global Constant Definitions                           **
; ..\mcal\Dio\ssc\src\Dio.c	   211  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   212  
; ..\mcal\Dio\ssc\src\Dio.c	   213  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   214  **                      Global Variable Definitions                           **
; ..\mcal\Dio\ssc\src\Dio.c	   215  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   216  
; ..\mcal\Dio\ssc\src\Dio.c	   217  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   218  **                      Private Constant Definitions                          **
; ..\mcal\Dio\ssc\src\Dio.c	   219  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   220  /* [cover parentID={5713A17A-3FA1-427f-A0B6-89125A17689A},
; ..\mcal\Dio\ssc\src\Dio.c	   221                     {72DABBEB-F27B-4677-B6B4-B53F634341BA}] [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   222  /* [cover parentID={2757CB7F-252C-4231-80B1-F6375E8BAE83},
; ..\mcal\Dio\ssc\src\Dio.c	   223                     {EA0715EE-3E3C-4aac-A42E-4B5CFC96CEED},
; ..\mcal\Dio\ssc\src\Dio.c	   224                     {566ED99C-0D96-46ac-97BF-E97B04E2C700}] [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   225  /* Start of memory mapping of 16 bit constant */
; ..\mcal\Dio\ssc\src\Dio.c	   226  #define DIO_START_SEC_CONST_ASIL_B_GLOBAL_16
; ..\mcal\Dio\ssc\src\Dio.c	   227  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	   228  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	   229  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	   230  
; ..\mcal\Dio\ssc\src\Dio.c	   231  /* MISRA2012_RULE_8_9_JUSTIFICATION: The array Dio_kMaskAllPortPins
; ..\mcal\Dio\ssc\src\Dio.c	   232  cannot be made local since it is used by various APIs when Safety/DET is ON.
; ..\mcal\Dio\ssc\src\Dio.c	   233  Hence it cannot be defined within block scope. */
; ..\mcal\Dio\ssc\src\Dio.c	   234  /* Mask values for all the ports.
; ..\mcal\Dio\ssc\src\Dio.c	   235     This constant is used to mask the All port pins within the port */
; ..\mcal\Dio\ssc\src\Dio.c	   236  static const Dio_PortLevelType Dio_kMaskAllPortPins[] =
; ..\mcal\Dio\ssc\src\Dio.c	   237  {
; ..\mcal\Dio\ssc\src\Dio.c	   238    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT0,
; ..\mcal\Dio\ssc\src\Dio.c	   239    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT1,
; ..\mcal\Dio\ssc\src\Dio.c	   240    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT2,
; ..\mcal\Dio\ssc\src\Dio.c	   241    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT3,
; ..\mcal\Dio\ssc\src\Dio.c	   242    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT4,
; ..\mcal\Dio\ssc\src\Dio.c	   243    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT5,
; ..\mcal\Dio\ssc\src\Dio.c	   244    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT6,
; ..\mcal\Dio\ssc\src\Dio.c	   245    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT7,
; ..\mcal\Dio\ssc\src\Dio.c	   246    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT8,
; ..\mcal\Dio\ssc\src\Dio.c	   247    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT9,
; ..\mcal\Dio\ssc\src\Dio.c	   248    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT10,
; ..\mcal\Dio\ssc\src\Dio.c	   249    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT11,
; ..\mcal\Dio\ssc\src\Dio.c	   250    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT12,
; ..\mcal\Dio\ssc\src\Dio.c	   251    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT13,
; ..\mcal\Dio\ssc\src\Dio.c	   252    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT14,
; ..\mcal\Dio\ssc\src\Dio.c	   253    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT15,
; ..\mcal\Dio\ssc\src\Dio.c	   254    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT16,
; ..\mcal\Dio\ssc\src\Dio.c	   255    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT17,
; ..\mcal\Dio\ssc\src\Dio.c	   256    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT18,
; ..\mcal\Dio\ssc\src\Dio.c	   257    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT19,
; ..\mcal\Dio\ssc\src\Dio.c	   258    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT20,
; ..\mcal\Dio\ssc\src\Dio.c	   259    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT21,
; ..\mcal\Dio\ssc\src\Dio.c	   260    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT22,
; ..\mcal\Dio\ssc\src\Dio.c	   261    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT23,
; ..\mcal\Dio\ssc\src\Dio.c	   262    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT24,
; ..\mcal\Dio\ssc\src\Dio.c	   263    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT25,
; ..\mcal\Dio\ssc\src\Dio.c	   264    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT26,
; ..\mcal\Dio\ssc\src\Dio.c	   265    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT27,
; ..\mcal\Dio\ssc\src\Dio.c	   266    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT28,
; ..\mcal\Dio\ssc\src\Dio.c	   267    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT29,
; ..\mcal\Dio\ssc\src\Dio.c	   268    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT30,
; ..\mcal\Dio\ssc\src\Dio.c	   269    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT31,
; ..\mcal\Dio\ssc\src\Dio.c	   270    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT32,
; ..\mcal\Dio\ssc\src\Dio.c	   271    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT33,
; ..\mcal\Dio\ssc\src\Dio.c	   272    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT34,
; ..\mcal\Dio\ssc\src\Dio.c	   273    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT35,
; ..\mcal\Dio\ssc\src\Dio.c	   274    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT36,
; ..\mcal\Dio\ssc\src\Dio.c	   275    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT37,
; ..\mcal\Dio\ssc\src\Dio.c	   276    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT38,
; ..\mcal\Dio\ssc\src\Dio.c	   277    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT39,
; ..\mcal\Dio\ssc\src\Dio.c	   278    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT40,
; ..\mcal\Dio\ssc\src\Dio.c	   279    (Dio_PortLevelType)DIO_MASK_ALL_PINS_PORT41
; ..\mcal\Dio\ssc\src\Dio.c	   280  
; ..\mcal\Dio\ssc\src\Dio.c	   281  };
; ..\mcal\Dio\ssc\src\Dio.c	   282  
; ..\mcal\Dio\ssc\src\Dio.c	   283  /* Stop of memory mapping of 16 bit constant */
; ..\mcal\Dio\ssc\src\Dio.c	   284  #define DIO_STOP_SEC_CONST_ASIL_B_GLOBAL_16
; ..\mcal\Dio\ssc\src\Dio.c	   285  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	   286  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	   287  /*MISRA2012_RULE_20_1_JUSTIFICATION: Dio_Memmap.h header included as per
; ..\mcal\Dio\ssc\src\Dio.c	   288  Autosar guidelines. */
; ..\mcal\Dio\ssc\src\Dio.c	   289  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	   290  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   291  **                      Private Variable Definitions                          **
; ..\mcal\Dio\ssc\src\Dio.c	   292  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   293  #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   294  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   295    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   296  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   297    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   298  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   299    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   300  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   301    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   302  #define DIO_START_SEC_CONST_ASIL_B_GLOBAL_32
; ..\mcal\Dio\ssc\src\Dio.c	   303  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	   304  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	   305  /*MISRA2012_RULE_20_1_JUSTIFICATION: Dio_Memmap.h header included as per
; ..\mcal\Dio\ssc\src\Dio.c	   306  Autosar guidelines. */
; ..\mcal\Dio\ssc\src\Dio.c	   307  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	   308  static const Dio_ConfigType * const Dio_kConfigPtr = &Dio_Config;
; ..\mcal\Dio\ssc\src\Dio.c	   309  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   310    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   311  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   312    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   313  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   314    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   315  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\mcal\Dio\ssc\src\Dio.c	   316    in generated code due to Autosar Naming constraints.*/
; ..\mcal\Dio\ssc\src\Dio.c	   317  #define DIO_STOP_SEC_CONST_ASIL_B_GLOBAL_32
; ..\mcal\Dio\ssc\src\Dio.c	   318  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	   319  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	   320  /*MISRA2012_RULE_20_1_JUSTIFICATION: Dio_Memmap.h header included as per
; ..\mcal\Dio\ssc\src\Dio.c	   321  Autosar guidelines. */
; ..\mcal\Dio\ssc\src\Dio.c	   322  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	   323  #endif /*(DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON)*/
; ..\mcal\Dio\ssc\src\Dio.c	   324  
; ..\mcal\Dio\ssc\src\Dio.c	   325  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   326  **                      Private Function Declarations                         **
; ..\mcal\Dio\ssc\src\Dio.c	   327  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   328  /*[[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}] [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   329  #define DIO_START_SEC_CODE_ASIL_B_GLOBAL
; ..\mcal\Dio\ssc\src\Dio.c	   330  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	   331  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	   332  /*MISRA2012_RULE_20_1_JUSTIFICATION: Dio_Memmap.h header included as per
; ..\mcal\Dio\ssc\src\Dio.c	   333  Autosar guidelines. */
; ..\mcal\Dio\ssc\src\Dio.c	   334  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	   335  
; ..\mcal\Dio\ssc\src\Dio.c	   336  #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   337  
; ..\mcal\Dio\ssc\src\Dio.c	   338  /* Function to Report Error*/
; ..\mcal\Dio\ssc\src\Dio.c	   339  static void Dio_lReportError(const uint8 ApiId, const uint8 ErrorId);
; ..\mcal\Dio\ssc\src\Dio.c	   340  
; ..\mcal\Dio\ssc\src\Dio.c	   341  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   342  
; ..\mcal\Dio\ssc\src\Dio.c	   343  #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   344  
; ..\mcal\Dio\ssc\src\Dio.c	   345  /* INLINE Function to check if ChannelId is valid or not*/
; ..\mcal\Dio\ssc\src\Dio.c	   346  LOCAL_INLINE uint8 Dio_lCheckChannelId(const Dio_ChannelType ChannelId,
; ..\mcal\Dio\ssc\src\Dio.c	   347                                         const Dio_PortType PortNumber,\ 
; ..\mcal\Dio\ssc\src\Dio.c	   348                                         const uint8 PinNumber);
; ..\mcal\Dio\ssc\src\Dio.c	   349  
; ..\mcal\Dio\ssc\src\Dio.c	   350  /* INLINE Function to check if GroupIdptr is valid or not*/
; ..\mcal\Dio\ssc\src\Dio.c	   351  LOCAL_INLINE uint8 Dio_lCheckGroupId
; ..\mcal\Dio\ssc\src\Dio.c	   352  ( const Dio_ChannelGroupType * const GroupIdPtr);
; ..\mcal\Dio\ssc\src\Dio.c	   353  
; ..\mcal\Dio\ssc\src\Dio.c	   354  /* INLINE Function to check if PortId is valid or not*/
; ..\mcal\Dio\ssc\src\Dio.c	   355  LOCAL_INLINE uint8 Dio_lCheckPortId (const Dio_PortType PortId);
; ..\mcal\Dio\ssc\src\Dio.c	   356  
; ..\mcal\Dio\ssc\src\Dio.c	   357  /* INLINE Function to check if GroupIdPtr is configured or not*/
; ..\mcal\Dio\ssc\src\Dio.c	   358  LOCAL_INLINE uint8 Dio_lCheckChGrpValue
; ..\mcal\Dio\ssc\src\Dio.c	   359  (const Dio_ChannelGroupType * const GroupIdPtr);
; ..\mcal\Dio\ssc\src\Dio.c	   360  
; ..\mcal\Dio\ssc\src\Dio.c	   361  /* INLINE Function to check if the port is
; ..\mcal\Dio\ssc\src\Dio.c	   362        available or not for the microcontroller*/
; ..\mcal\Dio\ssc\src\Dio.c	   363  LOCAL_INLINE uint32 Dio_lIsPortAvailable31(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   364  
; ..\mcal\Dio\ssc\src\Dio.c	   365  /* INLINE Function to check if the port is
; ..\mcal\Dio\ssc\src\Dio.c	   366         available or not for the microcontroller*/
; ..\mcal\Dio\ssc\src\Dio.c	   367  LOCAL_INLINE uint32 Dio_lIsPortAvailable63(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   368  
; ..\mcal\Dio\ssc\src\Dio.c	   369  /* INLINE Function to check if the port is
; ..\mcal\Dio\ssc\src\Dio.c	   370         available or not for the microcontroller*/
; ..\mcal\Dio\ssc\src\Dio.c	   371  LOCAL_INLINE uint32 Dio_lIsPortAvailable(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   372  
; ..\mcal\Dio\ssc\src\Dio.c	   373  /* INLINE Function to check if the
; ..\mcal\Dio\ssc\src\Dio.c	   374       port is read only or it is writable */
; ..\mcal\Dio\ssc\src\Dio.c	   375  LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   376  
; ..\mcal\Dio\ssc\src\Dio.c	   377  /* INLINE Function to check if the
; ..\mcal\Dio\ssc\src\Dio.c	   378       port is read only or it is writable */
; ..\mcal\Dio\ssc\src\Dio.c	   379  LOCAL_INLINE uint32 Dio_lIsPortReadOnly63(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   380  
; ..\mcal\Dio\ssc\src\Dio.c	   381  /* INLINE Function to check if the port
; ..\mcal\Dio\ssc\src\Dio.c	   382            is read only or it is writable */
; ..\mcal\Dio\ssc\src\Dio.c	   383  LOCAL_INLINE uint32 Dio_lIsPortReadOnly(const uint32 Port);
; ..\mcal\Dio\ssc\src\Dio.c	   384  
; ..\mcal\Dio\ssc\src\Dio.c	   385  /* INLINE Function to check if the Pin
; ..\mcal\Dio\ssc\src\Dio.c	   386            available or not for the input parameter port */
; ..\mcal\Dio\ssc\src\Dio.c	   387  LOCAL_INLINE uint16 Dio_lIsPinAvailable(const uint32 Port, const uint8 Pin);
; ..\mcal\Dio\ssc\src\Dio.c	   388  #endif /* ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))*/
; ..\mcal\Dio\ssc\src\Dio.c	   389  
; ..\mcal\Dio\ssc\src\Dio.c	   390  /* INLINE function to identify the port number from the passed ChannelId */
; ..\mcal\Dio\ssc\src\Dio.c	   391  LOCAL_INLINE Dio_PortType Dio_lGetPortNumber(const Dio_ChannelType ChannelId);
; ..\mcal\Dio\ssc\src\Dio.c	   392  
; ..\mcal\Dio\ssc\src\Dio.c	   393  /* INLINE function to extract the Address of Px module */
; ..\mcal\Dio\ssc\src\Dio.c	   394  LOCAL_INLINE Ifx_P *Dio_lGetPortAdr(const Dio_PortType PortNumber);
; ..\mcal\Dio\ssc\src\Dio.c	   395  
; ..\mcal\Dio\ssc\src\Dio.c	   396  /* INLINE function to identify the pin number from the passed ChannelId */
; ..\mcal\Dio\ssc\src\Dio.c	   397  LOCAL_INLINE uint8 Dio_lGetPinNumber(const Dio_ChannelType ChannelId);
; ..\mcal\Dio\ssc\src\Dio.c	   398  
; ..\mcal\Dio\ssc\src\Dio.c	   399  #if(DIO_SAFETY_ENABLE == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	   400  /*INLINE function to check if the Level passed is valid */
; ..\mcal\Dio\ssc\src\Dio.c	   401  LOCAL_INLINE uint8 Dio_lCheckLevel(const Dio_LevelType Level);
; ..\mcal\Dio\ssc\src\Dio.c	   402  #endif
; ..\mcal\Dio\ssc\src\Dio.c	   403  
; ..\mcal\Dio\ssc\src\Dio.c	   404  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   405  **                      Global Function Definitions                           **
; ..\mcal\Dio\ssc\src\Dio.c	   406  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   407  
; ..\mcal\Dio\ssc\src\Dio.c	   408  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   409  ** Traceability:[cover parentID={2FCCA836-116C-4ec3-9866-ED48D757D432}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   410  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   411  ** Syntax           : Dio_LevelType Dio_ReadChannel                           **
; ..\mcal\Dio\ssc\src\Dio.c	   412  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   413  **                     const Dio_ChannelType ChannelId                        **
; ..\mcal\Dio\ssc\src\Dio.c	   414  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   415  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   416  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   417  **      - returns the level of specified channel                              **
; ..\mcal\Dio\ssc\src\Dio.c	   418  **      - The specified channel can be input or output                        **
; ..\mcal\Dio\ssc\src\Dio.c	   419  **      - returns the physical level of the channel                           **
; ..\mcal\Dio\ssc\src\Dio.c	   420  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   421  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   422  ** Service ID:  0x00                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   423  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   424  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   425  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   426  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   427  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   428  ** Parameters (in)  : ChannelId - ChannelId whose level to be read            **
; ..\mcal\Dio\ssc\src\Dio.c	   429  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   430  ** Parameters (out) : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   431  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   432  ** Return value     : RetVal - The Api returns level                          **
; ..\mcal\Dio\ssc\src\Dio.c	   433  **                    of the specified channel                                **
; ..\mcal\Dio\ssc\src\Dio.c	   434  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   435  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   436  
; ..\mcal\Dio\ssc\src\Dio.c	   437  Dio_LevelType Dio_ReadChannel(const Dio_ChannelType ChannelId)
; Function Dio_ReadChannel
.L68:
Dio_ReadChannel:	.type	func
	mov	d8,d4
.L380:

; ..\mcal\Dio\ssc\src\Dio.c	   438  {
; ..\mcal\Dio\ssc\src\Dio.c	   439    uint32         PinPosition;
; ..\mcal\Dio\ssc\src\Dio.c	   440    Dio_PortType   PortNumber;
; ..\mcal\Dio\ssc\src\Dio.c	   441    uint8          PinNumber;
; ..\mcal\Dio\ssc\src\Dio.c	   442    Dio_LevelType  RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	   443    const Ifx_P *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   444  
; ..\mcal\Dio\ssc\src\Dio.c	   445    /* Return value should be zero for errors*/
; ..\mcal\Dio\ssc\src\Dio.c	   446    RetVal = (Dio_LevelType)STD_LOW;
; ..\mcal\Dio\ssc\src\Dio.c	   447  
; ..\mcal\Dio\ssc\src\Dio.c	   448    /* GetPortNumber will get the Port Number */
; ..\mcal\Dio\ssc\src\Dio.c	   449    PortNumber = Dio_lGetPortNumber(ChannelId);
	mov	d11,#0
	call	Dio_lGetPortNumber
.L379:
	mov	d9,d2
.L382:

; ..\mcal\Dio\ssc\src\Dio.c	   450    /* GetPinNumber will get the Pin Number */
; ..\mcal\Dio\ssc\src\Dio.c	   451    PinNumber = Dio_lGetPinNumber(ChannelId);
	mov	d4,d8
	call	Dio_lGetPinNumber
.L381:
	mov	d10,d2
.L257:

; ..\mcal\Dio\ssc\src\Dio.c	   452  
; ..\mcal\Dio\ssc\src\Dio.c	   453    /* [cover parentID={D6CF8A26-846E-41bd-B070-735583623161}]
; ..\mcal\Dio\ssc\src\Dio.c	   454       Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   455       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   456  
; ..\mcal\Dio\ssc\src\Dio.c	   457    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   458    uint8 ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	   459    ErrStatus = E_OK;
	mov	d15,#0
.L384:

; ..\mcal\Dio\ssc\src\Dio.c	   460  
; ..\mcal\Dio\ssc\src\Dio.c	   461    /* [cover parentID={78B6E21A-C072-44ff-9DCD-F5FBA4760844}]
; ..\mcal\Dio\ssc\src\Dio.c	   462       Verify ChannelID
; ..\mcal\Dio\ssc\src\Dio.c	   463       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   464    /* [cover parentID={D3D46F48-C883-4029-903D-504C0D98DA08}]
; ..\mcal\Dio\ssc\src\Dio.c	   465       Check For Channel Id
; ..\mcal\Dio\ssc\src\Dio.c	   466       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   467  
; ..\mcal\Dio\ssc\src\Dio.c	   468    if(Dio_lCheckChannelId(ChannelId, PortNumber, PinNumber) == (uint8)DIO_ERROR)
	mov	e4,d9,d8
	mov	d6,d10
	call	Dio_lCheckChannelId
.L383:
	jne	d2,#0,.L2
.L477:

; ..\mcal\Dio\ssc\src\Dio.c	   469    {
; ..\mcal\Dio\ssc\src\Dio.c	   470  
; ..\mcal\Dio\ssc\src\Dio.c	   471      /* The port id passed to the Api is invalid. Report error id
; ..\mcal\Dio\ssc\src\Dio.c	   472           DIO_E_PARAM_INVALID_PORT_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   473      /* [cover parentID={A9221E36-068F-4ce1-9580-D2984C1523D2}]
; ..\mcal\Dio\ssc\src\Dio.c	   474         Report Error
; ..\mcal\Dio\ssc\src\Dio.c	   475         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   476      Dio_lReportError(DIO_SID_READCHANNEL, DIO_E_PARAM_INVALID_CHANNEL_ID);
	mov	d4,#0
.L478:
	mov	d5,#10
	call	Dio_lReportError
.L479:

; ..\mcal\Dio\ssc\src\Dio.c	   477      ErrStatus = (uint8)E_NOT_OK;
	mov	d15,#1
.L2:

; ..\mcal\Dio\ssc\src\Dio.c	   478    }
; ..\mcal\Dio\ssc\src\Dio.c	   479    /* [cover parentID={603FF38D-C496-4f72-BAFE-0A0A3DA18E06}]
; ..\mcal\Dio\ssc\src\Dio.c	   480       Have all Checked Passed
; ..\mcal\Dio\ssc\src\Dio.c	   481       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   482    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L3
.L480:

; ..\mcal\Dio\ssc\src\Dio.c	   483    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	   484    {
; ..\mcal\Dio\ssc\src\Dio.c	   485      /* GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	   486      GetPortAddressPtr = Dio_lGetPortAdr(PortNumber);
	mov	d4,d9
	call	Dio_lGetPortAdr
.L386:

; ..\mcal\Dio\ssc\src\Dio.c	   487  
; ..\mcal\Dio\ssc\src\Dio.c	   488      /* Get the Pin position */
; ..\mcal\Dio\ssc\src\Dio.c	   489      PinPosition = ((uint32)DIO_NUMBER_1 << PinNumber);
; ..\mcal\Dio\ssc\src\Dio.c	   490  
; ..\mcal\Dio\ssc\src\Dio.c	   491  
; ..\mcal\Dio\ssc\src\Dio.c	   492      /* Read the Channel level and decide the return value */
; ..\mcal\Dio\ssc\src\Dio.c	   493      /* [cover parentID={D5B9A5B5-0FCB-4e7e-BD3D-3048FD74EB2F}]
; ..\mcal\Dio\ssc\src\Dio.c	   494         PinPosition Not Low
; ..\mcal\Dio\ssc\src\Dio.c	   495         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   496      if ((PinPosition & (uint32)(GetPortAddressPtr->IN.U)) != (uint32)STD_LOW)
	mov	d0,#1
	ld.w	d15,[a2]36
.L385:
	sh	d0,d0,d10
.L481:
	and	d0,d15
.L482:

; ..\mcal\Dio\ssc\src\Dio.c	   497      {
; ..\mcal\Dio\ssc\src\Dio.c	   498        RetVal = (Dio_LevelType)STD_HIGH;
	seln	d11,d0,d11,#1
.L3:

; ..\mcal\Dio\ssc\src\Dio.c	   499      }
; ..\mcal\Dio\ssc\src\Dio.c	   500    }
; ..\mcal\Dio\ssc\src\Dio.c	   501    /* [cover parentID={F2E636E0-8CA6-4fd7-A2A9-5C3BD7911445}]
; ..\mcal\Dio\ssc\src\Dio.c	   502       Return the Value
; ..\mcal\Dio\ssc\src\Dio.c	   503       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   504    return RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	   505  }/* Dio_ReadChannel */
	mov	d2,d11
	ret
.L249:
	
__Dio_ReadChannel_function_end:
	.size	Dio_ReadChannel,__Dio_ReadChannel_function_end-Dio_ReadChannel
.L125:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WriteChannel',code,cluster('Dio_WriteChannel')
	.sect	'.text.Dio.Dio_WriteChannel'
	.align	2
	
	.global	Dio_WriteChannel

; ..\mcal\Dio\ssc\src\Dio.c	   506  
; ..\mcal\Dio\ssc\src\Dio.c	   507  
; ..\mcal\Dio\ssc\src\Dio.c	   508  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   509  ** Traceability:[cover parentID={2E143AC8-A3EE-4bb0-BAFF-6EA8BC0DA0AA}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   510  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   511  ** Syntax           : void Dio_WriteChannel                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   512  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   513  **                    const Dio_ChannelType ChannelId,                        **
; ..\mcal\Dio\ssc\src\Dio.c	   514  **                     const Dio_LevelType Level                              **
; ..\mcal\Dio\ssc\src\Dio.c	   515  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   516  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   517  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   518  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   519  **      - sets the specified level for specified channel                      **
; ..\mcal\Dio\ssc\src\Dio.c	   520  **      - Possible levels for channel are STD_HIGH and STD_LOW                **
; ..\mcal\Dio\ssc\src\Dio.c	   521  **      - The real physical level of pin is not                               **
; ..\mcal\Dio\ssc\src\Dio.c	   522  **        modified if the specified channel is configured as input            **
; ..\mcal\Dio\ssc\src\Dio.c	   523  **      - For input channel this Api writes into the output                   **
; ..\mcal\Dio\ssc\src\Dio.c	   524  **        register, so that pin level can be set immediately when direction   **
; ..\mcal\Dio\ssc\src\Dio.c	   525  **        changed by PORT driver                                              **
; ..\mcal\Dio\ssc\src\Dio.c	   526  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   527  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   528  ** Service ID:  0x01                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   529  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   530  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   531  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   532  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   533  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   534  ** Parameters(in)   : ChannelId - ID of DIO channel                           **
; ..\mcal\Dio\ssc\src\Dio.c	   535  **                    Level - Level to be written                             **
; ..\mcal\Dio\ssc\src\Dio.c	   536  ** Parameters (out) : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   537  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   538  ** Return value     : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   539  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   540  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   541  void Dio_WriteChannel(const Dio_ChannelType ChannelId,
; Function Dio_WriteChannel
.L70:
Dio_WriteChannel:	.type	func
	mov	d8,d4
.L388:
	mov	d15,d5
.L389:

; ..\mcal\Dio\ssc\src\Dio.c	   542                        const Dio_LevelType Level)
; ..\mcal\Dio\ssc\src\Dio.c	   543  {
; ..\mcal\Dio\ssc\src\Dio.c	   544  
; ..\mcal\Dio\ssc\src\Dio.c	   545    const Ifx_P *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   546    uint32 OmrVal;
; ..\mcal\Dio\ssc\src\Dio.c	   547    Dio_PortType   PortNumber;
; ..\mcal\Dio\ssc\src\Dio.c	   548    uint8          PinNumber;
; ..\mcal\Dio\ssc\src\Dio.c	   549    uint8          Offset;
; ..\mcal\Dio\ssc\src\Dio.c	   550  
; ..\mcal\Dio\ssc\src\Dio.c	   551    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   552    uint8 ErrStatus = E_OK;
	mov	d9,#0
.L391:

; ..\mcal\Dio\ssc\src\Dio.c	   553    #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	   554                                     (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	   555    uint32      PortReadOnly;
; ..\mcal\Dio\ssc\src\Dio.c	   556    #endif
; ..\mcal\Dio\ssc\src\Dio.c	   557    #endif
; ..\mcal\Dio\ssc\src\Dio.c	   558  
; ..\mcal\Dio\ssc\src\Dio.c	   559    OmrVal = DIO_OMR_RESET_BIT;
; ..\mcal\Dio\ssc\src\Dio.c	   560    Offset = DIO_NUMBER_16;
; ..\mcal\Dio\ssc\src\Dio.c	   561  
; ..\mcal\Dio\ssc\src\Dio.c	   562    /* GetPortNumber will get the Port Number */
; ..\mcal\Dio\ssc\src\Dio.c	   563    PortNumber = Dio_lGetPortNumber(ChannelId);
	mov	d12,#16
	call	Dio_lGetPortNumber
.L387:
	mov	d10,d2
.L393:

; ..\mcal\Dio\ssc\src\Dio.c	   564    /* GetPinNumber will get the Pin Number */
; ..\mcal\Dio\ssc\src\Dio.c	   565    PinNumber = Dio_lGetPinNumber(ChannelId);
	mov	d4,d8
	call	Dio_lGetPinNumber
.L392:
	mov	d11,d2
.L395:

; ..\mcal\Dio\ssc\src\Dio.c	   566  
; ..\mcal\Dio\ssc\src\Dio.c	   567    /* [cover parentID={59CCA3A3-E3DA-4fce-89C5-38A12781B286}]
; ..\mcal\Dio\ssc\src\Dio.c	   568       Det is enbled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   569       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   570    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   571    /* [cover parentID={963C4E08-5B22-4465-9347-708C76E676F5},
; ..\mcal\Dio\ssc\src\Dio.c	   572                                           {18026834-5363-4066-805E-192C75A3451F}]
; ..\mcal\Dio\ssc\src\Dio.c	   573       For Channel Id,Check is Port Configured
; ..\mcal\Dio\ssc\src\Dio.c	   574       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   575    if((Dio_lCheckChannelId(ChannelId, PortNumber, PinNumber) ==
	mov	e4,d10,d8
	mov	d6,d11
	call	Dio_lCheckChannelId
.L394:
	jeq	d2,#0,.L6
.L487:

; ..\mcal\Dio\ssc\src\Dio.c	   576        (uint8)DIO_ERROR))
; ..\mcal\Dio\ssc\src\Dio.c	   577    {
; ..\mcal\Dio\ssc\src\Dio.c	   578      /* The channel id passed to the Api is invalid. Report error id.
; ..\mcal\Dio\ssc\src\Dio.c	   579          DIO_E_PARAM_INVALID_CHANNEL_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   580      /* [cover parentID={5A932FF5-0AD2-4acf-A74B-EA1EAC0FA9DB}]
; ..\mcal\Dio\ssc\src\Dio.c	   581         Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	   582         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   583  
; ..\mcal\Dio\ssc\src\Dio.c	   584      Dio_lReportError(DIO_SID_WRITECHANNEL, DIO_E_PARAM_INVALID_CHANNEL_ID);
; ..\mcal\Dio\ssc\src\Dio.c	   585      ErrStatus = (uint8)E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	   586    }
; ..\mcal\Dio\ssc\src\Dio.c	   587    else
; ..\mcal\Dio\ssc\src\Dio.c	   588    {
; ..\mcal\Dio\ssc\src\Dio.c	   589      /* [cover parentID={6D238403-3087-41cd-8AD3-9BE5DD7FEBB7}]
; ..\mcal\Dio\ssc\src\Dio.c	   590         ReadOnly Port is there
; ..\mcal\Dio\ssc\src\Dio.c	   591         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   592      #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	   593                                       (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	   594      PortReadOnly = Dio_lIsPortReadOnly((uint32)PortNumber);
	mov	d4,d10
	call	Dio_lIsPortReadOnly
.L396:

; ..\mcal\Dio\ssc\src\Dio.c	   595      /* [cover parentID={275099F0-582F-44b8-B84F-B6F47C3B8E1C}]
; ..\mcal\Dio\ssc\src\Dio.c	   596         Is Port Read Only
; ..\mcal\Dio\ssc\src\Dio.c	   597         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   598      if((PortReadOnly != (uint32)DIO_NUMBER_0))
	jeq	d2,#0,.L7
.L6:

; ..\mcal\Dio\ssc\src\Dio.c	   599      {
; ..\mcal\Dio\ssc\src\Dio.c	   600        /* The channel id passed to the Api is invalid. Report error id.
; ..\mcal\Dio\ssc\src\Dio.c	   601            DIO_E_PARAM_INVALID_CHANNEL_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   602        /* [cover parentID={E80D8D15-85B7-4234-822D-32AD6375074D}]
; ..\mcal\Dio\ssc\src\Dio.c	   603           Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	   604          [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   605  
; ..\mcal\Dio\ssc\src\Dio.c	   606        Dio_lReportError(DIO_SID_WRITECHANNEL, DIO_E_PARAM_INVALID_CHANNEL_ID);
	mov	d4,#1
.L488:
	mov	d5,#10
	call	Dio_lReportError
.L489:

; ..\mcal\Dio\ssc\src\Dio.c	   607        ErrStatus = (uint8)E_NOT_OK;
	mov	d9,#1
.L7:

; ..\mcal\Dio\ssc\src\Dio.c	   608      }
; ..\mcal\Dio\ssc\src\Dio.c	   609      #endif
; ..\mcal\Dio\ssc\src\Dio.c	   610    }
; ..\mcal\Dio\ssc\src\Dio.c	   611    /* [cover parentID={9B9B7CD6-F0D7-4548-B082-52B225435AB4}]
; ..\mcal\Dio\ssc\src\Dio.c	   612       Have all checks Passed
; ..\mcal\Dio\ssc\src\Dio.c	   613       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   614    if(ErrStatus == (uint8)E_OK)
	jne	d9,#0,.L8
.L490:

; ..\mcal\Dio\ssc\src\Dio.c	   615    #endif /* DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	   616    {
; ..\mcal\Dio\ssc\src\Dio.c	   617      #if(DIO_SAFETY_ENABLE == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	   618      ErrStatus=Dio_lCheckLevel(Level);
; ..\mcal\Dio\ssc\src\Dio.c	   619       /* [cover parentID={10D47BAE-3095-4e05-A568-3D6057D3CE29}]
; ..\mcal\Dio\ssc\src\Dio.c	   620       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   621      if(ErrStatus == (uint8)E_OK)
; ..\mcal\Dio\ssc\src\Dio.c	   622      #endif
; ..\mcal\Dio\ssc\src\Dio.c	   623      {
; ..\mcal\Dio\ssc\src\Dio.c	   624      /* Decide the value to be written depending
; ..\mcal\Dio\ssc\src\Dio.c	   625        on the input parameter Level */
; ..\mcal\Dio\ssc\src\Dio.c	   626      /* [cover parentID={6D6740AD-E184-4a0b-9408-DB950AA309DF}]
; ..\mcal\Dio\ssc\src\Dio.c	   627         Decide the value to be witten
; ..\mcal\Dio\ssc\src\Dio.c	   628         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   629      if (Level != (Dio_LevelType)STD_LOW)
; ..\mcal\Dio\ssc\src\Dio.c	   630      {
; ..\mcal\Dio\ssc\src\Dio.c	   631        Offset = DIO_NUMBER_0;
	cmov	d12,d15,#0
.L491:

; ..\mcal\Dio\ssc\src\Dio.c	   632      }
; ..\mcal\Dio\ssc\src\Dio.c	   633  
; ..\mcal\Dio\ssc\src\Dio.c	   634      /* GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	   635      GetPortAddressPtr = Dio_lGetPortAdr(PortNumber);
	mov	d4,d10
	call	Dio_lGetPortAdr
.L397:

; ..\mcal\Dio\ssc\src\Dio.c	   636  
; ..\mcal\Dio\ssc\src\Dio.c	   637      /* Write to the PORT OMR register to reflect at the channel*/
; ..\mcal\Dio\ssc\src\Dio.c	   638      /* [cover parentID={5D9F71A3-819D-4eb0-B877-F999764818E8}]
; ..\mcal\Dio\ssc\src\Dio.c	   639         Write to the Channel
; ..\mcal\Dio\ssc\src\Dio.c	   640         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   641      Mcal_SetBitAtomic(&(GetPortAddressPtr->OMR), Offset, 16,\ 
	mov	d15,#1
.L390:
	sh	d15,d15,d11
	add.a	a2,#4
	
	imask e2,d15,d12,#(16) 
 ldmst [a2]0,e2
	
.L8:

; ..\mcal\Dio\ssc\src\Dio.c	   642                         (OmrVal << PinNumber));
; ..\mcal\Dio\ssc\src\Dio.c	   643      }
; ..\mcal\Dio\ssc\src\Dio.c	   644  
; ..\mcal\Dio\ssc\src\Dio.c	   645    }
; ..\mcal\Dio\ssc\src\Dio.c	   646    /* MISRA2012_RULE_2_2_JUSTIFICATION:Value assigned to variable
; ..\mcal\Dio\ssc\src\Dio.c	   647    GetPortAddressPtr is passed to Mcal_SetBitAtomic operation*/
; ..\mcal\Dio\ssc\src\Dio.c	   648    /* MISRA2012_RULE_2_2_JUSTIFICATION:Value assigned to variable
; ..\mcal\Dio\ssc\src\Dio.c	   649    OmrVal is passed to Mcal_SetBitAtomic operation*/
; ..\mcal\Dio\ssc\src\Dio.c	   650    /* MISRA2012_RULE_2_2_JUSTIFICATION:Value assigned to variable
; ..\mcal\Dio\ssc\src\Dio.c	   651    Offset is passed to Mcal_SetBitAtomic operation*/
; ..\mcal\Dio\ssc\src\Dio.c	   652  }/* Dio_WriteChannel */
	ret
.L259:
	
__Dio_WriteChannel_function_end:
	.size	Dio_WriteChannel,__Dio_WriteChannel_function_end-Dio_WriteChannel
.L130:
	; End of function
	
	.sdecl	'.text.Dio.Dio_ReadPort',code,cluster('Dio_ReadPort')
	.sect	'.text.Dio.Dio_ReadPort'
	.align	2
	
	.global	Dio_ReadPort

; ..\mcal\Dio\ssc\src\Dio.c	   653  
; ..\mcal\Dio\ssc\src\Dio.c	   654  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   655  ** Traceability:[cover parentID={4EB38A01-F94D-4e46-8CBA-0F0E549CDD4E}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   656  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   657  ** Syntax           : Dio_PortLevelType Dio_ReadPort                          **
; ..\mcal\Dio\ssc\src\Dio.c	   658  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   659  **                     const Dio_PortType PortId                              **
; ..\mcal\Dio\ssc\src\Dio.c	   660  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   661  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   662  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   663  **      - returns the level of specified port                                 **
; ..\mcal\Dio\ssc\src\Dio.c	   664  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   665  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   666  ** Service ID:  0x02                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   667  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   668  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   669  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   670  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   671  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   672  ** Parameters (in):  PortId - Port id whose level to be read                  **
; ..\mcal\Dio\ssc\src\Dio.c	   673  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   674  ** Parameters (out):  none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   675  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   676  ** Return value     : RetVal - The Api returns level                          **
; ..\mcal\Dio\ssc\src\Dio.c	   677  **                    of the specified port                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   678  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   679  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   680  Dio_PortLevelType Dio_ReadPort(const Dio_PortType PortId)
; Function Dio_ReadPort
.L72:
Dio_ReadPort:	.type	func
	mov	d8,d4
.L399:

; ..\mcal\Dio\ssc\src\Dio.c	   681  {
; ..\mcal\Dio\ssc\src\Dio.c	   682    const Ifx_P   *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   683    Dio_PortLevelType  RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	   684  
; ..\mcal\Dio\ssc\src\Dio.c	   685    /* [cover parentID={27DC0E96-0DDD-433a-8245-07EF2D1E1A63}]
; ..\mcal\Dio\ssc\src\Dio.c	   686       DET is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   687       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   688  
; ..\mcal\Dio\ssc\src\Dio.c	   689    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   690    uint8 ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	   691    ErrStatus = E_OK;
	mov	d15,#0
.L400:

; ..\mcal\Dio\ssc\src\Dio.c	   692    /* Return value should be zero for errors*/
; ..\mcal\Dio\ssc\src\Dio.c	   693    RetVal = (Dio_PortLevelType)STD_LOW;
; ..\mcal\Dio\ssc\src\Dio.c	   694  
; ..\mcal\Dio\ssc\src\Dio.c	   695    /* [cover parentID={F283A2B8-3B51-4360-87FD-4A12EEA5161B}]
; ..\mcal\Dio\ssc\src\Dio.c	   696       Verify Port Id
; ..\mcal\Dio\ssc\src\Dio.c	   697       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   698  
; ..\mcal\Dio\ssc\src\Dio.c	   699    /* [cover parentID={BD6402BA-0071-4a55-98ED-A5F046F56D4C}]
; ..\mcal\Dio\ssc\src\Dio.c	   700       Check for PortID
; ..\mcal\Dio\ssc\src\Dio.c	   701       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   702  
; ..\mcal\Dio\ssc\src\Dio.c	   703    if(Dio_lCheckPortId(PortId) == (uint8)DIO_ERROR)
	mov	d9,d15
	call	Dio_lCheckPortId
.L398:
	jne	d2,#0,.L10
.L496:

; ..\mcal\Dio\ssc\src\Dio.c	   704    {
; ..\mcal\Dio\ssc\src\Dio.c	   705  
; ..\mcal\Dio\ssc\src\Dio.c	   706      /* The port id passed to the Api is invalid. Report error id
; ..\mcal\Dio\ssc\src\Dio.c	   707       DIO_E_PARAM_INVALID_PORT_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   708      /* [cover parentID={EAA5B4E6-5EA8-4be8-897B-7993024E5475}]
; ..\mcal\Dio\ssc\src\Dio.c	   709         Report Error
; ..\mcal\Dio\ssc\src\Dio.c	   710         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   711      Dio_lReportError(DIO_SID_READPORT, DIO_E_PARAM_INVALID_PORT_ID);
	mov	d4,#2
.L497:
	mov	d5,#20
	call	Dio_lReportError
.L498:

; ..\mcal\Dio\ssc\src\Dio.c	   712      ErrStatus = E_NOT_OK;
	mov	d15,#1
.L10:

; ..\mcal\Dio\ssc\src\Dio.c	   713    }
; ..\mcal\Dio\ssc\src\Dio.c	   714    /* [cover parentID={EEDD33A5-A37C-4019-B837-20961EA3EF72}]
; ..\mcal\Dio\ssc\src\Dio.c	   715       Have all Checks Passed
; ..\mcal\Dio\ssc\src\Dio.c	   716       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   717    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L11
.L499:

; ..\mcal\Dio\ssc\src\Dio.c	   718    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	   719    {
; ..\mcal\Dio\ssc\src\Dio.c	   720      GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	mov	d4,d8
	call	Dio_lGetPortAdr
.L403:

; ..\mcal\Dio\ssc\src\Dio.c	   721      /* [cover parentID={EA1BE923-0188-482c-B5C2-82A1E4640CDE}]
; ..\mcal\Dio\ssc\src\Dio.c	   722         Read Value from the Port
; ..\mcal\Dio\ssc\src\Dio.c	   723         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   724      RetVal = ((Dio_PortLevelType)GetPortAddressPtr->IN.U &
; ..\mcal\Dio\ssc\src\Dio.c	   725                Dio_kMaskAllPortPins[PortId]);
	movh.a	a15,#@his(Dio_kMaskAllPortPins)
.L500:
	ld.w	d15,[a2]36
.L401:
	lea	a15,[a15]@los(Dio_kMaskAllPortPins)
.L501:
	addsc.a	a15,a15,d8,#1
.L502:
	extr.u	d9,d15,#0,#16
.L402:
	ld.hu	d15,[a15]0
.L404:
	and	d9,d15
.L11:

; ..\mcal\Dio\ssc\src\Dio.c	   726    }
; ..\mcal\Dio\ssc\src\Dio.c	   727    /* [cover parentID={AF145CB7-62AF-43f9-9A40-6EEB5F272FF6}]
; ..\mcal\Dio\ssc\src\Dio.c	   728       Return the Read Value
; ..\mcal\Dio\ssc\src\Dio.c	   729       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   730    return (RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	   731  }/* Dio_ReadPort */
	mov	d2,d9
	ret
.L272:
	
__Dio_ReadPort_function_end:
	.size	Dio_ReadPort,__Dio_ReadPort_function_end-Dio_ReadPort
.L135:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WritePort',code,cluster('Dio_WritePort')
	.sect	'.text.Dio.Dio_WritePort'
	.align	2
	
	.global	Dio_WritePort

; ..\mcal\Dio\ssc\src\Dio.c	   732  
; ..\mcal\Dio\ssc\src\Dio.c	   733  
; ..\mcal\Dio\ssc\src\Dio.c	   734  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   735  ** Traceability:[cover parentID={D2AB80C0-4E8B-4a48-BC44-AB5FC27792DA}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   736  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   737  ** Syntax           : void Dio_WritePort                                      **
; ..\mcal\Dio\ssc\src\Dio.c	   738  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   739  **                     const Dio_PortType PortId,                             **
; ..\mcal\Dio\ssc\src\Dio.c	   740  **                     const Dio_PortLevelType Level                          **
; ..\mcal\Dio\ssc\src\Dio.c	   741  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   742  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   743  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   744  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   745  **      - sets the specified level for specified port                         **
; ..\mcal\Dio\ssc\src\Dio.c	   746  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   747  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   748  ** Service ID:  0x03                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   749  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   750  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   751  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   752  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   753  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   754  ** Parameters(in)   : PortId - ID of DIO port                                 **
; ..\mcal\Dio\ssc\src\Dio.c	   755  **                    Level - Level to be written                             **
; ..\mcal\Dio\ssc\src\Dio.c	   756  ** Parameters (out) : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   757  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   758  ** Return value     : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   759  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   760  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   761  
; ..\mcal\Dio\ssc\src\Dio.c	   762  void Dio_WritePort (const Dio_PortType PortId, const  Dio_PortLevelType Level)
; Function Dio_WritePort
.L74:
Dio_WritePort:	.type	func
	mov	e8,d5,d4
.L507:

; ..\mcal\Dio\ssc\src\Dio.c	   763  {
; ..\mcal\Dio\ssc\src\Dio.c	   764    const Ifx_P *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   765  
; ..\mcal\Dio\ssc\src\Dio.c	   766    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   767    uint8 ErrStatus = E_OK;
; ..\mcal\Dio\ssc\src\Dio.c	   768    #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	   769                                     (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	   770    uint32  PortReadOnly;
; ..\mcal\Dio\ssc\src\Dio.c	   771    #endif
; ..\mcal\Dio\ssc\src\Dio.c	   772    #endif
; ..\mcal\Dio\ssc\src\Dio.c	   773  
; ..\mcal\Dio\ssc\src\Dio.c	   774     /* [cover parentID={0A678F0C-6A6B-4c0e-839B-19AAE20E59C7}]
; ..\mcal\Dio\ssc\src\Dio.c	   775       Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   776       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   777    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   778    /* [cover parentID={D7049714-D4FF-4c68-8003-4EEB856D8027}]
; ..\mcal\Dio\ssc\src\Dio.c	   779       Check is Port Configured
; ..\mcal\Dio\ssc\src\Dio.c	   780       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   781    if((Dio_lCheckPortId(PortId) == (uint8)DIO_ERROR))
	mov	d15,#0
	call	Dio_lCheckPortId
.L405:
	jeq	d2,#0,.L13
.L406:

; ..\mcal\Dio\ssc\src\Dio.c	   782    {
; ..\mcal\Dio\ssc\src\Dio.c	   783      /* The port id passed to the Api is invalid. Report error id
; ..\mcal\Dio\ssc\src\Dio.c	   784         DIO_E_PARAM_INVALID_PORT_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   785      /* [cover parentID={68F46755-326A-43f2-817E-69CCA2217650}]
; ..\mcal\Dio\ssc\src\Dio.c	   786         Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	   787         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   788      Dio_lReportError(DIO_SID_WRITEPORT, DIO_E_PARAM_INVALID_PORT_ID);
; ..\mcal\Dio\ssc\src\Dio.c	   789      ErrStatus = E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	   790    }
; ..\mcal\Dio\ssc\src\Dio.c	   791    else
; ..\mcal\Dio\ssc\src\Dio.c	   792    {
; ..\mcal\Dio\ssc\src\Dio.c	   793      /* PortReadOnly will check for Read Only Ports */
; ..\mcal\Dio\ssc\src\Dio.c	   794      /* [cover parentID={F2208B41-B9DB-4dfd-92FF-BE6D1E58983E}]
; ..\mcal\Dio\ssc\src\Dio.c	   795         ReadOnly Port is there
; ..\mcal\Dio\ssc\src\Dio.c	   796         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   797      #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	   798                                       (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	   799      PortReadOnly = Dio_lIsPortReadOnly((uint32)PortId);
	mov	d4,d8
	call	Dio_lIsPortReadOnly
.L407:

; ..\mcal\Dio\ssc\src\Dio.c	   800      /* [cover parentID={B024CA9F-E965-474f-9C8B-2A6084B64F06}]
; ..\mcal\Dio\ssc\src\Dio.c	   801         Is Port ReadOnly
; ..\mcal\Dio\ssc\src\Dio.c	   802         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   803      if ((PortReadOnly != (uint32)DIO_NUMBER_0))
	jeq	d2,#0,.L14
.L13:

; ..\mcal\Dio\ssc\src\Dio.c	   804      {
; ..\mcal\Dio\ssc\src\Dio.c	   805        /* [cover parentID={A8805437-29A6-4aca-A98B-EEA610B6BA5B}]
; ..\mcal\Dio\ssc\src\Dio.c	   806           Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	   807           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   808        Dio_lReportError(DIO_SID_WRITEPORT, DIO_E_PARAM_INVALID_PORT_ID);
	mov	d4,#3
.L508:
	mov	d5,#20
	call	Dio_lReportError
.L509:

; ..\mcal\Dio\ssc\src\Dio.c	   809        ErrStatus = E_NOT_OK;
	mov	d15,#1
.L14:

; ..\mcal\Dio\ssc\src\Dio.c	   810      }
; ..\mcal\Dio\ssc\src\Dio.c	   811      #endif
; ..\mcal\Dio\ssc\src\Dio.c	   812    }
; ..\mcal\Dio\ssc\src\Dio.c	   813    /* [cover parentID={7170CAC6-E245-4ccc-8CA8-1D74D32755DA}]
; ..\mcal\Dio\ssc\src\Dio.c	   814        Have all checks passed
; ..\mcal\Dio\ssc\src\Dio.c	   815       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   816    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L15
.L408:

; ..\mcal\Dio\ssc\src\Dio.c	   817    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	   818    {
; ..\mcal\Dio\ssc\src\Dio.c	   819      /* Write the Level to the Port OUT register
; ..\mcal\Dio\ssc\src\Dio.c	   820              GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	   821      /* [cover parentID={74DAB331-7573-4f6c-99D5-2C4067A50D79}]
; ..\mcal\Dio\ssc\src\Dio.c	   822         Get Port Address and Hold it
; ..\mcal\Dio\ssc\src\Dio.c	   823         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   824      GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	mov	d4,d8
	call	Dio_lGetPortAdr
.L409:

; ..\mcal\Dio\ssc\src\Dio.c	   825      /* [cover parentID={91FF9E21-EFE0-4569-9AE1-F210780650AF}]
; ..\mcal\Dio\ssc\src\Dio.c	   826         Write to the Port
; ..\mcal\Dio\ssc\src\Dio.c	   827         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   828      Mcal_SetBitAtomic(&(GetPortAddressPtr->OUT), DIO_NUMBER_0, 16,\ 
	
.L410:
	imask e2,d9,d15,#(16) 
 ldmst [a2]0,e2
.L411:
	
.L15:

; ..\mcal\Dio\ssc\src\Dio.c	   829                         (uint16)Level);
; ..\mcal\Dio\ssc\src\Dio.c	   830  
; ..\mcal\Dio\ssc\src\Dio.c	   831    }
; ..\mcal\Dio\ssc\src\Dio.c	   832    /* MISRA2012_RULE_2_2_JUSTIFICATION:Value assigned to variable
; ..\mcal\Dio\ssc\src\Dio.c	   833    GetPortAddressPtr is passed to Mcal_SetBitAtomic operation*/
; ..\mcal\Dio\ssc\src\Dio.c	   834    /* MISRA2012_RULE_2_7_JUSTIFICATION:Variable Level is passed to
; ..\mcal\Dio\ssc\src\Dio.c	   835    Mcal_SetBitAtomic operation*/
; ..\mcal\Dio\ssc\src\Dio.c	   836  }/* Dio_WritePort */
	ret
.L278:
	
__Dio_WritePort_function_end:
	.size	Dio_WritePort,__Dio_WritePort_function_end-Dio_WritePort
.L140:
	; End of function
	
	.sdecl	'.text.Dio.Dio_ReadChannelGroup',code,cluster('Dio_ReadChannelGroup')
	.sect	'.text.Dio.Dio_ReadChannelGroup'
	.align	2
	
	.global	Dio_ReadChannelGroup

; ..\mcal\Dio\ssc\src\Dio.c	   837  
; ..\mcal\Dio\ssc\src\Dio.c	   838  
; ..\mcal\Dio\ssc\src\Dio.c	   839  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   840  ** Traceability:[cover parentID={F36DDC75-C36E-4698-91A0-DDCB86FEBD75}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   841  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   842  ** Syntax           : Dio_PortLevelType Dio_ReadChannelGroup                  **
; ..\mcal\Dio\ssc\src\Dio.c	   843  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   844  **                      const Dio_ChannelGroupType * const ChannelGroupIdPtr  **
; ..\mcal\Dio\ssc\src\Dio.c	   845  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   846  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   847  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   848  **  - returns the level of specified channel group                            **
; ..\mcal\Dio\ssc\src\Dio.c	   849  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	   850  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   851  ** Service ID:  0x04                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   852  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   853  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   854  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   855  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   856  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   857  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   858  **                    pointer to channel group configuration                  **
; ..\mcal\Dio\ssc\src\Dio.c	   859  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   860  ** Parameters (out):  none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   861  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   862  ** Return value     : RetVal - The Api returns level                          **
; ..\mcal\Dio\ssc\src\Dio.c	   863  **                    of the specified channel group                          **
; ..\mcal\Dio\ssc\src\Dio.c	   864  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   865  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   866  Dio_PortLevelType Dio_ReadChannelGroup
; Function Dio_ReadChannelGroup
.L76:
Dio_ReadChannelGroup:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	   867  ( const Dio_ChannelGroupType* const ChannelGroupIdPtr)
; ..\mcal\Dio\ssc\src\Dio.c	   868  {
; ..\mcal\Dio\ssc\src\Dio.c	   869    const Ifx_P   *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   870    Dio_PortLevelType  RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	   871  
; ..\mcal\Dio\ssc\src\Dio.c	   872    /* [cover parentID={9983D909-3C6D-4c94-9009-93F130372431}]
; ..\mcal\Dio\ssc\src\Dio.c	   873       Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   874       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   875  
; ..\mcal\Dio\ssc\src\Dio.c	   876    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   877  
; ..\mcal\Dio\ssc\src\Dio.c	   878    uint8 ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	   879    ErrStatus = E_OK;
	mov	d15,#0
	mov.aa	a15,a4
.L413:

; ..\mcal\Dio\ssc\src\Dio.c	   880  
; ..\mcal\Dio\ssc\src\Dio.c	   881    /* Return value should be zero for errors*/
; ..\mcal\Dio\ssc\src\Dio.c	   882    RetVal = (Dio_PortLevelType)STD_LOW;
; ..\mcal\Dio\ssc\src\Dio.c	   883    /*  [cover parentID={3D6FB53B-C8DB-4bf6-8D0D-66B5091A75A3}]
; ..\mcal\Dio\ssc\src\Dio.c	   884        Verify GroupId
; ..\mcal\Dio\ssc\src\Dio.c	   885        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   886  
; ..\mcal\Dio\ssc\src\Dio.c	   887    /*  [cover parentID={D6AA7AB3-0F4F-480d-8EE6-1C6404026E7A}]
; ..\mcal\Dio\ssc\src\Dio.c	   888        Check for GroupID
; ..\mcal\Dio\ssc\src\Dio.c	   889        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   890    /*  [cover parentID={6D8BC7AB-2AEF-463b-B497-CA0339576B64}]
; ..\mcal\Dio\ssc\src\Dio.c	   891         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   892    if(ChannelGroupIdPtr == NULL_PTR)
	mov	d8,d15
	jnz.a	a15,.L16
.L415:

; ..\mcal\Dio\ssc\src\Dio.c	   893    {
; ..\mcal\Dio\ssc\src\Dio.c	   894      /*  [cover parentID={6D55A459-F313-4e12-985C-56A53889E39F}]
; ..\mcal\Dio\ssc\src\Dio.c	   895           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   896      Dio_lReportError(DIO_SID_READCHANNELGROUP, DIO_E_PARAM_POINTER);
	mov	d4,#4
.L514:
	mov	d5,#32
	call	Dio_lReportError
.L412:

; ..\mcal\Dio\ssc\src\Dio.c	   897      ErrStatus = (uint8)E_NOT_OK;
	mov	d15,#1
.L16:

; ..\mcal\Dio\ssc\src\Dio.c	   898    }
; ..\mcal\Dio\ssc\src\Dio.c	   899   /*  [cover parentID={093FB499-6E07-42d2-A831-38AFC46FA444}]
; ..\mcal\Dio\ssc\src\Dio.c	   900         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   901    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L17
.L515:

; ..\mcal\Dio\ssc\src\Dio.c	   902    {
; ..\mcal\Dio\ssc\src\Dio.c	   903      if( Dio_lCheckGroupId(ChannelGroupIdPtr) == (uint8)DIO_ERROR)
	mov.aa	a4,a15
.L417:
	call	Dio_lCheckGroupId
.L418:
	jne	d2,#0,.L18
.L516:

; ..\mcal\Dio\ssc\src\Dio.c	   904      {
; ..\mcal\Dio\ssc\src\Dio.c	   905        /* The group id passed to the Api is invalid. Report error id
; ..\mcal\Dio\ssc\src\Dio.c	   906             DIO_E_PARAM_INVALID__GROUP to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	   907        /* [cover parentID={4801209C-8E6E-4add-A591-830CD2141060}]
; ..\mcal\Dio\ssc\src\Dio.c	   908           Report Error
; ..\mcal\Dio\ssc\src\Dio.c	   909           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   910        Dio_lReportError(DIO_SID_READCHANNELGROUP, DIO_E_PARAM_INVALID_GROUP);
	mov	d4,#4
.L517:
	mov	d5,#31
	call	Dio_lReportError
.L518:

; ..\mcal\Dio\ssc\src\Dio.c	   911        ErrStatus = (uint8)E_NOT_OK;
	mov	d15,#1
.L18:
.L17:

; ..\mcal\Dio\ssc\src\Dio.c	   912      }
; ..\mcal\Dio\ssc\src\Dio.c	   913    }
; ..\mcal\Dio\ssc\src\Dio.c	   914    /* [cover parentID={01553059-1114-447e-9EEB-C3805171FE0F}]
; ..\mcal\Dio\ssc\src\Dio.c	   915       Have all Checks Passed
; ..\mcal\Dio\ssc\src\Dio.c	   916       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   917    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L19
.L519:

; ..\mcal\Dio\ssc\src\Dio.c	   918    #endif /* DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	   919    {
; ..\mcal\Dio\ssc\src\Dio.c	   920      /* GetPortAddressPtr will hold the port address  */
; ..\mcal\Dio\ssc\src\Dio.c	   921      GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	ld.bu	d4,[a15]3
	call	Dio_lGetPortAdr
.L419:

; ..\mcal\Dio\ssc\src\Dio.c	   922  
; ..\mcal\Dio\ssc\src\Dio.c	   923      /* [cover parentID={733B3CB2-186F-485d-9F4D-C057A0D238BA}]
; ..\mcal\Dio\ssc\src\Dio.c	   924         Mask the Value from the Port Address to be read
; ..\mcal\Dio\ssc\src\Dio.c	   925         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   926  
; ..\mcal\Dio\ssc\src\Dio.c	   927      RetVal = (Dio_PortLevelType)((uint32)GetPortAddressPtr->IN.U &
	ld.w	d15,[a2]36
.L414:

; ..\mcal\Dio\ssc\src\Dio.c	   928                                   (uint32)ChannelGroupIdPtr->mask);
	extr.u	d8,d15,#0,#16
	ld.hu	d15,[a15]0
.L416:

; ..\mcal\Dio\ssc\src\Dio.c	   929      /* [cover parentID={1D39EFAE-369C-4f91-A972-803282E528E1}]
; ..\mcal\Dio\ssc\src\Dio.c	   930         Allign the values to be read
; ..\mcal\Dio\ssc\src\Dio.c	   931         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   932      RetVal = (RetVal >> ChannelGroupIdPtr->offset);
	and	d8,d15
	ld.bu	d15,[a15]2
.L520:
	rsub	d15,#0
	sha	d8,d8,d15
.L19:

; ..\mcal\Dio\ssc\src\Dio.c	   933    }
; ..\mcal\Dio\ssc\src\Dio.c	   934    /* [cover parentID={346DF988-B72F-441d-9246-57CB0A401A60}]
; ..\mcal\Dio\ssc\src\Dio.c	   935       Return the Level of the ChannelGroup
; ..\mcal\Dio\ssc\src\Dio.c	   936       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   937    return (RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	   938  } /* Dio_ReadChannelGroup */
	mov	d2,d8
	ret
.L286:
	
__Dio_ReadChannelGroup_function_end:
	.size	Dio_ReadChannelGroup,__Dio_ReadChannelGroup_function_end-Dio_ReadChannelGroup
.L145:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WriteChannelGroup',code,cluster('Dio_WriteChannelGroup')
	.sect	'.text.Dio.Dio_WriteChannelGroup'
	.align	2
	
	.global	Dio_WriteChannelGroup

; ..\mcal\Dio\ssc\src\Dio.c	   939  
; ..\mcal\Dio\ssc\src\Dio.c	   940  
; ..\mcal\Dio\ssc\src\Dio.c	   941  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	   942  ** Traceability:[cover parentID={46E02FDD-4650-4411-BAA5-F708750A821F}]       **
; ..\mcal\Dio\ssc\src\Dio.c	   943  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   944  ** Syntax           : void Dio_WriteChannelGroup                              **
; ..\mcal\Dio\ssc\src\Dio.c	   945  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   946  **                      const Dio_ChannelGroupType *const ChannelGroupIdPtr   **
; ..\mcal\Dio\ssc\src\Dio.c	   947  **                      Dio_PortLevelType Level                               **
; ..\mcal\Dio\ssc\src\Dio.c	   948  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	   949  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   950  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   951  **  - sets the level of specified channel group                               **
; ..\mcal\Dio\ssc\src\Dio.c	   952  **  - The value for all the pins the channel group are set at one shot        **
; ..\mcal\Dio\ssc\src\Dio.c	   953  **  - Other pins of the port and pins that are configured as                  **
; ..\mcal\Dio\ssc\src\Dio.c	   954  **    input remains unchanged                                                 **
; ..\mcal\Dio\ssc\src\Dio.c	   955  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	   956  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   957  ** Service ID:  0x05                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	   958  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   959  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	   960  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   961  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   962  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   963  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; ..\mcal\Dio\ssc\src\Dio.c	   964  **                    pointer to channel group configuration                  **
; ..\mcal\Dio\ssc\src\Dio.c	   965  **                    Level - Sets level of specified channel group           **
; ..\mcal\Dio\ssc\src\Dio.c	   966  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   967  ** Parameters (out):  none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   968  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   969  ** Return value     : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	   970  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	   971  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	   972  void Dio_WriteChannelGroup
; Function Dio_WriteChannelGroup
.L78:
Dio_WriteChannelGroup:	.type	func
	mov	d8,d4
	mov.aa	a15,a4
.L422:

; ..\mcal\Dio\ssc\src\Dio.c	   973  ( const Dio_ChannelGroupType * const ChannelGroupIdPtr,
; ..\mcal\Dio\ssc\src\Dio.c	   974    const Dio_PortLevelType Level)
; ..\mcal\Dio\ssc\src\Dio.c	   975  {
; ..\mcal\Dio\ssc\src\Dio.c	   976  
; ..\mcal\Dio\ssc\src\Dio.c	   977    Ifx_P *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	   978    uint32          PortVal;
; ..\mcal\Dio\ssc\src\Dio.c	   979    uint32          PortResetVal;
; ..\mcal\Dio\ssc\src\Dio.c	   980  
; ..\mcal\Dio\ssc\src\Dio.c	   981    /* [cover parentID={3CA5CBC4-3BDA-45cd-9A28-ECFEF9D7701D}]
; ..\mcal\Dio\ssc\src\Dio.c	   982       Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	   983       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   984    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	   985    uint8  ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	   986    uint8  DioErrorStatus;
; ..\mcal\Dio\ssc\src\Dio.c	   987  
; ..\mcal\Dio\ssc\src\Dio.c	   988    ErrStatus = E_OK;
; ..\mcal\Dio\ssc\src\Dio.c	   989     /* [cover parentID={2F2519CC-3F48-4bd0-B28B-EAD602D3AAFE}]
; ..\mcal\Dio\ssc\src\Dio.c	   990    [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   991    if(ChannelGroupIdPtr == NULL_PTR)
	mov	d15,#0
	jnz.a	a15,.L21
.L424:

; ..\mcal\Dio\ssc\src\Dio.c	   992    {
; ..\mcal\Dio\ssc\src\Dio.c	   993      /* [cover parentID={E2312224-8CE6-469e-8576-CB8A8D4B67D9}]
; ..\mcal\Dio\ssc\src\Dio.c	   994      [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	   995      Dio_lReportError(DIO_SID_WRITECHANNELGROUP, DIO_E_PARAM_POINTER);
	mov	d4,#5
.L421:
	mov	d5,#32
	call	Dio_lReportError
.L420:

; ..\mcal\Dio\ssc\src\Dio.c	   996      ErrStatus = (uint8)E_NOT_OK;
	mov	d15,#1
.L21:

; ..\mcal\Dio\ssc\src\Dio.c	   997    }
; ..\mcal\Dio\ssc\src\Dio.c	   998     /* [cover parentID={69F87D63-527F-4abd-8703-D66C40662AD5}]
; ..\mcal\Dio\ssc\src\Dio.c	   999    [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1000    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L22
.L525:

; ..\mcal\Dio\ssc\src\Dio.c	  1001    {
; ..\mcal\Dio\ssc\src\Dio.c	  1002      /* [cover parentID={A5D86D3E-A74B-477c-84BE-45128301E9D4}]
; ..\mcal\Dio\ssc\src\Dio.c	  1003       If Invalid ChannelGroup
; ..\mcal\Dio\ssc\src\Dio.c	  1004       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1005      /* [cover parentID={1D325D81-BD2F-4f1b-AF97-62C94394B62E}]
; ..\mcal\Dio\ssc\src\Dio.c	  1006       Verify Group Id
; ..\mcal\Dio\ssc\src\Dio.c	  1007       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1008      if(Dio_lCheckGroupId(ChannelGroupIdPtr) == (uint8)DIO_ERROR)
	mov.aa	a4,a15
.L426:
	call	Dio_lCheckGroupId
.L427:
	jeq	d2,#0,.L23
.L526:

; ..\mcal\Dio\ssc\src\Dio.c	  1009      {
; ..\mcal\Dio\ssc\src\Dio.c	  1010        DioErrorStatus = DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1011      }
; ..\mcal\Dio\ssc\src\Dio.c	  1012  
; ..\mcal\Dio\ssc\src\Dio.c	  1013      /* Check if the port is Analog port for Write operation */
; ..\mcal\Dio\ssc\src\Dio.c	  1014      /* [cover parentID={382F4FCB-4C5B-439d-9357-A2154158A6A3}]
; ..\mcal\Dio\ssc\src\Dio.c	  1015         If Read Only port not Zero
; ..\mcal\Dio\ssc\src\Dio.c	  1016         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1017      /* [cover parentID={31C3A394-C76B-4763-A4ED-34F6F8A4EE96}]
; ..\mcal\Dio\ssc\src\Dio.c	  1018         Verify Read Only Port
; ..\mcal\Dio\ssc\src\Dio.c	  1019        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1020      else if (Dio_lIsPortReadOnly((uint32)(ChannelGroupIdPtr->port))
	ld.bu	d4,[a15]3
.L527:
	call	Dio_lIsPortReadOnly
.L528:
	jeq	d2,#0,.L24
.L23:

; ..\mcal\Dio\ssc\src\Dio.c	  1021             != (uint32)DIO_NUMBER_0)
; ..\mcal\Dio\ssc\src\Dio.c	  1022      {
; ..\mcal\Dio\ssc\src\Dio.c	  1023        DioErrorStatus = DIO_ERROR;
	mov	d0,#0
	j	.L25
.L24:

; ..\mcal\Dio\ssc\src\Dio.c	  1024      }
; ..\mcal\Dio\ssc\src\Dio.c	  1025      else
; ..\mcal\Dio\ssc\src\Dio.c	  1026      {
; ..\mcal\Dio\ssc\src\Dio.c	  1027        DioErrorStatus = DIO_NO_ERROR;
	mov	d0,#1
.L25:

; ..\mcal\Dio\ssc\src\Dio.c	  1028      }
; ..\mcal\Dio\ssc\src\Dio.c	  1029          /* [cover parentID={5E8EACC6-B779-4ba0-8587-78732826E2B1}]
; ..\mcal\Dio\ssc\src\Dio.c	  1030         Check for Status
; ..\mcal\Dio\ssc\src\Dio.c	  1031         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1032      if (DioErrorStatus == DIO_ERROR)
	jne	d0,#0,.L26
.L529:

; ..\mcal\Dio\ssc\src\Dio.c	  1033      {
; ..\mcal\Dio\ssc\src\Dio.c	  1034        /* The group id passed to the Api is invalid. Report error id
; ..\mcal\Dio\ssc\src\Dio.c	  1035               DIO_E_PARAM_INVALID__GROUP to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	  1036        /* [cover parentID={EF0EFB86-DEB2-453d-8AB2-88BE43DE43E8}]
; ..\mcal\Dio\ssc\src\Dio.c	  1037             Report Error
; ..\mcal\Dio\ssc\src\Dio.c	  1038             [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1039        Dio_lReportError(DIO_SID_WRITECHANNELGROUP, DIO_E_PARAM_INVALID_GROUP);
	mov	d4,#5
.L530:
	mov	d5,#31
	call	Dio_lReportError
.L428:

; ..\mcal\Dio\ssc\src\Dio.c	  1040        ErrStatus = (uint8)E_NOT_OK;
	mov	d15,#1
.L26:
.L22:

; ..\mcal\Dio\ssc\src\Dio.c	  1041  
; ..\mcal\Dio\ssc\src\Dio.c	  1042      }
; ..\mcal\Dio\ssc\src\Dio.c	  1043    }
; ..\mcal\Dio\ssc\src\Dio.c	  1044    /* [cover parentID={272C597D-86F8-48a7-A27B-9F6E70D48153}]
; ..\mcal\Dio\ssc\src\Dio.c	  1045       Have all Checks passed
; ..\mcal\Dio\ssc\src\Dio.c	  1046       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1047    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L27
.L531:

; ..\mcal\Dio\ssc\src\Dio.c	  1048    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	  1049    {
; ..\mcal\Dio\ssc\src\Dio.c	  1050      /* Passed Level is masked as per the configuration */
; ..\mcal\Dio\ssc\src\Dio.c	  1051      /*  Level is shifted by the configured offset */
; ..\mcal\Dio\ssc\src\Dio.c	  1052      /* [cover parentID={2C1D1042-D567-421c-9B6C-162222122D1A}]
; ..\mcal\Dio\ssc\src\Dio.c	  1053         Mask the Value to set the bit
; ..\mcal\Dio\ssc\src\Dio.c	  1054         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1055      /* PortVal is used to set the bits */
; ..\mcal\Dio\ssc\src\Dio.c	  1056      PortVal = (uint32)(((uint32)Level << (uint32)ChannelGroupIdPtr->offset) & \ 
	ld.bu	d15,[a15]2
.L425:

; ..\mcal\Dio\ssc\src\Dio.c	  1057                         (uint32) ChannelGroupIdPtr->mask);
	ld.hu	d0,[a15]0
.L532:

; ..\mcal\Dio\ssc\src\Dio.c	  1058      /* [cover parentID={9269F549-B50A-4414-A6E6-2773054576C5}]
; ..\mcal\Dio\ssc\src\Dio.c	  1059         Mask the value to reset the remaining bits
; ..\mcal\Dio\ssc\src\Dio.c	  1060         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1061      /* PortResetVal is used to reset the bits */
; ..\mcal\Dio\ssc\src\Dio.c	  1062      PortResetVal = ((~PortVal) & ((uint32)ChannelGroupIdPtr->mask));
; ..\mcal\Dio\ssc\src\Dio.c	  1063  
; ..\mcal\Dio\ssc\src\Dio.c	  1064      /* [cover parentID={D42FD32D-CE91-4004-91AE-43C9E2ACC180}]
; ..\mcal\Dio\ssc\src\Dio.c	  1065         Allign the data to be set
; ..\mcal\Dio\ssc\src\Dio.c	  1066         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1067      PortVal = (PortVal | (PortResetVal << DIO_NUMBER_16));
; ..\mcal\Dio\ssc\src\Dio.c	  1068  
; ..\mcal\Dio\ssc\src\Dio.c	  1069      /* GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	  1070      /* [cover parentID={D6E8EE9F-DCFE-4aee-A248-CDD041DC13D4}]
; ..\mcal\Dio\ssc\src\Dio.c	  1071         Get Port Address
; ..\mcal\Dio\ssc\src\Dio.c	  1072         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1073      GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	sh	d8,d8,d15
	ld.bu	d4,[a15]3
.L423:
	and	d8,d0
.L533:
	mov	d15,#-1
	xor	d15,d8
.L534:
	and	d0,d15
.L535:
	sh	d15,d0,#16
.L536:
	or	d8,d15
	call	Dio_lGetPortAdr
.L429:

; ..\mcal\Dio\ssc\src\Dio.c	  1074      /* [cover parentID={E9161F6A-BF3D-48c0-B300-9BBF777C0C1B}]
; ..\mcal\Dio\ssc\src\Dio.c	  1075         Update the Channel Group
; ..\mcal\Dio\ssc\src\Dio.c	  1076         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1077      GetPortAddressPtr->OMR.U = PortVal;
	st.w	[a2]4,d8
.L27:

; ..\mcal\Dio\ssc\src\Dio.c	  1078    }
; ..\mcal\Dio\ssc\src\Dio.c	  1079  } /* Dio_WriteChannelGroup */
	ret
.L292:
	
__Dio_WriteChannelGroup_function_end:
	.size	Dio_WriteChannelGroup,__Dio_WriteChannelGroup_function_end-Dio_WriteChannelGroup
.L150:
	; End of function
	
	.sdecl	'.text.Dio.Dio_FlipChannel',code,cluster('Dio_FlipChannel')
	.sect	'.text.Dio.Dio_FlipChannel'
	.align	2
	
	.global	Dio_FlipChannel

; ..\mcal\Dio\ssc\src\Dio.c	  1080  
; ..\mcal\Dio\ssc\src\Dio.c	  1081  
; ..\mcal\Dio\ssc\src\Dio.c	  1082  /* Enable / Disable the use of the Api */
; ..\mcal\Dio\ssc\src\Dio.c	  1083  /* [cover parentID={17DCE761-49D9-4ca9-A476-D98ACE8298BF}]
; ..\mcal\Dio\ssc\src\Dio.c	  1084     Check FlipChannel is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1085     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1086  
; ..\mcal\Dio\ssc\src\Dio.c	  1087  #if (DIO_FLIP_CHANNEL_API == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  1088  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1089  ** Traceability: [cover parentID={8A96E708-10AB-415b-BF43-BCF62D23D341}]      **
; ..\mcal\Dio\ssc\src\Dio.c	  1090  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1091  ** Syntax           : Dio_LevelType Dio_FlipChannel                           **
; ..\mcal\Dio\ssc\src\Dio.c	  1092  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1093  **                      Dio_ChannelType ChannelId                             **
; ..\mcal\Dio\ssc\src\Dio.c	  1094  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1095  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1096  ** Description :  This Api: Flip the channel level                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1097  **      - returns the inverted level of specified output channel              **
; ..\mcal\Dio\ssc\src\Dio.c	  1098  **      - The specified channel is input, API shall have no influence         **
; ..\mcal\Dio\ssc\src\Dio.c	  1099  **        on the physical output of the channel                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1100  **      - The specified channel is input, API shall have no influence         **
; ..\mcal\Dio\ssc\src\Dio.c	  1101  **        on the result of next Read service                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1102  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1103  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1104  ** Service ID:  0x11                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	  1105  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1106  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1107  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1108  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1109  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1110  ** Parameters (in)  : ChannelId - ChannelId whose level to be inverted        **
; ..\mcal\Dio\ssc\src\Dio.c	  1111  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1112  ** Parameters (out) : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1113  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1114  ** Return value     : RetVal - The Api returns the level                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1115  **                  of the specified channel after inversion                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1116  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1117  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1118  Dio_LevelType Dio_FlipChannel(const Dio_ChannelType ChannelId)
; Function Dio_FlipChannel
.L80:
Dio_FlipChannel:	.type	func
	mov	d8,d4
	sub.a	a10,#8
.L430:

; ..\mcal\Dio\ssc\src\Dio.c	  1119  {
; ..\mcal\Dio\ssc\src\Dio.c	  1120    Ifx_P           *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	  1121    uint32           OmrVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1122    uint8           PinNumber;
; ..\mcal\Dio\ssc\src\Dio.c	  1123    uint8           PortNumber;
; ..\mcal\Dio\ssc\src\Dio.c	  1124    uint32           PinPosition;
; ..\mcal\Dio\ssc\src\Dio.c	  1125    Dio_LevelType    RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1126    const volatile uint8  *IocrRegPtr;
; ..\mcal\Dio\ssc\src\Dio.c	  1127    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  1128    uint8 ErrStatus = E_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  1129    #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	  1130                                     (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	  1131    uint32      PortReadOnly;
; ..\mcal\Dio\ssc\src\Dio.c	  1132    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  1133    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  1134  
; ..\mcal\Dio\ssc\src\Dio.c	  1135    OmrVal = DIO_OMR_MASK_BIT;
; ..\mcal\Dio\ssc\src\Dio.c	  1136  
; ..\mcal\Dio\ssc\src\Dio.c	  1137    PortNumber = Dio_lGetPortNumber(ChannelId);
	mov	d15,#0
	call	Dio_lGetPortNumber
.L431:
	mov	d9,d2
.L434:

; ..\mcal\Dio\ssc\src\Dio.c	  1138    PinNumber  = Dio_lGetPinNumber(ChannelId);
	mov	d4,d8
	call	Dio_lGetPinNumber
.L433:
	mov	d11,d2
.L436:

; ..\mcal\Dio\ssc\src\Dio.c	  1139  
; ..\mcal\Dio\ssc\src\Dio.c	  1140    /* Check for the validity of symbolic channel ID
; ..\mcal\Dio\ssc\src\Dio.c	  1141         Reported DET if error detected */
; ..\mcal\Dio\ssc\src\Dio.c	  1142    /* [cover parentID={81C4C43A-7788-4a73-BCF7-01A94BD186D3}]
; ..\mcal\Dio\ssc\src\Dio.c	  1143       Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1144       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1145    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  1146  
; ..\mcal\Dio\ssc\src\Dio.c	  1147    /* Return value should be zero for errors*/
; ..\mcal\Dio\ssc\src\Dio.c	  1148    RetVal = (Dio_LevelType)STD_LOW;
	mov	d10,#0
.L437:

; ..\mcal\Dio\ssc\src\Dio.c	  1149  
; ..\mcal\Dio\ssc\src\Dio.c	  1150    /* [cover parentID={34C1CCA4-3EE6-427d-8B03-026FD3290AAE}
; ..\mcal\Dio\ssc\src\Dio.c	  1151                                           {C6BBB3AB-A465-42cd-A63D-8E3BBD8E6725}]
; ..\mcal\Dio\ssc\src\Dio.c	  1152        Verify ChannelId, Is Port Configured
; ..\mcal\Dio\ssc\src\Dio.c	  1153       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1154  
; ..\mcal\Dio\ssc\src\Dio.c	  1155    if((Dio_lCheckChannelId(ChannelId, PortNumber, PinNumber) ==
	mov	e4,d9,d8
	mov	d6,d11
	call	Dio_lCheckChannelId
.L435:
	jne	d2,#0,.L28
.L541:

; ..\mcal\Dio\ssc\src\Dio.c	  1156        (uint8)DIO_ERROR))
; ..\mcal\Dio\ssc\src\Dio.c	  1157    {
; ..\mcal\Dio\ssc\src\Dio.c	  1158      /* The channel id passed to the Api is invalid. Report error id.
; ..\mcal\Dio\ssc\src\Dio.c	  1159                  DIO_E_PARAM_INVALID_CHANNEL_ID to the error hook Api */
; ..\mcal\Dio\ssc\src\Dio.c	  1160      /* [cover parentID={A89D2009-B01B-4e2b-86C0-42EB5F6BE879}]
; ..\mcal\Dio\ssc\src\Dio.c	  1161         Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	  1162         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1163  
; ..\mcal\Dio\ssc\src\Dio.c	  1164      Dio_lReportError(DIO_SID_FLIPCHANNEL, DIO_E_PARAM_INVALID_CHANNEL_ID);
	mov	d4,#17
.L542:
	mov	d5,#10
	j	.L29
.L28:

; ..\mcal\Dio\ssc\src\Dio.c	  1165      ErrStatus = (uint8)E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  1166    }
; ..\mcal\Dio\ssc\src\Dio.c	  1167    else
; ..\mcal\Dio\ssc\src\Dio.c	  1168    {
; ..\mcal\Dio\ssc\src\Dio.c	  1169      /* [cover parentID={D65EBB11-5F03-4047-A192-777A40874A43}]
; ..\mcal\Dio\ssc\src\Dio.c	  1170         ReadOnly Port is there
; ..\mcal\Dio\ssc\src\Dio.c	  1171         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1172      #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	  1173                                     (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	  1174      PortReadOnly = Dio_lIsPortReadOnly((uint32)PortNumber);
	mov	d4,d9
	call	Dio_lIsPortReadOnly
.L438:

; ..\mcal\Dio\ssc\src\Dio.c	  1175      /* [cover parentID={112495DD-F6E8-4868-9C25-989E3E2D7B14}]
; ..\mcal\Dio\ssc\src\Dio.c	  1176         Is Port ReadOnly
; ..\mcal\Dio\ssc\src\Dio.c	  1177         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1178      if ((PortReadOnly != (uint32)DIO_NUMBER_0))
	jeq	d2,#0,.L30
.L543:

; ..\mcal\Dio\ssc\src\Dio.c	  1179      {
; ..\mcal\Dio\ssc\src\Dio.c	  1180        /* [cover parentID={14C7DB5C-9A13-449d-91D0-EF85388BE4E8}]
; ..\mcal\Dio\ssc\src\Dio.c	  1181           Call Dio_lReportError
; ..\mcal\Dio\ssc\src\Dio.c	  1182           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1183        Dio_lReportError(DIO_SID_WRITEPORT, DIO_E_PARAM_INVALID_PORT_ID);
	mov	d4,#3
.L544:
	mov	d5,#20
.L29:
	call	Dio_lReportError
.L545:

; ..\mcal\Dio\ssc\src\Dio.c	  1184        ErrStatus = E_NOT_OK;
	mov	d15,#1
.L30:

; ..\mcal\Dio\ssc\src\Dio.c	  1185      }
; ..\mcal\Dio\ssc\src\Dio.c	  1186      #endif
; ..\mcal\Dio\ssc\src\Dio.c	  1187    }
; ..\mcal\Dio\ssc\src\Dio.c	  1188    /* [cover parentID={9362FE94-3BC9-4e9b-A6FB-774E45F36DF3}]
; ..\mcal\Dio\ssc\src\Dio.c	  1189       Have all Checks Passed
; ..\mcal\Dio\ssc\src\Dio.c	  1190       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1191    if(ErrStatus == (uint8)E_OK)
	jne	d15,#0,.L31
.L312:

; ..\mcal\Dio\ssc\src\Dio.c	  1192    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	  1193    {
; ..\mcal\Dio\ssc\src\Dio.c	  1194  
; ..\mcal\Dio\ssc\src\Dio.c	  1195      volatile uint32 DummyRead;
; ..\mcal\Dio\ssc\src\Dio.c	  1196  
; ..\mcal\Dio\ssc\src\Dio.c	  1197      /* GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	  1198      GetPortAddressPtr = Dio_lGetPortAdr(PortNumber);
	mov	d4,d9
	call	Dio_lGetPortAdr
.L439:

; ..\mcal\Dio\ssc\src\Dio.c	  1199      /* MISRA2012_RULE_11_5_JUSTIFICATION: Conversion from pointer to void to
; ..\mcal\Dio\ssc\src\Dio.c	  1200         pointer to other type is done to calculate 1 Byte data
; ..\mcal\Dio\ssc\src\Dio.c	  1201         for a Pin Number. */
; ..\mcal\Dio\ssc\src\Dio.c	  1202      /* MISRA2012_RULE_11_3_JUSTIFICATION: cast performed between a pointer to
; ..\mcal\Dio\ssc\src\Dio.c	  1203      object type and a pointer to a different object type is done to calculate
; ..\mcal\Dio\ssc\src\Dio.c	  1204      1 Byte data for a Pin Number.*/
; ..\mcal\Dio\ssc\src\Dio.c	  1205      /* MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic is used due to
; ..\mcal\Dio\ssc\src\Dio.c	  1206         SFR address calculation and is within allowed range.*/
; ..\mcal\Dio\ssc\src\Dio.c	  1207      /* Get the IOCR0 register address of particular port */
; ..\mcal\Dio\ssc\src\Dio.c	  1208      IocrRegPtr=(const volatile uint8*)((const volatile uint32*)\ 
; ..\mcal\Dio\ssc\src\Dio.c	  1209                                         (const volatile void*)\ 
; ..\mcal\Dio\ssc\src\Dio.c	  1210                                          GetPortAddressPtr + \ 
; ..\mcal\Dio\ssc\src\Dio.c	  1211                                          DIO_PORT_IOCR0_REG_OFFSET);
; ..\mcal\Dio\ssc\src\Dio.c	  1212  
; ..\mcal\Dio\ssc\src\Dio.c	  1213  
; ..\mcal\Dio\ssc\src\Dio.c	  1214      /* Get the Pin position */
; ..\mcal\Dio\ssc\src\Dio.c	  1215      PinPosition = ((uint32)DIO_NUMBER_1 << (uint32)PinNumber);
; ..\mcal\Dio\ssc\src\Dio.c	  1216      /*Check the channel is configured as output channel*/
; ..\mcal\Dio\ssc\src\Dio.c	  1217      /* MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic is used to
; ..\mcal\Dio\ssc\src\Dio.c	  1218            calculate data for given Pin Number and is within allowed range.*/
; ..\mcal\Dio\ssc\src\Dio.c	  1219      /* [cover parentID={C8DF62DD-CD44-4b95-88B7-6727C0AC308E}]
; ..\mcal\Dio\ssc\src\Dio.c	  1220          Check the Configuration of Channel
; ..\mcal\Dio\ssc\src\Dio.c	  1221           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1222      if((*(IocrRegPtr + PinNumber) & (uint8)DIO_PORT_DIR_MSK)
	addsc.a	a15,a2,d11,#0
.L546:
	mov	d0,#1
.L547:
	ld.bu	d15,[a15]16
.L432:
	sh	d0,d0,d11
.L440:
	jz.t	d15:7,.L32
.L548:

; ..\mcal\Dio\ssc\src\Dio.c	  1223          != (uint8)DIO_PORT_PIN_IN)
; ..\mcal\Dio\ssc\src\Dio.c	  1224      {
; ..\mcal\Dio\ssc\src\Dio.c	  1225        OmrVal = (OmrVal << PinNumber);
	mov	d15,#1
	addih	d15,d15,#1
.L549:

; ..\mcal\Dio\ssc\src\Dio.c	  1226  
; ..\mcal\Dio\ssc\src\Dio.c	  1227        /* [cover parentID={B1112551-9C26-47af-9F1C-AA86A729E347}]
; ..\mcal\Dio\ssc\src\Dio.c	  1228            Update the Channel
; ..\mcal\Dio\ssc\src\Dio.c	  1229            [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1230        GetPortAddressPtr->OMR.U = OmrVal;
	sh	d15,d15,d11
	st.w	[a2]4,d15
.L550:

; ..\mcal\Dio\ssc\src\Dio.c	  1231  
; ..\mcal\Dio\ssc\src\Dio.c	  1232        /*After write to the OMR register, one SPB clock cycle delay is required
; ..\mcal\Dio\ssc\src\Dio.c	  1233        for the pins flipped value to propogate back to IN register. Hence a
; ..\mcal\Dio\ssc\src\Dio.c	  1234        dummy read of OMR is added to add the SPB clock cycle delay */
; ..\mcal\Dio\ssc\src\Dio.c	  1235        DummyRead = GetPortAddressPtr->OMR.U;
	ld.w	d15,[a2]4
.L551:
	st.w	[a10],d15
.L552:

; ..\mcal\Dio\ssc\src\Dio.c	  1236        UNUSED_PARAMETER(DummyRead);
	ld.w	d15,[a10]
.L32:

; ..\mcal\Dio\ssc\src\Dio.c	  1237      }
; ..\mcal\Dio\ssc\src\Dio.c	  1238  
; ..\mcal\Dio\ssc\src\Dio.c	  1239      /* [cover parentID={02C5BC82-8241-4e86-97EB-6DB8AFFA8ED5}]
; ..\mcal\Dio\ssc\src\Dio.c	  1240      Read the Channel level to be returned
; ..\mcal\Dio\ssc\src\Dio.c	  1241      [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1242      RetVal = (Dio_LevelType)((PinPosition & (uint32)(GetPortAddressPtr->IN.U))\ 
	ld.w	d15,[a2]36
.L553:

; ..\mcal\Dio\ssc\src\Dio.c	  1243                               >> (uint32)PinNumber);
	rsub	d11,#0
.L554:
	and	d0,d15
.L441:
	sh	d0,d0,d11
.L555:
	extr.u	d10,d0,#0,#8
.L31:

; ..\mcal\Dio\ssc\src\Dio.c	  1244    }
; ..\mcal\Dio\ssc\src\Dio.c	  1245    /* [cover parentID={946ACB5F-29A7-41c6-885D-408D5FD2407A}]
; ..\mcal\Dio\ssc\src\Dio.c	  1246       Return the Value
; ..\mcal\Dio\ssc\src\Dio.c	  1247       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1248    return RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1249  }/* Dio_FlipChannel */
	mov	d2,d10
	ret
.L302:
	
__Dio_FlipChannel_function_end:
	.size	Dio_FlipChannel,__Dio_FlipChannel_function_end-Dio_FlipChannel
.L155:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lReportError',code,cluster('Dio_lReportError')
	.sect	'.text.Dio.Dio_lReportError'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1250  #endif /*(DIO_FLIP_CHANNEL_API == STD_ON) */
; ..\mcal\Dio\ssc\src\Dio.c	  1251  
; ..\mcal\Dio\ssc\src\Dio.c	  1252  /* [cover parentID={B2B9AE16-52E9-46b5-9FA6-EDA7D473F3BE}]
; ..\mcal\Dio\ssc\src\Dio.c	  1253     Check VersionInfo Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1254     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1255  #if (DIO_VERSION_INFO_API == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  1256  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1257  ** Traceability:[cover parentID= {F37CBFFC-7762-467b-B7A5-8AF16D9DB201}]      **
; ..\mcal\Dio\ssc\src\Dio.c	  1258  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1259  ** Syntax :void Dio_GetVersionInfo                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1260  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1261  **                      Std_VersionInfoType * const VersionInfo               **
; ..\mcal\Dio\ssc\src\Dio.c	  1262  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1263  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1264  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1265  **   - This Api returns the version information of this module                **
; ..\mcal\Dio\ssc\src\Dio.c	  1266  **     The version information include : Module ID, Vendor ID,                **
; ..\mcal\Dio\ssc\src\Dio.c	  1267  **     Vendor specific version numbers                                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1268  **   - This Api is available if the DIO_VERSION_INFO_API is                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1269  **     set ON                                                                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1270  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1271  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1272  ** Service ID:  0x12                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	  1273  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1274  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1275  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1276  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1277  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1278  ** Parameters (in) :  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1279  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1280  ** Parameters (out):  VersionInfo - Pointer to where to store the             **
; ..\mcal\Dio\ssc\src\Dio.c	  1281  **                    version information of this module.                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1282  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1283  ** Return value    :  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1284  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1285  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1286  /* [cover parentID={C023A192-753C-482f-9EEE-D50FF5D959D7}]
; ..\mcal\Dio\ssc\src\Dio.c	  1287     Dio_GetVersionInfo
; ..\mcal\Dio\ssc\src\Dio.c	  1288     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1289  void Dio_GetVersionInfo(Std_VersionInfoType * const VersionInfo)
; ..\mcal\Dio\ssc\src\Dio.c	  1290  {
; ..\mcal\Dio\ssc\src\Dio.c	  1291  
; ..\mcal\Dio\ssc\src\Dio.c	  1292    /* [cover parentID={B80D52E2-6F3F-42b0-A066-9EC8DE66B63B}]
; ..\mcal\Dio\ssc\src\Dio.c	  1293      Det is Enabled or Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1294      [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1295    #if ((DIO_SAFETY_ENABLE == STD_ON)||(DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  1296  
; ..\mcal\Dio\ssc\src\Dio.c	  1297    /* Check for DET: DIO_E_PARAM_POINTER */
; ..\mcal\Dio\ssc\src\Dio.c	  1298    /* [cover parentID={D5D98A08-5CED-4a94-893B-9E8363955F6D}]
; ..\mcal\Dio\ssc\src\Dio.c	  1299       Check Error
; ..\mcal\Dio\ssc\src\Dio.c	  1300       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1301    if ((VersionInfo) == NULL_PTR)
; ..\mcal\Dio\ssc\src\Dio.c	  1302    {
; ..\mcal\Dio\ssc\src\Dio.c	  1303      /*  Report DIO_E_PARAM_POINTER DET if service called with NULL_PTR */
; ..\mcal\Dio\ssc\src\Dio.c	  1304      /* [cover parentID={1DBFAD1B-8F73-47f6-8B64-6453F708FECD}]
; ..\mcal\Dio\ssc\src\Dio.c	  1305         Report Error
; ..\mcal\Dio\ssc\src\Dio.c	  1306         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1307      Dio_lReportError(DIO_SID_GETVERSIONINFO, DIO_E_PARAM_POINTER);
; ..\mcal\Dio\ssc\src\Dio.c	  1308    }
; ..\mcal\Dio\ssc\src\Dio.c	  1309    else
; ..\mcal\Dio\ssc\src\Dio.c	  1310    #endif /*DIO_DEV_ERROR_DETECT == STD_ON*/
; ..\mcal\Dio\ssc\src\Dio.c	  1311    {
; ..\mcal\Dio\ssc\src\Dio.c	  1312  
; ..\mcal\Dio\ssc\src\Dio.c	  1313      /* Vendor ID information */
; ..\mcal\Dio\ssc\src\Dio.c	  1314      /* [cover parentID={FFAF0D49-4F4A-48ea-9D16-74B3CC4FE03C}]
; ..\mcal\Dio\ssc\src\Dio.c	  1315         Update Module_ID,Instance_ID and SW Version
; ..\mcal\Dio\ssc\src\Dio.c	  1316         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1317      ((Std_VersionInfoType*)(VersionInfo))->vendorID = DIO_VENDOR_ID;
; ..\mcal\Dio\ssc\src\Dio.c	  1318      /*DIO module ID information */
; ..\mcal\Dio\ssc\src\Dio.c	  1319      ((Std_VersionInfoType*)(VersionInfo))->moduleID = DIO_MODULE_ID;
; ..\mcal\Dio\ssc\src\Dio.c	  1320      /*DIO Instance ID information */
; ..\mcal\Dio\ssc\src\Dio.c	  1321      /* DIO module Software major version information */
; ..\mcal\Dio\ssc\src\Dio.c	  1322      ((Std_VersionInfoType*)(VersionInfo))->sw_major_version =
; ..\mcal\Dio\ssc\src\Dio.c	  1323        (uint8)DIO_SW_MAJOR_VERSION;
; ..\mcal\Dio\ssc\src\Dio.c	  1324      /* DIO module Software minor version information */
; ..\mcal\Dio\ssc\src\Dio.c	  1325      ((Std_VersionInfoType*)(VersionInfo))->sw_minor_version =
; ..\mcal\Dio\ssc\src\Dio.c	  1326        (uint8)DIO_SW_MINOR_VERSION;
; ..\mcal\Dio\ssc\src\Dio.c	  1327      /* DIO module Software patch version information */
; ..\mcal\Dio\ssc\src\Dio.c	  1328      ((Std_VersionInfoType*)(VersionInfo))->sw_patch_version =
; ..\mcal\Dio\ssc\src\Dio.c	  1329        (uint8)DIO_SW_PATCH_VERSION;
; ..\mcal\Dio\ssc\src\Dio.c	  1330    }
; ..\mcal\Dio\ssc\src\Dio.c	  1331  }
; ..\mcal\Dio\ssc\src\Dio.c	  1332  #endif /* #if (DIO_VERSION_INFO_API == STD_ON) */
; ..\mcal\Dio\ssc\src\Dio.c	  1333  
; ..\mcal\Dio\ssc\src\Dio.c	  1334  
; ..\mcal\Dio\ssc\src\Dio.c	  1335  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1336  **                      Private Function Definitions                          **
; ..\mcal\Dio\ssc\src\Dio.c	  1337  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1338  #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  1339  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1340  ** Traceability:[cover parentID={C8417139-0F95-40bf-884D-A5BA2CC8D9B1}]       **                                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1341  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1342  ** Syntax : LOCAL_INLINE void Dio_lReportError( const uint8 ApiId,            **
; ..\mcal\Dio\ssc\src\Dio.c	  1343  **                                          const uint8 ErrorId)              **
; ..\mcal\Dio\ssc\src\Dio.c	  1344  **                                                                            **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1345  ** Service ID:       None                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1346  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1347  ** Sync/Async:       Synchronous                                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1348  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1349  ** Reentrancy:       Reentrant                                                **
; ..\mcal\Dio\ssc\src\Dio.c	  1350  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1351  ** Parameters (in):  ApiId - Service ID of the API reporting an error         **
; ..\mcal\Dio\ssc\src\Dio.c	  1352  **                   ErrorId - ID of the error reported                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1353  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1354  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1355  ** Parameters (out): None                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1356  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1357  ** Return value:     None                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1358  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1359  ** Description :    Function to report Safety Error and DET                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1360  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1361  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1362  static void Dio_lReportError(const uint8 ApiId, const uint8 ErrorId)
; Function Dio_lReportError
.L82:
Dio_lReportError:	.type	func
	mov	e6,d5,d4
.L560:

; ..\mcal\Dio\ssc\src\Dio.c	  1363  {
; ..\mcal\Dio\ssc\src\Dio.c	  1364    /* [cover parentID={4990BA09-B1EA-4f3f-A21B-643DC09AB0BB},
; ..\mcal\Dio\ssc\src\Dio.c	  1365                       {21A49075-C928-4e72-8858-1E1F52B2CF3A}]
; ..\mcal\Dio\ssc\src\Dio.c	  1366       Check Det is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1367       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1368    #if (DIO_DEV_ERROR_DETECT == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  1369    (void)Det_ReportError(
; ..\mcal\Dio\ssc\src\Dio.c	  1370      DIO_MODULE_ID,
	mov	d4,#120
.L442:

; ..\mcal\Dio\ssc\src\Dio.c	  1371      DIO_INSTANCE_ID,
	mov	d5,#0
.L443:

; ..\mcal\Dio\ssc\src\Dio.c	  1372      ApiId,
; ..\mcal\Dio\ssc\src\Dio.c	  1373      ErrorId);/* End of report to DET */
	j	Det_ReportError
.L315:
	
__Dio_lReportError_function_end:
	.size	Dio_lReportError,__Dio_lReportError_function_end-Dio_lReportError
.L160:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lCheckChannelId',code,cluster('Dio_lCheckChannelId')
	.sect	'.text.Dio.Dio_lCheckChannelId'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1374    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  1375  
; ..\mcal\Dio\ssc\src\Dio.c	  1376    /* [cover parentID={5D024C84-F280-4c81-B89F-D6C39A99B354}]
; ..\mcal\Dio\ssc\src\Dio.c	  1377       Check Safety is Enabled
; ..\mcal\Dio\ssc\src\Dio.c	  1378       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1379  
; ..\mcal\Dio\ssc\src\Dio.c	  1380    #if (DIO_SAFETY_ENABLE == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  1381    Mcal_ReportSafetyError(
; ..\mcal\Dio\ssc\src\Dio.c	  1382      DIO_MODULE_ID,
; ..\mcal\Dio\ssc\src\Dio.c	  1383      DIO_INSTANCE_ID,
; ..\mcal\Dio\ssc\src\Dio.c	  1384      ApiId,
; ..\mcal\Dio\ssc\src\Dio.c	  1385      ErrorId);/* End of report to Safety */
; ..\mcal\Dio\ssc\src\Dio.c	  1386  
; ..\mcal\Dio\ssc\src\Dio.c	  1387    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  1388  }/* Dio_lReportError */
; ..\mcal\Dio\ssc\src\Dio.c	  1389  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1390  ** Traceability:[cover parentID={58C777A3-9B0D-4ce4-B51B-861566C26396},       **
; ..\mcal\Dio\ssc\src\Dio.c	  1391  **                             {63917478-91DF-434f-8C6C-59E511835B77}]        **
; ..\mcal\Dio\ssc\src\Dio.c	  1392  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1393  ** Syntax           : uint8 Dio_lCheckChannelId                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1394  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1395  **                     const Dio_ChannelType ChannelId,                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1396  **                     const Dio_PortType PortNumber,                         **
; ..\mcal\Dio\ssc\src\Dio.c	  1397  **                     const uint8 PinNumber                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1398  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1399  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1400  ** Description      : Function to check if ChannelId is valid or not          **
; ..\mcal\Dio\ssc\src\Dio.c	  1401  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1402  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1403  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1404  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1405  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1406  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1407  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1408  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1409  ** Parameters (in) :  ChannelId  - ChannelId to be checked                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1410  **                    PortNumber - Port Number of ChannelId                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1411  **                    PinNumber - Pin Number of ChannelId                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1412  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1413  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1414  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1415  ** Return value     : ErrStatus                                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1416  **                    DIO_ERROR - denotes ChannelId is valid                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1417  **                    DIO_NO_ERROR - denotes ChannelId is invalid             **
; ..\mcal\Dio\ssc\src\Dio.c	  1418  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1419  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1420  LOCAL_INLINE uint8 Dio_lCheckChannelId(const Dio_ChannelType ChannelId,
; Function Dio_lCheckChannelId
.L84:
Dio_lCheckChannelId:	.type	func
	mov	d10,d5
.L450:
	mov	d8,d6
.L449:

; ..\mcal\Dio\ssc\src\Dio.c	  1421                             const Dio_PortType PortNumber, const uint8 PinNumber)
; ..\mcal\Dio\ssc\src\Dio.c	  1422  {
; ..\mcal\Dio\ssc\src\Dio.c	  1423  
; ..\mcal\Dio\ssc\src\Dio.c	  1424    uint32       ConfigIndex;
; ..\mcal\Dio\ssc\src\Dio.c	  1425    uint32       PortAvailable;
; ..\mcal\Dio\ssc\src\Dio.c	  1426    uint32       PinAvailable;
; ..\mcal\Dio\ssc\src\Dio.c	  1427    uint8        ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	  1428    uint32       PopcntTempVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1429  
; ..\mcal\Dio\ssc\src\Dio.c	  1430    ErrStatus = (uint8)DIO_NO_ERROR;
	mov	d9,#1
.L448:

; ..\mcal\Dio\ssc\src\Dio.c	  1431  
; ..\mcal\Dio\ssc\src\Dio.c	  1432    /* [cover parentID={A3FAA4D9-94E0-4551-B208-AF2032F87771}]
; ..\mcal\Dio\ssc\src\Dio.c	  1433       ChannelID > MaxPort Pin
; ..\mcal\Dio\ssc\src\Dio.c	  1434       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1435    /* If the DIO channel ID is greater than the max value of Port pin ID */
; ..\mcal\Dio\ssc\src\Dio.c	  1436    if(ChannelId > (uint16)DIO_MAX_VALID_PORT_PIN_ID)
	mov	d15,#664
.L565:
	jlt.u	d15,d4,.L34
.L566:

; ..\mcal\Dio\ssc\src\Dio.c	  1437    {
; ..\mcal\Dio\ssc\src\Dio.c	  1438      ErrStatus = (uint8)DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1439    }
; ..\mcal\Dio\ssc\src\Dio.c	  1440    else
; ..\mcal\Dio\ssc\src\Dio.c	  1441    {
; ..\mcal\Dio\ssc\src\Dio.c	  1442  
; ..\mcal\Dio\ssc\src\Dio.c	  1443      PortAvailable = Dio_lIsPortAvailable((uint32)PortNumber);
	mov	d4,d10
	call	Dio_lIsPortAvailable
.L444:
	mov	d15,d2
.L446:

; ..\mcal\Dio\ssc\src\Dio.c	  1444      PinAvailable  = Dio_lIsPinAvailable((uint32)PortNumber, PinNumber);
	mov	e4,d8,d10
	call	Dio_lIsPinAvailable
.L445:

; ..\mcal\Dio\ssc\src\Dio.c	  1445      /* [cover parentID={13EA46B8-0352-44ab-BF65-000C655745D0}]
; ..\mcal\Dio\ssc\src\Dio.c	  1446         Available Port is Zero or Available Pin is Zero
; ..\mcal\Dio\ssc\src\Dio.c	  1447         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1448      if( (PortAvailable == (uint32)DIO_NUMBER_0)
	jeq	d15,#0,.L35
.L567:

; ..\mcal\Dio\ssc\src\Dio.c	  1449          || (PinAvailable == (uint32)DIO_NUMBER_0) )
	jeq	d2,#0,.L36
.L568:

; ..\mcal\Dio\ssc\src\Dio.c	  1450      {
; ..\mcal\Dio\ssc\src\Dio.c	  1451        ErrStatus = (uint8)DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1452      }
; ..\mcal\Dio\ssc\src\Dio.c	  1453      else
; ..\mcal\Dio\ssc\src\Dio.c	  1454      {
; ..\mcal\Dio\ssc\src\Dio.c	  1455        /* [cover parentID={1F3A93AB-E025-4f0d-8306-196B2C576BF1}]
; ..\mcal\Dio\ssc\src\Dio.c	  1456        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1457        if(PortNumber < PORT_NO_GREATER_THAN_32)
	mov	d15,#32
.L447:
	jge.u	d10,d15,.L37
.L569:

; ..\mcal\Dio\ssc\src\Dio.c	  1458        {
; ..\mcal\Dio\ssc\src\Dio.c	  1459         PopcntTempVal=DIO_PORTS_AVAILABLE_00_31 << (PORT_POPCNT_CALC - PortNumber);
	fcall	.cocofun_4
.L570:
	rsub	d0,d10,#31
.L571:
	sh	d15,d15,d0
.L451:

; ..\mcal\Dio\ssc\src\Dio.c	  1460         ConfigIndex=POPCNT(PopcntTempVal)-1U;
	popcnt.w	d15,d15
.L452:
	add	d15,#-1
	j	.L38
.L37:

; ..\mcal\Dio\ssc\src\Dio.c	  1461        }
; ..\mcal\Dio\ssc\src\Dio.c	  1462        else
; ..\mcal\Dio\ssc\src\Dio.c	  1463        {
; ..\mcal\Dio\ssc\src\Dio.c	  1464         ConfigIndex=POPCNT(DIO_PORTS_AVAILABLE_00_31);
	fcall	.cocofun_1
.L454:

; ..\mcal\Dio\ssc\src\Dio.c	  1465         PopcntTempVal= (uint32)DIO_PORTS_AVAILABLE_32_63 <<(PORT_POPCNT_CALC_32_63 - PortNumber);
	rsub	d1,d10,#63
	fcall	.cocofun_2
.L38:
	fcall	.cocofun_3
.L458:

; ..\mcal\Dio\ssc\src\Dio.c	  1466         ConfigIndex +=POPCNT(PopcntTempVal) - 1U;
; ..\mcal\Dio\ssc\src\Dio.c	  1467        }
; ..\mcal\Dio\ssc\src\Dio.c	  1468  
; ..\mcal\Dio\ssc\src\Dio.c	  1469        /* [cover parentID={AF6C6856-F626-4f56-8CCA-5472851357B3}]
; ..\mcal\Dio\ssc\src\Dio.c	  1470           If Port Not Configured
; ..\mcal\Dio\ssc\src\Dio.c	  1471           [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1472        if(
	jeq	d15,#0,.L39
.L572:

; ..\mcal\Dio\ssc\src\Dio.c	  1473          Dio_kConfigPtr->Dio_PortChannelIdConfigPtr[ConfigIndex].Dio_PortIdConfig
; ..\mcal\Dio\ssc\src\Dio.c	  1474          == DIO_PORT_NOT_CONFIGURED)
; ..\mcal\Dio\ssc\src\Dio.c	  1475        {
; ..\mcal\Dio\ssc\src\Dio.c	  1476          ErrStatus = (uint8)DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1477        }
; ..\mcal\Dio\ssc\src\Dio.c	  1478        else
; ..\mcal\Dio\ssc\src\Dio.c	  1479        {
; ..\mcal\Dio\ssc\src\Dio.c	  1480          /* [cover parentID={D7C72517-6C6C-4aed-B7FA-63656D4ACC86}]
; ..\mcal\Dio\ssc\src\Dio.c	  1481             Check Configuration Pointer
; ..\mcal\Dio\ssc\src\Dio.c	  1482             [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1483          if(
; ..\mcal\Dio\ssc\src\Dio.c	  1484            ((Dio_kConfigPtr->Dio_PortChannelIdConfigPtr[ConfigIndex].\ 
; ..\mcal\Dio\ssc\src\Dio.c	  1485              Dio_ChannelConfig) & ((uint16)DIO_NUMBER_1 << (uint16)PinNumber))
	mov	d0,#1
	ld.hu	d15,[a15]2
.L573:
	sha	d0,d0,d8
.L574:
	and	d15,d0
.L575:
	jne	d15,#0,.L40
.L39:
.L36:
.L35:
.L34:

; ..\mcal\Dio\ssc\src\Dio.c	  1486            == (uint16)DIO_NUMBER_0)
; ..\mcal\Dio\ssc\src\Dio.c	  1487          {
; ..\mcal\Dio\ssc\src\Dio.c	  1488            ErrStatus = (uint8)DIO_ERROR;
	mov	d9,#0
.L40:

; ..\mcal\Dio\ssc\src\Dio.c	  1489          }
; ..\mcal\Dio\ssc\src\Dio.c	  1490        }
; ..\mcal\Dio\ssc\src\Dio.c	  1491      }
; ..\mcal\Dio\ssc\src\Dio.c	  1492    }
; ..\mcal\Dio\ssc\src\Dio.c	  1493  
; ..\mcal\Dio\ssc\src\Dio.c	  1494    return (ErrStatus);
; ..\mcal\Dio\ssc\src\Dio.c	  1495  }/* Dio_lCheckChannelId */
	mov	d2,d9
	ret
.L320:
	
__Dio_lCheckChannelId_function_end:
	.size	Dio_lCheckChannelId,__Dio_lCheckChannelId_function_end-Dio_lCheckChannelId
.L165:
	; End of function
	
	.sdecl	'.text.Dio..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.Dio..cocofun_4'
	.align	2
; Function .cocofun_4
.L86:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:1
	mov.u	d15,#64519
	addih	d15,d15,#51184
.L680:
	fret
.L245:
	; End of function
	.sdecl	'.text.Dio..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.Dio..cocofun_3'
	.align	2
; Function .cocofun_3
.L88:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	movh.a	a15,#@his(Dio_Config)
.L672:
	ld.a	a15,[a15]@los(Dio_Config)
.L673:
	addsc.a	a15,a15,d15,#2
.L674:
	ld.bu	d15,[a15]
.L675:
	fret
.L240:
	; End of function
	.sdecl	'.text.Dio..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.Dio..cocofun_2'
	.align	2
; Function .cocofun_2
.L90:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	sh	d15,d15,d1
.L455:
	popcnt.w	d15,d15
.L456:
	add	d15,#-1
.L457:
	add	d15,d0
.L667:
	fret
.L235:
	; End of function
	.sdecl	'.text.Dio..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.Dio..cocofun_1'
	.align	2
; Function .cocofun_1
.L92:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	fcall	.cocofun_4
.L453:
	popcnt.w	d0,d15
.L661:
	mov	d15,#775
.L662:
	fret
.L230:
	; End of function
	.sdecl	'.text.Dio.Dio_lCheckGroupId',code,cluster('Dio_lCheckGroupId')
	.sect	'.text.Dio.Dio_lCheckGroupId'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1496  
; ..\mcal\Dio\ssc\src\Dio.c	  1497  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1498  ** Traceability:[cover parentID={8A97CBBE-028D-4c84-9645-412DE27F19D6}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  1499  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1500  ** Syntax           : uint8 Dio_lCheckGroupId                                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1501  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1502  **                      const Dio_ChannelGroupType * const GroupIdPtr         **
; ..\mcal\Dio\ssc\src\Dio.c	  1503  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1504  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1505  ** Parameters (in) :  GroupIdPtr  - Pointer for ChannelGroup to be checked    **
; ..\mcal\Dio\ssc\src\Dio.c	  1506  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1507  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1508  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1509  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1510  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1511  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1512  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1513  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1514  ** Parameters (in) :  GroupIdPtr  - Pointer to ChannelGroup to be checked     **
; ..\mcal\Dio\ssc\src\Dio.c	  1515  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1516  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1517  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1518  ** Return value     : ErrStatus                                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1519  **                    DIO_ERROR - denotes GroupIdPtr is valid                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1520  **                    DIO_NO_ERROR - denotes GroupIdPtr is invalid            **
; ..\mcal\Dio\ssc\src\Dio.c	  1521  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1522  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1523  LOCAL_INLINE uint8 Dio_lCheckGroupId
; Function Dio_lCheckGroupId
.L94:
Dio_lCheckGroupId:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1524  (
; ..\mcal\Dio\ssc\src\Dio.c	  1525    const Dio_ChannelGroupType * const GroupIdPtr
; ..\mcal\Dio\ssc\src\Dio.c	  1526  )
; ..\mcal\Dio\ssc\src\Dio.c	  1527  {
; ..\mcal\Dio\ssc\src\Dio.c	  1528  
; ..\mcal\Dio\ssc\src\Dio.c	  1529    uint8  ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	  1530  
; ..\mcal\Dio\ssc\src\Dio.c	  1531    /* Initialise the Error status to DIO_ERROR */
; ..\mcal\Dio\ssc\src\Dio.c	  1532    ErrStatus = (uint8)DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1533    /* [cover parentID={1231543B-7056-4868-9C42-989E7118912B}]
; ..\mcal\Dio\ssc\src\Dio.c	  1534       Is Parameter Null
; ..\mcal\Dio\ssc\src\Dio.c	  1535       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1536    /* Check GroupIdPtr for NULL_PTR */
; ..\mcal\Dio\ssc\src\Dio.c	  1537    if (GroupIdPtr != NULL_PTR)
	mov	d2,#0
	jz.a	a4,.L42
.L459:

; ..\mcal\Dio\ssc\src\Dio.c	  1538    {
; ..\mcal\Dio\ssc\src\Dio.c	  1539      ErrStatus = Dio_lCheckChGrpValue(GroupIdPtr);
	j	Dio_lCheckChGrpValue
.L42:

; ..\mcal\Dio\ssc\src\Dio.c	  1540    } /* GroupIdPtr != NULL_PTR */
; ..\mcal\Dio\ssc\src\Dio.c	  1541    return (ErrStatus);
; ..\mcal\Dio\ssc\src\Dio.c	  1542  
; ..\mcal\Dio\ssc\src\Dio.c	  1543  }/* Dio_lCheckGroupId */
	ret
.L333:
	
__Dio_lCheckGroupId_function_end:
	.size	Dio_lCheckGroupId,__Dio_lCheckGroupId_function_end-Dio_lCheckGroupId
.L170:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lCheckChGrpValue',code,cluster('Dio_lCheckChGrpValue')
	.sect	'.text.Dio.Dio_lCheckChGrpValue'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1544  
; ..\mcal\Dio\ssc\src\Dio.c	  1545  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1546  ** Traceability:[cover parentID={0BD9D851-A4F0-4e67-B33D-ADC0E669EA33}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  1547  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1548  ** Syntax           : uint8 Dio_lCheckChGrpValue                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1549  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1550  **                      const Dio_ChannelGroupType * const GroupIdPtr         **
; ..\mcal\Dio\ssc\src\Dio.c	  1551  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1552  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1553  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1554  ** Description      : Function to validate GroupIdPtr                         **
; ..\mcal\Dio\ssc\src\Dio.c	  1555  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1556  **[/cover]                                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1557  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1558  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1559  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1560  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1561  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1562  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1563  ** Parameters (in) :  GroupIdPtr  - Pointer for ChannelGroup to be checked    **
; ..\mcal\Dio\ssc\src\Dio.c	  1564  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1565  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1566  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1567  ** Return value     : ErrStatus                                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1568  **                    DIO_ERROR - denotes GroupIdPtr is valid                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1569  **                    DIO_NO_ERROR - denotes GroupIdPtr is invalid            **
; ..\mcal\Dio\ssc\src\Dio.c	  1570  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1571  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1572  LOCAL_INLINE uint8 Dio_lCheckChGrpValue
; Function Dio_lCheckChGrpValue
.L96:
Dio_lCheckChGrpValue:	.type	func
	movh.a	a15,#@his(Dio_Config)
	lea	a15,[a15]@los(Dio_Config)
.L593:

; ..\mcal\Dio\ssc\src\Dio.c	  1573  (
; ..\mcal\Dio\ssc\src\Dio.c	  1574    const Dio_ChannelGroupType * const GroupIdPtr
; ..\mcal\Dio\ssc\src\Dio.c	  1575  )
; ..\mcal\Dio\ssc\src\Dio.c	  1576  {
; ..\mcal\Dio\ssc\src\Dio.c	  1577  
; ..\mcal\Dio\ssc\src\Dio.c	  1578    uint32 Index;
; ..\mcal\Dio\ssc\src\Dio.c	  1579    uint8  ErrStatus = DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1580  
; ..\mcal\Dio\ssc\src\Dio.c	  1581  
; ..\mcal\Dio\ssc\src\Dio.c	  1582    /* [cover parentID={C3808803-B5CE-409d-8A72-75C1D3DD4AF0}]
; ..\mcal\Dio\ssc\src\Dio.c	  1583       Channel Group Configuration
; ..\mcal\Dio\ssc\src\Dio.c	  1584       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1585    for(Index = 0U; Index < (Dio_kConfigPtr->Dio_ChannelGroupConfigSize); Index++)
	mov	d2,#0
	ld.w	d15,[a15]8
.L460:

; ..\mcal\Dio\ssc\src\Dio.c	  1586    {
; ..\mcal\Dio\ssc\src\Dio.c	  1587      /* [cover parentID={867658FF-ACFA-4c86-B59C-D95FC16D97B1}]
; ..\mcal\Dio\ssc\src\Dio.c	  1588         Group Identification Pointer
; ..\mcal\Dio\ssc\src\Dio.c	  1589         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1590      if (GroupIdPtr == &(Dio_kConfigPtr->Dio_ChannelGroupConfigPtr[Index]))
	mov	d0,d2
	add.a	a15,#4
.L461:
	jeq	d15,#0,.L47
.L594:
	mov.a	a2,d15
	add.a	a2,#-1
.L45:
	ld.a	a5,[a15]
.L595:
	addsc.a	a5,a5,d0,#2
.L596:
	jne.a	a4,a5,.L46
.L597:

; ..\mcal\Dio\ssc\src\Dio.c	  1591      {
; ..\mcal\Dio\ssc\src\Dio.c	  1592        /*DIO114: channel group is valid within the current configuration*/
; ..\mcal\Dio\ssc\src\Dio.c	  1593        ErrStatus = (uint8)DIO_NO_ERROR;
	mov	d2,#1
.L46:
	add	d0,#1
	loop	a2,.L45
.L47:

; ..\mcal\Dio\ssc\src\Dio.c	  1594      }
; ..\mcal\Dio\ssc\src\Dio.c	  1595    }
; ..\mcal\Dio\ssc\src\Dio.c	  1596    return ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	  1597  }/* Dio_lCheckChGrpValue */
	ret
.L344:
	
__Dio_lCheckChGrpValue_function_end:
	.size	Dio_lCheckChGrpValue,__Dio_lCheckChGrpValue_function_end-Dio_lCheckChGrpValue
.L180:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lCheckPortId',code,cluster('Dio_lCheckPortId')
	.sect	'.text.Dio.Dio_lCheckPortId'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1598  
; ..\mcal\Dio\ssc\src\Dio.c	  1599  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1600  **Traceability:[cover parentID={E58D60FD-8A43-4b10-9C6C-4CD2C4F21B31}]        **
; ..\mcal\Dio\ssc\src\Dio.c	  1601  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1602  ** Syntax           : uint8 Dio_lCheckPortId                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1603  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1604  **                     const Dio_PortType PortId                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1605  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1606  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1607  ** Description      : Function to check if PortId is valid or not             **
; ..\mcal\Dio\ssc\src\Dio.c	  1608  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1609  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1610  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1611  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1612  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1613  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1614  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1615  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1616  ** Parameters (in) :  PortId  - Port to be checked                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1617  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1618  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1619  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1620  ** Return value     : ErrStatus                                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1621  **                    DIO_ERROR - denotes PortId is valid                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1622  **                    DIO_NO_ERROR - denotes PortId is invalid                **
; ..\mcal\Dio\ssc\src\Dio.c	  1623  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1624  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1625  LOCAL_INLINE uint8 Dio_lCheckPortId (const Dio_PortType PortId)
; Function Dio_lCheckPortId
.L98:
Dio_lCheckPortId:	.type	func
	mov	d8,d4
.L463:

; ..\mcal\Dio\ssc\src\Dio.c	  1626  {
; ..\mcal\Dio\ssc\src\Dio.c	  1627    uint32      ConfigIndex;
; ..\mcal\Dio\ssc\src\Dio.c	  1628    uint32      PortAvailable;
; ..\mcal\Dio\ssc\src\Dio.c	  1629    uint8       ErrStatus;
; ..\mcal\Dio\ssc\src\Dio.c	  1630    uint32      PopcntTempVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1631  
; ..\mcal\Dio\ssc\src\Dio.c	  1632    ErrStatus = (uint8)DIO_NO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1633  
; ..\mcal\Dio\ssc\src\Dio.c	  1634    PortAvailable = (uint32)Dio_lIsPortAvailable((uint32)PortId);
	mov	d9,#1
	call	Dio_lIsPortAvailable
.L462:

; ..\mcal\Dio\ssc\src\Dio.c	  1635  
; ..\mcal\Dio\ssc\src\Dio.c	  1636    /* Check for the validity of symbolic port ID */
; ..\mcal\Dio\ssc\src\Dio.c	  1637    /* [cover parentID={94327A98-1764-443a-A210-F3E30B6367CA}]
; ..\mcal\Dio\ssc\src\Dio.c	  1638       Checdk for Validity of symbolic PortId
; ..\mcal\Dio\ssc\src\Dio.c	  1639       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1640    if( (PortAvailable == (uint32)0U) )
	jeq	d2,#0,.L49
.L584:

; ..\mcal\Dio\ssc\src\Dio.c	  1641    {
; ..\mcal\Dio\ssc\src\Dio.c	  1642      ErrStatus = (uint8)DIO_ERROR;
; ..\mcal\Dio\ssc\src\Dio.c	  1643    }
; ..\mcal\Dio\ssc\src\Dio.c	  1644    else
; ..\mcal\Dio\ssc\src\Dio.c	  1645    {
; ..\mcal\Dio\ssc\src\Dio.c	  1646      /* [cover parentID={35A07763-3B37-45da-B5B0-05ECFB7E2AF8}]
; ..\mcal\Dio\ssc\src\Dio.c	  1647      */
; ..\mcal\Dio\ssc\src\Dio.c	  1648      if(PortId < PORT_NO_GREATER_THAN_32)
	mov	d15,#32
.L585:
	jge.u	d8,d15,.L50
.L586:

; ..\mcal\Dio\ssc\src\Dio.c	  1649        {
; ..\mcal\Dio\ssc\src\Dio.c	  1650         PopcntTempVal=DIO_PORTS_AVAILABLE_00_31 << (PORT_POPCNT_CALC - PortId);
	fcall	.cocofun_4
.L587:
	rsub	d0,d8,#31
.L588:
	sh	d15,d15,d0
.L464:

; ..\mcal\Dio\ssc\src\Dio.c	  1651         ConfigIndex=POPCNT(PopcntTempVal)-1U;
	popcnt.w	d15,d15
.L465:
	add	d15,#-1
	j	.L51
.L50:

; ..\mcal\Dio\ssc\src\Dio.c	  1652        }
; ..\mcal\Dio\ssc\src\Dio.c	  1653       else
; ..\mcal\Dio\ssc\src\Dio.c	  1654        {
; ..\mcal\Dio\ssc\src\Dio.c	  1655          ConfigIndex=POPCNT(DIO_PORTS_AVAILABLE_00_31);
	fcall	.cocofun_1
.L466:

; ..\mcal\Dio\ssc\src\Dio.c	  1656          PopcntTempVal= (uint32)DIO_PORTS_AVAILABLE_32_63 <<(PORT_POPCNT_CALC_32_63 - PortId);
	rsub	d1,d8,#63
	fcall	.cocofun_2
.L51:
	fcall	.cocofun_3
.L467:

; ..\mcal\Dio\ssc\src\Dio.c	  1657          ConfigIndex+= POPCNT(PopcntTempVal) - 1U;
; ..\mcal\Dio\ssc\src\Dio.c	  1658        }
; ..\mcal\Dio\ssc\src\Dio.c	  1659      /* [cover parentID={DC80E749-616F-4375-982F-89EBD013F9CF}]
; ..\mcal\Dio\ssc\src\Dio.c	  1660         Check for Configuration
; ..\mcal\Dio\ssc\src\Dio.c	  1661         [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1662      if(
	jne	d15,#0,.L52
.L49:

; ..\mcal\Dio\ssc\src\Dio.c	  1663        Dio_kConfigPtr->Dio_PortChannelIdConfigPtr[ConfigIndex].Dio_PortIdConfig
; ..\mcal\Dio\ssc\src\Dio.c	  1664        == DIO_PORT_NOT_CONFIGURED)
; ..\mcal\Dio\ssc\src\Dio.c	  1665      {
; ..\mcal\Dio\ssc\src\Dio.c	  1666        ErrStatus = (uint8)DIO_ERROR;
	mov	d9,#0
.L52:

; ..\mcal\Dio\ssc\src\Dio.c	  1667      }
; ..\mcal\Dio\ssc\src\Dio.c	  1668  
; ..\mcal\Dio\ssc\src\Dio.c	  1669    }
; ..\mcal\Dio\ssc\src\Dio.c	  1670  
; ..\mcal\Dio\ssc\src\Dio.c	  1671    return (ErrStatus);
; ..\mcal\Dio\ssc\src\Dio.c	  1672  }/* Dio_lCheckPortId */
	mov	d2,d9
	ret
.L337:
	
__Dio_lCheckPortId_function_end:
	.size	Dio_lCheckPortId,__Dio_lCheckPortId_function_end-Dio_lCheckPortId
.L175:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPortAvailable31',code,cluster('Dio_lIsPortAvailable31')
	.sect	'.text.Dio.Dio_lIsPortAvailable31'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1673  
; ..\mcal\Dio\ssc\src\Dio.c	  1674  
; ..\mcal\Dio\ssc\src\Dio.c	  1675  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1676  ** Traceability:[cover parentID={43EF9D83-ECBA-4c35-9D29-507AC298045A}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  1677  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1678  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortAvailable31              **
; ..\mcal\Dio\ssc\src\Dio.c	  1679  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1680  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1681  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1682  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1683  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1684  **   - checks if the port is available or not for the microcontroller.        **
; ..\mcal\Dio\ssc\src\Dio.c	  1685  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1686  **[/cover]                                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1687  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1688  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1689  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1690  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1691  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1692  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1693  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1694  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1695  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1696  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1697  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1698  ** Return value     : RetVal - Value which denotes whether the port is        **
; ..\mcal\Dio\ssc\src\Dio.c	  1699  **                    available or not                                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1700  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1701  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1702  LOCAL_INLINE uint32 Dio_lIsPortAvailable31(const uint32 Port)
; Function Dio_lIsPortAvailable31
.L100:
Dio_lIsPortAvailable31:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1703  {
; ..\mcal\Dio\ssc\src\Dio.c	  1704    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1705  
; ..\mcal\Dio\ssc\src\Dio.c	  1706    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) &
	mov	d15,#1
.L602:
	sh	d15,d15,d4
.L603:

; ..\mcal\Dio\ssc\src\Dio.c	  1707               ((uint32)DIO_PORTS_AVAILABLE_00_31));
	mov.u	d2,#64519
	addih	d2,d2,#51184
.L604:

; ..\mcal\Dio\ssc\src\Dio.c	  1708    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1709  }
	and	d2,d15
	ret
.L349:
	
__Dio_lIsPortAvailable31_function_end:
	.size	Dio_lIsPortAvailable31,__Dio_lIsPortAvailable31_function_end-Dio_lIsPortAvailable31
.L185:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPortAvailable63',code,cluster('Dio_lIsPortAvailable63')
	.sect	'.text.Dio.Dio_lIsPortAvailable63'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1710  
; ..\mcal\Dio\ssc\src\Dio.c	  1711  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1712  ** Traceability:[cover parentID={A71B0F4E-DB94-4e2c-B89E-EA0CA6BA4A10}]                                                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1713  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1714  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortAvailable63              **
; ..\mcal\Dio\ssc\src\Dio.c	  1715  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1716  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1717  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1718  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1719  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1720  **   - checks if the port is available or not for the microcontroller.        **
; ..\mcal\Dio\ssc\src\Dio.c	  1721  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1722  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1723  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1724  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1725  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1726  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1727  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1728  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1729  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1730  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1731  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1732  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1733  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1734  ** Return value     : RetVal - Value which denotes whether the port is        **
; ..\mcal\Dio\ssc\src\Dio.c	  1735  **                    available or not                                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1736  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1737  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1738  LOCAL_INLINE uint32 Dio_lIsPortAvailable63(const uint32 Port)
; Function Dio_lIsPortAvailable63
.L102:
Dio_lIsPortAvailable63:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1739  {
; ..\mcal\Dio\ssc\src\Dio.c	  1740    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1741  
; ..\mcal\Dio\ssc\src\Dio.c	  1742    RetVal = (((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - (uint32)DIO_NUMBER_32)) &
	mov	d15,#1
.L609:
	add	d0,d4,#-32
.L610:
	sh	d15,d15,d0
.L611:

; ..\mcal\Dio\ssc\src\Dio.c	  1743              ((uint32)DIO_PORTS_AVAILABLE_32_63));
	mov	d2,#775
.L612:

; ..\mcal\Dio\ssc\src\Dio.c	  1744    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1745  }
	and	d2,d15
	ret
.L352:
	
__Dio_lIsPortAvailable63_function_end:
	.size	Dio_lIsPortAvailable63,__Dio_lIsPortAvailable63_function_end-Dio_lIsPortAvailable63
.L190:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPortAvailable',code,cluster('Dio_lIsPortAvailable')
	.sect	'.text.Dio.Dio_lIsPortAvailable'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1746  
; ..\mcal\Dio\ssc\src\Dio.c	  1747  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1748  ** Traceability:[cover parentID={933DA943-9D62-44f8-9C34-A12FA2CED33D}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  1749  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1750  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortAvailable                **
; ..\mcal\Dio\ssc\src\Dio.c	  1751  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1752  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1753  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1754  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1755  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1756  **   - checks if the port is available or not for the microcontroller.        **
; ..\mcal\Dio\ssc\src\Dio.c	  1757  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1758  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1759  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1760  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1761  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1762  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1763  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1764  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1765  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1766  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1767  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1768  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1769  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1770  ** Return value     : RetVal - Value which denotes whether the port is        **
; ..\mcal\Dio\ssc\src\Dio.c	  1771  **                    available or not                                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1772  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1773  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1774  LOCAL_INLINE uint32 Dio_lIsPortAvailable(const uint32 Port)
; Function Dio_lIsPortAvailable
.L104:
Dio_lIsPortAvailable:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1775  {
; ..\mcal\Dio\ssc\src\Dio.c	  1776    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1777    /* [cover parentID={68C41933-A848-4640-BF33-302B2B7AB6FA}]
; ..\mcal\Dio\ssc\src\Dio.c	  1778       Is Port Number is greater than 31
; ..\mcal\Dio\ssc\src\Dio.c	  1779       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1780    RetVal = ((Port > (uint32)DIO_NUMBER_31) ? (Dio_lIsPortAvailable63(Port)) :
	mov	d15,#31
.L617:
	jge.u	d15,d4,.L56
.L618:
	j	Dio_lIsPortAvailable63
.L56:

; ..\mcal\Dio\ssc\src\Dio.c	  1781              (Dio_lIsPortAvailable31(Port)));
	j	Dio_lIsPortAvailable31
.L355:
	
__Dio_lIsPortAvailable_function_end:
	.size	Dio_lIsPortAvailable,__Dio_lIsPortAvailable_function_end-Dio_lIsPortAvailable
.L195:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPortReadOnly63',code,cluster('Dio_lIsPortReadOnly63')
	.sect	'.text.Dio.Dio_lIsPortReadOnly63'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1782    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1783  }
; ..\mcal\Dio\ssc\src\Dio.c	  1784  
; ..\mcal\Dio\ssc\src\Dio.c	  1785  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1786  ** Traceability:[cover parentID={E3EB1235-FF60-4e60-92D5-B3BB67992BFC}]                                                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1787  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1788  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortReadOnly31               **
; ..\mcal\Dio\ssc\src\Dio.c	  1789  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1790  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1791  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1792  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1793  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1794  **   - checks if the port is read only or it is writable.                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1795  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1796  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1797  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1798  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1799  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1800  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1801  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1802  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1803  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1804  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1805  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1806  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1807  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1808  ** Return value     : RetValue -Value which denotes whether the Port          **
; ..\mcal\Dio\ssc\src\Dio.c	  1809  **                    is read only or not                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1810  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1811  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1812  LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(const uint32 Port)
; ..\mcal\Dio\ssc\src\Dio.c	  1813  {
; ..\mcal\Dio\ssc\src\Dio.c	  1814    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1815  
; ..\mcal\Dio\ssc\src\Dio.c	  1816    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) & \ 
; ..\mcal\Dio\ssc\src\Dio.c	  1817               ((uint32)DIO_PORTS_READONLY_00_31));
; ..\mcal\Dio\ssc\src\Dio.c	  1818    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1819  }
; ..\mcal\Dio\ssc\src\Dio.c	  1820  
; ..\mcal\Dio\ssc\src\Dio.c	  1821  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1822  **Traceability:[cover parentID={8FD009AD-B20A-4107-98A0-184785D5EAB2}]        **
; ..\mcal\Dio\ssc\src\Dio.c	  1823  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1824  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortReadOnly63               **
; ..\mcal\Dio\ssc\src\Dio.c	  1825  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1826  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1827  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1828  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1829  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1830  **   - checks if the port is read only or it is writable.                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1831  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1832  **  [/cover]                                                                  **
; ..\mcal\Dio\ssc\src\Dio.c	  1833  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1834  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1835  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1836  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1837  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1838  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1839  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1840  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1841  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1842  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1843  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1844  ** Return value     : RetValue -Value which denotes whether the Port          **
; ..\mcal\Dio\ssc\src\Dio.c	  1845  **                    is read only or not                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1846  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1847  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1848  LOCAL_INLINE uint32 Dio_lIsPortReadOnly63(const uint32 Port)
; Function Dio_lIsPortReadOnly63
.L106:
Dio_lIsPortReadOnly63:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1849  {
; ..\mcal\Dio\ssc\src\Dio.c	  1850    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1851  
; ..\mcal\Dio\ssc\src\Dio.c	  1852    RetVal = (((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - (uint32)DIO_NUMBER_32)) &
	mov	d15,#1
.L623:
	add	d0,d4,#-32
.L624:
	sh	d15,d15,d0
.L625:

; ..\mcal\Dio\ssc\src\Dio.c	  1853              ((uint32)DIO_PORTS_READONLY_32_63));
	mov	d2,#768
.L626:

; ..\mcal\Dio\ssc\src\Dio.c	  1854  
; ..\mcal\Dio\ssc\src\Dio.c	  1855    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1856  }
	and	d2,d15
	ret
.L358:
	
__Dio_lIsPortReadOnly63_function_end:
	.size	Dio_lIsPortReadOnly63,__Dio_lIsPortReadOnly63_function_end-Dio_lIsPortReadOnly63
.L200:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPortReadOnly',code,cluster('Dio_lIsPortReadOnly')
	.sect	'.text.Dio.Dio_lIsPortReadOnly'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1857  
; ..\mcal\Dio\ssc\src\Dio.c	  1858  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1859  ** Traceability:[cover parentID={248A97E3-6170-404c-BD79-0A1B1274435A}]                                                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1860  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1861  ** Syntax           : LOCAL_INLINE uint32 Dio_lIsPortReadOnly                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1862  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1863  **                     const uint32 Port                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1864  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1865  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1866  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1867  **   - checks if the port is read only or it is writable.                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1868  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1869  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1870  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1871  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1872  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1873  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1874  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1875  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1876  ** Parameters (in) :  Port  - Port to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1877  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1878  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1879  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1880  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1881  ** Return value     : RetValue -Value which denotes whether the Port          **
; ..\mcal\Dio\ssc\src\Dio.c	  1882  **                    is read only or not                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1883  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1884  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1885  LOCAL_INLINE uint32 Dio_lIsPortReadOnly(const uint32 Port)
; Function Dio_lIsPortReadOnly
.L108:
Dio_lIsPortReadOnly:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1886  {
; ..\mcal\Dio\ssc\src\Dio.c	  1887    uint32 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1888    /* [cover parentID={81CA48C5-FB00-43d0-91AD-78E3AA367A2F}]
; ..\mcal\Dio\ssc\src\Dio.c	  1889       Is port less than or equal to 31
; ..\mcal\Dio\ssc\src\Dio.c	  1890       [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  1891    RetVal = ((Port <= (uint32)DIO_NUMBER_31) ? (Dio_lIsPortReadOnly31(Port)) : \ 
	mov	d15,#31
.L631:
	jlt.u	d15,d4,.L60
.L632:

; ..\mcal\Dio\ssc\src\Dio.c	  1892              (Dio_lIsPortReadOnly63(Port)) );
; ..\mcal\Dio\ssc\src\Dio.c	  1893    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1894  }
	mov	d2,#0
	ret
.L60:
	j	Dio_lIsPortReadOnly63
.L361:
	
__Dio_lIsPortReadOnly_function_end:
	.size	Dio_lIsPortReadOnly,__Dio_lIsPortReadOnly_function_end-Dio_lIsPortReadOnly
.L205:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lIsPinAvailable',code,cluster('Dio_lIsPinAvailable')
	.sect	'.text.Dio.Dio_lIsPinAvailable'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1895  
; ..\mcal\Dio\ssc\src\Dio.c	  1896  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1897  ** Traceability:[cover parentID={54272B0C-EBE5-467e-B001-998F2B61B6F9}]                                                              **
; ..\mcal\Dio\ssc\src\Dio.c	  1898  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1899  ** Syntax           : LOCAL_INLINE uint16 Dio_lIsPinAvailable                 **
; ..\mcal\Dio\ssc\src\Dio.c	  1900  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1901  **                     const uint32 Port,                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1902  **                     const uint8 Pin                                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1903  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1904  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1905  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1906  **   - checks if the pin is available for port.                               **
; ..\mcal\Dio\ssc\src\Dio.c	  1907  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1908  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1909  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1910  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1911  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1912  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1913  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1914  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1915  ** Parameters (in)  : Port - Port number                                      **
; ..\mcal\Dio\ssc\src\Dio.c	  1916  **                    Pin  - Pin to be validated for Port                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1917  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1918  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1919  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1920  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1921  ** Return value     : RetVal -Value which denotes whether the Pin is present  **
; ..\mcal\Dio\ssc\src\Dio.c	  1922  **                    on the Port or not.                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1923  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1924  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1925  LOCAL_INLINE uint16 Dio_lIsPinAvailable(const uint32 Port, const uint8 Pin)
; Function Dio_lIsPinAvailable
.L110:
Dio_lIsPinAvailable:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1926  {
; ..\mcal\Dio\ssc\src\Dio.c	  1927    uint16 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1928  
; ..\mcal\Dio\ssc\src\Dio.c	  1929    RetVal =  ( (uint16)((uint32)DIO_CHANNEL_BIT_MASK << (Pin)) & \ 
; ..\mcal\Dio\ssc\src\Dio.c	  1930                Dio_kMaskAllPortPins[Port] );
	mov	d15,#1
	movh.a	a15,#@his(Dio_kMaskAllPortPins)
.L637:
	sh	d15,d15,d5
	lea	a15,[a15]@los(Dio_kMaskAllPortPins)
.L638:
	addsc.a	a15,a15,d4,#1
.L639:
	extr.u	d2,d15,#0,#16
.L640:
	ld.hu	d15,[a15]0
.L641:

; ..\mcal\Dio\ssc\src\Dio.c	  1931    return RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1932  }
	and	d2,d15
	ret
.L364:
	
__Dio_lIsPinAvailable_function_end:
	.size	Dio_lIsPinAvailable,__Dio_lIsPinAvailable_function_end-Dio_lIsPinAvailable
.L210:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPortNumber',code,cluster('Dio_lGetPortNumber')
	.sect	'.text.Dio.Dio_lGetPortNumber'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1933  #endif /*(DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON) */
; ..\mcal\Dio\ssc\src\Dio.c	  1934  
; ..\mcal\Dio\ssc\src\Dio.c	  1935  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1936  **  Traceability:[cover parentID={2D2E8022-D6F6-4bb5-A14B-3219FF69625B}]      **
; ..\mcal\Dio\ssc\src\Dio.c	  1937  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1938  ** Syntax           : Dio_PortType Dio_lGetPortNumber                         **
; ..\mcal\Dio\ssc\src\Dio.c	  1939  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1940  **                     const Dio_ChannelType ChannelId                        **
; ..\mcal\Dio\ssc\src\Dio.c	  1941  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1942  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1943  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1944  **   - extract the port number from pin symbolic ID                           **
; ..\mcal\Dio\ssc\src\Dio.c	  1945  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1946  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1947  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1948  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1949  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1950  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1951  ** Reentrancy:   Reentrant                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1952  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1953  ** Parameters (in)  : ChannelId -                                             **
; ..\mcal\Dio\ssc\src\Dio.c	  1954  **                    Pin Symbolic containing port number                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1955  ** Parameters (out) : None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1956  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1957  ** Return value     : RetValue -Value which denotes port number extracted     **
; ..\mcal\Dio\ssc\src\Dio.c	  1958  **                    from pin symbolic ID                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1959  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1960  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1961  LOCAL_INLINE Dio_PortType Dio_lGetPortNumber(const Dio_ChannelType ChannelId)
; Function Dio_lGetPortNumber
.L112:
Dio_lGetPortNumber:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1962  {
; ..\mcal\Dio\ssc\src\Dio.c	  1963    Dio_PortType RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1964  
; ..\mcal\Dio\ssc\src\Dio.c	  1965    RetVal = (Dio_PortType)((ChannelId & (uint16)DIO_4_TO_11_MASK) \ 
	mov	d15,#4080
.L646:
	and	d4,d15
.L468:

; ..\mcal\Dio\ssc\src\Dio.c	  1966                            >> (uint16)DIO_PORT_NUM_OFFSET);
; ..\mcal\Dio\ssc\src\Dio.c	  1967    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  1968  }
	sha	d2,d4,#-4
	ret
.L369:
	
__Dio_lGetPortNumber_function_end:
	.size	Dio_lGetPortNumber,__Dio_lGetPortNumber_function_end-Dio_lGetPortNumber
.L215:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPortAdr',code,cluster('Dio_lGetPortAdr')
	.sect	'.text.Dio.Dio_lGetPortAdr'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  1969  
; ..\mcal\Dio\ssc\src\Dio.c	  1970  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  1971  ** Traceability:[cover parentID={2BA9A932-A8A9-44f1-9DA3-ECED0DC583ED}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  1972  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1973  ** Syntax :       Ifx_P * Dio_lGetPortAdr                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1974  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1975  **                     const Dio_PortType PortNumber                          **
; ..\mcal\Dio\ssc\src\Dio.c	  1976  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1977  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1978  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1979  **   - returns the address of P<x> Module                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1980  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1981  **[/cover]                                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1982  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1983  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1984  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  1985  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1986  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  1987  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1988  ** Parameters (in) :  uint32 PortNumber                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  1989  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1990  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1991  ** Parameters (out):  None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  1992  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1993  ** Return value    :  RetVal - P<x> Module address                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1994  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  1995  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  1996  LOCAL_INLINE Ifx_P *Dio_lGetPortAdr(const Dio_PortType PortNumber)
; Function Dio_lGetPortAdr
.L114:
Dio_lGetPortAdr:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  1997  {
; ..\mcal\Dio\ssc\src\Dio.c	  1998    Ifx_P *RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  1999    /* MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic is performed to
; ..\mcal\Dio\ssc\src\Dio.c	  2000     calculate address for a Port Number */
; ..\mcal\Dio\ssc\src\Dio.c	  2001    RetVal = ( ((Ifx_P *)&MODULE_P00 + PortNumber ));
	sha	d15,d4,#8
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf003a000)
.L651:
	addsc.a	a2,a15,d15,#0
.L652:

; ..\mcal\Dio\ssc\src\Dio.c	  2002    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  2003  
; ..\mcal\Dio\ssc\src\Dio.c	  2004  }
	ret
.L372:
	
__Dio_lGetPortAdr_function_end:
	.size	Dio_lGetPortAdr,__Dio_lGetPortAdr_function_end-Dio_lGetPortAdr
.L220:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPinNumber',code,cluster('Dio_lGetPinNumber')
	.sect	'.text.Dio.Dio_lGetPinNumber'
	.align	2
	

; ..\mcal\Dio\ssc\src\Dio.c	  2005  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  2006  ** Traceability:[cover parentID={E552AB43-0F71-4d46-A5BB-0DC1E6BB845E}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  2007  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2008  ** Syntax           : uint8 Dio_lGetPinNumber                                 **
; ..\mcal\Dio\ssc\src\Dio.c	  2009  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2010  **                     const Dio_ChannelType ChannelId                        **
; ..\mcal\Dio\ssc\src\Dio.c	  2011  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2012  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2013  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2014  **   - extract the pin number from pin symbolic ID                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2015  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2016  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2017  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2018  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2019  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2020  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2021  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  2022  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2023  ** Parameters (in)  : ChannelId                                               **
; ..\mcal\Dio\ssc\src\Dio.c	  2024  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2025  ** Parameters (out) : None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2026  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2027  ** Return value     : RetValue -Value which denotes pin number extracted      **
; ..\mcal\Dio\ssc\src\Dio.c	  2028  **                    from pin symbolic ID                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2029  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2030  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  2031  LOCAL_INLINE uint8 Dio_lGetPinNumber(const Dio_ChannelType ChannelId)
; Function Dio_lGetPinNumber
.L116:
Dio_lGetPinNumber:	.type	func

; ..\mcal\Dio\ssc\src\Dio.c	  2032  {
; ..\mcal\Dio\ssc\src\Dio.c	  2033    uint8 RetVal;
; ..\mcal\Dio\ssc\src\Dio.c	  2034  
; ..\mcal\Dio\ssc\src\Dio.c	  2035    RetVal = (uint8)(ChannelId & (uint16)DIO_PIN_LOW4_MASK );
; ..\mcal\Dio\ssc\src\Dio.c	  2036    return(RetVal);
; ..\mcal\Dio\ssc\src\Dio.c	  2037  }
	and	d2,d4,#15
	ret
.L375:
	
__Dio_lGetPinNumber_function_end:
	.size	Dio_lGetPinNumber,__Dio_lGetPinNumber_function_end-Dio_lGetPinNumber
.L225:
	; End of function
	
	.sdecl	'.rodata.Dio.Dio_kMaskAllPortPins',data,rom,cluster('Dio_kMaskAllPortPins')
	.sect	'.rodata.Dio.Dio_kMaskAllPortPins'
	.align	2
Dio_kMaskAllPortPins:	.type	object
	.size	Dio_kMaskAllPortPins,84
	.half	65535,65535,65535
	.space	14
	.half	61439,65535,3,65279
	.half	65535,65023
	.space	8
	.half	32719,255,4095,255
	.half	65535,65535,1
	.space	6
	.half	65535,65535,255,65535
	.half	62
	.space	10
	.half	65535,511
	.calls	'Dio_ReadChannel','Dio_lGetPortNumber'
	.calls	'Dio_ReadChannel','Dio_lGetPinNumber'
	.calls	'Dio_ReadChannel','Dio_lCheckChannelId'
	.calls	'Dio_ReadChannel','Dio_lReportError'
	.calls	'Dio_ReadChannel','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannel','Dio_lGetPortNumber'
	.calls	'Dio_WriteChannel','Dio_lGetPinNumber'
	.calls	'Dio_WriteChannel','Dio_lCheckChannelId'
	.calls	'Dio_WriteChannel','Dio_lIsPortReadOnly'
	.calls	'Dio_WriteChannel','Dio_lReportError'
	.calls	'Dio_WriteChannel','Dio_lGetPortAdr'
	.calls	'Dio_ReadPort','Dio_lCheckPortId'
	.calls	'Dio_ReadPort','Dio_lReportError'
	.calls	'Dio_ReadPort','Dio_lGetPortAdr'
	.calls	'Dio_WritePort','Dio_lCheckPortId'
	.calls	'Dio_WritePort','Dio_lIsPortReadOnly'
	.calls	'Dio_WritePort','Dio_lReportError'
	.calls	'Dio_WritePort','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannelGroup','Dio_lReportError'
	.calls	'Dio_ReadChannelGroup','Dio_lCheckGroupId'
	.calls	'Dio_ReadChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannelGroup','Dio_lReportError'
	.calls	'Dio_WriteChannelGroup','Dio_lCheckGroupId'
	.calls	'Dio_WriteChannelGroup','Dio_lIsPortReadOnly'
	.calls	'Dio_WriteChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_FlipChannel','Dio_lGetPortNumber'
	.calls	'Dio_FlipChannel','Dio_lGetPinNumber'
	.calls	'Dio_FlipChannel','Dio_lCheckChannelId'
	.calls	'Dio_FlipChannel','Dio_lReportError'
	.calls	'Dio_FlipChannel','Dio_lIsPortReadOnly'
	.calls	'Dio_FlipChannel','Dio_lGetPortAdr'
	.calls	'Dio_lReportError','Det_ReportError'
	.calls	'Dio_lCheckChannelId','Dio_lIsPortAvailable'
	.calls	'Dio_lCheckChannelId','Dio_lIsPinAvailable'
	.calls	'Dio_lCheckGroupId','Dio_lCheckChGrpValue'
	.calls	'Dio_lCheckPortId','Dio_lIsPortAvailable'
	.calls	'Dio_lIsPortAvailable','Dio_lIsPortAvailable63'
	.calls	'Dio_lIsPortAvailable','Dio_lIsPortAvailable31'
	.calls	'Dio_lIsPortReadOnly','Dio_lIsPortReadOnly63'
	.calls	'Dio_lCheckChannelId','.cocofun_4'
	.calls	'Dio_lCheckChannelId','.cocofun_1'
	.calls	'Dio_lCheckChannelId','.cocofun_2'
	.calls	'Dio_lCheckChannelId','.cocofun_3'
	.calls	'.cocofun_1','.cocofun_4'
	.calls	'Dio_lCheckPortId','.cocofun_4'
	.calls	'Dio_lCheckPortId','.cocofun_1'
	.calls	'Dio_lCheckPortId','.cocofun_2'
	.calls	'Dio_lCheckPortId','.cocofun_3'
	.calls	'Dio_ReadChannel','',0
	.calls	'Dio_WriteChannel','',0
	.calls	'Dio_ReadPort','',0
	.calls	'Dio_WritePort','',0
	.calls	'Dio_ReadChannelGroup','',0
	.calls	'Dio_WriteChannelGroup','',0
	.calls	'Dio_FlipChannel','',8
	.calls	'Dio_lReportError','',0
	.calls	'Dio_lCheckChannelId','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'Dio_lCheckGroupId','',0
	.calls	'Dio_lCheckChGrpValue','',0
	.calls	'Dio_lCheckPortId','',0
	.calls	'Dio_lIsPortAvailable31','',0
	.calls	'Dio_lIsPortAvailable63','',0
	.calls	'Dio_lIsPortAvailable','',0
	.calls	'Dio_lIsPortReadOnly63','',0
	.calls	'Dio_lIsPortReadOnly','',0
	.calls	'Dio_lIsPinAvailable','',0
	.calls	'Dio_lGetPortNumber','',0
	.calls	'Dio_lGetPortAdr','',0
	.extern	Dio_Config
	.extern	Det_ReportError
	.calls	'Dio_lGetPinNumber','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L118:
	.word	10007
	.half	3
	.word	.L119
	.byte	4
.L117:
	.byte	1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L120
	.byte	2
	.byte	'int',0,4,5,3
	.word	119
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	126
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.byte	'__popcntw',0
	.word	168
	.byte	1,1,1,1,7
	.byte	'a',0
	.word	168
	.byte	0,8
	.word	168
	.byte	9
	.word	168
	.byte	6
	.byte	'__cmpswapw',0
	.word	211
	.byte	1,1,1,1,7
	.byte	'p',0
	.word	216
	.byte	7
	.byte	'value',0
	.word	168
	.byte	7
	.byte	'compare',0
	.word	168
	.byte	0
.L248:
	.byte	2
	.byte	'unsigned char',0,1,8
.L271:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L250:
	.byte	3
	.word	290
	.byte	10
	.byte	'_Ifx_P_OUT_Bits',0,1,147,3,16,4,11
	.byte	'P0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,173,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	317
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,1,173,2,16,4,11
	.byte	'PS0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	273
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	273
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	273
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	273
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	273
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	273
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	273
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	273
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	273
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	273
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	273
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	273
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	273
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	273
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	273
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	273
	.byte	1,0,2,35,3,0,12,1,253,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	633
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,1,135,1,16,4,11
	.byte	'MODREV',0,1
	.word	273
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	273
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,157,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1204
	.byte	4,2,35,0,0,14,4
	.word	273
	.byte	15,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,1,165,1,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	273
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	273
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	273
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	273
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	273
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	273
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	273
	.byte	5,0,2,35,3,0,12,1,173,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1333
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,1,191,1,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	273
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	273
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	273
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	273
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	273
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	273
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	273
	.byte	5,0,2,35,3,0,12,1,189,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1548
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,1,204,1,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	273
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	273
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	273
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	273
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	273
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	273
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	273
	.byte	5,0,2,35,3,0,12,1,197,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1763
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,1,178,1,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	273
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	273
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	273
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	273
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	273
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	273
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	273
	.byte	5,0,2,35,3,0,12,1,181,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1980
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,1,143,1,16,4,11
	.byte	'P0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,165,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2200
	.byte	4,2,35,0,0,14,24
	.word	273
	.byte	15,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,1,214,3,16,4,11
	.byte	'PD0',0,1
	.word	273
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	273
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	273
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	273
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	273
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	273
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	273
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	273
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	273
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	273
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	273
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	273
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	273
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	273
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	273
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	273
	.byte	2,0,2,35,3,0,12,1,197,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2524
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,1,235,3,16,4,11
	.byte	'PD8',0,1
	.word	273
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	273
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	273
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	273
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	273
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	273
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	273
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	273
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	273
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	273
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	273
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	273
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	273
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	273
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	273
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	273
	.byte	2,0,2,35,3,0,12,1,205,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2828
	.byte	4,2,35,0,0,14,8
	.word	273
	.byte	15,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,1,113,16,4,11
	.byte	'EN0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,149,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3153
	.byte	4,2,35,0,0,14,12
	.word	273
	.byte	15,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,1,192,3,16,4,11
	.byte	'PDIS0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,189,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3493
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,1,169,3,16,4,11
	.byte	'SEL0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	273
	.byte	1,0,2,35,3,0,12,1,181,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,1,232,2,16,4,11
	.byte	'PS0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	168
	.byte	28,0,2,35,0,0,12,1,141,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4223
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,1,253,2,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	168
	.byte	24,0,2,35,0,0,12,1,157,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4370
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,1,136,3,16,4,11
	.byte	'reserved_0',0,1
	.word	273
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	168
	.byte	20,0,2,35,0,0,12,1,165,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4539
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,1,242,2,16,4,11
	.byte	'reserved_0',0,2
	.word	290
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,149,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4711
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,1,130,2,16,4,11
	.byte	'reserved_0',0,2
	.word	290
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	273
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	273
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	273
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	273
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	290
	.byte	12,0,2,35,2,0,12,1,221,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4886
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,1,151,2,16,4,11
	.byte	'reserved_0',0,4
	.word	168
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	273
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	273
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	273
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	273
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	273
	.byte	8,0,2,35,3,0,12,1,237,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5060
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,1,162,2,16,4,11
	.byte	'reserved_0',0,4
	.word	168
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	273
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	273
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	273
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	273
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	273
	.byte	4,0,2,35,3,0,12,1,245,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5234
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,1,141,2,16,4,11
	.byte	'reserved_0',0,4
	.word	168
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	273
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	273
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	273
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	273
	.byte	1,0,2,35,3,0,12,1,229,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5410
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,1,210,2,16,4,11
	.byte	'PS0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,133,5,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5566
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,1,236,1,16,4,11
	.byte	'reserved_0',0,2
	.word	290
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	273
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	273
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	273
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	273
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	273
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	273
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	273
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	273
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	273
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	273
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	273
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	273
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	273
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	273
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	273
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	273
	.byte	1,0,2,35,3,0,12,1,213,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5899
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,1,217,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	273
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	273
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	290
	.byte	16,0,2,35,2,0,12,1,205,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6247
	.byte	4,2,35,0,0,14,32
	.word	6527
	.byte	15,7,0,14,56
	.word	273
	.byte	15,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,1,107,16,4,11
	.byte	'reserved_0',0,4
	.word	168
	.byte	32,0,2,35,0,0,12,1,141,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6585
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,1,70,16,4,11
	.byte	'EN0',0,1
	.word	273
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	273
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	273
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	273
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	273
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	273
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	273
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	273
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	273
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	273
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	273
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	273
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	273
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	273
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	273
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	273
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	273
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	273
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	273
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	273
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	273
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	273
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	273
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	273
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	273
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	273
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	273
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	273
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	273
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	273
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	273
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	273
	.byte	1,0,2,35,3,0,12,1,133,4,9,4,13
	.byte	'U',0
	.word	168
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	119
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6672
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,1,222,5,25,128,2,13
	.byte	'OUT',0
	.word	593
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1164
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1284
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1324
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	1508
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	1723
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	1940
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2160
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	1324
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	2475
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	2515
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	2788
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3104
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3144
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	3444
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3484
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	3819
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4183
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3144
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4330
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	4499
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	4671
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	4846
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5020
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5194
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5370
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	5526
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	5859
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6207
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3144
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	6567
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	6576
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	6632
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	7199
	.byte	4,3,35,252,1,0,8
	.word	7239
	.byte	3
	.word	7809
.L255:
	.byte	9
	.word	7814
.L260:
	.byte	3
	.word	290
.L262:
	.byte	3
	.word	273
.L269:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L273:
	.byte	3
	.word	273
.L279:
	.byte	3
	.word	273
.L281:
	.byte	3
	.word	290
	.byte	16,2,148,1,9,4,13
	.byte	'mask',0
	.word	290
	.byte	2,2,35,0,13
	.byte	'offset',0
	.word	273
	.byte	1,2,35,2,13
	.byte	'port',0
	.word	273
	.byte	1,2,35,3,0,3
	.word	7870
	.byte	9
	.word	7921
.L287:
	.byte	3
	.word	7926
.L293:
	.byte	3
	.word	7926
.L295:
	.byte	3
	.word	290
	.byte	8
	.word	7239
.L297:
	.byte	9
	.word	7946
.L303:
	.byte	3
	.word	290
.L313:
	.byte	8
	.word	7834
	.byte	17
	.byte	'Det_ReportError',0,3,154,2,32
	.word	273
	.byte	1,1,1,1,18
	.byte	'ModuleId',0,3,154,2,56
	.word	290
	.byte	18
	.byte	'InstanceId',0,3,154,2,72
	.word	273
	.byte	18
	.byte	'ApiId',0,3,154,2,90
	.word	273
	.byte	18
	.byte	'ErrorId',0,3,154,2,103
	.word	273
	.byte	0
.L316:
	.byte	3
	.word	273
.L318:
	.byte	3
	.word	273
.L321:
	.byte	3
	.word	290
.L323:
	.byte	3
	.word	273
.L325:
	.byte	3
	.word	273
.L334:
	.byte	3
	.word	7926
.L338:
	.byte	3
	.word	273
.L345:
	.byte	3
	.word	7926
.L350:
	.byte	3
	.word	7834
.L353:
	.byte	3
	.word	7834
.L356:
	.byte	3
	.word	7834
.L359:
	.byte	3
	.word	7834
.L362:
	.byte	3
	.word	7834
.L365:
	.byte	3
	.word	7834
.L367:
	.byte	3
	.word	273
.L370:
	.byte	3
	.word	290
.L373:
	.byte	3
	.word	273
.L376:
	.byte	3
	.word	290
	.byte	19,1,9
	.word	8156
	.byte	20
	.byte	'__codeptr',0,4,1,1
	.word	8158
	.byte	20
	.byte	'Ifx_UReg_8Bit',0,5,79,24
	.word	273
	.byte	20
	.byte	'Ifx_UReg_32Bit',0,5,81,24
	.word	168
	.byte	20
	.byte	'Ifx_SReg_32Bit',0,5,84,24
	.word	119
	.byte	20
	.byte	'Ifx_P_ACCEN0_Bits',0,1,104,3
	.word	6672
	.byte	20
	.byte	'Ifx_P_ACCEN1_Bits',0,1,110,3
	.word	6585
	.byte	20
	.byte	'Ifx_P_ESR_Bits',0,1,132,1,3
	.word	3153
	.byte	20
	.byte	'Ifx_P_ID_Bits',0,1,140,1,3
	.word	1204
	.byte	20
	.byte	'Ifx_P_IN_Bits',0,1,162,1,3
	.word	2200
	.byte	20
	.byte	'Ifx_P_IOCR0_Bits',0,1,175,1,3
	.word	1333
	.byte	20
	.byte	'Ifx_P_IOCR12_Bits',0,1,188,1,3
	.word	1980
	.byte	20
	.byte	'Ifx_P_IOCR4_Bits',0,1,201,1,3
	.word	1548
	.byte	20
	.byte	'Ifx_P_IOCR8_Bits',0,1,214,1,3
	.word	1763
	.byte	20
	.byte	'Ifx_P_LPCR_Bits',0,1,233,1,3
	.word	6247
	.byte	20
	.byte	'Ifx_P_OMCR_Bits',0,1,255,1,3
	.word	5899
	.byte	20
	.byte	'Ifx_P_OMCR0_Bits',0,1,138,2,3
	.word	4886
	.byte	20
	.byte	'Ifx_P_OMCR12_Bits',0,1,148,2,3
	.word	5410
	.byte	20
	.byte	'Ifx_P_OMCR4_Bits',0,1,159,2,3
	.word	5060
	.byte	20
	.byte	'Ifx_P_OMCR8_Bits',0,1,170,2,3
	.word	5234
	.byte	20
	.byte	'Ifx_P_OMR_Bits',0,1,207,2,3
	.word	633
	.byte	20
	.byte	'Ifx_P_OMSR_Bits',0,1,229,2,3
	.word	5566
	.byte	20
	.byte	'Ifx_P_OMSR0_Bits',0,1,239,2,3
	.word	4223
	.byte	20
	.byte	'Ifx_P_OMSR12_Bits',0,1,250,2,3
	.word	4711
	.byte	20
	.byte	'Ifx_P_OMSR4_Bits',0,1,133,3,3
	.word	4370
	.byte	20
	.byte	'Ifx_P_OMSR8_Bits',0,1,144,3,3
	.word	4539
	.byte	20
	.byte	'Ifx_P_OUT_Bits',0,1,166,3,3
	.word	317
	.byte	20
	.byte	'Ifx_P_PCSR_Bits',0,1,189,3,3
	.word	3859
	.byte	20
	.byte	'Ifx_P_PDISC_Bits',0,1,211,3,3
	.word	3493
	.byte	20
	.byte	'Ifx_P_PDR0_Bits',0,1,232,3,3
	.word	2524
	.byte	20
	.byte	'Ifx_P_PDR1_Bits',0,1,253,3,3
	.word	2828
	.byte	20
	.byte	'Ifx_P_ACCEN0',0,1,138,4,3
	.word	7199
	.byte	20
	.byte	'Ifx_P_ACCEN1',0,1,146,4,3
	.word	6632
	.byte	20
	.byte	'Ifx_P_ESR',0,1,154,4,3
	.word	3444
	.byte	20
	.byte	'Ifx_P_ID',0,1,162,4,3
	.word	1284
	.byte	20
	.byte	'Ifx_P_IN',0,1,170,4,3
	.word	2475
	.byte	20
	.byte	'Ifx_P_IOCR0',0,1,178,4,3
	.word	1508
	.byte	20
	.byte	'Ifx_P_IOCR12',0,1,186,4,3
	.word	2160
	.byte	20
	.byte	'Ifx_P_IOCR4',0,1,194,4,3
	.word	1723
	.byte	20
	.byte	'Ifx_P_IOCR8',0,1,202,4,3
	.word	1940
	.byte	20
	.byte	'Ifx_P_LPCR',0,1,210,4,3
	.word	6527
	.byte	20
	.byte	'Ifx_P_OMCR',0,1,218,4,3
	.word	6207
	.byte	20
	.byte	'Ifx_P_OMCR0',0,1,226,4,3
	.word	5020
	.byte	20
	.byte	'Ifx_P_OMCR12',0,1,234,4,3
	.word	5526
	.byte	20
	.byte	'Ifx_P_OMCR4',0,1,242,4,3
	.word	5194
	.byte	20
	.byte	'Ifx_P_OMCR8',0,1,250,4,3
	.word	5370
	.byte	20
	.byte	'Ifx_P_OMR',0,1,130,5,3
	.word	1164
	.byte	20
	.byte	'Ifx_P_OMSR',0,1,138,5,3
	.word	5859
	.byte	20
	.byte	'Ifx_P_OMSR0',0,1,146,5,3
	.word	4330
	.byte	20
	.byte	'Ifx_P_OMSR12',0,1,154,5,3
	.word	4846
	.byte	20
	.byte	'Ifx_P_OMSR4',0,1,162,5,3
	.word	4499
	.byte	20
	.byte	'Ifx_P_OMSR8',0,1,170,5,3
	.word	4671
	.byte	20
	.byte	'Ifx_P_OUT',0,1,178,5,3
	.word	593
	.byte	20
	.byte	'Ifx_P_PCSR',0,1,186,5,3
	.word	4183
	.byte	20
	.byte	'Ifx_P_PDISC',0,1,194,5,3
	.word	3819
	.byte	20
	.byte	'Ifx_P_PDR0',0,1,202,5,3
	.word	2788
	.byte	20
	.byte	'Ifx_P_PDR1',0,1,210,5,3
	.word	3104
	.byte	8
	.word	7239
	.byte	20
	.byte	'Ifx_P',0,1,130,6,3
	.word	9443
	.byte	20
	.byte	'uint8',0,6,104,31
	.word	273
	.byte	20
	.byte	'uint16',0,6,106,31
	.word	290
	.byte	20
	.byte	'uint32',0,6,108,31
	.word	7834
	.byte	20
	.byte	'Std_ReturnType',0,7,132,1,15
	.word	273
	.byte	16,2,163,1,9,4,13
	.byte	'Dio_PortIdConfig',0
	.word	273
	.byte	1,2,35,0,13
	.byte	'Dio_ChannelConfig',0
	.word	290
	.byte	2,2,35,2,0,3
	.word	9531
	.byte	9
	.word	9591
	.byte	10
	.byte	'Dio_ConfigType',0,2,176,1,16,12,13
	.byte	'Dio_PortChannelIdConfigPtr',0
	.word	9596
	.byte	4,2,35,0,13
	.byte	'Dio_ChannelGroupConfigPtr',0
	.word	7926
	.byte	4,2,35,4,13
	.byte	'Dio_ChannelGroupConfigSize',0
	.word	7834
	.byte	4,2,35,8,0,3
	.word	9601
	.byte	21
	.byte	'Dio_Config',0,8,218,5,36
	.word	9730
	.byte	1,1,20
	.byte	'Dio_ChannelType',0,2,127,16
	.word	290
	.byte	20
	.byte	'Dio_LevelType',0,2,133,1,15
	.word	273
	.byte	20
	.byte	'Dio_PortType',0,2,138,1,15
	.word	273
	.byte	20
	.byte	'Dio_PortLevelType',0,2,143,1,16
	.word	290
	.byte	20
	.byte	'Dio_ChannelGroupType',0,2,158,1,3
	.word	7870
	.byte	20
	.byte	'Dio_PortChannelIdType',0,2,171,1,3
	.word	9531
	.byte	10
	.byte	'sDet_PCConfigType',0,9,238,1,16,1,13
	.byte	'Det_PCConfigNeverUsed',0
	.word	273
	.byte	1,2,35,0,0,20
	.byte	'Det_PCConfigType',0,9,241,1,3
	.word	9914
	.byte	14,84
	.word	290
	.byte	15,41,0
.L378:
	.byte	3
	.word	9996
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,7,5,0,3,8,73,19
	.byte	0,0,8,53,0,73,19,0,0,9,15,0,73,19,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,11,15,73,19
	.byte	13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,1,1,11,15
	.byte	73,19,0,0,15,33,0,47,15,0,0,16,19,1,58,15,59,15,57,15,11,15,0,0,17,46,1,3,8,58,15,59,15,57,15,73,19,54
	.byte	15,39,12,63,12,60,12,0,0,18,5,0,3,8,58,15,59,15,57,15,73,19,0,0,19,21,0,54,15,0,0,20,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,21,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L120:
	.word	.L470-.L469
.L469:
	.half	3
	.word	.L472-.L471
.L471:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg',0
	.byte	'D:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'Dio.h',0,2,0,0
	.byte	'Det.h',0,3,0,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0
	.byte	'Ifx_TypesReg.h',0,1,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Std_Types.h',0,4,0,0
	.byte	'Dio_Cfg.h',0,5,0,0
	.byte	'Det_Cfg.h',0,6,0,0,0
.L472:
.L470:
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_info'
.L121:
	.word	330
	.half	3
	.word	.L122
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L124,.L123
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_ReadChannel',0,1,181,3,15
	.word	.L248
	.byte	1,1,1
	.word	.L68,.L249,.L67
	.byte	4
	.byte	'ChannelId',0,1,181,3,53
	.word	.L250,.L251
	.byte	5
	.word	.L68,.L249
	.byte	6
	.byte	'PortNumber',0,1,184,3,18
	.word	.L248,.L252
	.byte	6
	.byte	'PinNumber',0,1,185,3,18
	.word	.L248,.L253
	.byte	6
	.byte	'RetVal',0,1,186,3,18
	.word	.L248,.L254
	.byte	6
	.byte	'GetPortAddressPtr',0,1,187,3,16
	.word	.L255,.L256
	.byte	5
	.word	.L257,.L249
	.byte	6
	.byte	'ErrStatus',0,1,202,3,9
	.word	.L248,.L258
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_line'
.L123:
	.word	.L474-.L473
.L473:
	.half	3
	.word	.L476-.L475
.L475:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L476:
	.byte	5,15,7,0,5,2
	.word	.L68
	.byte	3,180,3,1,5,10,9
	.half	.L380-.L68
	.byte	3,9,1,5,35,3,3,1,5,14,9
	.half	.L379-.L380
	.byte	1,5,33,9
	.half	.L382-.L379
	.byte	3,2,1,5,13,9
	.half	.L381-.L382
	.byte	1,9
	.half	.L257-.L381
	.byte	3,8,1,5,49,9
	.half	.L384-.L257
	.byte	3,9,1,5,3,9
	.half	.L383-.L384
	.byte	1,5,22,7,9
	.half	.L477-.L383
	.byte	3,8,1,5,43,9
	.half	.L478-.L477
	.byte	1,5,15,9
	.half	.L479-.L478
	.byte	3,1,1,5,3,9
	.half	.L2-.L479
	.byte	3,5,1,5,41,7,9
	.half	.L480-.L2
	.byte	3,4,1,5,20,9
	.half	.L386-.L480
	.byte	3,3,1,5,54,3,7,1,5,41,9
	.half	.L385-.L386
	.byte	3,121,1,5,22,9
	.half	.L481-.L385
	.byte	3,7,1,5,14,9
	.half	.L482-.L481
	.byte	3,2,1,5,3,9
	.half	.L3-.L482
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L125-.L3
	.byte	0,1,1
.L474:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_ranges'
.L124:
	.word	-1,.L68,0,.L125-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_info'
.L126:
	.word	362
	.half	3
	.word	.L127
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L129,.L128
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_WriteChannel',0,1,157,4,6,1,1,1
	.word	.L70,.L259,.L69
	.byte	4
	.byte	'ChannelId',0,1,157,4,45
	.word	.L260,.L261
	.byte	4
	.byte	'Level',0,1,158,4,43
	.word	.L262,.L263
	.byte	5
	.word	.L70,.L259
	.byte	6
	.byte	'GetPortAddressPtr',0,1,161,4,16
	.word	.L255,.L264
	.byte	6
	.byte	'PortNumber',0,1,163,4,18
	.word	.L248,.L265
	.byte	6
	.byte	'PinNumber',0,1,164,4,18
	.word	.L248,.L266
	.byte	6
	.byte	'Offset',0,1,165,4,18
	.word	.L248,.L267
	.byte	6
	.byte	'ErrStatus',0,1,168,4,9
	.word	.L248,.L268
	.byte	6
	.byte	'PortReadOnly',0,1,171,4,15
	.word	.L269,.L270
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_abbrev'
.L127:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_line'
.L128:
	.word	.L484-.L483
.L483:
	.half	3
	.word	.L486-.L485
.L485:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L486:
	.byte	5,6,7,0,5,2
	.word	.L70
	.byte	3,156,4,1,5,19,9
	.half	.L389-.L70
	.byte	3,11,1,5,10,9
	.half	.L391-.L389
	.byte	3,8,1,5,35,3,3,1,5,14,9
	.half	.L387-.L391
	.byte	1,5,33,9
	.half	.L393-.L387
	.byte	3,2,1,5,13,9
	.half	.L392-.L393
	.byte	1,5,50,9
	.half	.L395-.L392
	.byte	3,10,1,5,3,9
	.half	.L394-.L395
	.byte	1,5,40,7,9
	.half	.L487-.L394
	.byte	3,19,1,5,5,9
	.half	.L396-.L487
	.byte	3,4,1,5,24,7,9
	.half	.L6-.L396
	.byte	3,8,1,5,46,9
	.half	.L488-.L6
	.byte	1,5,17,9
	.half	.L489-.L488
	.byte	3,1,1,5,3,9
	.half	.L7-.L489
	.byte	3,7,1,5,14,7,9
	.half	.L490-.L7
	.byte	3,17,1,5,41,9
	.half	.L491-.L490
	.byte	3,4,1,5,5,9
	.half	.L397-.L491
	.byte	3,6,1,5,1,9
	.half	.L8-.L397
	.byte	3,11,1,7,9
	.half	.L130-.L8
	.byte	0,1,1
.L484:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_ranges'
.L129:
	.word	-1,.L70,0,.L130-.L70,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadPort')
	.sect	'.debug_info'
.L131:
	.word	267
	.half	3
	.word	.L132
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L134,.L133
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_ReadPort',0,1,168,5,19
	.word	.L271
	.byte	1,1,1
	.word	.L72,.L272,.L71
	.byte	4
	.byte	'PortId',0,1,168,5,51
	.word	.L273,.L274
	.byte	5
	.word	.L72,.L272
	.byte	6
	.byte	'GetPortAddressPtr',0,1,170,5,18
	.word	.L255,.L275
	.byte	6
	.byte	'RetVal',0,1,171,5,22
	.word	.L271,.L276
	.byte	6
	.byte	'ErrStatus',0,1,178,5,9
	.word	.L248,.L277
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadPort')
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadPort')
	.sect	'.debug_line'
.L133:
	.word	.L493-.L492
.L492:
	.half	3
	.word	.L495-.L494
.L494:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L495:
	.byte	5,19,7,0,5,2
	.word	.L72
	.byte	3,167,5,1,5,13,9
	.half	.L399-.L72
	.byte	3,11,1,5,10,9
	.half	.L400-.L399
	.byte	3,2,1,5,23,3,10,1,5,3,9
	.half	.L398-.L400
	.byte	1,5,22,7,9
	.half	.L496-.L398
	.byte	3,8,1,5,40,9
	.half	.L497-.L496
	.byte	1,5,15,9
	.half	.L498-.L497
	.byte	3,1,1,5,3,9
	.half	.L10-.L498
	.byte	3,5,1,5,41,7,9
	.half	.L499-.L10
	.byte	3,3,1,5,15,9
	.half	.L403-.L499
	.byte	3,5,1,5,55,9
	.half	.L500-.L403
	.byte	3,127,1,5,15,9
	.half	.L401-.L500
	.byte	3,1,1,5,35,9
	.half	.L501-.L401
	.byte	1,5,15,9
	.half	.L502-.L501
	.byte	3,127,1,5,35,9
	.half	.L402-.L502
	.byte	3,1,1,5,58,9
	.half	.L404-.L402
	.byte	3,127,1,5,3,9
	.half	.L11-.L404
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L135-.L11
	.byte	0,1,1
.L493:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadPort')
	.sect	'.debug_ranges'
.L134:
	.word	-1,.L72,0,.L135-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WritePort')
	.sect	'.debug_info'
.L136:
	.word	289
	.half	3
	.word	.L137
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L139,.L138
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_WritePort',0,1,250,5,6,1,1,1
	.word	.L74,.L278,.L73
	.byte	4
	.byte	'PortId',0,1,250,5,40
	.word	.L279,.L280
	.byte	4
	.byte	'Level',0,1,250,5,73
	.word	.L281,.L282
	.byte	5
	.word	.L74,.L278
	.byte	6
	.byte	'GetPortAddressPtr',0,1,252,5,16
	.word	.L255,.L283
	.byte	6
	.byte	'ErrStatus',0,1,255,5,9
	.word	.L248,.L284
	.byte	6
	.byte	'PortReadOnly',0,1,130,6,11
	.word	.L269,.L285
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WritePort')
	.sect	'.debug_abbrev'
.L137:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WritePort')
	.sect	'.debug_line'
.L138:
	.word	.L504-.L503
.L503:
	.half	3
	.word	.L506-.L505
.L505:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L506:
	.byte	5,6,7,0,5,2
	.word	.L74
	.byte	3,249,5,1,5,19,9
	.half	.L507-.L74
	.byte	3,5,1,5,24,3,14,1,5,3,9
	.half	.L405-.L507
	.byte	1,5,40,7,9
	.half	.L406-.L405
	.byte	3,18,1,5,5,9
	.half	.L407-.L406
	.byte	3,4,1,5,24,7,9
	.half	.L13-.L407
	.byte	3,5,1,5,43,9
	.half	.L508-.L13
	.byte	1,5,17,9
	.half	.L509-.L508
	.byte	3,1,1,5,3,9
	.half	.L14-.L509
	.byte	3,7,1,5,41,7,9
	.half	.L408-.L14
	.byte	3,8,1,5,5,9
	.half	.L409-.L408
	.byte	3,4,1,5,1,9
	.half	.L15-.L409
	.byte	3,8,1,7,9
	.half	.L140-.L15
	.byte	0,1,1
.L504:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WritePort')
	.sect	'.debug_ranges'
.L139:
	.word	-1,.L74,0,.L140-.L74,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_info'
.L141:
	.word	286
	.half	3
	.word	.L142
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L144,.L143
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_ReadChannelGroup',0,1,226,6,19
	.word	.L271
	.byte	1,1,1
	.word	.L76,.L286,.L75
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,227,6,37
	.word	.L287,.L288
	.byte	5
	.word	.L76,.L286
	.byte	6
	.byte	'GetPortAddressPtr',0,1,229,6,18
	.word	.L255,.L289
	.byte	6
	.byte	'RetVal',0,1,230,6,22
	.word	.L271,.L290
	.byte	6
	.byte	'ErrStatus',0,1,238,6,9
	.word	.L248,.L291
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_abbrev'
.L142:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_line'
.L143:
	.word	.L511-.L510
.L510:
	.half	3
	.word	.L513-.L512
.L512:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L513:
	.byte	5,13,7,0,5,2
	.word	.L76
	.byte	3,238,6,1,5,19,3,115,1,5,10,9
	.half	.L413-.L76
	.byte	3,16,1,5,3,3,10,1,5,22,7,9
	.half	.L415-.L413
	.byte	3,4,1,5,48,9
	.half	.L514-.L415
	.byte	1,5,15,9
	.half	.L412-.L514
	.byte	3,1,1,5,3,9
	.half	.L16-.L412
	.byte	3,4,1,5,27,7,9
	.half	.L515-.L16
	.byte	3,2,1,5,5,9
	.half	.L418-.L515
	.byte	1,5,24,7,9
	.half	.L516-.L418
	.byte	3,7,1,5,50,9
	.half	.L517-.L516
	.byte	1,5,17,9
	.half	.L518-.L517
	.byte	3,1,1,5,3,9
	.half	.L17-.L518
	.byte	3,6,1,5,58,7,9
	.half	.L519-.L17
	.byte	3,4,1,5,63,9
	.half	.L419-.L519
	.byte	3,6,1,5,34,9
	.half	.L414-.L419
	.byte	1,5,59,3,1,1,5,66,9
	.half	.L416-.L414
	.byte	3,127,1,5,42,3,5,1,5,22,9
	.half	.L520-.L416
	.byte	1,5,3,9
	.half	.L19-.L520
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L145-.L19
	.byte	0,1,1
.L511:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_ranges'
.L144:
	.word	-1,.L76,0,.L145-.L76,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_info'
.L146:
	.word	331
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L149,.L148
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_WriteChannelGroup',0,1,204,7,6,1,1,1
	.word	.L78,.L292,.L77
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,205,7,38
	.word	.L293,.L294
	.byte	4
	.byte	'Level',0,1,206,7,27
	.word	.L295,.L296
	.byte	5
	.word	.L78,.L292
	.byte	6
	.byte	'GetPortAddressPtr',0,1,209,7,10
	.word	.L297,.L298
	.byte	6
	.byte	'PortVal',0,1,210,7,19
	.word	.L269,.L299
	.byte	6
	.byte	'ErrStatus',0,1,217,7,10
	.word	.L248,.L300
	.byte	6
	.byte	'DioErrorStatus',0,1,218,7,10
	.word	.L248,.L301
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_line'
.L148:
	.word	.L522-.L521
.L521:
	.half	3
	.word	.L524-.L523
.L523:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L524:
	.byte	5,6,7,0,5,2
	.word	.L78
	.byte	3,203,7,1,5,13,9
	.half	.L422-.L78
	.byte	3,16,1,5,3,3,3,1,5,22,7,9
	.half	.L424-.L422
	.byte	3,4,1,5,49,9
	.half	.L421-.L424
	.byte	1,5,15,9
	.half	.L420-.L421
	.byte	3,1,1,5,3,9
	.half	.L21-.L420
	.byte	3,4,1,5,26,7,9
	.half	.L525-.L21
	.byte	3,8,1,5,5,9
	.half	.L427-.L525
	.byte	1,5,60,7,9
	.half	.L526-.L427
	.byte	3,12,1,5,34,9
	.half	.L527-.L526
	.byte	1,5,10,9
	.half	.L528-.L527
	.byte	1,5,22,7,9
	.half	.L23-.L528
	.byte	3,3,1,5,33,1,5,22,9
	.half	.L24-.L23
	.byte	3,4,1,5,5,9
	.half	.L25-.L24
	.byte	3,5,1,5,24,7,9
	.half	.L529-.L25
	.byte	3,7,1,5,51,9
	.half	.L530-.L529
	.byte	1,5,17,9
	.half	.L428-.L530
	.byte	3,1,1,5,3,9
	.half	.L22-.L428
	.byte	3,7,1,5,67,7,9
	.half	.L531-.L22
	.byte	3,9,1,5,50,9
	.half	.L425-.L531
	.byte	3,1,1,5,39,9
	.half	.L532-.L425
	.byte	3,127,1,5,58,3,17,1,5,77,9
	.half	.L423-.L532
	.byte	3,111,1,5,22,9
	.half	.L533-.L423
	.byte	3,6,1,5,32,9
	.half	.L534-.L533
	.byte	1,5,40,9
	.half	.L535-.L534
	.byte	3,5,1,5,24,9
	.half	.L536-.L535
	.byte	1,5,58,3,6,1,5,30,9
	.half	.L429-.L536
	.byte	3,4,1,5,1,9
	.half	.L27-.L429
	.byte	3,2,1,7,9
	.half	.L150-.L27
	.byte	0,1,1
.L522:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_ranges'
.L149:
	.word	-1,.L78,0,.L150-.L78,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_info'
.L151:
	.word	404
	.half	3
	.word	.L152
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L154,.L153
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_FlipChannel',0,1,222,8,15
	.word	.L248
	.byte	1,1,1
	.word	.L80,.L302,.L79
	.byte	4
	.byte	'ChannelId',0,1,222,8,53
	.word	.L303,.L304
	.byte	5
	.word	.L80,.L302
	.byte	6
	.byte	'GetPortAddressPtr',0,1,224,8,20
	.word	.L297,.L305
	.byte	6
	.byte	'PinNumber',0,1,226,8,19
	.word	.L248,.L306
	.byte	6
	.byte	'PortNumber',0,1,227,8,19
	.word	.L248,.L307
	.byte	6
	.byte	'PinPosition',0,1,228,8,20
	.word	.L269,.L308
	.byte	6
	.byte	'RetVal',0,1,229,8,20
	.word	.L248,.L309
	.byte	6
	.byte	'ErrStatus',0,1,232,8,9
	.word	.L248,.L310
	.byte	6
	.byte	'PortReadOnly',0,1,235,8,15
	.word	.L269,.L311
	.byte	5
	.word	.L312,.L31
	.byte	6
	.byte	'DummyRead',0,1,171,9,21
	.word	.L313,.L314
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_abbrev'
.L152:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_line'
.L153:
	.word	.L538-.L537
.L537:
	.half	3
	.word	.L540-.L539
.L539:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L540:
	.byte	5,15,7,0,5,2
	.word	.L80
	.byte	3,221,8,1,5,19,9
	.half	.L430-.L80
	.byte	3,10,1,5,35,3,9,1,5,14,9
	.half	.L431-.L430
	.byte	1,5,34,9
	.half	.L434-.L431
	.byte	3,1,1,5,14,9
	.half	.L433-.L434
	.byte	1,5,10,9
	.half	.L436-.L433
	.byte	3,10,1,5,50,9
	.half	.L437-.L436
	.byte	3,7,1,5,3,9
	.half	.L435-.L437
	.byte	1,5,22,7,9
	.half	.L541-.L435
	.byte	3,9,1,5,43,9
	.half	.L542-.L541
	.byte	1,5,74,1,5,40,9
	.half	.L28-.L542
	.byte	3,10,1,5,5,9
	.half	.L438-.L28
	.byte	3,4,1,5,24,7,9
	.half	.L543-.L438
	.byte	3,5,1,5,43,9
	.half	.L544-.L543
	.byte	1,5,17,9
	.half	.L545-.L544
	.byte	3,1,1,5,3,9
	.half	.L30-.L545
	.byte	3,7,1,5,41,7,9
	.half	.L312-.L30
	.byte	3,7,1,5,22,9
	.half	.L439-.L312
	.byte	3,24,1,5,20,9
	.half	.L546-.L439
	.byte	3,121,1,5,9,9
	.half	.L547-.L546
	.byte	3,7,1,5,41,9
	.half	.L432-.L547
	.byte	3,121,1,5,5,9
	.half	.L440-.L432
	.byte	3,7,1,5,17,7,9
	.half	.L548-.L440
	.byte	3,3,1,5,24,9
	.half	.L549-.L548
	.byte	1,5,32,3,5,1,5,41,9
	.half	.L550-.L549
	.byte	3,5,1,5,17,9
	.half	.L551-.L550
	.byte	1,5,7,9
	.half	.L552-.L551
	.byte	3,1,1,5,75,9
	.half	.L32-.L552
	.byte	3,6,1,5,30,9
	.half	.L553-.L32
	.byte	3,1,1,5,43,9
	.half	.L554-.L553
	.byte	3,127,1,5,30,9
	.half	.L441-.L554
	.byte	3,1,1,5,14,9
	.half	.L555-.L441
	.byte	3,127,1,5,3,9
	.half	.L31-.L555
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L155-.L31
	.byte	0,1,1
.L538:
	.sdecl	'.debug_ranges',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_ranges'
.L154:
	.word	-1,.L80,0,.L155-.L80,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lReportError')
	.sect	'.debug_info'
.L156:
	.word	211
	.half	3
	.word	.L157
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L159,.L158
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lReportError',0,1,210,10,13,1,1
	.word	.L82,.L315,.L81
	.byte	4
	.byte	'ApiId',0,1,210,10,42
	.word	.L316,.L317
	.byte	4
	.byte	'ErrorId',0,1,210,10,61
	.word	.L318,.L319
	.byte	5
	.word	.L82,.L315
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lReportError')
	.sect	'.debug_abbrev'
.L157:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lReportError')
	.sect	'.debug_line'
.L158:
	.word	.L557-.L556
.L556:
	.half	3
	.word	.L559-.L558
.L558:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L559:
	.byte	5,13,7,0,5,2
	.word	.L82
	.byte	3,209,10,1,5,5,9
	.half	.L560-.L82
	.byte	3,8,1,9
	.half	.L442-.L560
	.byte	3,1,1,9
	.half	.L443-.L442
	.byte	3,2,1,5,1,7,9
	.half	.L160-.L443
	.byte	3,15,0,1,1
.L557:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lReportError')
	.sect	'.debug_ranges'
.L159:
	.word	-1,.L82,0,.L160-.L82,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_info'
.L161:
	.word	373
	.half	3
	.word	.L162
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L164,.L163
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lCheckChannelId',0,1,140,11,20
	.word	.L248
	.byte	1,1
	.word	.L84,.L320,.L83
	.byte	4
	.byte	'ChannelId',0,1,140,11,62
	.word	.L321,.L322
	.byte	4
	.byte	'PortNumber',0,1,141,11,47
	.word	.L323,.L324
	.byte	4
	.byte	'PinNumber',0,1,141,11,71
	.word	.L325,.L326
	.byte	5
	.word	.L327
	.byte	6
	.byte	'ConfigIndex',0,1,144,11,16
	.word	.L269,.L328
	.byte	6
	.byte	'PortAvailable',0,1,145,11,16
	.word	.L269,.L329
	.byte	6
	.byte	'PinAvailable',0,1,146,11,16
	.word	.L269,.L330
	.byte	6
	.byte	'ErrStatus',0,1,147,11,16
	.word	.L248,.L331
	.byte	6
	.byte	'PopcntTempVal',0,1,148,11,16
	.word	.L269,.L332
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_abbrev'
.L162:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_line'
.L163:
	.word	.L562-.L561
.L561:
	.half	3
	.word	.L564-.L563
.L563:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L564:
	.byte	5,20,7,0,5,2
	.word	.L84
	.byte	3,139,11,1,5,13,9
	.half	.L449-.L84
	.byte	3,10,1,5,18,9
	.half	.L448-.L449
	.byte	3,6,1,5,3,9
	.half	.L565-.L448
	.byte	1,5,42,7,9
	.half	.L566-.L565
	.byte	3,7,1,5,19,9
	.half	.L444-.L566
	.byte	1,5,61,9
	.half	.L446-.L444
	.byte	3,1,1,5,9,9
	.half	.L445-.L446
	.byte	3,4,1,5,26,7,9
	.half	.L567-.L445
	.byte	3,1,1,5,23,7,9
	.half	.L568-.L567
	.byte	3,8,1,5,7,9
	.half	.L447-.L568
	.byte	1,5,22,7,9
	.half	.L569-.L447
	.byte	3,2,1,5,69,9
	.half	.L570-.L569
	.byte	1,5,48,9
	.half	.L571-.L570
	.byte	1,5,20,9
	.half	.L451-.L571
	.byte	3,1,1,5,41,9
	.half	.L452-.L451
	.byte	1,5,82,3,127,1,5,20,9
	.half	.L37-.L452
	.byte	3,5,1,5,83,9
	.half	.L454-.L37
	.byte	3,1,1,5,57,1,5,55,9
	.half	.L38-.L454
	.byte	3,251,118,1,5,7,9
	.half	.L458-.L38
	.byte	3,140,9,1,5,35,7,9
	.half	.L572-.L458
	.byte	3,13,1,5,68,3,127,1,5,56,9
	.half	.L573-.L572
	.byte	3,1,1,5,32,9
	.half	.L574-.L573
	.byte	1,5,9,9
	.half	.L575-.L574
	.byte	3,126,1,5,21,7,9
	.half	.L34-.L575
	.byte	3,5,1,5,3,9
	.half	.L40-.L34
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L165-.L40
	.byte	0,1,1
.L562:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_ranges'
.L164:
	.word	-1,.L84,0,.L165-.L84,0,0
.L327:
	.word	-1,.L84,0,.L320-.L84,-1,.L86,0,.L245-.L86,-1,.L88,0,.L240-.L88,-1,.L90,0,.L235-.L90,-1,.L92,0,.L230-.L92
	.word	0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_info'
.L166:
	.word	224
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L169,.L168
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lCheckGroupId',0,1,243,11,20
	.word	.L248
	.byte	1,1
	.word	.L94,.L333,.L93
	.byte	4
	.byte	'GroupIdPtr',0,1,245,11,38
	.word	.L334,.L335
	.byte	5
	.word	.L94,.L333
	.byte	6
	.byte	'ErrStatus',0,1,249,11,10
	.word	.L248,.L336
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_line'
.L168:
	.word	.L577-.L576
.L576:
	.half	3
	.word	.L579-.L578
.L578:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L579:
	.byte	5,13,7,0,5,2
	.word	.L94
	.byte	3,251,11,1,5,3,3,5,1,5,38,7,9
	.half	.L459-.L94
	.byte	3,2,1,5,1,7,9
	.half	.L42-.L459
	.byte	3,4,1,7,9
	.half	.L170-.L42
	.byte	0,1,1
.L577:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_ranges'
.L169:
	.word	-1,.L94,0,.L170-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_info'
.L171:
	.word	298
	.half	3
	.word	.L172
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L174,.L173
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lCheckPortId',0,1,217,12,20
	.word	.L248
	.byte	1,1
	.word	.L98,.L337,.L97
	.byte	4
	.byte	'PortId',0,1,217,12,57
	.word	.L338,.L339
	.byte	5
	.word	.L98,.L337
	.byte	6
	.byte	'ConfigIndex',0,1,219,12,15
	.word	.L269,.L340
	.byte	6
	.byte	'PortAvailable',0,1,220,12,15
	.word	.L269,.L341
	.byte	6
	.byte	'ErrStatus',0,1,221,12,15
	.word	.L248,.L342
	.byte	6
	.byte	'PopcntTempVal',0,1,222,12,15
	.word	.L269,.L343
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_abbrev'
.L172:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_line'
.L173:
	.word	.L581-.L580
.L580:
	.half	3
	.word	.L583-.L582
.L582:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L583:
	.byte	5,20,7,0,5,2
	.word	.L98
	.byte	3,216,12,1,5,13,9
	.half	.L463-.L98
	.byte	3,7,1,5,48,3,2,1,5,3,9
	.half	.L462-.L463
	.byte	3,6,1,5,17,7,9
	.half	.L584-.L462
	.byte	3,8,1,5,5,9
	.half	.L585-.L584
	.byte	1,5,22,7,9
	.half	.L586-.L585
	.byte	3,2,1,5,69,9
	.half	.L587-.L586
	.byte	1,5,48,9
	.half	.L588-.L587
	.byte	1,5,20,9
	.half	.L464-.L588
	.byte	3,1,1,5,41,9
	.half	.L465-.L464
	.byte	1,5,78,3,127,1,5,21,9
	.half	.L50-.L465
	.byte	3,5,1,5,84,9
	.half	.L466-.L50
	.byte	3,1,1,5,58,1,5,55,9
	.half	.L51-.L466
	.byte	3,188,117,1,5,5,9
	.half	.L467-.L51
	.byte	3,202,10,1,5,17,7,9
	.half	.L49-.L467
	.byte	3,4,1,5,3,9
	.half	.L52-.L49
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L175-.L52
	.byte	0,1,1
.L581:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_ranges'
.L174:
	.word	-1,.L98,0,.L175-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_info'
.L176:
	.word	246
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L179,.L178
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lCheckChGrpValue',0,1,164,12,20
	.word	.L248
	.byte	1,1
	.word	.L96,.L344,.L95
	.byte	4
	.byte	'GroupIdPtr',0,1,166,12,38
	.word	.L345,.L346
	.byte	5
	.word	.L96,.L344
	.byte	6
	.byte	'Index',0,1,170,12,10
	.word	.L269,.L347
	.byte	6
	.byte	'ErrStatus',0,1,171,12,10
	.word	.L248,.L348
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_line'
.L178:
	.word	.L590-.L589
.L589:
	.half	3
	.word	.L592-.L591
.L591:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L592:
	.byte	5,55,7,0,5,2
	.word	.L96
	.byte	3,179,2,1,5,20,9
	.half	.L593-.L96
	.byte	3,247,9,1,5,42,3,6,1,5,13,9
	.half	.L460-.L593
	.byte	1,5,39,3,5,1,5,42,9
	.half	.L461-.L460
	.byte	3,123,1,7,9
	.half	.L594-.L461
	.byte	1,5,39,9
	.half	.L45-.L594
	.byte	3,5,1,5,66,9
	.half	.L595-.L45
	.byte	1,5,5,9
	.half	.L596-.L595
	.byte	1,5,17,7,9
	.half	.L597-.L596
	.byte	3,3,1,5,78,9
	.half	.L46-.L597
	.byte	3,120,1,5,42,1,5,1,7,9
	.half	.L47-.L46
	.byte	3,12,1,7,9
	.half	.L180-.L47
	.byte	0,1,1
.L590:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_ranges'
.L179:
	.word	-1,.L96,0,.L180-.L96,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_info'
.L181:
	.word	199
	.half	3
	.word	.L182
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L184,.L183
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPortAvailable31',0,1,166,13,21
	.word	.L269
	.byte	1,1
	.word	.L100,.L349,.L99
	.byte	4
	.byte	'Port',0,1,166,13,57
	.word	.L350,.L351
	.byte	5
	.word	.L100,.L349
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_abbrev'
.L182:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_line'
.L183:
	.word	.L599-.L598
.L598:
	.half	3
	.word	.L601-.L600
.L600:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L601:
	.byte	5,15,7,0,5,2
	.word	.L100
	.byte	3,169,13,1,5,46,9
	.half	.L602-.L100
	.byte	1,5,15,9
	.half	.L603-.L602
	.byte	3,1,1,5,57,9
	.half	.L604-.L603
	.byte	3,127,1,5,1,3,3,1,7,9
	.half	.L185-.L604
	.byte	0,1,1
.L599:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_ranges'
.L184:
	.word	-1,.L100,0,.L185-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_info'
.L186:
	.word	199
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L189,.L188
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPortAvailable63',0,1,202,13,21
	.word	.L269
	.byte	1,1
	.word	.L102,.L352,.L101
	.byte	4
	.byte	'Port',0,1,202,13,57
	.word	.L353,.L354
	.byte	5
	.word	.L102,.L352
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_line'
.L188:
	.word	.L606-.L605
.L605:
	.half	3
	.word	.L608-.L607
.L607:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L608:
	.byte	5,14,7,0,5,2
	.word	.L102
	.byte	3,205,13,1,5,54,9
	.half	.L609-.L102
	.byte	1,5,45,9
	.half	.L610-.L609
	.byte	1,5,14,9
	.half	.L611-.L610
	.byte	3,1,1,5,80,9
	.half	.L612-.L611
	.byte	3,127,1,5,1,3,3,1,7,9
	.half	.L190-.L612
	.byte	0,1,1
.L606:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_ranges'
.L189:
	.word	-1,.L102,0,.L190-.L102,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_info'
.L191:
	.word	197
	.half	3
	.word	.L192
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L194,.L193
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPortAvailable',0,1,238,13,21
	.word	.L269
	.byte	1,1
	.word	.L104,.L355,.L103
	.byte	4
	.byte	'Port',0,1,238,13,55
	.word	.L356,.L357
	.byte	5
	.word	.L104,.L355
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_abbrev'
.L192:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_line'
.L193:
	.word	.L614-.L613
.L613:
	.half	3
	.word	.L616-.L615
.L615:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L616:
	.byte	5,21,7,0,5,2
	.word	.L104
	.byte	3,243,13,1,5,13,9
	.half	.L617-.L104
	.byte	1,5,70,7,9
	.half	.L618-.L617
	.byte	1,5,37,7,9
	.half	.L56-.L618
	.byte	3,1,1,5,1,7,9
	.half	.L195-.L56
	.byte	3,2,0,1,1
.L614:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_ranges'
.L194:
	.word	-1,.L104,0,.L195-.L104,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_info'
.L196:
	.word	198
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L199,.L198
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPortReadOnly63',0,1,184,14,21
	.word	.L269
	.byte	1,1
	.word	.L106,.L358,.L105
	.byte	4
	.byte	'Port',0,1,184,14,56
	.word	.L359,.L360
	.byte	5
	.word	.L106,.L358
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_line'
.L198:
	.word	.L620-.L619
.L619:
	.half	3
	.word	.L622-.L621
.L621:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L622:
	.byte	5,14,7,0,5,2
	.word	.L106
	.byte	3,187,14,1,5,54,9
	.half	.L623-.L106
	.byte	1,5,45,9
	.half	.L624-.L623
	.byte	1,5,14,9
	.half	.L625-.L624
	.byte	3,1,1,5,80,9
	.half	.L626-.L625
	.byte	3,127,1,5,1,3,4,1,7,9
	.half	.L200-.L626
	.byte	0,1,1
.L620:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_ranges'
.L199:
	.word	-1,.L106,0,.L200-.L106,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_info'
.L201:
	.word	196
	.half	3
	.word	.L202
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L204,.L203
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPortReadOnly',0,1,221,14,21
	.word	.L269
	.byte	1,1
	.word	.L108,.L361,.L107
	.byte	4
	.byte	'Port',0,1,221,14,54
	.word	.L362,.L363
	.byte	5
	.word	.L108,.L361
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_abbrev'
.L202:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_line'
.L203:
	.word	.L628-.L627
.L627:
	.half	3
	.word	.L630-.L629
.L629:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L630:
	.byte	5,22,7,0,5,2
	.word	.L108
	.byte	3,226,14,1,5,13,9
	.half	.L631-.L108
	.byte	1,5,45,7,9
	.half	.L632-.L631
	.byte	1,5,1,3,3,1,5,36,7,9
	.half	.L60-.L632
	.byte	3,126,1,5,1,7,9
	.half	.L205-.L60
	.byte	3,2,0,1,1
.L628:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_ranges'
.L204:
	.word	-1,.L108,0,.L205-.L108,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_info'
.L206:
	.word	213
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L209,.L208
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lIsPinAvailable',0,1,133,15,21
	.word	.L271
	.byte	1,1
	.word	.L110,.L364,.L109
	.byte	4
	.byte	'Port',0,1,133,15,54
	.word	.L365,.L366
	.byte	4
	.byte	'Pin',0,1,133,15,72
	.word	.L367,.L368
	.byte	5
	.word	.L110,.L364
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_line'
.L208:
	.word	.L634-.L633
.L633:
	.half	3
	.word	.L636-.L635
.L635:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L636:
	.byte	5,24,7,0,5,2
	.word	.L110
	.byte	3,136,15,1,5,15,3,1,1,5,53,9
	.half	.L637-.L110
	.byte	3,127,1,5,15,3,1,1,5,35,9
	.half	.L638-.L637
	.byte	1,5,15,9
	.half	.L639-.L638
	.byte	3,127,1,5,35,9
	.half	.L640-.L639
	.byte	3,1,1,5,63,9
	.half	.L641-.L640
	.byte	3,127,1,5,1,3,3,1,7,9
	.half	.L210-.L641
	.byte	0,1,1
.L634:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_ranges'
.L209:
	.word	-1,.L110,0,.L210-.L110,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_info'
.L211:
	.word	200
	.half	3
	.word	.L212
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L214,.L213
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lGetPortNumber',0,1,169,15,27
	.word	.L248
	.byte	1,1
	.word	.L112,.L369,.L111
	.byte	4
	.byte	'ChannelId',0,1,169,15,68
	.word	.L370,.L371
	.byte	5
	.word	.L112,.L369
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_abbrev'
.L212:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_line'
.L213:
	.word	.L643-.L642
.L642:
	.half	3
	.word	.L645-.L644
.L644:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L645:
	.byte	5,40,7,0,5,2
	.word	.L112
	.byte	3,172,15,1,5,38,9
	.half	.L646-.L112
	.byte	1,5,27,9
	.half	.L468-.L646
	.byte	3,1,1,5,1,3,2,1,7,9
	.half	.L215-.L468
	.byte	0,1,1
.L643:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_ranges'
.L214:
	.word	-1,.L112,0,.L215-.L112,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_info'
.L216:
	.word	198
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L219,.L218
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lGetPortAdr',0,1,204,15,21
	.word	.L297
	.byte	1,1
	.word	.L114,.L372,.L113
	.byte	4
	.byte	'PortNumber',0,1,204,15,56
	.word	.L373,.L374
	.byte	5
	.word	.L114,.L372
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_line'
.L218:
	.word	.L648-.L647
.L647:
	.half	3
	.word	.L650-.L649
.L649:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L650:
	.byte	5,38,7,0,5,2
	.word	.L114
	.byte	3,208,15,1,5,25,1,5,36,9
	.half	.L651-.L114
	.byte	1,5,1,9
	.half	.L652-.L651
	.byte	3,3,1,7,9
	.half	.L220-.L652
	.byte	0,1,1
.L648:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_ranges'
.L219:
	.word	-1,.L114,0,.L220-.L114,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_info'
.L221:
	.word	199
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L117
	.byte	3
	.byte	'Dio_lGetPinNumber',0,1,239,15,20
	.word	.L248
	.byte	1,1
	.word	.L116,.L375,.L115
	.byte	4
	.byte	'ChannelId',0,1,239,15,60
	.word	.L376,.L377
	.byte	5
	.word	.L116,.L375
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_line'
.L223:
	.word	.L654-.L653
.L653:
	.half	3
	.word	.L656-.L655
.L655:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L656:
	.byte	5,30,7,0,5,2
	.word	.L116
	.byte	3,242,15,1,5,1,3,2,1,7,9
	.half	.L225-.L116
	.byte	0,1,1
.L654:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L116,0,.L225-.L116,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L226:
	.word	154
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L229,.L228
	.byte	2
	.word	.L117
	.byte	3
	.byte	'.cocofun_1',0,1,140,11,20,1
	.word	.L92,.L230,.L91
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L228:
	.word	.L658-.L657
.L657:
	.half	3
	.word	.L660-.L659
.L659:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L660:
	.byte	5,20,7,0,5,2
	.word	.L92
	.byte	3,183,11,1,5,23,9
	.half	.L661-.L92
	.byte	3,1,1,9
	.half	.L230-.L661
	.byte	0,1,1,5,20,0,5,2
	.word	.L92
	.byte	3,183,11,1,5,21,9
	.half	.L453-.L92
	.byte	3,191,1,1,5,24,9
	.half	.L661-.L453
	.byte	3,1,1,5,23,9
	.half	.L662-.L661
	.byte	3,193,126,1,7,9
	.half	.L230-.L662
	.byte	0,1,1
.L658:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L229:
	.word	-1,.L92,0,.L230-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L231:
	.word	154
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L117
	.byte	3
	.byte	'.cocofun_2',0,1,140,11,20,1
	.word	.L90,.L235,.L89
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L233:
	.word	.L664-.L663
.L663:
	.half	3
	.word	.L666-.L665
.L665:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L666:
	.byte	5,57,7,0,5,2
	.word	.L90
	.byte	3,184,11,1,5,22,9
	.half	.L455-.L90
	.byte	3,1,1,5,44,9
	.half	.L456-.L455
	.byte	1,5,20,9
	.half	.L457-.L456
	.byte	1,9
	.half	.L235-.L457
	.byte	0,1,1,5,58,0,5,2
	.word	.L90
	.byte	3,247,12,1,5,23,9
	.half	.L455-.L90
	.byte	3,1,1,5,45,9
	.half	.L456-.L455
	.byte	1,5,20,9
	.half	.L457-.L456
	.byte	1,9
	.half	.L667-.L457
	.byte	3,193,126,1,7,9
	.half	.L235-.L667
	.byte	0,1,1
.L664:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L90,0,.L235-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L236:
	.word	154
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L239,.L238
	.byte	2
	.word	.L117
	.byte	3
	.byte	'.cocofun_3',0,1,140,11,20,1
	.word	.L88,.L240,.L87
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L238:
	.word	.L669-.L668
.L668:
	.half	3
	.word	.L671-.L670
.L670:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L671:
	.byte	5,55,7,0,5,2
	.word	.L88
	.byte	3,179,2,1,5,23,9
	.half	.L672-.L88
	.byte	3,141,9,1,5,51,9
	.half	.L673-.L672
	.byte	1,5,64,9
	.half	.L674-.L673
	.byte	1,9
	.half	.L240-.L674
	.byte	0,1,1,5,55,0,5,2
	.word	.L88
	.byte	3,179,2,1,5,21,9
	.half	.L672-.L88
	.byte	3,203,10,1,5,49,9
	.half	.L673-.L672
	.byte	1,5,62,9
	.half	.L674-.L673
	.byte	1,5,64,9
	.half	.L675-.L674
	.byte	3,194,126,1,7,9
	.half	.L240-.L675
	.byte	0,1,1
.L669:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L239:
	.word	-1,.L88,0,.L240-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L241:
	.word	154
	.half	3
	.word	.L242
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L244,.L243
	.byte	2
	.word	.L117
	.byte	3
	.byte	'.cocofun_4',0,1,140,11,20,1
	.word	.L86,.L245,.L85
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L242:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L243:
	.word	.L677-.L676
.L676:
	.half	3
	.word	.L679-.L678
.L678:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0,0,0,0,0
.L679:
	.byte	5,22,7,0,5,2
	.word	.L86
	.byte	3,178,11,1,9
	.half	.L245-.L86
	.byte	0,1,1,5,20,0,5,2
	.word	.L86
	.byte	3,183,11,1,5,22,9
	.half	.L680-.L86
	.byte	3,123,1,7,9
	.half	.L245-.L680
	.byte	0,1,1,5,21,0,5,2
	.word	.L86
	.byte	3,246,12,1,5,22,9
	.half	.L680-.L86
	.byte	3,188,126,1,7,9
	.half	.L245-.L680
	.byte	0,1,1,5,22,0,5,2
	.word	.L86
	.byte	3,241,12,1,9
	.half	.L680-.L86
	.byte	3,193,126,1,7,9
	.half	.L245-.L680
	.byte	0,1,1
.L677:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L244:
	.word	-1,.L86,0,.L245-.L86,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_kMaskAllPortPins')
	.sect	'.debug_info'
.L246:
	.word	153
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'..\\mcal\\Dio\\ssc\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1,2
	.word	.L117
	.byte	3
	.byte	'Dio_kMaskAllPortPins',0,4,236,1,32
	.word	.L378
	.byte	5,3
	.word	Dio_kMaskAllPortPins
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_kMaskAllPortPins')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L230-.L92
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L235-.L90
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L87:
	.word	-1,.L88,0,.L240-.L88
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L85:
	.word	-1,.L86,0,.L245-.L86
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_loc'
.L304:
	.word	-1,.L80,0,.L431-.L80
	.half	1
	.byte	84
	.word	.L430-.L80,.L302-.L80
	.half	1
	.byte	88
	.word	0,0
.L79:
	.word	-1,.L80,0,.L430-.L80
	.half	2
	.byte	138,0
	.word	.L430-.L80,.L302-.L80
	.half	2
	.byte	138,8
	.word	.L302-.L80,.L302-.L80
	.half	2
	.byte	138,0
	.word	0,0
.L314:
	.word	-1,.L80,0,.L302-.L80
	.half	2
	.byte	145,120
	.word	0,0
.L310:
	.word	-1,.L80,.L431-.L80,.L432-.L80
	.half	1
	.byte	95
	.word	0,0
.L305:
	.word	-1,.L80,.L439-.L80,.L31-.L80
	.half	1
	.byte	98
	.word	0,0
.L306:
	.word	-1,.L80,.L433-.L80,.L435-.L80
	.half	1
	.byte	82
	.word	.L436-.L80,.L302-.L80
	.half	1
	.byte	91
	.word	0,0
.L308:
	.word	-1,.L80,.L440-.L80,.L441-.L80
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L307:
	.word	-1,.L80,.L431-.L80,.L433-.L80
	.half	1
	.byte	82
	.word	.L434-.L80,.L302-.L80
	.half	1
	.byte	89
	.word	0,0
.L311:
	.word	-1,.L80,.L438-.L80,.L29-.L80
	.half	1
	.byte	82
	.word	0,0
.L309:
	.word	-1,.L80,.L437-.L80,.L302-.L80
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_loc'
.L251:
	.word	-1,.L68,0,.L379-.L68
	.half	1
	.byte	84
	.word	.L380-.L68,.L249-.L68
	.half	1
	.byte	88
	.word	0,0
.L67:
	.word	-1,.L68,0,.L249-.L68
	.half	2
	.byte	138,0
	.word	0,0
.L258:
	.word	-1,.L68,.L384-.L68,.L385-.L68
	.half	1
	.byte	95
	.word	0,0
.L256:
	.word	-1,.L68,.L386-.L68,.L3-.L68
	.half	1
	.byte	98
	.word	0,0
.L253:
	.word	-1,.L68,.L381-.L68,.L383-.L68
	.half	1
	.byte	82
	.word	.L257-.L68,.L249-.L68
	.half	1
	.byte	90
	.word	0,0
.L252:
	.word	-1,.L68,.L379-.L68,.L381-.L68
	.half	1
	.byte	82
	.word	.L382-.L68,.L249-.L68
	.half	1
	.byte	89
	.word	0,0
.L254:
	.word	-1,.L68,.L379-.L68,.L249-.L68
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_loc'
.L288:
	.word	-1,.L76,0,.L412-.L76
	.half	1
	.byte	100
	.word	.L413-.L76,.L286-.L76
	.half	1
	.byte	111
	.word	.L417-.L76,.L418-.L76
	.half	1
	.byte	100
	.word	0,0
.L75:
	.word	-1,.L76,0,.L286-.L76
	.half	2
	.byte	138,0
	.word	0,0
.L291:
	.word	-1,.L76,.L413-.L76,.L414-.L76
	.half	1
	.byte	95
	.word	0,0
.L289:
	.word	-1,.L76,.L419-.L76,.L19-.L76
	.half	1
	.byte	98
	.word	0,0
.L290:
	.word	-1,.L76,.L415-.L76,.L416-.L76
	.half	1
	.byte	88
	.word	.L19-.L76,.L286-.L76
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadPort')
	.sect	'.debug_loc'
.L71:
	.word	-1,.L72,0,.L272-.L72
	.half	2
	.byte	138,0
	.word	0,0
.L277:
	.word	-1,.L72,.L400-.L72,.L401-.L72
	.half	1
	.byte	95
	.word	0,0
.L275:
	.word	-1,.L72,.L403-.L72,.L11-.L72
	.half	1
	.byte	98
	.word	0,0
.L274:
	.word	-1,.L72,0,.L398-.L72
	.half	1
	.byte	84
	.word	.L399-.L72,.L272-.L72
	.half	1
	.byte	88
	.word	0,0
.L276:
	.word	-1,.L72,.L398-.L72,.L402-.L72
	.half	1
	.byte	89
	.word	.L404-.L72,.L272-.L72
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_loc'
.L261:
	.word	-1,.L70,0,.L387-.L70
	.half	1
	.byte	84
	.word	.L388-.L70,.L259-.L70
	.half	1
	.byte	88
	.word	0,0
.L69:
	.word	-1,.L70,0,.L259-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	-1,.L70,.L391-.L70,.L259-.L70
	.half	1
	.byte	89
	.word	0,0
.L264:
	.word	-1,.L70,.L397-.L70,.L8-.L70
	.half	1
	.byte	98
	.word	0,0
.L263:
	.word	-1,.L70,0,.L387-.L70
	.half	1
	.byte	85
	.word	.L389-.L70,.L390-.L70
	.half	1
	.byte	95
	.word	0,0
.L267:
	.word	-1,.L70,.L387-.L70,.L259-.L70
	.half	1
	.byte	92
	.word	0,0
.L266:
	.word	-1,.L70,.L392-.L70,.L394-.L70
	.half	1
	.byte	82
	.word	.L395-.L70,.L259-.L70
	.half	1
	.byte	91
	.word	0,0
.L265:
	.word	-1,.L70,.L387-.L70,.L392-.L70
	.half	1
	.byte	82
	.word	.L393-.L70,.L259-.L70
	.half	1
	.byte	90
	.word	0,0
.L270:
	.word	-1,.L70,.L396-.L70,.L6-.L70
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_loc'
.L294:
	.word	-1,.L78,0,.L420-.L78
	.half	1
	.byte	100
	.word	.L422-.L78,.L292-.L78
	.half	1
	.byte	111
	.word	.L426-.L78,.L427-.L78
	.half	1
	.byte	100
	.word	0,0
.L301:
	.word	-1,.L78,.L25-.L78,.L428-.L78
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L77:
	.word	-1,.L78,0,.L292-.L78
	.half	2
	.byte	138,0
	.word	0,0
.L300:
	.word	-1,.L78,.L424-.L78,.L425-.L78
	.half	1
	.byte	95
	.word	0,0
.L298:
	.word	-1,.L78,.L429-.L78,.L27-.L78
	.half	1
	.byte	98
	.word	0,0
.L296:
	.word	-1,.L78,0,.L421-.L78
	.half	1
	.byte	84
	.word	.L422-.L78,.L423-.L78
	.half	1
	.byte	88
	.word	0,0
.L299:
	.word	-1,.L78,.L423-.L78,.L27-.L78
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WritePort')
	.sect	'.debug_loc'
.L73:
	.word	-1,.L74,0,.L278-.L74
	.half	2
	.byte	138,0
	.word	0,0
.L284:
	.word	-1,.L74,.L405-.L74,.L278-.L74
	.half	1
	.byte	95
	.word	0,0
.L283:
	.word	-1,.L74,.L409-.L74,.L15-.L74
	.half	1
	.byte	98
	.word	0,0
.L282:
	.word	-1,.L74,0,.L405-.L74
	.half	1
	.byte	85
	.word	.L410-.L74,.L411-.L74
	.half	1
	.byte	89
	.word	0,0
.L280:
	.word	-1,.L74,0,.L405-.L74
	.half	1
	.byte	84
	.word	.L406-.L74,.L407-.L74
	.half	1
	.byte	88
	.word	.L408-.L74,.L409-.L74
	.half	1
	.byte	88
	.word	0,0
.L285:
	.word	-1,.L74,.L407-.L74,.L13-.L74
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_loc'
.L95:
	.word	-1,.L96,0,.L344-.L96
	.half	2
	.byte	138,0
	.word	0,0
.L348:
	.word	-1,.L96,.L460-.L96,.L344-.L96
	.half	1
	.byte	82
	.word	0,0
.L346:
	.word	-1,.L96,0,.L344-.L96
	.half	1
	.byte	100
	.word	0,0
.L347:
	.word	-1,.L96,.L461-.L96,.L344-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_loc'
.L322:
	.word	-1,.L84,0,.L444-.L84
	.half	1
	.byte	84
	.word	0,0
.L328:
	.word	-1,.L84,.L452-.L84,.L37-.L84
	.half	1
	.byte	95
	.word	.L457-.L84,.L235-.L84
	.half	1
	.byte	95
	.word	.L88-.L84,.L240-.L84
	.half	1
	.byte	95
	.word	0,0
.L83:
	.word	-1,.L84,0,.L320-.L84
	.half	2
	.byte	138,0
	.word	0,0
.L331:
	.word	-1,.L84,.L86-.L84,.L245-.L84
	.half	1
	.byte	89
	.word	.L448-.L84,.L37-.L84
	.half	1
	.byte	89
	.word	.L453-.L84,.L230-.L84
	.half	1
	.byte	89
	.word	.L454-.L84,.L38-.L84
	.half	1
	.byte	89
	.word	.L455-.L84,.L235-.L84
	.half	1
	.byte	89
	.word	.L88-.L84,.L240-.L84
	.half	1
	.byte	89
	.word	.L458-.L84,.L320-.L84
	.half	1
	.byte	89
	.word	0,0
.L330:
	.word	-1,.L84,.L86-.L84,.L245-.L84
	.half	1
	.byte	82
	.word	.L445-.L84,.L37-.L84
	.half	1
	.byte	82
	.word	.L453-.L84,.L230-.L84
	.half	1
	.byte	82
	.word	.L454-.L84,.L38-.L84
	.half	1
	.byte	82
	.word	.L455-.L84,.L235-.L84
	.half	1
	.byte	82
	.word	.L88-.L84,.L240-.L84
	.half	1
	.byte	82
	.word	.L458-.L84,.L34-.L84
	.half	1
	.byte	82
	.word	0,0
.L326:
	.word	-1,.L84,0,.L444-.L84
	.half	1
	.byte	86
	.word	.L86-.L84,.L245-.L84
	.half	1
	.byte	88
	.word	.L449-.L84,.L37-.L84
	.half	1
	.byte	88
	.word	.L453-.L84,.L230-.L84
	.half	1
	.byte	88
	.word	.L454-.L84,.L38-.L84
	.half	1
	.byte	88
	.word	.L455-.L84,.L235-.L84
	.half	1
	.byte	88
	.word	.L88-.L84,.L240-.L84
	.half	1
	.byte	88
	.word	.L458-.L84,.L320-.L84
	.half	1
	.byte	88
	.word	0,0
.L332:
	.word	-1,.L84,.L451-.L84,.L452-.L84
	.half	1
	.byte	95
	.word	.L454-.L84,.L38-.L84
	.half	1
	.byte	95
	.word	.L455-.L84,.L456-.L84
	.half	1
	.byte	95
	.word	0,0
.L329:
	.word	-1,.L84,.L444-.L84,.L445-.L84
	.half	1
	.byte	82
	.word	.L446-.L84,.L447-.L84
	.half	1
	.byte	95
	.word	0,0
.L324:
	.word	-1,.L84,0,.L444-.L84
	.half	1
	.byte	85
	.word	.L86-.L84,.L245-.L84
	.half	1
	.byte	90
	.word	.L450-.L84,.L37-.L84
	.half	1
	.byte	90
	.word	.L453-.L84,.L230-.L84
	.half	1
	.byte	90
	.word	.L454-.L84,.L38-.L84
	.half	1
	.byte	90
	.word	.L455-.L84,.L235-.L84
	.half	1
	.byte	90
	.word	.L88-.L84,.L240-.L84
	.half	1
	.byte	90
	.word	.L458-.L84,.L320-.L84
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L333-.L94
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	-1,.L94,.L459-.L94,.L333-.L94
	.half	1
	.byte	82
	.word	0,0
.L335:
	.word	-1,.L94,0,.L333-.L94
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_loc'
.L340:
	.word	-1,.L98,.L465-.L98,.L50-.L98
	.half	1
	.byte	95
	.word	.L457-.L98,.L235-.L98
	.half	1
	.byte	95
	.word	.L88-.L98,.L240-.L98
	.half	1
	.byte	95
	.word	0,0
.L97:
	.word	-1,.L98,0,.L337-.L98
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L98,.L86-.L98,.L245-.L98
	.half	1
	.byte	89
	.word	.L462-.L98,.L50-.L98
	.half	1
	.byte	89
	.word	.L453-.L98,.L230-.L98
	.half	1
	.byte	89
	.word	.L466-.L98,.L51-.L98
	.half	1
	.byte	89
	.word	.L455-.L98,.L235-.L98
	.half	1
	.byte	89
	.word	.L88-.L98,.L240-.L98
	.half	1
	.byte	89
	.word	.L467-.L98,.L337-.L98
	.half	1
	.byte	89
	.word	0,0
.L343:
	.word	-1,.L98,.L464-.L98,.L465-.L98
	.half	1
	.byte	95
	.word	.L466-.L98,.L51-.L98
	.half	1
	.byte	95
	.word	.L455-.L98,.L456-.L98
	.half	1
	.byte	95
	.word	0,0
.L341:
	.word	-1,.L98,.L86-.L98,.L245-.L98
	.half	1
	.byte	82
	.word	.L462-.L98,.L50-.L98
	.half	1
	.byte	82
	.word	.L453-.L98,.L230-.L98
	.half	1
	.byte	82
	.word	.L466-.L98,.L51-.L98
	.half	1
	.byte	82
	.word	.L455-.L98,.L235-.L98
	.half	1
	.byte	82
	.word	.L88-.L98,.L240-.L98
	.half	1
	.byte	82
	.word	.L467-.L98,.L337-.L98
	.half	1
	.byte	82
	.word	0,0
.L339:
	.word	-1,.L98,0,.L462-.L98
	.half	1
	.byte	84
	.word	.L86-.L98,.L245-.L98
	.half	1
	.byte	88
	.word	.L463-.L98,.L50-.L98
	.half	1
	.byte	88
	.word	.L453-.L98,.L230-.L98
	.half	1
	.byte	88
	.word	.L466-.L98,.L51-.L98
	.half	1
	.byte	88
	.word	.L455-.L98,.L235-.L98
	.half	1
	.byte	88
	.word	.L88-.L98,.L240-.L98
	.half	1
	.byte	88
	.word	.L467-.L98,.L337-.L98
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_loc'
.L377:
	.word	-1,.L116,0,.L375-.L116
	.half	1
	.byte	84
	.word	0,0
.L115:
	.word	-1,.L116,0,.L375-.L116
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_loc'
.L113:
	.word	-1,.L114,0,.L372-.L114
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L114,0,.L372-.L114
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_loc'
.L371:
	.word	-1,.L112,0,.L468-.L112
	.half	1
	.byte	84
	.word	0,0
.L111:
	.word	-1,.L112,0,.L369-.L112
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_loc'
.L109:
	.word	-1,.L110,0,.L364-.L110
	.half	2
	.byte	138,0
	.word	0,0
.L368:
	.word	-1,.L110,0,.L364-.L110
	.half	1
	.byte	85
	.word	0,0
.L366:
	.word	-1,.L110,0,.L364-.L110
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L104,0,.L355-.L104
	.half	2
	.byte	138,0
	.word	0,0
.L357:
	.word	-1,.L104,0,.L355-.L104
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L349-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L351:
	.word	-1,.L100,0,.L349-.L100
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L102,0,.L352-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	-1,.L102,0,.L352-.L102
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L108,0,.L361-.L108
	.half	2
	.byte	138,0
	.word	0,0
.L363:
	.word	-1,.L108,0,.L361-.L108
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_loc'
.L105:
	.word	-1,.L106,0,.L358-.L106
	.half	2
	.byte	138,0
	.word	0,0
.L360:
	.word	-1,.L106,0,.L358-.L106
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lReportError')
	.sect	'.debug_loc'
.L317:
	.word	-1,.L82,0,.L442-.L82
	.half	1
	.byte	84
	.word	.L443-.L82,.L315-.L82
	.half	1
	.byte	86
	.word	0,0
.L81:
	.word	-1,.L82,0,.L315-.L82
	.half	2
	.byte	138,0
	.word	0,0
.L319:
	.word	-1,.L82,0,.L443-.L82
	.half	1
	.byte	85
	.word	.L443-.L82,.L315-.L82
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L681:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L68,.L249-.L68
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L70,.L259-.L70
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadPort')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L72,.L272-.L72
	.sdecl	'.debug_frame',debug,cluster('Dio_WritePort')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L74,.L278-.L74
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L76,.L286-.L76
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L78,.L292-.L78
	.sdecl	'.debug_frame',debug,cluster('Dio_FlipChannel')
	.sect	'.debug_frame'
	.word	36
	.word	.L681,.L80,.L302-.L80
	.byte	4
	.word	(.L430-.L80)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L302-.L430)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dio_lReportError')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L82,.L315-.L82
	.sdecl	'.debug_frame',debug,cluster('Dio_lCheckChannelId')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L84,.L320-.L84
	.sdecl	'.debug_frame',debug,cluster('Dio_lCheckGroupId')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L94,.L333-.L94
	.sdecl	'.debug_frame',debug,cluster('Dio_lCheckChGrpValue')
	.sect	'.debug_frame'
	.word	20
	.word	.L681,.L96,.L344-.L96
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dio_lCheckPortId')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L98,.L337-.L98
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPortAvailable31')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L100,.L349-.L100
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPortAvailable63')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L102,.L352-.L102
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPortAvailable')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L104,.L355-.L104
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPortReadOnly63')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L106,.L358-.L106
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPortReadOnly')
	.sect	'.debug_frame'
	.word	12
	.word	.L681,.L108,.L361-.L108
	.sdecl	'.debug_frame',debug,cluster('Dio_lIsPinAvailable')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L110,.L364-.L110
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L112,.L369-.L112
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L114,.L372-.L114
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L116,.L375-.L116
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L682:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L682,.L86,.L245-.L86
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L682,.L88,.L240-.L88
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L682,.L90,.L235-.L90
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L682,.L92,.L230-.L92
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\mcal\Dio\ssc\src\Dio.c	  2038  #if(DIO_SAFETY_ENABLE == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  2039  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  2040  ** Traceability:[cover parentID={32B937D0-981A-4edb-A2E8-8196CF21378D}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  2041  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2042  ** Syntax           : LOCAL_INLINE uint8 Dio_lCheckLevel                      **
; ..\mcal\Dio\ssc\src\Dio.c	  2043  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2044  **                     const Dio_LevelType Level                              **
; ..\mcal\Dio\ssc\src\Dio.c	  2045  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2046  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2047  ** Description :  This INLINE function:                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2048  **   - Checks if the level passed is valid                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2049  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2050  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2051  ** Service ID:  NA                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2052  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2053  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2054  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2055  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  2056  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2057  ** Parameters (in)  : Level- Level to be checked                              **
; ..\mcal\Dio\ssc\src\Dio.c	  2058  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2059  ** Parameters (out) : None                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2060  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2061  ** Return value     : ErrStatus -E_OK  Level passed is Valid                  **
; ..\mcal\Dio\ssc\src\Dio.c	  2062  **                    ErrStatus -E_NOT_OK  Level passed is not Valid          **
; ..\mcal\Dio\ssc\src\Dio.c	  2063  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2064  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  2065  
; ..\mcal\Dio\ssc\src\Dio.c	  2066  LOCAL_INLINE uint8 Dio_lCheckLevel(const Dio_LevelType Level)
; ..\mcal\Dio\ssc\src\Dio.c	  2067  {
; ..\mcal\Dio\ssc\src\Dio.c	  2068    uint8 ErrStatus = E_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  2069     /* [cover parentID={A0E39821-FDC2-4717-B407-23CF9C3D11AC}]
; ..\mcal\Dio\ssc\src\Dio.c	  2070     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2071    if((Level != STD_HIGH) && (Level != STD_LOW))
; ..\mcal\Dio\ssc\src\Dio.c	  2072    {
; ..\mcal\Dio\ssc\src\Dio.c	  2073     /* [cover parentID={B233AC52-EE3A-473a-A68C-D76AFB0438F7}]
; ..\mcal\Dio\ssc\src\Dio.c	  2074     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2075     Mcal_ReportSafetyError(DIO_MODULE_ID, DIO_INSTANCE_ID,
; ..\mcal\Dio\ssc\src\Dio.c	  2076                    DIO_SID_WRITECHANNEL, DIO_E_PARAM_INVALID_LEVEL);
; ..\mcal\Dio\ssc\src\Dio.c	  2077     ErrStatus = E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  2078    }
; ..\mcal\Dio\ssc\src\Dio.c	  2079    return(ErrStatus);
; ..\mcal\Dio\ssc\src\Dio.c	  2080  }
; ..\mcal\Dio\ssc\src\Dio.c	  2081  #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2082  
; ..\mcal\Dio\ssc\src\Dio.c	  2083  #if(DIO_MASKED_WRITE_PORT_API == STD_ON)
; ..\mcal\Dio\ssc\src\Dio.c	  2084  /*******************************************************************************
; ..\mcal\Dio\ssc\src\Dio.c	  2085  ** Traceability:[cover parentID={7E417147-9571-4530-A9B6-59ED1BAED7B8}]       **
; ..\mcal\Dio\ssc\src\Dio.c	  2086  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2087  ** Syntax           : void Dio_MaskedWritePort                                **
; ..\mcal\Dio\ssc\src\Dio.c	  2088  **                    (                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2089  **                     const PortId,                                          **
; ..\mcal\Dio\ssc\src\Dio.c	  2090  **                     const Dio_PortLevelType Level                          **
; ..\mcal\Dio\ssc\src\Dio.c	  2091  **                     const Dio_PortLevelType Mask                           **
; ..\mcal\Dio\ssc\src\Dio.c	  2092  **                    )                                                       **
; ..\mcal\Dio\ssc\src\Dio.c	  2093  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2094  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2095  ** Description :  This Api:                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2096  **      - Service to set the value of a given port with required mask.        **
; ..\mcal\Dio\ssc\src\Dio.c	  2097  ** [/cover]                                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2098  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2099  ** Service ID:  0x13                                                          **
; ..\mcal\Dio\ssc\src\Dio.c	  2100  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2101  ** Sync/Async:  Synchronous                                                   **
; ..\mcal\Dio\ssc\src\Dio.c	  2102  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2103  ** Reentrancy:  Reentrant                                                     **
; ..\mcal\Dio\ssc\src\Dio.c	  2104  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2105  ** Parameters(in)   : PortId - ID of DIO port                                 **
; ..\mcal\Dio\ssc\src\Dio.c	  2106  **                    Level - Level to be written                             **
; ..\mcal\Dio\ssc\src\Dio.c	  2107  **                    Mask - Channels to be masked in the port                **
; ..\mcal\Dio\ssc\src\Dio.c	  2108  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2109  ** Parameters (out) : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2110  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2111  ** Return value     : none                                                    **
; ..\mcal\Dio\ssc\src\Dio.c	  2112  **                                                                            **
; ..\mcal\Dio\ssc\src\Dio.c	  2113  *******************************************************************************/
; ..\mcal\Dio\ssc\src\Dio.c	  2114  void Dio_MaskedWritePort
; ..\mcal\Dio\ssc\src\Dio.c	  2115  (
; ..\mcal\Dio\ssc\src\Dio.c	  2116    const Dio_PortType PortId,
; ..\mcal\Dio\ssc\src\Dio.c	  2117    const Dio_PortLevelType Level,
; ..\mcal\Dio\ssc\src\Dio.c	  2118    const Dio_PortLevelType Mask
; ..\mcal\Dio\ssc\src\Dio.c	  2119  )
; ..\mcal\Dio\ssc\src\Dio.c	  2120  {
; ..\mcal\Dio\ssc\src\Dio.c	  2121  
; ..\mcal\Dio\ssc\src\Dio.c	  2122    Ifx_P *GetPortAddressPtr;
; ..\mcal\Dio\ssc\src\Dio.c	  2123    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  2124    #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	  2125                                     (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	  2126    uint32  PortReadOnly;
; ..\mcal\Dio\ssc\src\Dio.c	  2127    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2128    uint8 ErrStatus = E_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  2129    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2130    uint32 Clrbits;
; ..\mcal\Dio\ssc\src\Dio.c	  2131    uint32 Setbits;
; ..\mcal\Dio\ssc\src\Dio.c	  2132    uint32 PortVal;
; ..\mcal\Dio\ssc\src\Dio.c	  2133  
; ..\mcal\Dio\ssc\src\Dio.c	  2134    #if ((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT ==STD_ON))
; ..\mcal\Dio\ssc\src\Dio.c	  2135     /* [cover parentID={A22FFFB0-86DD-4358-8348-EE06FFA46A46}]
; ..\mcal\Dio\ssc\src\Dio.c	  2136     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2137    if((Dio_lCheckPortId(PortId) == (uint8)DIO_ERROR))
; ..\mcal\Dio\ssc\src\Dio.c	  2138    {
; ..\mcal\Dio\ssc\src\Dio.c	  2139    /* [cover parentID={8D81B7FD-C398-421f-AD4C-47A1BF95DF48}]
; ..\mcal\Dio\ssc\src\Dio.c	  2140        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2141    Dio_lReportError(DIO_SID_MASKEDWRITEPORT, DIO_E_PARAM_INVALID_PORT_ID);
; ..\mcal\Dio\ssc\src\Dio.c	  2142    ErrStatus = E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  2143    }
; ..\mcal\Dio\ssc\src\Dio.c	  2144    else
; ..\mcal\Dio\ssc\src\Dio.c	  2145    {
; ..\mcal\Dio\ssc\src\Dio.c	  2146     #if (((DIO_PORTS_READONLY_00_31 != DIO_NUMBER_0)|| \ 
; ..\mcal\Dio\ssc\src\Dio.c	  2147                                       (DIO_PORTS_READONLY_32_63 != DIO_NUMBER_0)))
; ..\mcal\Dio\ssc\src\Dio.c	  2148     PortReadOnly = Dio_lIsPortReadOnly((uint32)PortId);
; ..\mcal\Dio\ssc\src\Dio.c	  2149     /* [cover parentID={03D367D6-DBF9-48b1-B7C4-C653830EECFD}]
; ..\mcal\Dio\ssc\src\Dio.c	  2150        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2151     if ((PortReadOnly != (uint32)DIO_NUMBER_0))
; ..\mcal\Dio\ssc\src\Dio.c	  2152      {
; ..\mcal\Dio\ssc\src\Dio.c	  2153        /* [cover parentID={F0E92ECF-5B1D-469a-9F8F-50ED10125FEF}]
; ..\mcal\Dio\ssc\src\Dio.c	  2154        [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2155        Dio_lReportError(DIO_SID_MASKEDWRITEPORT, DIO_E_PARAM_INVALID_PORT_ID);
; ..\mcal\Dio\ssc\src\Dio.c	  2156        ErrStatus = E_NOT_OK;
; ..\mcal\Dio\ssc\src\Dio.c	  2157      }
; ..\mcal\Dio\ssc\src\Dio.c	  2158    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2159    }
; ..\mcal\Dio\ssc\src\Dio.c	  2160    /* [cover parentID={50D2FC1B-7DFC-4c3f-BB42-4D48E977913A}]
; ..\mcal\Dio\ssc\src\Dio.c	  2161     [/cover] */
; ..\mcal\Dio\ssc\src\Dio.c	  2162    if(ErrStatus == E_OK)
; ..\mcal\Dio\ssc\src\Dio.c	  2163    #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2164      {
; ..\mcal\Dio\ssc\src\Dio.c	  2165       /* GetPortAddressPtr will hold the port address */
; ..\mcal\Dio\ssc\src\Dio.c	  2166      GetPortAddressPtr = Dio_lGetPortAdr(PortId);
; ..\mcal\Dio\ssc\src\Dio.c	  2167  
; ..\mcal\Dio\ssc\src\Dio.c	  2168      Clrbits = ((~(uint32)Level)& ((uint32)Mask));
; ..\mcal\Dio\ssc\src\Dio.c	  2169  
; ..\mcal\Dio\ssc\src\Dio.c	  2170      Setbits = (Level & ((uint32)Mask));
; ..\mcal\Dio\ssc\src\Dio.c	  2171  
; ..\mcal\Dio\ssc\src\Dio.c	  2172      PortVal= (uint32)((Clrbits << OMR_BIT_UPDATE_SHIFT )| Setbits);
; ..\mcal\Dio\ssc\src\Dio.c	  2173  
; ..\mcal\Dio\ssc\src\Dio.c	  2174      GetPortAddressPtr->OMR.U = PortVal;
; ..\mcal\Dio\ssc\src\Dio.c	  2175      }
; ..\mcal\Dio\ssc\src\Dio.c	  2176  }
; ..\mcal\Dio\ssc\src\Dio.c	  2177  #endif
; ..\mcal\Dio\ssc\src\Dio.c	  2178  #define DIO_STOP_SEC_CODE_ASIL_B_GLOBAL
; ..\mcal\Dio\ssc\src\Dio.c	  2179  /* MISRA2012_RULE_4_10_JUSTIFICATION: To be compliant with autosar guidelines
; ..\mcal\Dio\ssc\src\Dio.c	  2180  Dio_Memmap.h header is included without safegaurd.*/
; ..\mcal\Dio\ssc\src\Dio.c	  2181  /*MISRA2012_RULE_20_1_JUSTIFICATION: Dio_Memmap.h header included as per
; ..\mcal\Dio\ssc\src\Dio.c	  2182  Autosar guidelines. */
; ..\mcal\Dio\ssc\src\Dio.c	  2183  #include "Dio_MemMap.h"
; ..\mcal\Dio\ssc\src\Dio.c	  2184  /***************** End of Dio driver module **********************************/

	; Module end
